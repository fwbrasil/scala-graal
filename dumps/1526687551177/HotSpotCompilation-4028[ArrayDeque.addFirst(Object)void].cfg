begin_compilation
  name " HotSpotCompilation-4028[java.util.ArrayDeque.addFirst(Object)]"
  method "HotSpotCompilation-4028[java.util.ArrayDeque.addFirst(Object)]"
  date 1526687598143
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a129 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a129  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/ArrayDeque;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v134 v135 v75 v138 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.elements
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 13]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v134 
=== Succesors ===
next: v130 
=== Usages ===
a48 v139 v136 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v134 #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v141 a71 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayDeque.addFirst(Object)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayDeque.java
sourceLine: 232
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v104 v130 v141 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a129 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v139 
=== Succesors ===
next: v88 
=== Usages ===
v128 
=== Predecessor ===
a129 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v139 #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v130 
y: v127 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v130 y: v127  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v128 
=== Succesors ===
trueSuccessor: v85 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v128 #trueSuccessor: v85 #falseSuccessor: v87  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: i131 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: i131  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i131 v57 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i131 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.head
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v135 
=== Succesors ===
next: i132 
=== Usages ===
i11 
=== Predecessor ===
v141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v135 #next: i132  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a129 
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i132 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 27]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v136 
=== Succesors ===
next: v96 
=== Usages ===
i14 v62 
=== Predecessor ===
i131 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v136 #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 22]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 i14 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 22]
stamp: i32
=== Inputs ===
x: i131 
y: i10 
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i131 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 29]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i132 
y: i10 
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i132 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 30]
stamp: i32
=== Inputs ===
x: i11 
y: i14 
=== Succesors ===
=== Usages ===
v57 v62 v137 v22 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i11 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 36]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i15 
y: i132 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i15 y: i132  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 36]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v62 
=== Succesors ===
trueSuccessor: v93 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
i132 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v62 #trueSuccessor: v93 #falseSuccessor: v95  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
v72 
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayDeque.head
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 32]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v135 
value: i15 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v135 value: i15 stateAfter: - lastLocationAccess: - #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid a48 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 13]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a129 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a129  <|@  <|@
f <@~|@floating>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a48 
index: i15 
=== Succesors ===
=== Usages ===
v72 j117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a48 index: i15  <|@  <|@
f <@~|@floating>@ <|@
tid a71 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 36]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 36]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v93 
address: v137 
value: a71 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j117 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v93 address: v137 value: a71 stateAfter: - lastLocationAccess: - #next: j117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 36]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v137 
=== Succesors ===
next: v123 
=== Usages ===
j119 
=== Predecessor ===
v72 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v137 #next: v123  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 36]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j119 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j119 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 36]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j117 
y: i118 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j117 y: i118  <|@  <|@
f <@~|@floating>@ <|@
tid j122 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 36]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j119 
index: j122 
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j119 index: j122  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 36]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 36]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v140 
value: i124 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i133 
=== Usages ===
=== Predecessor ===
j117 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v140 value: i124 stateAfter: - lastLocationAccess: - #next: i133  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i133 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i133 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.tail
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:235) [bci: 42]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v138 
=== Succesors ===
next: v25 
=== Usages ===
v22 
=== Predecessor ===
v123 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v138 #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:235) [bci: 45]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i15 
y: i133 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i15 y: i133  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:235) [bci: 45]
stamp: void
trueSuccessorProbability: 2.5262176044982265E-4
=== Inputs ===
condition: v22 
=== Succesors ===
trueSuccessor: v23 
falseSuccessor: v24 
=== Usages ===
=== Predecessor ===
i133 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v22 #trueSuccessor: v23 #falseSuccessor: v24  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4553295672606668800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:236) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v27  <|@  <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:236) [bci: 49]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@24a27da9
stamp: void
targetMethod: HotSpotMethod<ArrayDeque.doubleCapacity()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?97 <|@
d <@d|@=== Debug Properties ===
bci: 49
code: ResolvedJavaMethodBytecode<ArrayDeque.addFirst(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayDeque.java
sourceLine: 236
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
bci: 49
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:236) [bci: 49]
polymorphic: false
stamp: void
targetMethod: Direct#ArrayDeque.doubleCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v75 
stateDuring: ?97 
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v75 stateDuring: ?97 #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:237) [bci: 52]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607180143385484953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:237) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:237) [bci: 52]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid a101 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a103 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16155
stableDimension: 0
stamp: i32 [-16155] ⇊00000000ffffc0e5 ⇈00000000ffffc0e5
stampKind: i32
value: int[-16155|0xffffffffffffc0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid a109 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@261349355
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@261349355]
=== Inputs ===
=== Succesors ===
=== Usages ===
a103 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -15164
stableDimension: 0
stamp: i32 [-15164] ⇊00000000ffffc4c4 ⇈00000000ffffc4c4
stampKind: i32
value: int[-15164|0xffffffffffffc4c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
v87 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i102 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16155 - -11283] ⇊00000000ffffc0c4 ⇈00000000ffffd7fd
valueDescription: i32
=== Inputs ===
merge: v98 
values: i108 i111 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v98 values: i108 i111  <|@  <|@
f <@~|@floating>@ <|@
tid a103 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v98 
values: a109 a101 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v98 values: a109 a101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v107 v110 
=== Succesors ===
next: v104 
=== Usages ===
i102 a103 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v107 v110 #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i102 
speculation: a103 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i102 speculation: a103  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a129 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a129  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/ArrayDeque;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v134 v135 v75 v138 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a129 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.elements
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 13]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v134 
=== Succesors ===
next: v130 
=== Usages ===
a48 v139 v136 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v134 #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v141 a71 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayDeque.addFirst(Object)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayDeque.java
sourceLine: 232
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v104 v130 v141 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
result [v2|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a129 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v130 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v139 
=== Succesors ===
next: v88 
=== Usages ===
v128 
=== Predecessor ===
a129 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v139 #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v130 
y: v127 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v130 y: v127  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v128 
=== Succesors ===
trueSuccessor: v85 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v128 #trueSuccessor: v85 #falseSuccessor: v87  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@20980fce slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addFirst(ArrayDeque.java:232) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction CMP [v2|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: i131 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: i131  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i131 v57 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i131 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.head
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v135 
=== Succesors ===
next: i132 
=== Usages ===
i11 
=== Predecessor ===
v141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v135 #next: i132  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a129 
=== Succesors ===
=== Usages ===
i132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i132 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 27]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v136 
=== Succesors ===
next: v96 
=== Usages ===
i14 v62 
=== Predecessor ===
i131 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v136 #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 22]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 i14 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 22]
stamp: i32
=== Inputs ===
x: i131 
y: i10 
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i131 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 29]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i132 
y: i10 
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i132 y: i10  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 30]
stamp: i32
=== Inputs ===
x: i11 
y: i14 
=== Succesors ===
=== Usages ===
v57 v62 v137 v22 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i11 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 36]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i15 
y: i132 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i15 y: i132  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 36]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v62 
=== Succesors ===
trueSuccessor: v93 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
i132 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v62 #trueSuccessor: v93 #falseSuccessor: v95  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addFirst(ArrayDeque.java:232) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = AND (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
v72 
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayDeque.head
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 32]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v135 
value: i15 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v135 value: i15 stateAfter: - lastLocationAccess: - #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid a48 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 13]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a129 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a129  <|@  <|@
f <@~|@floating>@ <|@
tid v137 <|@
result [v8|QWORD[.] + v7|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a48 
index: i15 
=== Succesors ===
=== Usages ===
v72 j117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a48 index: i15  <|@  <|@
f <@~|@floating>@ <|@
tid a71 <|@
result v9|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 36]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 36]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v93 
address: v137 
value: a71 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j117 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v93 address: v137 value: a71 stateAfter: - lastLocationAccess: - #next: j117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j117 <|@
result [v8|QWORD[.] + v7|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 36]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v137 
=== Succesors ===
next: v123 
=== Usages ===
j119 
=== Predecessor ===
v72 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v137 #next: v123  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 36]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j119 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j119 <|@
result v10|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 36]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j117 
y: i118 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j117 y: i118  <|@  <|@
f <@~|@floating>@ <|@
tid j122 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 36]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v140 <|@
result [v10|QWORD[*] + v12|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j119 
index: j122 
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j119 index: j122  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 36]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 36]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v140 
value: i124 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i133 
=== Usages ===
=== Predecessor ===
j117 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v140 value: i124 stateAfter: - lastLocationAccess: - #next: i133  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i133 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i133 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.tail
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:235) [bci: 42]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v138 
=== Succesors ===
next: v25 
=== Usages ===
v22 
=== Predecessor ===
v123 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v138 #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid v22 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:235) [bci: 45]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i15 
y: i133 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i15 y: i133  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:235) [bci: 45]
stamp: void
trueSuccessorProbability: 2.5262176044982265E-4
=== Inputs ===
condition: v22 
=== Succesors ===
trueSuccessor: v23 
falseSuccessor: v24 
=== Usages ===
=== Predecessor ===
i133 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v22 #trueSuccessor: v23 #falseSuccessor: v24  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@298e33b4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@298e33b4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[.] + v7|DWORD * 4 + 16], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = LEA [v8|QWORD[.] + v7|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[*] = SHR v11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v10|QWORD[*] + v12|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 2.5262176044982265E-4 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4553295672606668800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:236) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v27  <|@  <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:236) [bci: 49]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@24a27da9
stamp: void
targetMethod: HotSpotMethod<ArrayDeque.doubleCapacity()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?97 <|@
d <@d|@=== Debug Properties ===
bci: 49
code: ResolvedJavaMethodBytecode<ArrayDeque.addFirst(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayDeque.java
sourceLine: 236
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
bci: 49
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:236) [bci: 49]
polymorphic: false
stamp: void
targetMethod: Direct#ArrayDeque.doubleCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v75 
stateDuring: ?97 
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v75 stateDuring: ?97 #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:237) [bci: 52]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addFirst(ArrayDeque.java:236) [bci: 49]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ArrayDeque.doubleCapacity()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:49] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607180143385484953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:237) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:237) [bci: 52]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addFirst(ArrayDeque.java:234) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid a101 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a103 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
result int[-16155|0xffffffffffffc0e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16155
stableDimension: 0
stamp: i32 [-16155] ⇊00000000ffffc0e5 ⇈00000000ffffc0e5
stampKind: i32
value: int[-16155|0xffffffffffffc0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16155|0xffffffffffffc0e5], Object[null]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid a109 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@261349355
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@261349355]
=== Inputs ===
=== Succesors ===
=== Usages ===
a103 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
result int[-15164|0xffffffffffffc4c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -15164
stableDimension: 0
stamp: i32 [-15164] ⇊00000000ffffc4c4 ⇈00000000ffffc4c4
stampKind: i32
value: int[-15164|0xffffffffffffc4c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
v87 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@261349355] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-15164|0xffffffffffffc4c4], v13|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i102 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16155 - -11283] ⇊00000000ffffc0c4 ⇈00000000ffffd7fd
valueDescription: i32
=== Inputs ===
merge: v98 
values: i108 i111 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v98 values: i108 i111  <|@  <|@
f <@~|@floating>@ <|@
tid a103 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v98 
values: a109 a101 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v98 values: a109 a101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v107 v110 
=== Succesors ===
next: v104 
=== Usages ===
i102 a103 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v107 v110 #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i102 
speculation: a103 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i102 speculation: a103  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v15|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addFirst(ArrayDeque.java:232) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@20980fce slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addFirst(ArrayDeque.java:232) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction CMP [v2|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addFirst(ArrayDeque.java:232) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = AND (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@298e33b4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@298e33b4 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v8|QWORD[.] + v7|DWORD * 4 + 16], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = LEA [v8|QWORD[.] + v7|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[*] = SHR v11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v10|QWORD[*] + v12|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: [v0|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 2.5262176044982265E-4 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607180143385484953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4553295672606668800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addFirst(ArrayDeque.java:236) [bci: 49]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ArrayDeque.doubleCapacity()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:49] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16155|0xffffffffffffc0e5], Object[null]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v15|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addFirst(ArrayDeque.java:232) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@261349355] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-15164|0xffffffffffffc4c4], v13|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #20         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #14         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #2          // elements:java.lang.Object[]
    16: aload_0       
    17: aload_0       
    18: getfield      #4          // head:int
    21: iconst_1      
    22: isub          
    23: aload_0       
    24: getfield      #2          // elements:java.lang.Object[]
    27: arraylength   
    28: iconst_1      
    29: isub          
    30: iand          
    31: dup_x1        
    32: putfield      #4          // head:int
    35: aload_1       
    36: aastore       
    37: aload_0       
    38: getfield      #4          // head:int
    41: aload_0       
    42: getfield      #5          // tail:int
    45: if_icmpne     52
    48: aload_0       
    49: invokespecial #15         // doubleCapacity:()void
    52: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@20980fce slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
java.util.ArrayDeque.addFirst(ArrayDeque.java:232) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
java.util.ArrayDeque.addFirst(ArrayDeque.java:232) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   20  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   22  <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r9|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|DWORD = AND (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@298e33b4 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@298e33b4 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|QWORD[.] + r11|DWORD * 4 + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = LEA [r10|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   50  <|@ instruction MOVB (x: [r10|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   52  <|@ instruction CMP (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 2.5262176044982265E-4 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607180143385484953
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4553295672606668800
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.ArrayDeque.addFirst(ArrayDeque.java:236) [bci: 49]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ArrayDeque.doubleCapacity()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:49] <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16155|0xffffffffffffc0e5] // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   80  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.ArrayDeque.addFirst(ArrayDeque.java:232) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@261349355] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15164|0xffffffffffffc4c4] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #20         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #14         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #2          // elements:java.lang.Object[]
    16: aload_0       
    17: aload_0       
    18: getfield      #4          // head:int
    21: iconst_1      
    22: isub          
    23: aload_0       
    24: getfield      #2          // elements:java.lang.Object[]
    27: arraylength   
    28: iconst_1      
    29: isub          
    30: iand          
    31: dup_x1        
    32: putfield      #4          // head:int
    35: aload_1       
    36: aastore       
    37: aload_0       
    38: getfield      #4          // head:int
    41: aload_0       
    42: getfield      #5          // tail:int
    45: if_icmpne     52
    48: aload_0       
    49: invokespecial #15         // doubleCapacity:()void
    52: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@20980fce slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
java.util.ArrayDeque.addFirst(ArrayDeque.java:232) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
java.util.ArrayDeque.addFirst(ArrayDeque.java:232) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   20  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   22  <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r9|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|DWORD = AND (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@298e33b4 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@298e33b4 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction MOV (x: [r10|QWORD[.] + r11|DWORD * 4 + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD[.] = LEA [r10|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   46  <|@ instruction r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   48  <|@ instruction r8|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   50  <|@ instruction MOVB (x: [r10|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   52  <|@ instruction CMP (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 2.5262176044982265E-4 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4607180143385484953
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4553295672606668800
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.ArrayDeque.addFirst(ArrayDeque.java:236) [bci: 49]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ArrayDeque.doubleCapacity()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:49] <|@ <|@
      nr   66  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16155|0xffffffffffffc0e5] // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   80  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.ArrayDeque.addFirst(ArrayDeque.java:232) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@261349355] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15164|0xffffffffffffc4c4] // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #20         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #14         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #2          // elements:java.lang.Object[]
    16: aload_0       
    17: aload_0       
    18: getfield      #4          // head:int
    21: iconst_1      
    22: isub          
    23: aload_0       
    24: getfield      #2          // elements:java.lang.Object[]
    27: arraylength   
    28: iconst_1      
    29: isub          
    30: iand          
    31: dup_x1        
    32: putfield      #4          // head:int
    35: aload_1       
    36: aastore       
    37: aload_0       
    38: getfield      #4          // head:int
    41: aload_0       
    42: getfield      #5          // tail:int
    45: if_icmpne     52
    48: aload_0       
    49: invokespecial #15         // doubleCapacity:()void
    52: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b561442813cd508000000addeadde0f85a60000008502448b5e0c468b04d50c00000041ffcb458bc841ffc94523d9453bc30f865f00000044895e0c49c1e20348c1ea034389549a104f8d549a1049c1ea0949b800c024080100000047882402443b5e100f8413000000488b6c24104883c418850500000000c5f877c390e80000000090488b6c24104883c418850500000000c5f877c349bb000000000000000041bae5c0ffff4589979c0200004d899fa8020000e8000000009049baaddeaddeaddeadde4d8bda41bac4c4ffffebd7e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@20980fce slotKind: QWORD  <||@
  Comment 48 10 r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 52 12 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:0]  <||@
  Comment 52 [rdx:0, rsi:0, r10:0]at java.util.ArrayDeque.addFirst(ArrayDeque.java:232) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 52 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 52 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 64 14 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6  <||@
  Comment 70 block B1 null  <||@
  Comment 70 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 70 18 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 70 [rdx:0, rsi:0, r10:0]at java.util.ArrayDeque.addFirst(ArrayDeque.java:232) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 70 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 72 20 r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 76 22 r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 84 24 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 87 26 r9|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 93 28 r11|DWORD = AND (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 96 30 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 99 32 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5  <||@
  Comment 105 block B2 null  <||@
  Comment 105 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 36 MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 109 38 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@298e33b4 encoding: base: 0 shift: 3  <||@
  Comment 113 40 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@298e33b4 encoding: base: 0 shift: 3  <||@
  Comment 117 42 MOV (x: [r10|QWORD[.] + r11|DWORD * 4 + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 122 44 r10|QWORD[.] = LEA [r10|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 127 46 r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 131 48 r8|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 141 50 MOVB (x: [r10|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 145 52 CMP (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) size: DWORD  <||@
  Comment 149 54 BRANCH trueDestinationProbability: 2.5262176044982265E-4 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 155 block B4 null  <||@
  Comment 155 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 155 58 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 164 12  <||@
  Comment 174 block B3 null  <||@
  Comment 174 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 174 64 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ArrayDeque.doubleCapacity()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:49]  <||@
  Comment 174 9  <||@
  Comment 175 {HotSpotMethod<ArrayDeque.doubleCapacity()>}  <||@
  Comment 180 []at java.util.ArrayDeque.addFirst(ArrayDeque.java:236) [bci: 49, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 181 66 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 190 12  <||@
  Comment 200 block B5 null  <||@
  Comment 200 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 200 -1 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 210 -1 r10|DWORD = MOVE input: int[-16155|0xffffffffffffc0e5]  <||@
  Comment 216 70 JUMP ~[] destination: B5 -> B7  <||@
  Comment 216 block B7 null  <||@
  Comment 216 78 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 216 80 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 223 82 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 230 84 DEOPT info [bci:0]  <||@
  Comment 230 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 235 [rdx:0, rsi:0]at java.util.ArrayDeque.addFirst(ArrayDeque.java:232) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 236 block B6 null  <||@
  Comment 236 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 236 74 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@261349355]  <||@
  Comment 236 {Object[d.a@261349355]}  <||@
  Comment 246 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 249 -1 r10|DWORD = MOVE input: int[-15164|0xffffffffffffc4c4]  <||@
  Comment 255 76 JUMP ~[] destination: B6 -> B7  <||@
  Comment 257 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 257 4  <||@
  Comment 263 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 263 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4028[java.util.ArrayDeque.addFirst(Object)]"
  method "HotSpotCompilation-4028[java.util.ArrayDeque.addFirst(Object)]"
  date 1526687598202
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1199ee740 448b560849c1e203493bc20f850f6701ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b561442813cd508000000f52200f80f85a60000008502448b5e0c468b04d50c00000041ffcb458bc841ffc94523d9453bc30f865f00000044895e0c49c1e20348c1ea034389549a104f8d549a1049c1ea0949b800c024080100000047882402443b5e100f8413000000488b6c24104883c41885051cd84ef0c5f877c390e8ac6801ff90488b6c24104883c418850502d84ef0c5f877c349bb000000000000000041bae5c0ffff4589979c0200004d899fa8020000e8d37d01ff9049ba4093667e070000004d8bda41bac4c4ffffebd7e85a0f41ff90e8b47c01ff90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@20980fce slotKind: QWORD  <||@
  Comment 48 10 r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 52 12 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:0]  <||@
  Comment 52 [rdx:0, rsi:0, r10:0]at java.util.ArrayDeque.addFirst(ArrayDeque.java:232) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 52 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 52 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 64 14 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6  <||@
  Comment 70 block B1 null  <||@
  Comment 70 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 70 18 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 70 [rdx:0, rsi:0, r10:0]at java.util.ArrayDeque.addFirst(ArrayDeque.java:232) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 70 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 72 20 r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 76 22 r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 84 24 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 87 26 r9|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 93 28 r11|DWORD = AND (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 96 30 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 99 32 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5  <||@
  Comment 105 block B2 null  <||@
  Comment 105 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 36 MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 109 38 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@298e33b4 encoding: base: 0 shift: 3  <||@
  Comment 113 40 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@298e33b4 encoding: base: 0 shift: 3  <||@
  Comment 117 42 MOV (x: [r10|QWORD[.] + r11|DWORD * 4 + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 122 44 r10|QWORD[.] = LEA [r10|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 127 46 r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 131 48 r8|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 141 50 MOVB (x: [r10|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 145 52 CMP (x: r11|DWORD, y: [rsi|QWORD[.] + 16]) size: DWORD  <||@
  Comment 149 54 BRANCH trueDestinationProbability: 2.5262176044982265E-4 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 155 block B4 null  <||@
  Comment 155 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 155 58 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 164 12  <||@
  Comment 174 block B3 null  <||@
  Comment 174 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 174 64 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ArrayDeque.doubleCapacity()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:49]  <||@
  Comment 174 9  <||@
  Comment 175 {HotSpotMethod<ArrayDeque.doubleCapacity()>}  <||@
  Comment 180 []at java.util.ArrayDeque.addFirst(ArrayDeque.java:236) [bci: 49, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 181 66 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 190 12  <||@
  Comment 200 block B5 null  <||@
  Comment 200 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 200 -1 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 210 -1 r10|DWORD = MOVE input: int[-16155|0xffffffffffffc0e5]  <||@
  Comment 216 70 JUMP ~[] destination: B5 -> B7  <||@
  Comment 216 block B7 null  <||@
  Comment 216 78 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 216 80 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 223 82 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 230 84 DEOPT info [bci:0]  <||@
  Comment 230 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 235 [rdx:0, rsi:0]at java.util.ArrayDeque.addFirst(ArrayDeque.java:232) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 236 block B6 null  <||@
  Comment 236 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 236 74 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@261349355]  <||@
  Comment 236 {Object[d.a@261349355]}  <||@
  Comment 246 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 249 -1 r10|DWORD = MOVE input: int[-15164|0xffffffffffffc4c4]  <||@
  Comment 255 76 JUMP ~[] destination: B6 -> B7  <||@
  Comment 257 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 257 4  <||@
  Comment 263 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 263 5  <||@
  HexCodeFile>>> <|@
end_nmethod
