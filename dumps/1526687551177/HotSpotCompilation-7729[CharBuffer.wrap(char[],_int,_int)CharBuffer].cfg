begin_compilation
  name " HotSpotCompilation-7729[java.nio.CharBuffer.wrap(char[], int, int)]"
  method "HotSpotCompilation-7729[java.nio.CharBuffer.wrap(char[], int, int)]"
  date 1526687585225
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i229 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i229  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 a117 v230 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v63 i18 v65 v196 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i18 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<CharBuffer.wrap(char[], int, int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: CharBuffer.java
sourceLine: 373
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 - 
=== Succesors ===
=== Usages ===
v129 a155 i229 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3 -  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i229 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v230 
=== Succesors ===
next: v98 
=== Usages ===
v46 v202 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v230 #next: v98  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 5]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: i32
=== Inputs ===
x: i2 
y: i3 
=== Succesors ===
=== Usages ===
v48 v199 v63 v46 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i229 
y: i18 
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i229 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v46 
=== Succesors ===
trueSuccessor: v97 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
i229 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v46 #trueSuccessor: v97 #falseSuccessor: v95  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22035
stableDimension: 0
stamp: i32 [-22035] ⇊00000000ffffa9ed ⇈00000000ffffa9ed
stampKind: i32
value: int[-22035|0xffffffffffffa9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
v97 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v205 v48 v65 v193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i10 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i18 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v48 
=== Succesors ===
trueSuccessor: v101 
falseSuccessor: v99 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v48 #trueSuccessor: v101 #falseSuccessor: v99  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22291
stableDimension: 0
stamp: i32 [-22291] ⇊00000000ffffa8ed ⇈00000000ffffa8ed
stampKind: i32
value: int[-22291|0xffffffffffffa8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
v101 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v106 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i2 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i18 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v63 
=== Succesors ===
trueSuccessor: v105 
falseSuccessor: v103 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v63 #trueSuccessor: v105 #falseSuccessor: v103  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22547
stableDimension: 0
stamp: i32 [-22547] ⇊00000000ffffa7ed ⇈00000000ffffa7ed
stampKind: i32
value: int[-22547|0xffffffffffffa7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
v105 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i10 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v65 
=== Succesors ===
trueSuccessor: v109 
falseSuccessor: v107 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v65 #trueSuccessor: v109 #falseSuccessor: v107  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid i137 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22803
stableDimension: 0
stamp: i32 [-22803] ⇊00000000ffffa6ed ⇈00000000ffffa6ed
stampKind: i32
value: int[-22803|0xffffffffffffa6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
v109 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-22803 - -20747] ⇊00000000ffffa0e5 ⇈00000000ffffaffd
valueDescription: i32
=== Inputs ===
merge: v123 
values: i131 i133 i135 i137 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v123 values: i131 i133 i135 i137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v130 v132 v134 v136 
=== Succesors ===
next: v129 
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v130 v132 v134 v136 #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid a126 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i127 
speculation: a126 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i127 speculation: a126  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: j142 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j142 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j162 
=== Usages ===
v231 v232 
=== Predecessor ===
v107 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j162  <|@  <|@
f <@~|@floating>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j142 
index: - 
=== Succesors ===
=== Usages ===
j162 v164 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j142 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j162 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v231 
=== Succesors ===
next: j163 
=== Usages ===
j214 j168 v236 
=== Predecessor ===
j142 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v231 #next: j163  <|@  <|@
f <@~|@floating>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j142 
index: - 
=== Succesors ===
=== Usages ===
j163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j142 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j163 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v232 
=== Succesors ===
next: v150 
=== Usages ===
v147 
=== Predecessor ===
j162 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v232 #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid j213 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j214 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j214 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j162 
y: j213 
=== Succesors ===
=== Usages ===
v147 v164 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j162 y: j213  <|@  <|@
f <@~|@floating>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j163 
y: j214 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j163 y: j214  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v147 
=== Succesors ===
trueSuccessor: v148 
falseSuccessor: v149 
=== Usages ===
=== Predecessor ===
j163 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v147 #trueSuccessor: v148 #falseSuccessor: v149  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a155 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a155  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a155 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i216 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
a155 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i141 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a155 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a155 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
arguments: v139 i216 i141 
=== Succesors ===
next: j156 
=== Usages ===
j156 
=== Predecessor ===
v148 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 arguments: v139 i216 i141 #next: j156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j156 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a155 
=== Succesors ===
next: v169 
=== Usages ===
j168 
=== Predecessor ===
a155 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a155 #next: v169  <|@  <|@
f <@*|@fixed>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
j156 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v164 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v231 
value: j214 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v231 value: j214 stateAfter: - lastLocationAccess: - #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j162 
index: - 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j162 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v236 
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v236 #next: v167  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
v160 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j168 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v166 
values: j162 j156 
=== Succesors ===
=== Usages ===
v235 v234 a113 v237 v238 v239 v240 v241 v242 v243 v244 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v166 values: j162 j156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v167 v169 
=== Succesors ===
next: a113 
=== Usages ===
j168 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v167 v169 #next: a113  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a113 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j168 
=== Succesors ===
next: j180 
=== Usages ===
a120 
=== Predecessor ===
v166 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j168 #next: j180  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j175 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j175 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v174 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j175 
index: - 
=== Succesors ===
=== Usages ===
j180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j175 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j180 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v233 
=== Succesors ===
next: v181 
=== Usages ===
v181 
=== Predecessor ===
a113 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v233 #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: - 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v234 
value: j180 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
j180 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v234 value: j180 stateAfter: - lastLocationAccess: - #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: - 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v235 
value: v219 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v235 value: v219 stateAfter: - lastLocationAccess: - #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: - 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j188 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4294967295
stableDimension: 0
stamp: i64 [4294967295] ⇊00000000ffffffff ⇈00000000ffffffff
stampKind: i64
value: long[4294967295|0xffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v237 
value: j188 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v237 value: j188 stateAfter: - lastLocationAccess: - #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: - 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v238 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v238 value: i10 stateAfter: - lastLocationAccess: - #next: v196  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: - 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v239 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v239 value: i2 stateAfter: - lastLocationAccess: - #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: - 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v240 
value: i18 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v240 value: i18 stateAfter: - lastLocationAccess: - #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: - 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v241 
value: i229 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v241 value: i229 stateAfter: - lastLocationAccess: - #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: - 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v242 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v209 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v242 value: i10 stateAfter: - lastLocationAccess: - #next: v209  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: - 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i8
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v243 
value: i206 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v243 value: i206 stateAfter: - lastLocationAccess: - #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: - 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a117 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n# [C
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v244 
value: a117 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a120 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v244 value: a117 stateAfter: - lastLocationAccess: - #next: a120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a120 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a113 
=== Succesors ===
next: v121 
=== Usages ===
v9 
=== Predecessor ===
v212 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a113 #next: v121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
a120 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v9  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 10]
stamp: void
=== Inputs ===
result: a120 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a120 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i229 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i229  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 a117 v230 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v63 i18 v65 v196 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i18 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<CharBuffer.wrap(char[], int, int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: CharBuffer.java
sourceLine: 373
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 - 
=== Succesors ===
=== Usages ===
v129 a155 i229 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3 -  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i229 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v230 
=== Succesors ===
next: v98 
=== Usages ===
v46 v202 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v230 #next: v98  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 5]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: i32
=== Inputs ===
x: i2 
y: i3 
=== Succesors ===
=== Usages ===
v48 v199 v63 v46 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i229 
y: i18 
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i229 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v46 
=== Succesors ===
trueSuccessor: v97 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
i229 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v46 #trueSuccessor: v97 #falseSuccessor: v95  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@61f7540f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = ADD (x: v1|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
result int[-22035|0xffffffffffffa9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22035
stableDimension: 0
stamp: i32 [-22035] ⇊00000000ffffa9ed ⇈00000000ffffa9ed
stampKind: i32
value: int[-22035|0xffffffffffffa9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
v97 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22035|0xffffffffffffa9ed]] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v205 v48 v65 v193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i10 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i18 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v48 
=== Succesors ===
trueSuccessor: v101 
falseSuccessor: v99 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v48 #trueSuccessor: v101 #falseSuccessor: v99  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
result int[-22291|0xffffffffffffa8ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22291
stableDimension: 0
stamp: i32 [-22291] ⇊00000000ffffa8ed ⇈00000000ffffa8ed
stampKind: i32
value: int[-22291|0xffffffffffffa8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
v101 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22291|0xffffffffffffa8ed]] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v106 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i2 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i18 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v63 
=== Succesors ===
trueSuccessor: v105 
falseSuccessor: v103 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v63 #trueSuccessor: v105 #falseSuccessor: v103  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
result int[-22547|0xffffffffffffa7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22547
stableDimension: 0
stamp: i32 [-22547] ⇊00000000ffffa7ed ⇈00000000ffffa7ed
stampKind: i32
value: int[-22547|0xffffffffffffa7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
v105 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22547|0xffffffffffffa7ed]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i10 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v65 
=== Succesors ===
trueSuccessor: v109 
falseSuccessor: v107 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v65 #trueSuccessor: v109 #falseSuccessor: v107  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid i137 <|@
result int[-22803|0xffffffffffffa6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22803
stableDimension: 0
stamp: i32 [-22803] ⇊00000000ffffa6ed ⇈00000000ffffa6ed
stampKind: i32
value: int[-22803|0xffffffffffffa6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
v109 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22803|0xffffffffffffa6ed]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i127 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-22803 - -20747] ⇊00000000ffffa0e5 ⇈00000000ffffaffd
valueDescription: i32
=== Inputs ===
merge: v123 
values: i131 i133 i135 i137 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v123 values: i131 i133 i135 i137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v130 v132 v134 v136 
=== Succesors ===
next: v129 
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v130 v132 v134 v136 #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid a126 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i127 
speculation: a126 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i127 speculation: a126  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v5|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: j142 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j142 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j162 
=== Usages ===
v231 v232 
=== Predecessor ===
v107 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j162  <|@  <|@
f <@~|@floating>@ <|@
tid v231 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j142 
index: - 
=== Succesors ===
=== Usages ===
j162 v164 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j142 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j162 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v231 
=== Succesors ===
next: j163 
=== Usages ===
j214 j168 v236 
=== Predecessor ===
j142 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v231 #next: j163  <|@  <|@
f <@~|@floating>@ <|@
tid v232 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j142 
index: - 
=== Succesors ===
=== Usages ===
j163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j142 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j163 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v232 
=== Succesors ===
next: v150 
=== Usages ===
v147 
=== Predecessor ===
j162 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v232 #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid j213 <|@
result long[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j214 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j214 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j162 
y: j213 
=== Succesors ===
=== Usages ===
v147 v164 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j162 y: j213  <|@  <|@
f <@~|@floating>@ <|@
tid v147 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j163 
y: j214 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j163 y: j214  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v147 
=== Succesors ===
trueSuccessor: v148 
falseSuccessor: v149 
=== Usages ===
=== Predecessor ===
j163 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v147 #trueSuccessor: v148 #falseSuccessor: v149  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA [v6|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a155 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a155  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a155 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i216 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
a155 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i141 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a155 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a155 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
arguments: v139 i216 i141 
=== Succesors ===
next: j156 
=== Usages ===
j156 
=== Predecessor ===
v148 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 arguments: v139 i216 i141 #next: j156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j156 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a155 
=== Succesors ===
next: v169 
=== Usages ===
j168 
=== Predecessor ===
a155 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a155 #next: v169  <|@  <|@
f <@*|@fixed>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
j156 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v164 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v231 
value: j214 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v231 value: j214 stateAfter: - lastLocationAccess: - #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid v236 <|@
result [v6|QWORD + 240] <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j162 
index: - 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j162 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v236 
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v236 #next: v167  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
v160 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j168 <|@
result v10|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v166 
values: j162 j156 
=== Succesors ===
=== Usages ===
v235 v234 a113 v237 v238 v239 v240 v241 v242 v243 v244 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v166 values: j162 j156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v167 v169 
=== Succesors ===
next: a113 
=== Usages ===
j168 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v167 v169 #next: a113  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a113 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j168 
=== Succesors ===
next: j180 
=== Usages ===
a120 
=== Predecessor ===
v166 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j168 #next: j180  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j175 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j175 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v174 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v233 <|@
result [v12|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j175 
index: - 
=== Succesors ===
=== Usages ===
j180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j175 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j180 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v233 
=== Succesors ===
next: v181 
=== Usages ===
v181 
=== Predecessor ===
a113 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v233 #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
result [v10|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: - 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v234 
value: j180 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
j180 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v234 value: j180 stateAfter: - lastLocationAccess: - #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
result [v10|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: - 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v219 <|@
result meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v235 
value: v219 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v235 value: v219 stateAfter: - lastLocationAccess: - #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
result [v10|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: - 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j188 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4294967295
stableDimension: 0
stamp: i64 [4294967295] ⇊00000000ffffffff ⇈00000000ffffffff
stampKind: i64
value: long[4294967295|0xffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v237 
value: j188 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v237 value: j188 stateAfter: - lastLocationAccess: - #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
result [v10|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: - 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v238 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v238 value: i10 stateAfter: - lastLocationAccess: - #next: v196  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
result [v10|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: - 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v239 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v239 value: i2 stateAfter: - lastLocationAccess: - #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
result [v10|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: - 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v240 
value: i18 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v240 value: i18 stateAfter: - lastLocationAccess: - #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
result [v10|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: - 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v241 
value: i229 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v241 value: i229 stateAfter: - lastLocationAccess: - #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
result [v10|QWORD[*] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: - 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v242 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v209 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v242 value: i10 stateAfter: - lastLocationAccess: - #next: v209  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
result [v10|QWORD[*] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: - 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i8
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v243 
value: i206 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v243 value: i206 stateAfter: - lastLocationAccess: - #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
result [v10|QWORD[*] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: - 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a117 <|@
result v15|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n# [C
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v244 
value: a117 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a120 
=== Usages ===
=== Predecessor ===
v209 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v244 value: a117 stateAfter: - lastLocationAccess: - #next: a120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a120 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a113 
=== Succesors ===
next: v121 
=== Usages ===
v9 
=== Predecessor ===
v212 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a113 #next: v121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
a120 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v9  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 10]
stamp: void
=== Inputs ===
result: a120 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a120 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE v10|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v12|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*]], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 12], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 24], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 28], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 32], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 36], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v10|QWORD[*] + 40], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@12a684ba encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 44], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@61f7540f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = ADD (x: v1|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA [v6|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE v10|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v12|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*]], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 12], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 24], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 28], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 32], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 36], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v10|QWORD[*] + 40], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@12a684ba encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[*] + 44], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22547|0xffffffffffffa7ed]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v5|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22291|0xffffffffffffa8ed]] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22035|0xffffffffffffa9ed]] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22803|0xffffffffffffa6ed]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #7          // java.nio.HeapCharBuffer
     3: dup           
     4: aload_0       
     5: iload_1       
     6: iload_2       
     7: invokespecial #6          // java.nio.HeapCharBuffer.<init>:(char[], int, int)void
    10: areturn       
    11: astore_3      
    12: new           #10         // java.lang.IndexOutOfBoundsException
    15: dup           
    16: invokespecial #7          // java.lang.IndexOutOfBoundsException.<init>:()void
    19: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@61f7540f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 0]
locals: r13|QWORD[.] r14|DWORD rcx|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD = ADD (x: r14|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   72  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 48] size: QWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 240] instr: 0 <|@ <|@
      nr  108  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  118  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  124  <|@ instruction rdx|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr  126  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r14|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [rax|QWORD[*] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [rax|QWORD[*] + 36], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  138  <|@ instruction MOVB (x: [rax|QWORD[*] + 40], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  140  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@12a684ba encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [rax|QWORD[*] + 44], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   88  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   90  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   92  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 0]
locals: r13|QWORD[.] r14|DWORD stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   94  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction r10|DWORD = MOVE input: int[-22547|0xffffffffffffa7ed] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   62  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 0]
locals: r13|QWORD[.] r14|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction r10|DWORD = MOVE input: int[-22035|0xffffffffffffa9ed] <|@ <|@
      nr   22  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction r10|DWORD = MOVE input: int[-22803|0xffffffffffffa6ed] <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #7          // java.nio.HeapCharBuffer
     3: dup           
     4: aload_0       
     5: iload_1       
     6: iload_2       
     7: invokespecial #6          // java.nio.HeapCharBuffer.<init>:(char[], int, int)void
    10: areturn       
    11: astore_3      
    12: new           #10         // java.lang.IndexOutOfBoundsException
    15: dup           
    16: invokespecial #7          // java.lang.IndexOutOfBoundsException.<init>:()void
    19: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@61f7540f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 0]
locals: r13|QWORD[.] r14|DWORD rcx|DWORD - 
>@ <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD = ADD (x: r14|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   72  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 48] size: QWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 240] instr: 0 <|@ <|@
      nr  108  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  118  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  122  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  124  <|@ instruction rdx|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr  126  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r14|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [rax|QWORD[*] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [rax|QWORD[*] + 36], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  138  <|@ instruction MOVB (x: [rax|QWORD[*] + 40], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  140  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@12a684ba encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [rax|QWORD[*] + 44], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   88  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   90  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   92  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 0]
locals: r13|QWORD[.] r14|DWORD stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   94  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction r10|DWORD = MOVE input: int[-22547|0xffffffffffffa7ed] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   62  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 0]
locals: r13|QWORD[.] r14|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction r10|DWORD = MOVE input: int[-22035|0xffffffffffffa9ed] <|@ <|@
      nr   22  <|@ instruction JUMP ~[] destination: B1 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction r10|DWORD = MOVE input: int[-22803|0xffffffffffffa6ed] <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #7          // java.nio.HeapCharBuffer
     3: dup           
     4: aload_0       
     5: iload_1       
     6: iload_2       
     7: invokespecial #6          // java.nio.HeapCharBuffer.<init>:(char[], int, int)void
    10: areturn       
    11: astore_3      
    12: new           #10         // java.lang.IndexOutOfBoundsException
    15: dup           
    16: invokespecial #7          // java.lang.IndexOutOfBoundsException.<init>:()void
    19: athrow        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec2848896c24204c8bee448bf2458b550c458bde4403d9453bda0f8fee0000004585db0f8cdd000000453bf30f8fba0000004585f60f8cdb000000498b4760488d7030493b77700f8768000000498977600f1880f0000000488bf048baaddeaddeaddeadde488b92a8000000488910c74008addeaddebaffffffff4889500c44896014448970184489581c44895020448960244488602849c1ed034489682c488bc6488b6c24204883c428850500000000c5f877c344895c24144489542410894c240c48beaddeaddeaddeaddeba08000000b901000000e80000000090448b5c2414448b542410e96cffffff41baeda7ffff4589979c0200004d89a7a8020000e8000000009041baeda8ffffebe441baeda9ffffebdc41baeda6ffffebd4e80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@61f7540f slotKind: QWORD  <||@
  Comment 16 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 19 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 22 10 r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 22 [r13:0]at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3 
     locals:  |r13|QWORD[.]  |r14|DWORD  |rcx|DWORD  |-   <||@
  Comment 22 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 26 12 r11|DWORD = ADD (x: r14|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 32 14 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 35 16 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 41 block B2 null  <||@
  Comment 41 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 41 26 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 44 28 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 50 block B4 null  <||@
  Comment 50 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 50 38 CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 53 40 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 59 block B6 null  <||@
  Comment 59 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 59 50 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 62 52 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B9  <||@
  Comment 68 block B9 null  <||@
  Comment 68 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 68 70 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 72 72 rsi|QWORD = LEA [rax|QWORD + 48] size: QWORD  <||@
  Comment 76 74 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 80 76 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 86 block B11 null  <||@
  Comment 86 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 104 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 90 106 AMD64PREFETCH ~[rax|QWORD + 240] instr: 0  <||@
  Comment 97 108 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 97 110 JUMP ~[] destination: B11 -> B12  <||@
  Comment 97 block B12 null  <||@
  Comment 97 112 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 97 114 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 100 116 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}  <||@
  Comment 100 {meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}}  <||@
  Comment 110 118 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 117 120 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 120 122 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}  <||@
  Comment 120 {meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}}  <||@
  Comment 127 124 rdx|QWORD = MOVE input: long[4294967295|0xffffffff]  <||@
  Comment 132 126 MOV (x: [rax|QWORD[*] + 12], y: rdx|QWORD) size: QWORD  <||@
  Comment 136 128 MOV (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 140 130 MOV (x: [rax|QWORD[*] + 24], y: r14|DWORD) size: DWORD  <||@
  Comment 144 132 MOV (x: [rax|QWORD[*] + 28], y: r11|DWORD) size: DWORD  <||@
  Comment 148 134 MOV (x: [rax|QWORD[*] + 32], y: r10|DWORD) size: DWORD  <||@
  Comment 152 136 MOV (x: [rax|QWORD[*] + 36], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 156 138 MOVB (x: [rax|QWORD[*] + 40], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 160 140 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@12a684ba encoding: base: 0 shift: 3  <||@
  Comment 164 142 MOV (x: [rax|QWORD[*] + 44], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 168 144 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 171 146 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 180 12  <||@
  Comment 190 block B10 null  <||@
  Comment 190 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 190 80 stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 195 82 stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 200 84 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 204 86 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 204 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 214 88 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 219 90 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 224 92 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 224 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 229 [r13:0]at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2               |3 
     locals:  |r13|QWORD[.]  |r14|DWORD  |stack:36|DWORD  |-   <||@
  Comment 230 94 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 230 96 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 235 98 r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 240 100 JUMP ~[] destination: B10 -> B12  <||@
  Comment 245 block B5 null  <||@
  Comment 245 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 245 44 r10|DWORD = MOVE input: int[-22547|0xffffffffffffa7ed]  <||@
  Comment 251 46 JUMP ~[] destination: B5 -> B8  <||@
  Comment 251 block B8 null  <||@
  Comment 251 60 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 251 62 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 258 64 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 265 66 DEOPT info [bci:0]  <||@
  Comment 265 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 270 [r13:0]at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3 
     locals:  |r13|QWORD[.]  |r14|DWORD  |rcx|DWORD  |-   <||@
  Comment 271 block B3 null  <||@
  Comment 271 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 271 32 r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed]  <||@
  Comment 277 34 JUMP ~[] destination: B3 -> B8  <||@
  Comment 279 block B1 null  <||@
  Comment 279 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 279 20 r10|DWORD = MOVE input: int[-22035|0xffffffffffffa9ed]  <||@
  Comment 285 22 JUMP ~[] destination: B1 -> B8  <||@
  Comment 287 block B7 null  <||@
  Comment 287 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 287 56 r10|DWORD = MOVE input: int[-22803|0xffffffffffffa6ed]  <||@
  Comment 293 58 JUMP ~[] destination: B7 -> B8  <||@
  Comment 295 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 295 4  <||@
  Comment 301 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 301 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-7729[java.nio.CharBuffer.wrap(char[], int, int)]"
  method "HotSpotCompilation-7729[java.nio.CharBuffer.wrap(char[], int, int)]"
  date 1526687585302
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1199021a0 89842400c0feff4883ec2848896c24204c8bee448bf2458b550c458bde4403d9453bda0f8fee0000004585db0f8cdd000000453bf30f8fba0000004585f60f8cdb000000498b4760488d7030493b77700f8768000000498977600f1880f0000000488bf048ba101e03c007000000488b92a8000000488910c74008c26300f8baffffffff4889500c44896014448970184489581c44895020448960244488602849c1ed034489682c488bc6488b6c24204883c4288505ac9d5df0c5f877c344895c24144489542410894c240c48be680b00c007000000ba08000000b901000000e81b2086ff90448b5c2414448b542410e96cffffff41baeda7ffff4589979c0200004d89a7a8020000e8504310ff9041baeda8ffffebe441baeda9ffffebdc41baeda6ffffebd4e8d4d44fff90e82e4210ff90f4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@61f7540f slotKind: QWORD  <||@
  Comment 16 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 19 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 22 10 r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 22 [r13:0]at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3 
     locals:  |r13|QWORD[.]  |r14|DWORD  |rcx|DWORD  |-   <||@
  Comment 22 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 26 12 r11|DWORD = ADD (x: r14|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 32 14 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 35 16 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 41 block B2 null  <||@
  Comment 41 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 41 26 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 44 28 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 50 block B4 null  <||@
  Comment 50 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 50 38 CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 53 40 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 59 block B6 null  <||@
  Comment 59 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 59 50 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 62 52 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B9  <||@
  Comment 68 block B9 null  <||@
  Comment 68 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 68 70 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 72 72 rsi|QWORD = LEA [rax|QWORD + 48] size: QWORD  <||@
  Comment 76 74 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 80 76 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 86 block B11 null  <||@
  Comment 86 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 104 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 90 106 AMD64PREFETCH ~[rax|QWORD + 240] instr: 0  <||@
  Comment 97 108 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 97 110 JUMP ~[] destination: B11 -> B12  <||@
  Comment 97 block B12 null  <||@
  Comment 97 112 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 97 114 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 100 116 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}  <||@
  Comment 100 {meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}}  <||@
  Comment 110 118 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 117 120 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 120 122 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}  <||@
  Comment 120 {meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}}  <||@
  Comment 127 124 rdx|QWORD = MOVE input: long[4294967295|0xffffffff]  <||@
  Comment 132 126 MOV (x: [rax|QWORD[*] + 12], y: rdx|QWORD) size: QWORD  <||@
  Comment 136 128 MOV (x: [rax|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 140 130 MOV (x: [rax|QWORD[*] + 24], y: r14|DWORD) size: DWORD  <||@
  Comment 144 132 MOV (x: [rax|QWORD[*] + 28], y: r11|DWORD) size: DWORD  <||@
  Comment 148 134 MOV (x: [rax|QWORD[*] + 32], y: r10|DWORD) size: DWORD  <||@
  Comment 152 136 MOV (x: [rax|QWORD[*] + 36], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 156 138 MOVB (x: [rax|QWORD[*] + 40], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 160 140 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@12a684ba encoding: base: 0 shift: 3  <||@
  Comment 164 142 MOV (x: [rax|QWORD[*] + 44], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 168 144 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 171 146 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 180 12  <||@
  Comment 190 block B10 null  <||@
  Comment 190 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 190 80 stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 195 82 stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 200 84 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 204 86 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 204 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 214 88 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 219 90 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 224 92 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 224 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 229 [r13:0]at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2               |3 
     locals:  |r13|QWORD[.]  |r14|DWORD  |stack:36|DWORD  |-   <||@
  Comment 230 94 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 230 96 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 235 98 r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 240 100 JUMP ~[] destination: B10 -> B12  <||@
  Comment 245 block B5 null  <||@
  Comment 245 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 245 44 r10|DWORD = MOVE input: int[-22547|0xffffffffffffa7ed]  <||@
  Comment 251 46 JUMP ~[] destination: B5 -> B8  <||@
  Comment 251 block B8 null  <||@
  Comment 251 60 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 251 62 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 258 64 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 265 66 DEOPT info [bci:0]  <||@
  Comment 265 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 270 [r13:0]at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3 
     locals:  |r13|QWORD[.]  |r14|DWORD  |rcx|DWORD  |-   <||@
  Comment 271 block B3 null  <||@
  Comment 271 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 271 32 r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed]  <||@
  Comment 277 34 JUMP ~[] destination: B3 -> B8  <||@
  Comment 279 block B1 null  <||@
  Comment 279 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 279 20 r10|DWORD = MOVE input: int[-22035|0xffffffffffffa9ed]  <||@
  Comment 285 22 JUMP ~[] destination: B1 -> B8  <||@
  Comment 287 block B7 null  <||@
  Comment 287 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 287 56 r10|DWORD = MOVE input: int[-22803|0xffffffffffffa6ed]  <||@
  Comment 293 58 JUMP ~[] destination: B7 -> B8  <||@
  Comment 295 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 295 4  <||@
  Comment 301 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 301 5  <||@
  HexCodeFile>>> <|@
end_nmethod
