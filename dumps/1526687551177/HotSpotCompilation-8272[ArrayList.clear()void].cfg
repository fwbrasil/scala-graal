begin_compilation
  name " HotSpotCompilation-8272[java.util.ArrayList.clear()]"
  method "HotSpotCompilation-8272[java.util.ArrayList.clear()]"
  date 1526687596744
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i94 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i94  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 v99 v100 ?13 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i94 v35 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i94 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:558) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v99 
=== Succesors ===
next: v35 
=== Usages ===
i5 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v99 #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:558) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5 i25 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:558) [bci: 6]
stamp: i32
=== Inputs ===
x: i94 
y: i4 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i94 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:558) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v99 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i95 
=== Usages ===
=== Predecessor ===
i94 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v99 value: i5 stateAfter: - lastLocationAccess: - #next: i95  <|@  <|@
f <@~|@floating>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i95 v58 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i95 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:561) [bci: 14]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v100 
=== Succesors ===
next: v10 
=== Usages ===
v15 
=== Predecessor ===
v35 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v100 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:561) [bci: 10]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i12 v58 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:561) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
i95 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B3" 
    successors "B2" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610297148206783705
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v11 
values: i8 i25 
=== Succesors ===
=== Usages ===
?13 v15 v103 v48 i25 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v11 values: i8 i25  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.6916088605737996
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:561) [bci: 12]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v10 
=== Succesors ===
next: v20 
=== Usages ===
i12 v18 v26 v80 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v10 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:561) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i12 
y: i95 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i12 y: i95  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:561) [bci: 17]
stamp: void
trueSuccessorProbability: 0.40884679472487717
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v16 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v16 #falseSuccessor: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604404678358809010
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:562) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: a96 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a96  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a96 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a96 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:562) [bci: 21]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v101 
=== Succesors ===
next: i97 
=== Usages ===
a42 v102 
=== Predecessor ===
v16 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v101 #next: i97  <|@  <|@
tid ?13 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<ArrayList.clear()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 561
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i12 
=== Succesors ===
=== Usages ===
v91 i97 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i12  <|@  <|@
f <@~|@floating>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a96 
=== Succesors ===
=== Usages ===
i97 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a96  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i97 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:562) [bci: 26]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?13 
guard: - 
address: v102 
=== Succesors ===
next: v81 
=== Usages ===
v48 
=== Predecessor ===
a96 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?13 guard: - address: v102 #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:562) [bci: 26]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i12 
y: i97 
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i12 y: i97  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:562) [bci: 26]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v48 
=== Succesors ===
trueSuccessor: v77 
falseSuccessor: v80 
=== Usages ===
=== Predecessor ===
i97 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v48 #trueSuccessor: v77 #falseSuccessor: v80  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604404678358809010
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:562) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
v57 
=== Predecessor ===
v81 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@~|@floating>@ <|@
tid a42 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:562) [bci: 21]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a96 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a96  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a42 
index: i12 
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a42 index: i12  <|@  <|@
f <@~|@floating>@ <|@
tid a60 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:562) [bci: 26]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:562) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v77 
address: v103 
value: a60 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v77 address: v103 value: a60 stateAfter: - lastLocationAccess: - #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:561) [bci: 27]
stamp: i32
=== Inputs ===
x: i12 
y: i4 
=== Succesors ===
=== Usages ===
i12 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i12 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:561) [bci: 12]
stamp: void
=== Inputs ===
loopBegin: v11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:562) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v11 
=== Succesors ===
next: v91 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v11 #next: v91  <|@  <|@
f <@~|@floating>@ <|@
tid a88 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -12571
stableDimension: 0
stamp: i32 [-12571] ⇊00000000ffffcee5 ⇈00000000ffffcee5
stampKind: i32
value: int[-12571|0xffffffffffffcee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?13 
actionAndReason: i93 
speculation: a88 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?13 actionAndReason: i93 speculation: a88  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:564) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v11 
=== Succesors ===
next: v58 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v11 #next: v58  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:564) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v100 
value: i8 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v100 value: i8 stateAfter: - lastLocationAccess: - #next: v29  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:565) [bci: 38]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i94 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i94  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 v99 v100 ?13 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i94 v35 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i94 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:558) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v99 
=== Succesors ===
next: v35 
=== Usages ===
i5 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v99 #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:558) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5 i25 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:558) [bci: 6]
stamp: i32
=== Inputs ===
x: i94 
y: i4 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i94 y: i4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:558) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v99 
value: i5 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i95 
=== Usages ===
=== Predecessor ===
i94 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v99 value: i5 stateAfter: - lastLocationAccess: - #next: i95  <|@  <|@
f <@~|@floating>@ <|@
tid v100 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i95 v58 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i95 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:561) [bci: 14]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v100 
=== Succesors ===
next: v10 
=== Usages ===
v15 
=== Predecessor ===
v35 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v100 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:561) [bci: 10]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i12 v58 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:561) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
i95 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79b9e4a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = ADD (x: v1|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B3" 
    successors "B2" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610297148206783705
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i12 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v11 
values: i8 i25 
=== Succesors ===
=== Usages ===
?13 v15 v103 v48 i25 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v11 values: i8 i25  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.6916088605737996
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:561) [bci: 12]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v10 
=== Succesors ===
next: v20 
=== Usages ===
i12 v18 v26 v80 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v10 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:561) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i12 
y: i95 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i12 y: i95  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:561) [bci: 17]
stamp: void
trueSuccessorProbability: 0.40884679472487717
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v16 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v16 #falseSuccessor: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.40884679472487717 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604404678358809010
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:562) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: a96 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a96  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a96 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a96 <|@
result v5|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:562) [bci: 21]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v101 
=== Succesors ===
next: i97 
=== Usages ===
a42 v102 
=== Predecessor ===
v16 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v101 #next: i97  <|@  <|@
tid ?13 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<ArrayList.clear()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 561
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i12 
=== Succesors ===
=== Usages ===
v91 i97 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i12  <|@  <|@
f <@~|@floating>@ <|@
tid v102 <|@
result [v5|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a96 
=== Succesors ===
=== Usages ===
i97 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a96  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i97 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:562) [bci: 26]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?13 
guard: - 
address: v102 
=== Succesors ===
next: v81 
=== Usages ===
v48 
=== Predecessor ===
a96 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?13 guard: - address: v102 #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid v48 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:562) [bci: 26]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i12 
y: i97 
=== Succesors ===
=== Usages ===
v81 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i12 y: i97  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:562) [bci: 26]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v48 
=== Succesors ===
trueSuccessor: v77 
falseSuccessor: v80 
=== Usages ===
=== Predecessor ===
i97 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v48 #trueSuccessor: v77 #falseSuccessor: v80  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.clear(ArrayList.java:561) [bci: 12]
locals: v0|QWORD[.] v4|DWORD 
>@ <|@ instruction CMP (x: v4|DWORD, y: [v5|DWORD[.] * 8 + 12]) size: DWORD state [bci:12] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604404678358809010
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:562) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
v57 
=== Predecessor ===
v81 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@~|@floating>@ <|@
tid a42 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:562) [bci: 21]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a96 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a96  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
result [v6|QWORD[.] + v4|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a42 
index: i12 
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a42 index: i12  <|@  <|@
f <@~|@floating>@ <|@
tid a60 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:562) [bci: 26]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:562) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v77 
address: v103 
value: a60 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v77 address: v103 value: a60 stateAfter: - lastLocationAccess: - #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:561) [bci: 27]
stamp: i32
=== Inputs ===
x: i12 
y: i4 
=== Succesors ===
=== Usages ===
i12 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i12 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:561) [bci: 12]
stamp: void
=== Inputs ===
loopBegin: v11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3db3d2ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + v4|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|DWORD] destination: B3 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:562) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v11 
=== Succesors ===
next: v91 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v11 #next: v91  <|@  <|@
f <@~|@floating>@ <|@
tid a88 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
result int[-12571|0xffffffffffffcee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -12571
stableDimension: 0
stamp: i32 [-12571] ⇊00000000ffffcee5 ⇈00000000ffffcee5
stampKind: i32
value: int[-12571|0xffffffffffffcee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?13 
actionAndReason: i93 
speculation: a88 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?13 actionAndReason: i93 speculation: a88  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -12571 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.clear(ArrayList.java:561) [bci: 12]
locals: v0|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:564) [bci: 33]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v11 
=== Succesors ===
next: v58 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v11 #next: v58  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:564) [bci: 35]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v100 
value: i8 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v100 value: i8 stateAfter: - lastLocationAccess: - #next: v29  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.clear(ArrayList.java:565) [bci: 38]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79b9e4a slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = ADD (x: v1|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604404678358809010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.clear(ArrayList.java:561) [bci: 12]
locals: v0|QWORD[.] v4|DWORD 
>@ <|@ instruction CMP (x: v4|DWORD, y: [v5|DWORD[.] * 8 + 12]) size: DWORD state [bci:12] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604404678358809010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3db3d2ea encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + v4|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|DWORD] destination: B3 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B3" 
    successors "B2" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610297148206783705
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.40884679472487717 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -12571 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.clear(ArrayList.java:561) [bci: 12]
locals: v0|QWORD[.] v4|DWORD 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #13         // java.util.AbstractList.modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #13         // java.util.AbstractList.modCount:int
    10: iconst_0      
    11: istore_1      
    12: iload_1       
    13: aload_0       
    14: getfield      #0          // size:int
    17: if_icmpge     33
    20: aload_0       
    21: getfield      #2          // elementData:java.lang.Object[]
    24: iload_1       
    25: aconst_null   
    26: aastore       
    27: iinc          
    30: goto          12
    33: aload_0       
    34: iconst_0      
    35: putfield      #0          // size:int
    38: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79b9e4a slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   10  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   12  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr   14  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   16  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604404678358809010
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   26  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
java.util.ArrayList.clear(ArrayList.java:561) [bci: 12]
locals: rsi|QWORD[.] r11|DWORD 
>@ <|@ instruction CMP (x: r11|DWORD, y: [r8|DWORD[.] * 8 + 12]) size: DWORD state [bci:12] <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604404678358809010
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3db3d2ea encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction MOV (x: [r8|QWORD[.] + r11|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B3 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B3" 
    successors "B2" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610297148206783705
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   20  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.40884679472487717 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   46  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction MOV [r15|QWORD + 668] y: -12571 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayList.clear(ArrayList.java:561) [bci: 12]
locals: rsi|QWORD[.] r11|DWORD 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #13         // java.util.AbstractList.modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #13         // java.util.AbstractList.modCount:int
    10: iconst_0      
    11: istore_1      
    12: iload_1       
    13: aload_0       
    14: getfield      #0          // size:int
    17: if_icmpge     33
    20: aload_0       
    21: getfield      #2          // elementData:java.lang.Object[]
    24: iload_1       
    25: aconst_null   
    26: aastore       
    27: iinc          
    30: goto          12
    33: aload_0       
    34: iconst_0      
    35: putfield      #0          // size:int
    38: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79b9e4a slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   10  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   12  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr   14  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   16  <|@ instruction JUMP ~[] destination: B0 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604404678358809010
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   26  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rsi:0, r8:0]
live-base-pointers: []
java.util.ArrayList.clear(ArrayList.java:561) [bci: 12]
locals: rsi|QWORD[.] r11|DWORD 
>@ <|@ instruction CMP (x: r11|DWORD, y: [r8|DWORD[.] * 8 + 12]) size: DWORD state [bci:12] <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B1" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604404678358809010
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3db3d2ea encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction MOV (x: [r8|QWORD[.] + r11|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B3 -> B1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" "B3" 
    successors "B2" "B5" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610297148206783705
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   20  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.40884679472487717 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   46  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction MOV [r15|QWORD + 668] y: -12571 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayList.clear(ArrayList.java:561) [bci: 12]
locals: rsi|QWORD[.] r11|DWORD 
>@ <|@ instruction DEOPT info [bci:12] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: dup           
     2: getfield      #13         // java.util.AbstractList.modCount:int
     5: iconst_1      
     6: iadd          
     7: putfield      #13         // java.util.AbstractList.modCount:int
    10: iconst_0      
    11: istore_1      
    12: iload_1       
    13: aload_0       
    14: getfield      #0          // size:int
    17: if_icmpge     33
    20: aload_0       
    21: getfield      #2          // elementData:java.lang.Object[]
    24: iload_1       
    25: aconst_null   
    26: aastore       
    27: iinc          
    30: goto          12
    33: aload_0       
    34: iconst_0      
    35: putfield      #0          // size:int
    38: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c241041ba010000004403560c4489560c448b561041bb00000000e921000000666690448b4614463b1cc50c0000000f832800000049c1e003478964981041ffc3453bd37fdd44896610488b6c24104883c418850500000000c5f877c341c7879c020000e5ceffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79b9e4a slotKind: QWORD  <||@
  Comment 48 8 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 54 10 r10|DWORD = ADD (x: r10|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 58 12 MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 62 14 r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 66 -1 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 72 16 JUMP ~[] destination: B0 -> B1  <||@
  Comment 77 block B2 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 77 24 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 80 26 r8|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 84 28 CMP (x: r11|DWORD, y: [r8|DWORD[.] * 8 + 12]) size: DWORD state [bci:12]  <||@
  Comment 84 [rsi:0, r8:0]at java.util.ArrayList.clear(ArrayList.java:561) [bci: 12, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |r11|DWORD   <||@
  Comment 84 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 92 30 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 98 block B3 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 98 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 98 34 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3db3d2ea encoding: base: 0 shift: 3  <||@
  Comment 102 36 MOV (x: [r8|QWORD[.] + r11|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 107 38 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 110 40 JUMP ~[] destination: B3 -> B1  <||@
  Comment 110 block B1 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 110 18 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 110 20 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 113 22 BRANCH trueDestinationProbability: 0.40884679472487717 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5  <||@
  Comment 115 block B5 null  <||@
  Comment 115 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 115 44 MOV (x: [rsi|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 119 46 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 128 12  <||@
  Comment 138 block B4 null  <||@
  Comment 138 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 138 50 MOV [r15|QWORD + 668] y: -12571 size: DWORD  <||@
  Comment 149 52 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 156 54 DEOPT info [bci:12]  <||@
  Comment 156 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 161 [rsi:0]at java.util.ArrayList.clear(ArrayList.java:561) [bci: 12, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |r11|DWORD   <||@
  Comment 162 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 162 4  <||@
  Comment 168 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 168 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8272[java.util.ArrayList.clear()]"
  method "HotSpotCompilation-8272[java.util.ArrayList.clear()]"
  date 1526687596771
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1199ca220 448b560849c1e203493bc20f852fac03ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c241041ba010000004403560c4489560c448b561041bb00000000e921000000666690448b4614463b1cc50c0000000f832800000049c1e003478964981041ffc3453bd37fdd44896610488b6c24104883c4188505601d51f0c5f877c341c7879c020000e5ceffff4d89a7a8020000e83dc303ff90e8d95443ff90e833c203ff90f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@79b9e4a slotKind: QWORD  <||@
  Comment 48 8 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 54 10 r10|DWORD = ADD (x: r10|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 58 12 MOV (x: [rsi|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 62 14 r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 66 -1 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 72 16 JUMP ~[] destination: B0 -> B1  <||@
  Comment 77 block B2 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 77 24 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 80 26 r8|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 84 28 CMP (x: r11|DWORD, y: [r8|DWORD[.] * 8 + 12]) size: DWORD state [bci:12]  <||@
  Comment 84 [rsi:0, r8:0]at java.util.ArrayList.clear(ArrayList.java:561) [bci: 12, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |r11|DWORD   <||@
  Comment 84 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 92 30 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 98 block B3 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 98 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 98 34 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3db3d2ea encoding: base: 0 shift: 3  <||@
  Comment 102 36 MOV (x: [r8|QWORD[.] + r11|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 107 38 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 110 40 JUMP ~[] destination: B3 -> B1  <||@
  Comment 110 block B1 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 110 18 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 110 20 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 113 22 BRANCH trueDestinationProbability: 0.40884679472487717 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B5  <||@
  Comment 115 block B5 null  <||@
  Comment 115 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 115 44 MOV (x: [rsi|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 119 46 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 128 12  <||@
  Comment 138 block B4 null  <||@
  Comment 138 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 138 50 MOV [r15|QWORD + 668] y: -12571 size: DWORD  <||@
  Comment 149 52 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 156 54 DEOPT info [bci:12]  <||@
  Comment 156 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 161 [rsi:0]at java.util.ArrayList.clear(ArrayList.java:561) [bci: 12, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |r11|DWORD   <||@
  Comment 162 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 162 4  <||@
  Comment 168 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 168 5  <||@
  HexCodeFile>>> <|@
end_nmethod
