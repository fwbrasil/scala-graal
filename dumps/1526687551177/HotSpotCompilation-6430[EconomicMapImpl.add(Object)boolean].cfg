begin_compilation
  name " HotSpotCompilation-6430[org.graalvm.collections.EconomicMapImpl.add(Object)]"
  method "HotSpotCompilation-6430[org.graalvm.collections.EconomicMapImpl.add(Object)]"
  date 1526687598346
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1947 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1947  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v865 ?129 ?551 ?270 v1876 v971 ?707 v898 ?434 ?518 v1877 ?445 v906 v1878 v874 ?375 ?61 ?62 ?410 v816 v1881 v1885 ?69 v881 v913 ?256 j1436 j1543 v1950 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:407) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a110 v1304 a1350 v1330 ?3 v1312 a1337 v1322 a1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.add(Object)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 850
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a13 
=== Succesors ===
=== Usages ===
v1947 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a13  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?375 v881 v874 v1947 ?129 ?551 ?551 ?518 ?518 ?256 ?445 v806 v913 ?707 ?707 a831 ?61 ?61 ?62 ?445 v906 ?69 v343 v810 v816 ?270 ?129 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1947 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: a1844 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: a1844  <|@  <|@
f <@~|@floating>@ <|@
tid v1876 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1844 a1860 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1844 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1876 
=== Succesors ===
next: v120 
=== Usages ===
v1046 
=== Predecessor ===
v1947 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1876 #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
value: a1844 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1844  <|@  <|@
f <@~|@floating>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1654 j1843 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j781 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1704 j1697 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1695 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1696 v1600 v1703 v1662 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a831 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v832 v892 v1045 v1606 v1668 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@~|@floating>@ <|@
tid i399 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i400 a1575 i1512 a1638 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1442 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1441 v1547 v1557 v1611 v1618 v1673 v1680 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i401 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
v402 j1437 j1509 j1515 j1544 j1554 j1608 j1615 j1670 j1677 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1440 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1901 j1530 v1913 v1915 v1921 v1922 v1930 v1931 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1688 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1430 v1496 v1694 v1702 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1402 a1575 a1638 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v20 ?707 v557 i1511 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1049 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: Equivalence$3@1032552445
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1032552445]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1050 v1060 v1839 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1881 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1849 a1866 a1863 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 6]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 i43 i694 i67 i703 i89 i338 i227 i337 i697 i277 i1290 i456 i398 i416 i455 v690 v544 v565 v631 v728 i655 v658 v704 i687 a1402 a1575 a1638 i1832 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?107 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<EconomicMapImpl.add(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 850
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
?551 ?129 ?1283 ?1288 ?1287 ?707 ?61 ?1284 ?69 ?1285 ?518 ?1286 ?445 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
tid ?129 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: a1 a2 a2 - - - 
=== Succesors ===
=== Usages ===
?281 ?1281 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 a2 a2 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 v1528 i89 i255 a1469 v271 i655 i687 i697 ?270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1877 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1846 i1850 i1852 v860 v893 i1855 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1878 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1845 a1851 a1869 a1853 v915 v967 a1856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.639272979964365
=== Inputs ===
condition: v1046 
=== Succesors ===
trueSuccessor: v118 
falseSuccessor: v119 
=== Usages ===
=== Predecessor ===
a1844 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1046 #trueSuccessor: v118 #falseSuccessor: v119  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4603933278653987498
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
tid ?281 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<EconomicMapImpl.find(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 240
stackSize: 0
=== Inputs ===
outerFrameState: ?129 
values: - - 
=== Succesors ===
=== Usages ===
?256 ?375 ?270 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?129 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v254 
=== Predecessor ===
v118 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B7" "B11" 
    successors "B3" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608643104286206306
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i255 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v254 
values: i10 i277 i277 i277 
=== Succesors ===
=== Usages ===
?256 v258 i554 ?270 v20 i277 ?375 i456 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v254 values: i10 i277 i277 i277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.0716303882800795
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v253 
=== Succesors ===
next: a1845 
=== Usages ===
i255 v260 v273 v278 v514 v607 v1146 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v253 #next: a1845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1845 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1878 
=== Succesors ===
next: i1846 
=== Usages ===
a815 v1879 
=== Predecessor ===
v254 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1878 #next: i1846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1846 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1877 
=== Succesors ===
next: v262 
=== Usages ===
v258 i709 
=== Predecessor ===
a1845 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1877 #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i255 
y: i1846 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i255 y: i1846  <|@  <|@
f <@~|@floating>@ <|@
tid a815 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1845 
=== Succesors ===
=== Usages ===
a710 v1880 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1845  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.5636014278300074
=== Inputs ===
condition: v258 
=== Succesors ===
trueSuccessor: v259 
falseSuccessor: v260 
=== Usages ===
=== Predecessor ===
i1846 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v258 #trueSuccessor: v259 #falseSuccessor: v260  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604898178757251081
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1847 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1847  <|@  <|@
tid ?256 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 245
stackSize: 0
=== Inputs ===
outerFrameState: ?281 
values: a1 a2 i255 - 
=== Succesors ===
=== Usages ===
v1131 v1132 v1312 i1847 v1948 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?281 values: a1 a2 i255 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1879 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1845 
=== Succesors ===
=== Usages ===
i1847 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1847 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?256 
guard: - 
address: v1879 
=== Succesors ===
next: v1147 
=== Usages ===
v790 
=== Predecessor ===
v259 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?256 guard: - address: v1879 #next: v1147  <|@  <|@
f <@~|@floating>@ <|@
tid i456 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i255 
y: i9 
=== Succesors ===
=== Usages ===
i1289 v1880 v790 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i255 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i456 
y: i1847 
=== Succesors ===
=== Usages ===
v1147 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i456 y: i1847  <|@  <|@
f <@*|@fixed>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v790 
=== Succesors ===
trueSuccessor: v1143 
falseSuccessor: v1146 
=== Usages ===
=== Predecessor ===
i1847 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v790 #trueSuccessor: v1143 #falseSuccessor: v1146  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604898178757251081
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1848 
=== Usages ===
a1848 
=== Predecessor ===
v1147 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1848  <|@  <|@
f <@~|@floating>@ <|@
tid v1880 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a815 
index: i456 
=== Succesors ===
=== Usages ===
a1848 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a815 index: i456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1848 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1143 
address: v1880 
=== Succesors ===
next: v1948 
=== Usages ===
a799 v1948 
=== Predecessor ===
v1143 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1143 address: v1880 #next: v1948  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1948 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?256 
object: a1848 
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
a1848 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?256 object: a1848 #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid a799 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1848 
=== Succesors ===
=== Usages ===
v806 v810 v343 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1848  <|@  <|@
f <@~|@floating>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a799 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a799  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.1419773332266897
=== Inputs ===
condition: v343 
=== Succesors ===
trueSuccessor: v344 
falseSuccessor: v345 
=== Usages ===
=== Predecessor ===
v1948 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v343 #trueSuccessor: v344 #falseSuccessor: v345  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4592300483225628690
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v582 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v582  <|@  <|@
f <@*|@fixed>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
v344 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603943670936943111
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1849 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1849 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1881 
=== Succesors ===
next: v352 
=== Usages ===
a804 v807 v1050 v1052 
=== Predecessor ===
v345 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1881 #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
value: a1849 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1849  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32
=== Inputs ===
x: i255 
y: i9 
=== Succesors ===
=== Usages ===
i255 i255 i255 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i255 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.9227120624734517
=== Inputs ===
condition: v807 
=== Succesors ===
trueSuccessor: v350 
falseSuccessor: v351 
=== Usages ===
=== Predecessor ===
a1849 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v807 #trueSuccessor: v350 #falseSuccessor: v351  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603497839226159045
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1131 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1131  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?256 
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?256 #next: v514  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v254 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1131 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v254  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587294128408339488
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v363  <|@  <|@
f <@~|@floating>@ <|@
tid a1051 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: Equivalence$1@1531265431
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1531265431]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1052 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1849 
y: a1051 
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1849 y: a1051  <|@  <|@
tid ?375 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 247
stackSize: 0
=== Inputs ===
outerFrameState: ?281 
values: a1 a2 i255 - 
=== Succesors ===
=== Usages ===
?1280 ?1279 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?281 values: a1 a2 i255 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.7897901770397393
=== Inputs ===
condition: v1052 
=== Succesors ===
trueSuccessor: v361 
falseSuccessor: v355 
=== Usages ===
=== Predecessor ===
v351 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1052 #trueSuccessor: v361 #falseSuccessor: v355  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585794637128435669
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i365 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i365  <|@  <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@37f96d63
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a799 
=== Succesors ===
=== Usages ===
i365 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a799  <|@  <|@
tid ?1279 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 260
stackSize: 0
=== Inputs ===
outerFrameState: ?375 
values: - - - 
=== Succesors ===
=== Usages ===
i365 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?375 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i365 <|@
d <@d|@=== Debug Properties ===
bci: 36
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v806 
stateDuring: ?1279 
=== Succesors ===
next: v379 
=== Usages ===
i378 
=== Predecessor ===
v361 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v806 stateDuring: ?1279 #next: v379  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
i365 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577151586900668714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1849 
y: a1049 
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1849 y: a1049  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.006430404473437462
=== Inputs ===
condition: v1050 
=== Succesors ===
trueSuccessor: v356 
falseSuccessor: v362 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1050 #trueSuccessor: v356 #falseSuccessor: v362  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4544565300131757046
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1132 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?256 
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?256 #next: v607  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
stamp: void
=== Inputs ===
loopBegin: v254 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1132 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v254  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577113017558932018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i370 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i370  <|@  <|@
f <@~|@floating>@ <|@
tid a804 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a1849 
=== Succesors ===
=== Usages ===
v810 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1849  <|@  <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@42b77554
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a804 a2 a799 
=== Succesors ===
=== Usages ===
i370 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a804 a2 a799  <|@  <|@
tid ?1280 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: ?375 
values: - - - 
=== Succesors ===
=== Usages ===
i370 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?375 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i370 <|@
d <@d|@=== Debug Properties ===
bci: 46
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Equivalence.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v810 
stateDuring: ?1280 
=== Succesors ===
next: v380 
=== Usages ===
i378 
=== Predecessor ===
v362 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v810 stateDuring: ?1280 #next: v380  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
i370 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4587284486072905314
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i378 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v376 
values: i365 i370 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v376 values: i365 i370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v379 v380 
=== Succesors ===
next: v276 
=== Usages ===
i378 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v379 v380 #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i378 
y: i10 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i378 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.9178266480357399
=== Inputs ===
condition: v271 
=== Succesors ===
trueSuccessor: v272 
falseSuccessor: v502 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v271 #trueSuccessor: v272 #falseSuccessor: v502  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4586699110638535307
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1130 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1130  <|@  <|@
tid ?270 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 247
stackSize: 1
=== Inputs ===
outerFrameState: ?281 
values: a1 a2 i255 - i10 
=== Succesors ===
=== Usages ===
v1130 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?281 values: a1 a2 i255 - i10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?270 
=== Succesors ===
next: v278 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?270 #next: v278  <|@  <|@
f <@*|@fixed>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v254 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1130 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v254  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4571333025628642997
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:248) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v580 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v580  <|@  <|@
f <@*|@fixed>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
v502 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4592593170942813693
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v580 v582 
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v580 v582 #next: v273  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4592593170942813693
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:248) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v254 
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v579 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v254 #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i255 
y: i19 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i255 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.7032569589727494
=== Inputs ===
condition: v20 
=== Succesors ===
trueSuccessor: v21 
falseSuccessor: v22 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v20 #trueSuccessor: v21 #falseSuccessor: v22  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590240369473285055
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1850 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1850 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 42]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1877 
=== Succesors ===
next: a1851 
=== Usages ===
i709 
=== Predecessor ===
v21 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1877 #next: a1851  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1851 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1878 
=== Succesors ===
next: v705 
=== Usages ===
a813 
=== Predecessor ===
i1850 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1878 #next: v705  <|@  <|@
f <@~|@floating>@ <|@
tid a813 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1851 
=== Succesors ===
=== Usages ===
a710 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1851  <|@  <|@
f <@*|@fixed>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
a1851 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B109" 
    xhandlers
    flags 
    probability 4584866423974851708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 25]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v550  <|@  <|@
f <@*|@fixed>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
v22 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v254 
=== Succesors ===
next: v1312 
=== Usages ===
=== Predecessor ===
v1147 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v254 #next: v1312  <|@  <|@
f <@~|@floating>@ <|@
tid i1314 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -202523
stableDimension: 0
stamp: i32 [-202523] ⇊00000000fffce8e5 ⇈00000000fffce8e5
stampKind: i32
value: int[-202523|0xfffffffffffce8e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1312 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?256 
actionAndReason: i1314 
speculation: a13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1146 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?256 actionAndReason: i1314 speculation: a13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B24" 
    xhandlers
    flags 
    probability 4603380830560420539
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:251) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v254 
=== Succesors ===
next: v708 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v254 #next: v708  <|@  <|@
f <@*|@fixed>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
v260 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B23" "B108" 
    xhandlers
    flags 
    probability 4600169900209965740
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i122 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i122  <|@  <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@1637efb8
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.findHash(Object)>
=== Inputs ===
arguments: a1 a2 
=== Succesors ===
=== Usages ===
i122 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2  <|@  <|@
tid ?1281 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<EconomicMapImpl.find(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 238
stackSize: 0
=== Inputs ===
outerFrameState: ?129 
values: - - 
=== Succesors ===
=== Usages ===
i122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?129 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i122 <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.findHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v816 
stateDuring: ?1281 
=== Succesors ===
next: v560 
=== Usages ===
v557 i554 i455 
=== Predecessor ===
v119 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v816 stateDuring: ?1281 #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i122 
y: i19 
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i122 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:411) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.7032569589727494
=== Inputs ===
condition: v557 
=== Succesors ===
trueSuccessor: v558 
falseSuccessor: v559 
=== Usages ===
=== Predecessor ===
i122 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v557 #trueSuccessor: v558 #falseSuccessor: v559  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598241580754652459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1852 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1852 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:417) [bci: 42]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1877 
=== Succesors ===
next: a1853 
=== Usages ===
i709 
=== Predecessor ===
v558 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1877 #next: a1853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1853 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1878 
=== Succesors ===
next: v724 
=== Usages ===
a819 
=== Predecessor ===
i1852 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1878 #next: v724  <|@  <|@
f <@~|@floating>@ <|@
tid a819 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1853 
=== Succesors ===
=== Usages ===
a710 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1853  <|@  <|@
f <@*|@fixed>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
a1853 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B18" "B21" "B23" 
    successors "B25" "B29" 
    xhandlers
    flags 
    probability 4606362804580058824
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i709 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v706 
values: i1850 i1846 i1852 
=== Succesors ===
=== Usages ===
i521 i43 i521 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v706 values: i1850 i1846 i1852  <|@  <|@
f <@~|@floating>@ <|@
tid a710 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v706 
values: a813 a815 a819 
=== Succesors ===
=== Usages ===
v33 j1535 a520 v1889 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v706 values: a813 a815 a819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v705 v708 v724 
=== Succesors ===
next: v36 
=== Usages ===
i709 a710 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v705 v708 v724 #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
value: a710 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a710  <|@  <|@
f <@~|@floating>@ <|@
tid i222 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 131072
stableDimension: 0
stamp: i32 [131072] ⇊0000000000020000 ⇈0000000000020000
stampKind: i32
value: int[131072|0x20000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 v435 v1828 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i212 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 512
stableDimension: 0
stamp: i32 [512] ⇊0000000000000200 ⇈0000000000000200
stampKind: i32
value: int[512|0x200]
=== Inputs ===
=== Succesors ===
=== Usages ===
v645 v423 v427 v1829 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1421 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1426 v1493 j1517 v1523 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1827 i449 i1838 v1425 a1402 i1826 i1836 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:418) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.16458612886577473
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v34 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v34 #falseSuccessor: v35  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4594558271993072168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1390 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1390 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1409 
=== Usages ===
v1896 v1897 
=== Predecessor ===
v34 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1409  <|@  <|@
f <@~|@floating>@ <|@
tid v1896 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1390 
index: - 
=== Succesors ===
=== Usages ===
j1409 v1411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1390 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1409 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1896 
=== Succesors ===
next: j1410 
=== Usages ===
j1684 j1415 v1932 
=== Predecessor ===
j1390 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1896 #next: j1410  <|@  <|@
f <@~|@floating>@ <|@
tid v1897 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1390 
index: - 
=== Succesors ===
=== Usages ===
j1410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1390 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1410 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1897 
=== Succesors ===
next: v1398 
=== Usages ===
v1395 
=== Predecessor ===
j1409 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1897 #next: v1398  <|@  <|@
f <@~|@floating>@ <|@
tid j1683 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1684 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1684 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1409 
y: j1683 
=== Succesors ===
=== Usages ===
v1395 v1411 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1409 y: j1683  <|@  <|@
f <@~|@floating>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1410 
y: j1684 
=== Succesors ===
=== Usages ===
v1398 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1410 y: j1684  <|@  <|@
f <@*|@fixed>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1395 
=== Succesors ===
trueSuccessor: v1396 
falseSuccessor: v1397 
=== Usages ===
=== Predecessor ===
j1410 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1395 #trueSuccessor: v1396 #falseSuccessor: v1397  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4564542345078188990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1402 
=== Usages ===
=== Predecessor ===
v1398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1402  <|@  <|@
tid ?707 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 1
=== Inputs ===
outerFrameState: ?107 
values: a1 a2 a2 - - - i19 
=== Succesors ===
=== Usages ===
a1402 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 a2 a2 - - - i19  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1402 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?707 
arguments: v1388 i37 i9 
=== Succesors ===
next: j1403 
=== Usages ===
j1403 
=== Predecessor ===
v1396 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?707 arguments: v1388 i37 i9 #next: j1403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1403 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1402 
=== Succesors ===
next: v1416 
=== Usages ===
j1415 
=== Predecessor ===
a1402 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1402 #next: v1416  <|@  <|@
f <@*|@fixed>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1413 
=== Predecessor ===
j1403 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4594504369476046801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1397 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1411 
=== Usages ===
=== Predecessor ===
v1398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1896 
value: j1684 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1407 
=== Usages ===
=== Predecessor ===
v1397 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1896 value: j1684 stateAfter: - lastLocationAccess: - #next: v1407  <|@  <|@
f <@~|@floating>@ <|@
tid v1932 <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j1409 
index: - 
=== Succesors ===
=== Usages ===
v1407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1409 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1407 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1932 
=== Succesors ===
next: v1414 
=== Usages ===
=== Predecessor ===
v1411 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1932 #next: v1414  <|@  <|@
f <@*|@fixed>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1413 
=== Predecessor ===
v1407 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B75" 
    xhandlers
    flags 
    probability 4594558271993072168
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1415 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1413 
values: j1409 j1403 
=== Succesors ===
=== Usages ===
v1900 v1899 a1212 v1898 v1933 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1413 values: j1409 j1403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1414 v1416 
=== Succesors ===
next: a1212 
=== Usages ===
j1415 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1414 v1416 #next: a1212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1212 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1415 
=== Succesors ===
next: v1425 
=== Usages ===
a1218 
=== Predecessor ===
v1413 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1415 #next: v1425  <|@  <|@
f <@~|@floating>@ <|@
tid v1898 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1415 
index: - 
=== Succesors ===
=== Usages ===
v1425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1415 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1898 
value: i37 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1426 
=== Usages ===
=== Predecessor ===
a1212 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1898 value: i37 stateAfter: - lastLocationAccess: - #next: v1426  <|@  <|@
f <@~|@floating>@ <|@
tid v1899 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1415 
index: - 
=== Succesors ===
=== Usages ===
v1426 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1415 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1426 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1899 
value: j1421 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1430 
=== Usages ===
=== Predecessor ===
v1425 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1899 value: j1421 stateAfter: - lastLocationAccess: - #next: v1430  <|@  <|@
f <@~|@floating>@ <|@
tid v1900 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1415 
index: - 
=== Succesors ===
=== Usages ===
v1430 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1415 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1900 
value: v1688 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1435 
=== Usages ===
=== Predecessor ===
v1426 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1900 value: v1688 stateAfter: - lastLocationAccess: - #next: v1435  <|@  <|@
f <@~|@floating>@ <|@
tid v1933 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1415 
index: - 
=== Succesors ===
=== Usages ===
v1435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1415 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1433 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i64,i64,i64,i64>
stampKind: <i64,i64,i64,i64>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1435 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1933 
value: v1433 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1218 
=== Usages ===
=== Predecessor ===
v1430 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1933 value: v1433 stateAfter: - lastLocationAccess: - #next: a1218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1218 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1212 
=== Succesors ===
next: v1219 
=== Usages ===
a914 a520 
=== Predecessor ===
v1435 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1212 #next: v1219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v915 
=== Usages ===
=== Predecessor ===
a1218 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v915  <|@  <|@
f <@~|@floating>@ <|@
tid a914 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Compress
stamp: n -
=== Inputs ===
value: a1218 
=== Succesors ===
=== Usages ===
v915 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1878 
value: a914 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1436 
=== Usages ===
=== Predecessor ===
v1219 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1878 value: a914 stateAfter: - lastLocationAccess: - #next: j1436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v1441 
=== Usages ===
j1437 
=== Predecessor ===
v915 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v1441  <|@  <|@
f <@~|@floating>@ <|@
tid j1437 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1436 
y: i401 
=== Succesors ===
=== Usages ===
v1901 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1436 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid v1901 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1437 
index: j1440 
=== Succesors ===
=== Usages ===
v1441 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1437 index: j1440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1441 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:419) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1901 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v574 
=== Usages ===
=== Predecessor ===
j1436 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1901 value: i1442 stateAfter: - lastLocationAccess: - #next: v574  <|@  <|@
f <@*|@fixed>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
v1441 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" "B74" 
    xhandlers
    flags 
    probability 4605015241654424638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1854 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1854  <|@  <|@
f <@~|@floating>@ <|@
tid v1889 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a710 
index: - 
=== Succesors ===
=== Usages ===
i1854 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a710 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1854 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 70]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1889 
=== Succesors ===
next: v50 
=== Usages ===
v44 i398 i400 ?410 j1541 v1064 v435 v423 ?434 
=== Predecessor ===
v35 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1889 #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 74]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i709 
y: i9 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i709 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i43 
y: i1854 
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i43 y: i1854  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:420) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.06724041913834489
=== Inputs ===
condition: v44 
=== Succesors ===
trueSuccessor: v45 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
i1854 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v44 #trueSuccessor: v45 #falseSuccessor: v49  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4587519636292349188
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid i400 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [0 - 536870911] ⇈000000001fffffff
=== Inputs ===
x: i1854 
y: i399 
=== Succesors ===
=== Usages ===
v402 i449 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1854 y: i399  <|@  <|@
f <@~|@floating>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i400 
y: i401 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i400 y: i401  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.7168021985042756
=== Inputs ===
condition: v402 
=== Succesors ===
trueSuccessor: v403 
falseSuccessor: v404 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v402 #trueSuccessor: v403 #falseSuccessor: v404  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4585435635990079686
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v406  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
v403 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4579489622990131447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v408  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
v404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" "B32" 
    successors "B34" "B72" 
    xhandlers
    flags 
    probability 4587519636292349188
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [8 - 536870911] ⇈000000001fffffff
valueDescription: i32
=== Inputs ===
merge: v407 
values: i37 i400 
=== Succesors ===
=== Usages ===
?411 i412 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v407 values: i37 i400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v406 v408 
=== Succesors ===
next: v1156 
=== Usages ===
i449 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v406 v408 #next: v1156  <|@  <|@
tid ?445 <|@
d <@d|@=== Debug Properties ===
bci: 79
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 421
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: a1 a2 a2 - - - 
=== Succesors ===
=== Usages ===
?410 ?1282 ?434 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 a2 a2 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i398 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i1854 
y: i9 
=== Succesors ===
=== Usages ===
?410 i412 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1854 y: i9  <|@  <|@
tid ?410 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<EconomicMapImpl.grow()>
duringCall: true
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 456
stackSize: 1
=== Inputs ===
outerFrameState: ?445 
values: a1 i1854 - - i398 
=== Succesors ===
=== Usages ===
?411 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?445 values: a1 i1854 - - i398  <|@  <|@
tid ?411 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Math.max(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rethrowException: false
sourceFile: Math.java
sourceLine: 1252
stackSize: 1
=== Inputs ===
outerFrameState: ?410 
values: - - i449 
=== Succesors ===
=== Usages ===
a1469 v1322 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?410 values: - - i449  <|@  <|@
f <@~|@floating>@ <|@
tid i412 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:456) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [8 - 1610612734] ⇈000000007fffffff
=== Inputs ===
x: i398 
y: i449 
=== Succesors ===
=== Usages ===
v414 i416 i1691 v1693 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i398 y: i449  <|@  <|@
f <@~|@floating>@ <|@
tid i413 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 1073741824
stableDimension: 0
stamp: i32 [1073741824] ⇊0000000040000000 ⇈0000000040000000
stampKind: i32
value: int[1073741824|0x40000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i412 
y: i413 
=== Succesors ===
=== Usages ===
v1156 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i412 y: i413  <|@  <|@
f <@*|@fixed>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v414 
=== Succesors ===
trueSuccessor: v1153 
falseSuccessor: v1155 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v414 #trueSuccessor: v1153 #falseSuccessor: v1155  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4587519636292349188
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v954 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v954  <|@  <|@
f <@~|@floating>@ <|@
tid i416 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 37]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i412 
y: i9 
=== Succesors ===
=== Usages ===
j1710 v427 v438 v1064 v1492 i1511 a1469 v1454 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i412 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i416 
y: i1854 
=== Succesors ===
=== Usages ===
v954 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i416 y: i1854  <|@  <|@
f <@*|@fixed>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1064 
=== Succesors ===
trueSuccessor: v953 
falseSuccessor: v951 
=== Usages ===
=== Predecessor ===
v1153 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1064 #trueSuccessor: v953 #falseSuccessor: v951  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1318 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1318  <|@  <|@
f <@~|@floating>@ <|@
tid i1319 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -244577
stableDimension: 0
stamp: i32 [-244577] ⇊00000000fffc449f ⇈00000000fffc449f
stampKind: i32
value: int[-244577|0xfffffffffffc449f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1320 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1317 
=== Predecessor ===
v953 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B40" 
    xhandlers
    flags 
    probability 4587519636292349188
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1448 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1448 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1489 
=== Usages ===
v1902 v1903 
=== Predecessor ===
v951 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1489  <|@  <|@
f <@~|@floating>@ <|@
tid v1902 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1448 
index: - 
=== Succesors ===
=== Usages ===
j1489 v1491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1489 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1902 
=== Succesors ===
next: j1490 
=== Usages ===
j1452 v1904 v1905 a1468 v1910 v1906 v1907 v1908 v1909 
=== Predecessor ===
j1448 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1902 #next: j1490  <|@  <|@
f <@~|@floating>@ <|@
tid v1903 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1448 
index: - 
=== Succesors ===
=== Usages ===
j1490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1490 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1903 
=== Succesors ===
next: v1457 
=== Usages ===
v1458 
=== Predecessor ===
j1489 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1903 #next: v1457  <|@  <|@
f <@~|@floating>@ <|@
tid i1453 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1454 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i416 
y: i1453 
=== Succesors ===
=== Usages ===
v1457 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i416 y: i1453  <|@  <|@
f <@*|@fixed>@ <|@
tid v1457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1454 
=== Succesors ===
trueSuccessor: v1456 
falseSuccessor: v1455 
=== Usages ===
=== Predecessor ===
j1490 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1454 #trueSuccessor: v1456 #falseSuccessor: v1455  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4586783754766693713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1464 
=== Usages ===
=== Predecessor ===
v1457 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1464  <|@  <|@
f <@~|@floating>@ <|@
tid i1690 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1691 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1691 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i412 
y: i1690 
=== Succesors ===
=== Usages ===
i1477 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i412 y: i1690  <|@  <|@
f <@~|@floating>@ <|@
tid i1476 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1477 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483641 - 2147483647] ⇊0000000000000007
=== Inputs ===
x: i1691 
y: i1476 
=== Succesors ===
=== Usages ===
i1447 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1691 y: i1476  <|@  <|@
f <@~|@floating>@ <|@
tid i1446 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1447 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1447 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1477 
y: i1446 
=== Succesors ===
=== Usages ===
j1451 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1477 y: i1446  <|@  <|@
f <@~|@floating>@ <|@
tid j1451 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1447 
=== Succesors ===
=== Usages ===
j1452 v1906 v1907 v1908 v1909 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1447  <|@  <|@
f <@~|@floating>@ <|@
tid j1452 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
=== Inputs ===
x: j1451 
y: j1489 
=== Succesors ===
=== Usages ===
v1458 v1491 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1451 y: j1489  <|@  <|@
f <@~|@floating>@ <|@
tid v1458 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1490 
y: j1452 
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1490 y: j1452  <|@  <|@
f <@*|@fixed>@ <|@
tid v1464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1458 
=== Succesors ===
trueSuccessor: v1463 
falseSuccessor: v1462 
=== Usages ===
=== Predecessor ===
v1456 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1458 #trueSuccessor: v1463 #falseSuccessor: v1462  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4557112978819752047
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1461 
=== Usages ===
=== Predecessor ===
v1464 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1461  <|@  <|@
f <@*|@fixed>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1460 
=== Predecessor ===
v1463 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B42" 
    xhandlers
    flags 
    probability 4586717525429384720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1491 
=== Usages ===
=== Predecessor ===
v1464 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1902 
value: j1452 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1479 
=== Usages ===
=== Predecessor ===
v1462 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1902 value: j1452 stateAfter: - lastLocationAccess: - #next: v1479  <|@  <|@
f <@~|@floating>@ <|@
tid v1906 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1451 
index: j1489 
=== Succesors ===
=== Usages ===
v1479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1451 index: j1489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
address: v1906 
=== Succesors ===
next: v1481 
=== Usages ===
=== Predecessor ===
v1491 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1906 #next: v1481  <|@  <|@
f <@~|@floating>@ <|@
tid v1907 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1451 
index: j1489 
=== Succesors ===
=== Usages ===
v1481 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1451 index: j1489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
address: v1907 
=== Succesors ===
next: v1484 
=== Usages ===
=== Predecessor ===
v1479 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1907 #next: v1484  <|@  <|@
f <@~|@floating>@ <|@
tid v1908 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1451 
index: j1489 
=== Succesors ===
=== Usages ===
v1484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1451 index: j1489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
address: v1908 
=== Succesors ===
next: v1487 
=== Usages ===
=== Predecessor ===
v1481 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1908 #next: v1487  <|@  <|@
f <@~|@floating>@ <|@
tid v1909 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1451 
index: j1489 
=== Succesors ===
=== Usages ===
v1487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1451 index: j1489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
address: v1909 
=== Succesors ===
next: v1492 
=== Usages ===
=== Predecessor ===
v1484 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1909 #next: v1492  <|@  <|@
f <@~|@floating>@ <|@
tid v1904 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1489 
index: - 
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1489 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1904 
value: i416 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1493 
=== Usages ===
=== Predecessor ===
v1487 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1904 value: i416 stateAfter: - lastLocationAccess: - #next: v1493  <|@  <|@
f <@~|@floating>@ <|@
tid v1905 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1489 
index: - 
=== Succesors ===
=== Usages ===
v1493 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1489 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1905 
value: j1421 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1496 
=== Usages ===
=== Predecessor ===
v1492 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1905 value: j1421 stateAfter: - lastLocationAccess: - #next: v1496  <|@  <|@
f <@~|@floating>@ <|@
tid v1910 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1489 
index: - 
=== Succesors ===
=== Usages ===
v1496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1489 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1910 
value: v1688 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1467 
=== Usages ===
=== Predecessor ===
v1493 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1910 value: v1688 stateAfter: - lastLocationAccess: - #next: v1467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1467 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1468 
=== Usages ===
=== Predecessor ===
v1496 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1468  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1489 
=== Succesors ===
next: v1470 
=== Usages ===
a1473 
=== Predecessor ===
v1467 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1489 #next: v1470  <|@  <|@
f <@*|@fixed>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1471 
=== Predecessor ===
a1468 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B41" 
    xhandlers
    flags 
    probability 4572537074358926747
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1459 
=== Usages ===
=== Predecessor ===
v1457 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1459  <|@  <|@
f <@*|@fixed>@ <|@
tid v1459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1460 
=== Predecessor ===
v1455 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" 
    successors "B42" 
    xhandlers
    flags 
    probability 4573066909057398690
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1459 v1461 
=== Succesors ===
next: a1469 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1459 v1461 #next: a1469  <|@  <|@
f <@~|@floating>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1469 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?411 
arguments: v744 i416 i10 
=== Succesors ===
next: v1472 
=== Usages ===
a1473 
=== Predecessor ===
v1460 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?411 arguments: v744 i416 i10 #next: v1472  <|@  <|@
f <@*|@fixed>@ <|@
tid v1472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1471 
=== Predecessor ===
a1469 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4587519636292349188
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1471 
values: a1468 a1469 
=== Succesors ===
=== Usages ===
v1895 a1297 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1471 values: a1468 a1469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1470 v1472 
=== Succesors ===
next: v1767 
=== Usages ===
a1473 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1470 v1472 #next: v1767  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1721 
=== Usages ===
j1769 
=== Predecessor ===
v1471 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1721  <|@  <|@
f <@~|@floating>@ <|@
tid v1895 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1473 
index: - 
=== Succesors ===
=== Usages ===
j1769 j1510 j1508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1473 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1769 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1767 
address: v1895 
=== Succesors ===
=== Usages ===
v1940 v1941 v1942 v1943 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1767 address: v1895  <|@  <|@
f <@~|@floating>@ <|@
tid j1710 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i416 
=== Succesors ===
=== Usages ===
j1810 j1797 j1803 j1807 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i416  <|@  <|@
f <@~|@floating>@ <|@
tid j1796 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1797 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1797 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483638] ⇈fffffffffffffffe
=== Inputs ===
x: j1710 
y: j1796 
=== Succesors ===
=== Usages ===
v1800 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1710 y: j1796  <|@  <|@
f <@~|@floating>@ <|@
tid j1428 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1795 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1822 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1821 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1210 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1790 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1721 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1722 
=== Predecessor ===
v1767 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B71" 
    successors "B44" "B71" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4596526835547090180
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1790 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1722 
values: j1210 j1795 
=== Succesors ===
=== Usages ===
v1943 j1795 v1942 j1946 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1722 values: j1210 j1795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1722 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1721 
=== Succesors ===
next: v1821 
=== Usages ===
j1790 v1725 v1726 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1721 #next: v1821  <|@  <|@
f <@~|@floating>@ <|@
tid v1943 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1769 
index: j1790 
=== Succesors ===
=== Usages ===
v1821 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1769 index: j1790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1821 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1943 
value: v1822 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1728 
=== Usages ===
=== Predecessor ===
v1722 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1943 value: v1822 stateAfter: - lastLocationAccess: - #next: v1728  <|@  <|@
f <@~|@floating>@ <|@
tid j1795 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1790 
y: j1428 
=== Succesors ===
=== Usages ===
v1804 j1790 v1800 j1777 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1790 y: j1428  <|@  <|@
f <@~|@floating>@ <|@
tid v1800 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1797 
y: j1795 
=== Succesors ===
=== Usages ===
v1728 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1797 y: j1795  <|@  <|@
f <@*|@fixed>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1800 
=== Succesors ===
trueSuccessor: v1725 
falseSuccessor: v1727 
=== Usages ===
=== Predecessor ===
v1821 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1800 #trueSuccessor: v1725 #falseSuccessor: v1727  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4587519636292349188
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1722 
=== Succesors ===
next: v1749 
=== Usages ===
=== Predecessor ===
v1728 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1722 #next: v1749  <|@  <|@
f <@~|@floating>@ <|@
tid j1802 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1803 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1803 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483642] ⇈fffffffffffffffe
=== Inputs ===
x: j1710 
y: j1802 
=== Succesors ===
=== Usages ===
v1804 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1710 y: j1802  <|@  <|@
f <@~|@floating>@ <|@
tid v1804 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1803 
y: j1795 
=== Succesors ===
=== Usages ===
v1749 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1803 y: j1795  <|@  <|@
f <@*|@fixed>@ <|@
tid v1749 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1804 
=== Succesors ===
trueSuccessor: v1748 
falseSuccessor: v1747 
=== Usages ===
=== Predecessor ===
v1725 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1804 #trueSuccessor: v1748 #falseSuccessor: v1747  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4578512437037608196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1748 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1752 
=== Usages ===
=== Predecessor ===
v1749 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1752  <|@  <|@
f <@*|@fixed>@ <|@
tid v1752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1741 
=== Predecessor ===
v1748 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4585679932478210499
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1747 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1820 
=== Usages ===
=== Predecessor ===
v1749 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1820  <|@  <|@
f <@~|@floating>@ <|@
tid v1942 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times4
stamp: void*
=== Inputs ===
base: j1769 
index: j1790 
=== Succesors ===
=== Usages ===
v1820 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1769 index: j1790  <|@  <|@
f <@~|@floating>@ <|@
tid v1825 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1820 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1820 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1942 
value: v1825 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1740 
=== Usages ===
=== Predecessor ===
v1747 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1942 value: v1825 stateAfter: - lastLocationAccess: - #next: v1740  <|@  <|@
f <@~|@floating>@ <|@
tid j1945 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 12
stableDimension: 0
stamp: i64 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i64
value: long[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1946 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1946 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1790 
y: j1945 
=== Succesors ===
=== Usages ===
j1777 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1790 y: j1945  <|@  <|@
f <@*|@fixed>@ <|@
tid v1740 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1741 
=== Predecessor ===
v1820 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4587519636292349188
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1777 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1741 
values: j1946 j1795 
=== Succesors ===
=== Usages ===
v1941 j1783 j1770 v1808 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1741 values: j1946 j1795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1741 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1740 v1752 
=== Succesors ===
next: v1755 
=== Usages ===
j1777 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1740 v1752 #next: v1755  <|@  <|@
f <@~|@floating>@ <|@
tid j1806 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1807 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1807 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483644] ⇈fffffffffffffffe
=== Inputs ===
x: j1710 
y: j1806 
=== Succesors ===
=== Usages ===
v1808 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1710 y: j1806  <|@  <|@
f <@~|@floating>@ <|@
tid v1808 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1807 
y: j1777 
=== Succesors ===
=== Usages ===
v1755 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1807 y: j1777  <|@  <|@
f <@*|@fixed>@ <|@
tid v1755 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1808 
=== Succesors ===
trueSuccessor: v1754 
falseSuccessor: v1753 
=== Usages ===
=== Predecessor ===
v1741 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1808 #trueSuccessor: v1754 #falseSuccessor: v1753  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4578512437037608196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1754 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1758 
=== Usages ===
=== Predecessor ===
v1755 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1758  <|@  <|@
f <@*|@fixed>@ <|@
tid v1758 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1744 
=== Predecessor ===
v1754 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4585679932478210499
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1753 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1818 
=== Usages ===
=== Predecessor ===
v1755 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1818  <|@  <|@
f <@~|@floating>@ <|@
tid v1941 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1769 
index: j1777 
=== Succesors ===
=== Usages ===
v1818 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1769 index: j1777  <|@  <|@
f <@~|@floating>@ <|@
tid v1824 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1818 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1818 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1941 
value: v1824 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1743 
=== Usages ===
=== Predecessor ===
v1753 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1941 value: v1824 stateAfter: - lastLocationAccess: - #next: v1743  <|@  <|@
f <@~|@floating>@ <|@
tid j1782 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1783 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1783 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1777 
y: j1782 
=== Succesors ===
=== Usages ===
j1770 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1777 y: j1782  <|@  <|@
f <@*|@fixed>@ <|@
tid v1743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1744 
=== Predecessor ===
v1818 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4587519636292349188
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1770 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1744 
values: j1783 j1777 
=== Succesors ===
=== Usages ===
v1940 v1811 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1744 values: j1783 j1777  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1743 v1758 
=== Succesors ===
next: v1761 
=== Usages ===
j1770 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1743 v1758 #next: v1761  <|@  <|@
f <@~|@floating>@ <|@
tid j1521 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1522 j1810 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1810 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483645] ⇊0000000000000001
=== Inputs ===
x: j1710 
y: j1521 
=== Succesors ===
=== Usages ===
v1811 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1710 y: j1521  <|@  <|@
f <@~|@floating>@ <|@
tid v1811 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1810 
y: j1770 
=== Succesors ===
=== Usages ===
v1761 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1810 y: j1770  <|@  <|@
f <@*|@fixed>@ <|@
tid v1761 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1811 
=== Succesors ===
trueSuccessor: v1760 
falseSuccessor: v1759 
=== Usages ===
=== Predecessor ===
v1744 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1811 #trueSuccessor: v1760 #falseSuccessor: v1759  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4578512437037608196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1764 
=== Usages ===
=== Predecessor ===
v1761 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1764  <|@  <|@
f <@*|@fixed>@ <|@
tid v1764 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1734 
=== Predecessor ===
v1760 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4585679932478210499
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1759 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1816 
=== Usages ===
=== Predecessor ===
v1761 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1816  <|@  <|@
f <@~|@floating>@ <|@
tid v1940 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1769 
index: j1770 
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1769 index: j1770  <|@  <|@
f <@~|@floating>@ <|@
tid a1823 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1816 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1940 
value: a1823 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1746 
=== Usages ===
=== Predecessor ===
v1759 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1940 value: a1823 stateAfter: - lastLocationAccess: - #next: v1746  <|@  <|@
f <@*|@fixed>@ <|@
tid v1746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1734 
=== Predecessor ===
v1816 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4587519636292349188
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1746 v1764 
=== Succesors ===
next: v1507 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1746 v1764 #next: v1507  <|@  <|@
f <@~|@floating>@ <|@
tid i1692 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1693 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1693 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
x: i412 
y: i1692 
=== Succesors ===
=== Usages ===
v1507 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i412 y: i1692  <|@  <|@
f <@*|@fixed>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1693 
=== Succesors ===
trueSuccessor: v1505 
falseSuccessor: v1506 
=== Usages ===
=== Predecessor ===
v1734 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1693 #trueSuccessor: v1505 #falseSuccessor: v1506  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4583016036664978692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1532 
=== Usages ===
=== Predecessor ===
v1507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1532  <|@  <|@
f <@*|@fixed>@ <|@
tid v1532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1531 
=== Predecessor ===
v1505 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4583016036664978692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1508 
=== Usages ===
=== Predecessor ===
v1507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1895 
=== Succesors ===
next: j1510 
=== Usages ===
j1509 
=== Predecessor ===
v1506 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1895 #next: j1510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1895 
=== Succesors ===
next: v1518 
=== Usages ===
j1514 
=== Predecessor ===
j1508 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1895 #next: v1518  <|@  <|@
f <@~|@floating>@ <|@
tid i1511 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i416 
y: i19 
=== Succesors ===
=== Usages ===
i1512 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i416 y: i19  <|@  <|@
f <@~|@floating>@ <|@
tid i1512 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483644 - 2147483644] ⇊0000000000000004 ⇈00000000fffffffc
=== Inputs ===
x: i1511 
y: i399 
=== Succesors ===
=== Usages ===
j1513 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1511 y: i399  <|@  <|@
f <@~|@floating>@ <|@
tid j1513 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
resultBits: 64
stamp: i64 [-2147483644 - 2147483644] ⇊0000000000000004 ⇈fffffffffffffffc
=== Inputs ===
value: i1512 
=== Succesors ===
=== Usages ===
j1514 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1512  <|@  <|@
f <@~|@floating>@ <|@
tid j1514 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
=== Inputs ===
x: j1510 
y: j1513 
=== Succesors ===
=== Usages ===
j1515 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1510 y: j1513  <|@  <|@
f <@~|@floating>@ <|@
tid j1515 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1514 
y: i401 
=== Succesors ===
=== Usages ===
j1516 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1514 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid j1509 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1508 
y: i401 
=== Succesors ===
=== Usages ===
j1516 j1530 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1508 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid j1516 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j1515 
y: j1509 
=== Succesors ===
=== Usages ===
j1517 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1515 y: j1509  <|@  <|@
f <@~|@floating>@ <|@
tid j1517 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j1516 
y: j1421 
=== Succesors ===
=== Usages ===
j1520 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1516 y: j1421  <|@  <|@
f <@*|@fixed>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1519 
=== Predecessor ===
j1510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B70" 
    successors "B57" "B70" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4587519636292349188
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1519 
values: j1517 j1522 
=== Succesors ===
=== Usages ===
j1522 v1523 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1519 values: j1517 j1522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1518 
=== Succesors ===
next: v1526 
=== Usages ===
j1520 v1524 v1529 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1518 #next: v1526  <|@  <|@
f <@~|@floating>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1520 
y: j1421 
=== Succesors ===
=== Usages ===
v1526 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1520 y: j1421  <|@  <|@
f <@*|@fixed>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1523 
=== Succesors ===
trueSuccessor: v1524 
falseSuccessor: v1525 
=== Usages ===
=== Predecessor ===
v1519 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1523 #trueSuccessor: v1524 #falseSuccessor: v1525  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4583016036664978692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1519 
=== Succesors ===
next: v1533 
=== Usages ===
=== Predecessor ===
v1526 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1519 #next: v1533  <|@  <|@
f <@*|@fixed>@ <|@
tid v1533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1531 
=== Predecessor ===
v1524 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B54" "B57" 
    successors "B59" "B62" 
    xhandlers
    flags 
    probability 4587519636292349188
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1532 v1533 
=== Succesors ===
next: a1297 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1532 v1533 #next: a1297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1473 
=== Succesors ===
next: j1535 
=== Usages ===
j1539 ?434 a966 
=== Predecessor ===
v1531 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1473 #next: j1535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
=== Inputs ===
object: a710 
=== Succesors ===
next: j1539 
=== Usages ===
v1911 
=== Predecessor ===
a1297 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a710 #next: j1539  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
=== Inputs ===
object: a1297 
=== Succesors ===
next: v1542 
=== Usages ===
v1912 
=== Predecessor ===
j1535 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1297 #next: v1542  <|@  <|@
f <@~|@floating>@ <|@
tid v1911 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1535 
index: - 
=== Succesors ===
=== Usages ===
v1542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1535 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1912 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1539 
index: - 
=== Succesors ===
=== Usages ===
v1542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1539 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1541 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1854 
=== Succesors ===
=== Usages ===
v1542 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1854  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1542 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:461) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1911 v1912 j1541 
=== Succesors ===
next: v967 
=== Usages ===
=== Predecessor ===
j1539 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1911 v1912 j1541 #next: v967  <|@  <|@
f <@~|@floating>@ <|@
tid a966 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Compress
stamp: n! -
=== Inputs ===
value: a1297 
=== Succesors ===
=== Usages ===
v967 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1878 
value: a966 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1543 
=== Usages ===
=== Predecessor ===
v1542 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1878 value: a966 stateAfter: - lastLocationAccess: - #next: j1543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v1547 
=== Usages ===
j1544 
=== Predecessor ===
v967 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v1547  <|@  <|@
f <@~|@floating>@ <|@
tid j1544 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1543 
y: i401 
=== Succesors ===
=== Usages ===
v1913 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1543 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid v1913 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1544 
index: j1440 
=== Succesors ===
=== Usages ===
v1547 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1544 index: j1440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:462) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1913 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
j1543 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1913 value: i1442 stateAfter: - lastLocationAccess: - #next: v426  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 62]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1854 
y: i212 
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1854 y: i212  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 62]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.9935336818373263
=== Inputs ===
condition: v423 
=== Succesors ===
trueSuccessor: v424 
falseSuccessor: v425 
=== Usages ===
=== Predecessor ===
v1547 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v423 #trueSuccessor: v424 #falseSuccessor: v425  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4587472051851599967
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v433  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 70]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i416 
y: i212 
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i416 y: i212  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 70]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.9931674230711686
=== Inputs ===
condition: v427 
=== Succesors ===
trueSuccessor: v432 
falseSuccessor: v431 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v427 #trueSuccessor: v432 #falseSuccessor: v431  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B63" 
    xhandlers
    flags 
    probability 4587422097304606533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v430  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
v432 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    probability 4555029805659360554
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 86]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v441 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v441  <|@  <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@4247bef2
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.createHash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1282 <|@
d <@d|@=== Debug Properties ===
bci: 87
code: ResolvedJavaMethodBytecode<EconomicMapImpl.grow()>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 466
stackSize: 0
=== Inputs ===
outerFrameState: ?445 
values: - - - - 
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?445 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
bci: 87
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:466) [bci: 87]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.createHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v971 
stateDuring: ?1282 
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v971 stateDuring: ?1282 #next: v448  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
v441 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B63" 
    xhandlers
    flags 
    probability 4554726432060101196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v428  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
v425 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B60" 
    successors "B64" "B68" 
    xhandlers
    flags 
    probability 4587469681745355754
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 73]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v428 v430 
=== Succesors ===
next: v1160 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v428 v430 #next: v1160  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1854 
y: i222 
=== Succesors ===
=== Usages ===
v1160 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1854 y: i222  <|@  <|@
f <@*|@fixed>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v435 
=== Succesors ===
trueSuccessor: v1157 
falseSuccessor: v1159 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v435 #trueSuccessor: v1157 #falseSuccessor: v1159  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B67" 
    xhandlers
    flags 
    probability 4587469681745355754
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1164 
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1164  <|@  <|@
f <@~|@floating>@ <|@
tid i437 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 131073
stableDimension: 0
stamp: i32 [131073] ⇊0000000000020001 ⇈0000000000020001
stampKind: i32
value: int[131073|0x20001]
=== Inputs ===
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i416 
y: i437 
=== Succesors ===
=== Usages ===
v1164 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i416 y: i437  <|@  <|@
f <@*|@fixed>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v438 
=== Succesors ===
trueSuccessor: v1161 
falseSuccessor: v1163 
=== Usages ===
=== Predecessor ===
v1157 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v438 #trueSuccessor: v1161 #falseSuccessor: v1163  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4587469681745355754
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v447 
=== Usages ===
=== Predecessor ===
v1164 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v447  <|@  <|@
f <@*|@fixed>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
v1161 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B61" 
    successors "B75" 
    xhandlers
    flags 
    probability 4587519636292349188
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v447 v448 
=== Succesors ===
next: i1855 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v447 v448 #next: i1855  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1855 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:425) [bci: 111]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1877 
=== Succesors ===
next: a1856 
=== Usages ===
i521 
=== Predecessor ===
v446 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1877 #next: a1856  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1856 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1878 
=== Succesors ===
next: v516 
=== Usages ===
a970 
=== Predecessor ===
i1855 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1878 #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid a970 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1856 
=== Succesors ===
=== Usages ===
a520 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1856  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
a1856 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 83]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1331 
=== Usages ===
=== Predecessor ===
v1164 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1331  <|@  <|@
f <@~|@floating>@ <|@
tid i1332 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -249107
stableDimension: 0
stamp: i32 [-249107] ⇊00000000fffc32ed ⇈00000000fffc32ed
stampKind: i32
value: int[-249107|0xfffffffffffc32ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
v1163 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:463) [bci: 76]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1326 
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1326  <|@  <|@
f <@~|@floating>@ <|@
tid i1327 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -248851
stableDimension: 0
stamp: i32 [-248851] ⇊00000000fffc33ed ⇈00000000fffc33ed
stampKind: i32
value: int[-248851|0xfffffffffffc33ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
v1159 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1328 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-249107 - -248851] ⇊00000000fffc32ed ⇈00000000fffc33ed
valueDescription: i32
=== Inputs ===
merge: v1325 
values: i1327 i1332 
=== Succesors ===
=== Usages ===
v1330 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1325 values: i1327 i1332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1326 v1331 
=== Succesors ===
next: v1330 
=== Usages ===
i1328 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1326 v1331 #next: v1330  <|@  <|@
tid ?434 <|@
d <@d|@=== Debug Properties ===
bci: 73
code: ResolvedJavaMethodBytecode<EconomicMapImpl.grow()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 463
stackSize: 0
=== Inputs ===
outerFrameState: ?445 
values: a1 i1854 - a1297 
=== Succesors ===
=== Usages ===
v1330 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?445 values: a1 i1854 - a1297  <|@  <|@
f <@*|@fixed>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?434 
actionAndReason: i1328 
speculation: a13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1325 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?434 actionAndReason: i1328 speculation: a13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B56" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4583016036664978692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1528 
=== Usages ===
=== Predecessor ===
v1526 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1528  <|@  <|@
f <@~|@floating>@ <|@
tid j1522 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
=== Inputs ===
x: j1520 
y: j1521 
=== Succesors ===
=== Usages ===
j1520 j1527 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1520 y: j1521  <|@  <|@
f <@~|@floating>@ <|@
tid j1530 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [4431593472 - 36028801450557439] ⇈00ffffffffffffff
=== Inputs ===
x: j1509 
y: j1440 
=== Succesors ===
=== Usages ===
j1527 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1509 y: j1440  <|@  <|@
f <@~|@floating>@ <|@
tid j1527 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
=== Inputs ===
x: j1522 
y: j1530 
=== Succesors ===
=== Usages ===
v1528 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1522 y: j1530  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
address: j1527 
value: i10 
=== Succesors ===
next: v1529 
=== Usages ===
=== Predecessor ===
v1525 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j1527 value: i10 #next: v1529  <|@  <|@
f <@*|@fixed>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:460) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v1519 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1528 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1519  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B43" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594687131732951491
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1726 
=== Usages ===
=== Predecessor ===
v1728 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1726  <|@  <|@
f <@*|@fixed>@ <|@
tid v1726 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1722 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1727 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1722  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:457) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:421) [bci: 79]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1323 
=== Usages ===
=== Predecessor ===
v1156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1323  <|@  <|@
f <@~|@floating>@ <|@
tid i1324 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -235539
stableDimension: 0
stamp: i32 [-235539] ⇊00000000fffc67ed ⇈00000000fffc67ed
stampKind: i32
value: int[-235539|0xfffffffffffc67ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1320 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1317 
=== Predecessor ===
v1155 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B35" "B72" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1320 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-244577 - -235539] ⇊00000000fffc448d ⇈00000000fffc67ff
valueDescription: i32
=== Inputs ===
merge: v1317 
values: i1319 i1324 
=== Succesors ===
=== Usages ===
v1322 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1317 values: i1319 i1324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1318 v1323 
=== Succesors ===
next: v1322 
=== Usages ===
i1320 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1318 v1323 #next: v1322  <|@  <|@
f <@*|@fixed>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?411 
actionAndReason: i1320 
speculation: a13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1317 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?411 actionAndReason: i1320 speculation: a13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B75" 
    xhandlers
    flags 
    probability 4604555315700889966
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 116]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v519 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v519  <|@  <|@
f <@*|@fixed>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B66" "B74" "B28" 
    successors "B76" "B106" 
    xhandlers
    flags 
    probability 4606362804580058824
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a520 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v517 
values: a970 a710 a1218 
=== Succesors ===
=== Usages ===
v1888 v1882 v1914 v1883 v1887 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v517 values: a970 a710 a1218  <|@  <|@
f <@~|@floating>@ <|@
tid i521 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v517 
values: i1855 i709 i709 
=== Succesors ===
=== Usages ===
i337 ?61 ?62 ?518 v906 ?69 v913 v874 v881 i67 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v517 values: i1855 i709 i709  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v516 v519 v574 
=== Succesors ===
next: v1857 
=== Usages ===
a520 i521 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v516 v519 v574 #next: v1857  <|@  <|@
tid ?518 <|@
d <@d|@=== Debug Properties ===
bci: 116
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 428
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: a1 a2 a2 - i521 - 
=== Succesors ===
=== Usages ===
v1338 v1857 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 a2 a2 - i521 -  <|@  <|@
f <@~|@floating>@ <|@
tid v1914 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a520 
index: - 
=== Succesors ===
=== Usages ===
v1857 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a520 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1857 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?518 
guard: - 
address: v1914 
=== Succesors ===
next: v1172 
=== Usages ===
v1694 
=== Predecessor ===
v517 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?518 guard: - address: v1914 #next: v1172  <|@  <|@
f <@~|@floating>@ <|@
tid v1694 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1857 
y: v1688 
=== Succesors ===
=== Usages ===
v1172 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1857 y: v1688  <|@  <|@
f <@*|@fixed>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1694 
=== Succesors ===
trueSuccessor: v1169 
falseSuccessor: v1171 
=== Usages ===
=== Predecessor ===
v1857 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1694 #trueSuccessor: v1169 #falseSuccessor: v1171  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B105" 
    xhandlers
    flags 
    probability 4606362804580058824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1858 
=== Usages ===
=== Predecessor ===
v1172 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1858  <|@  <|@
f <@~|@floating>@ <|@
tid v1887 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a520 
index: - 
=== Succesors ===
=== Usages ===
i1858 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a520 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1858 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1887 
=== Succesors ===
next: v1176 
=== Usages ===
v824 v700 v645 v885 v1828 v1829 
=== Predecessor ===
v1169 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1887 #next: v1176  <|@  <|@
f <@~|@floating>@ <|@
tid i337 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i521 
y: i9 
=== Succesors ===
=== Usages ===
i338 v1882 v824 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i521 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i337 
y: i1858 
=== Succesors ===
=== Usages ===
v1176 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i337 y: i1858  <|@  <|@
f <@*|@fixed>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v824 
=== Succesors ===
trueSuccessor: v1173 
falseSuccessor: v1175 
=== Usages ===
=== Predecessor ===
i1858 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v824 #trueSuccessor: v1173 #falseSuccessor: v1175  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B104" 
    xhandlers
    flags 
    probability 4606362804580058824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1180 
=== Usages ===
v832 
=== Predecessor ===
v1176 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1180  <|@  <|@
f <@~|@floating>@ <|@
tid i338 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i337 
y: i9 
=== Succesors ===
=== Usages ===
v885 v1888 v1883 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i337 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i338 
y: i1858 
=== Succesors ===
=== Usages ===
v1180 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i338 y: i1858  <|@  <|@
f <@*|@fixed>@ <|@
tid v1180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v885 
=== Succesors ===
trueSuccessor: v1177 
falseSuccessor: v1179 
=== Usages ===
=== Predecessor ===
v1173 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v885 #trueSuccessor: v1177 #falseSuccessor: v1179  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4606362804580058824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v832 
=== Usages ===
v859 a1859 v892 
=== Predecessor ===
v1180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v832  <|@  <|@
f <@~|@floating>@ <|@
tid v1882 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a520 
index: i337 
=== Succesors ===
=== Usages ===
v832 j1553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a520 index: i337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1173 
address: v1882 
value: a831 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1553 
=== Usages ===
=== Predecessor ===
v1177 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1173 address: v1882 value: a831 stateAfter: - lastLocationAccess: - #next: j1553  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1882 
=== Succesors ===
next: v1557 
=== Usages ===
j1554 
=== Predecessor ===
v832 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1882 #next: v1557  <|@  <|@
f <@~|@floating>@ <|@
tid j1554 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1553 
y: i401 
=== Succesors ===
=== Usages ===
v1915 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1553 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid v1915 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1554 
index: j1440 
=== Succesors ===
=== Usages ===
v1557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1554 index: j1440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1557 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1915 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1859 
=== Usages ===
=== Predecessor ===
j1553 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1915 value: i1442 stateAfter: - lastLocationAccess: - #next: a1859  <|@  <|@
f <@~|@floating>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a520 
index: i338 
=== Succesors ===
=== Usages ===
a1859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a520 index: i338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1859 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1177 
address: v1883 
=== Succesors ===
next: a1860 
=== Usages ===
v1916 v843 v1884 
=== Predecessor ===
v1557 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1177 address: v1883 #next: a1860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1860 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 141]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v1876 
=== Succesors ===
next: v1224 
=== Usages ===
v900 v1886 v1949 
=== Predecessor ===
a1859 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1876 #next: v1224  <|@  <|@
f <@~|@floating>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
value: a1860 
=== Succesors ===
=== Usages ===
v475 v76 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1860  <|@  <|@
f <@~|@floating>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
value: a1859 
=== Succesors ===
=== Usages ===
v1224 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1859  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 136]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32
=== Inputs ===
x: i521 
y: i9 
=== Succesors ===
=== Usages ===
v860 i693 v621 v893 i1833 v1835 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i521 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v1888 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a520 
index: i338 
=== Succesors ===
=== Usages ===
v892 v859 j1607 j1614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a520 index: i338  <|@  <|@
f <@~|@floating>@ <|@
tid i241 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:450) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1826 i1838 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v843 
=== Succesors ===
trueSuccessor: v1223 
falseSuccessor: v1222 
=== Usages ===
=== Predecessor ===
a1860 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v843 #trueSuccessor: v1223 #falseSuccessor: v1222  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B94" 
    xhandlers
    flags 
    probability 4591214488690990853
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1232 
=== Usages ===
=== Predecessor ===
v1224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1232  <|@  <|@
f <@*|@fixed>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1369 
=== Predecessor ===
v1223 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B93" 
    xhandlers
    flags 
    probability 4605544046076580583
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1861 
=== Usages ===
=== Predecessor ===
v1224 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1861  <|@  <|@
f <@~|@floating>@ <|@
tid v1916 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1859 
=== Succesors ===
=== Usages ===
v1861 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1859  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1861 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1916 
=== Succesors ===
next: v1374 
=== Usages ===
v1696 
=== Predecessor ===
v1222 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1916 #next: v1374  <|@  <|@
f <@~|@floating>@ <|@
tid v1696 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1861 
y: v1695 
=== Succesors ===
=== Usages ===
v1374 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1861 y: v1695  <|@  <|@
f <@*|@fixed>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.024358063304259714
=== Inputs ===
condition: v1696 
=== Succesors ===
trueSuccessor: v1372 
falseSuccessor: v1371 
=== Usages ===
=== Predecessor ===
v1861 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1696 #trueSuccessor: v1372 #falseSuccessor: v1371  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4581400912388507630
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1564 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1564 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1579 
=== Usages ===
v1917 v1918 
=== Predecessor ===
v1372 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1579  <|@  <|@
f <@~|@floating>@ <|@
tid v1917 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1564 
index: - 
=== Succesors ===
=== Usages ===
j1579 v1581 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1579 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1917 
=== Succesors ===
next: j1580 
=== Usages ===
j1697 j1585 v1934 
=== Predecessor ===
j1564 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1917 #next: j1580  <|@  <|@
f <@~|@floating>@ <|@
tid v1918 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1564 
index: - 
=== Succesors ===
=== Usages ===
j1580 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1580 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1918 
=== Succesors ===
next: v1572 
=== Usages ===
v1569 
=== Predecessor ===
j1579 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1918 #next: v1572  <|@  <|@
f <@~|@floating>@ <|@
tid j1697 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1579 
y: j781 
=== Succesors ===
=== Usages ===
v1569 v1581 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1579 y: j781  <|@  <|@
f <@~|@floating>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1580 
y: j1697 
=== Succesors ===
=== Usages ===
v1572 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1580 y: j1697  <|@  <|@
f <@*|@fixed>@ <|@
tid v1572 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1569 
=== Succesors ===
trueSuccessor: v1570 
falseSuccessor: v1571 
=== Usages ===
=== Predecessor ===
j1580 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1569 #trueSuccessor: v1570 #falseSuccessor: v1571  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" 
    xhandlers
    flags 
    probability 4551483948471337599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1575 
=== Usages ===
=== Predecessor ===
v1572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1575  <|@  <|@
tid ?61 <|@
d <@d|@=== Debug Properties ===
bci: 120
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 428
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: a1 a2 a2 - i521 - 
=== Succesors ===
=== Usages ===
?62 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 a2 a2 - i521 -  <|@  <|@
tid ?62 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setKey(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 778
stackSize: 0
=== Inputs ===
outerFrameState: ?61 
values: a1 i521 a2 
=== Succesors ===
=== Usages ===
a1575 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?61 values: a1 i521 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1575 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?62 
arguments: v1388 i399 i9 
=== Succesors ===
next: j1576 
=== Usages ===
j1576 
=== Predecessor ===
v1570 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?62 arguments: v1388 i399 i9 #next: j1576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1576 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1575 
=== Succesors ===
next: v1586 
=== Usages ===
j1585 
=== Predecessor ===
a1575 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1575 #next: v1586  <|@  <|@
f <@*|@fixed>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1583 
=== Predecessor ===
j1576 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" 
    xhandlers
    flags 
    probability 4581343475478706793
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1581 
=== Usages ===
=== Predecessor ===
v1572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1581  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1581 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1917 
value: j1697 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1578 
=== Usages ===
=== Predecessor ===
v1571 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1917 value: j1697 stateAfter: - lastLocationAccess: - #next: v1578  <|@  <|@
f <@~|@floating>@ <|@
tid v1934 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1579 
index: - 
=== Succesors ===
=== Usages ===
v1578 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1579 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1934 
=== Succesors ===
next: v1584 
=== Usages ===
=== Predecessor ===
v1581 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1934 #next: v1584  <|@  <|@
f <@*|@fixed>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1583 
=== Predecessor ===
v1578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B82" 
    successors "B85" "B88" 
    xhandlers
    flags 
    probability 4581400912388507630
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1585 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1583 
values: j1579 j1576 
=== Succesors ===
=== Usages ===
v1920 v1919 a1240 v1935 v1936 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1583 values: j1579 j1576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1584 v1586 
=== Succesors ===
next: a1240 
=== Usages ===
j1585 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1584 v1586 #next: a1240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1240 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1585 
=== Succesors ===
next: j1596 
=== Usages ===
a1245 
=== Predecessor ===
v1583 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1585 #next: j1596  <|@  <|@
f <@~|@floating>@ <|@
tid j1843 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1220 
=== Succesors ===
=== Usages ===
v1944 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1220  <|@  <|@
f <@~|@floating>@ <|@
tid v1944 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1843 
index: - 
=== Succesors ===
=== Usages ===
j1596 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1596 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1944 
=== Succesors ===
next: v1597 
=== Usages ===
v1597 
=== Predecessor ===
a1240 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1944 #next: v1597  <|@  <|@
f <@~|@floating>@ <|@
tid v1919 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1585 
index: - 
=== Succesors ===
=== Usages ===
v1597 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1585 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1597 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1919 
value: j1596 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1600 
=== Usages ===
=== Predecessor ===
j1596 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1919 value: j1596 stateAfter: - lastLocationAccess: - #next: v1600  <|@  <|@
f <@~|@floating>@ <|@
tid v1920 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1585 
index: - 
=== Succesors ===
=== Usages ===
v1600 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1585 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1920 
value: v1695 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1862 
=== Usages ===
=== Predecessor ===
v1597 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1920 value: v1695 stateAfter: - lastLocationAccess: - #next: i1862  <|@  <|@
f <@~|@floating>@ <|@
tid v1884 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1859 
=== Succesors ===
=== Usages ===
i1862 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1859  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1862 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1884 
=== Succesors ===
next: v1604 
=== Usages ===
v1604 
=== Predecessor ===
v1600 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1884 #next: v1604  <|@  <|@
f <@~|@floating>@ <|@
tid v1935 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1585 
index: - 
=== Succesors ===
=== Usages ===
v1604 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1585 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1935 
value: i1862 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1606 
=== Usages ===
=== Predecessor ===
i1862 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1935 value: i1862 stateAfter: - lastLocationAccess: - #next: v1606  <|@  <|@
f <@~|@floating>@ <|@
tid v1936 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1585 
index: - 
=== Succesors ===
=== Usages ===
v1606 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1585 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1936 
value: a831 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1245 
=== Usages ===
=== Predecessor ===
v1604 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1936 value: a831 stateAfter: - lastLocationAccess: - #next: a1245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1245 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1240 
=== Succesors ===
next: v1246 
=== Usages ===
a858 
=== Predecessor ===
v1606 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1240 #next: v1246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v859 
=== Usages ===
=== Predecessor ===
a1245 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v859  <|@  <|@
f <@~|@floating>@ <|@
tid a858 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Compress
stamp: n -
=== Inputs ===
value: a1245 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1245  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1177 
address: v1888 
value: a858 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1607 
=== Usages ===
=== Predecessor ===
v1246 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1177 address: v1888 value: a858 stateAfter: - lastLocationAccess: - #next: j1607  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1888 
=== Succesors ===
next: v1611 
=== Usages ===
j1608 
=== Predecessor ===
v859 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1888 #next: v1611  <|@  <|@
f <@~|@floating>@ <|@
tid j1608 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1607 
y: i401 
=== Succesors ===
=== Usages ===
v1921 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1607 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid v1921 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1608 
index: j1440 
=== Succesors ===
=== Usages ===
v1611 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1608 index: j1440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1611 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1921 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v860 
=== Usages ===
=== Predecessor ===
j1607 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1921 value: i1442 stateAfter: - lastLocationAccess: - #next: v860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 137]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1877 
value: i67 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v1611 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1877 value: i67 stateAfter: - lastLocationAccess: - #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 144]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.484117016631604
=== Inputs ===
condition: v900 
=== Succesors ===
trueSuccessor: v74 
falseSuccessor: v75 
=== Usages ===
=== Predecessor ===
v860 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v900 #trueSuccessor: v74 #falseSuccessor: v75  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4576714858864517383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 184]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1863 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1863 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1881 
=== Succesors ===
next: v100 
=== Usages ===
v1837 v1839 
=== Predecessor ===
v74 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1881 #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v1837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
value: a1863 
=== Succesors ===
=== Usages ===
i1836 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1863  <|@  <|@
f <@~|@floating>@ <|@
tid v1839 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1863 
y: a1049 
=== Succesors ===
=== Usages ===
i1838 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1863 y: a1049  <|@  <|@
f <@~|@floating>@ <|@
tid i1838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1839 
trueValue: i37 
falseValue: i241 
=== Succesors ===
=== Usages ===
i1836 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1839 trueValue: i37 falseValue: i241  <|@  <|@
f <@~|@floating>@ <|@
tid i1836 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1837 
trueValue: i37 
falseValue: i1838 
=== Succesors ===
=== Usages ===
v1835 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1837 trueValue: i37 falseValue: i1838  <|@  <|@
f <@~|@floating>@ <|@
tid v1835 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1836 
y: i67 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1836 y: i67  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.04425620390320373
=== Inputs ===
condition: v1835 
=== Succesors ===
trueSuccessor: v98 
falseSuccessor: v99 
=== Usages ===
=== Predecessor ===
a1863 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1835 #trueSuccessor: v98 #falseSuccessor: v99  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B120" 
    xhandlers
    flags 
    probability 4556511439398435785
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 195]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@3ea951ac
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.createHash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1285 <|@
d <@d|@=== Debug Properties ===
bci: 196
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 437
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
bci: 196
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.createHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v865 
stateDuring: ?1285 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v865 stateDuring: ?1285 #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors 
    xhandlers
    flags 
    probability 4576468739622197545
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v565  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 14]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4577079766657756885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 147]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1864 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1864  <|@  <|@
f <@~|@floating>@ <|@
tid v1886 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1860 
=== Succesors ===
=== Usages ===
i1864 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1864 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1886 
=== Succesors ===
next: i1865 
=== Usages ===
i227 v654 
=== Predecessor ===
v75 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1886 #next: i1865  <|@  <|@
f <@~|@floating>@ <|@
tid v1950 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1865 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1865 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 152]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1950 
=== Succesors ===
next: v216 
=== Usages ===
i1833 
=== Predecessor ===
i1864 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1950 #next: v216  <|@  <|@
f <@~|@floating>@ <|@
tid i1833 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 156]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32
=== Inputs ===
x: i67 
y: i1865 
=== Succesors ===
=== Usages ===
i1831 i1832 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i67 y: i1865  <|@  <|@
f <@~|@floating>@ <|@
tid i1832 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$116/2011436689@f852abe
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 160]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i1833 
y: i9 
=== Succesors ===
=== Usages ===
i1831 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i1833 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i1831 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 161]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32
=== Inputs ===
x: i1832 
y: i1833 
=== Succesors ===
=== Usages ===
v654 v88 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1832 y: i1833  <|@  <|@
f <@~|@floating>@ <|@
tid v1829 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1858 
y: i212 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1858 y: i212  <|@  <|@
f <@*|@fixed>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.816586191655617
=== Inputs ===
condition: v1829 
=== Succesors ===
trueSuccessor: v214 
falseSuccessor: v215 
=== Usages ===
=== Predecessor ===
i1865 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1829 #trueSuccessor: v214 #falseSuccessor: v215  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors 
    xhandlers
    flags 
    probability 4575992829857120152
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v657 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v657  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1864 
y: i1831 
=== Succesors ===
=== Usages ===
i655 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1864 y: i1831  <|@  <|@
f <@~|@floating>@ <|@
tid i655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v654 
trueValue: i9 
falseValue: i10 
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v654 trueValue: i9 falseValue: i10  <|@  <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@474d9ef8
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a2 i521 i655 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i521 i655  <|@  <|@
tid ?1287 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v874 
stateDuring: ?1287 
=== Succesors ===
next: v658 
=== Usages ===
=== Predecessor ===
v214 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v874 stateDuring: ?1287 #next: v658  <|@  <|@
f <@*|@fixed>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 14]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4566338317304035817
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1188 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1188  <|@  <|@
f <@~|@floating>@ <|@
tid v1828 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1858 
y: i222 
=== Succesors ===
=== Usages ===
v1188 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1858 y: i222  <|@  <|@
f <@*|@fixed>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1828 
=== Succesors ===
trueSuccessor: v1185 
falseSuccessor: v1187 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1828 #trueSuccessor: v1185 #falseSuccessor: v1187  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors 
    xhandlers
    flags 
    probability 4566338317304035817
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v91 
=== Usages ===
=== Predecessor ===
v1188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v91  <|@  <|@
f <@~|@floating>@ <|@
tid i227 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i1864 
y: i9 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1864 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i227 
y: i1831 
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i227 y: i1831  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v88 
trueValue: i9 
falseValue: i10 
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v88 trueValue: i9 falseValue: i10  <|@  <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@6e2ee386
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a2 i521 i89 
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i521 i89  <|@  <|@
tid ?1288 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v881 
stateDuring: ?1288 
=== Succesors ===
next: v544 
=== Usages ===
=== Predecessor ===
v1185 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v881 stateDuring: ?1288 #next: v544  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 14]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1305 
=== Usages ===
=== Predecessor ===
v1188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1305  <|@  <|@
f <@~|@floating>@ <|@
tid i1306 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -224019
stableDimension: 0
stamp: i32 [-224019] ⇊00000000fffc94ed ⇈00000000fffc94ed
stampKind: i32
value: int[-224019|0xfffffffffffc94ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1302 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1299 
=== Predecessor ===
v1187 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B94" 
    xhandlers
    flags 
    probability 4605364555733452968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1375 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1375  <|@  <|@
f <@*|@fixed>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1369 
=== Predecessor ===
v1371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B79" "B93" 
    successors "B95" "B98" 
    xhandlers
    flags 
    probability 4606183314236931209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:782) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1232 v1375 
=== Succesors ===
next: v892 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1232 v1375 #next: v892  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1177 
address: v1888 
value: a831 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1614 
=== Usages ===
=== Predecessor ===
v1369 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1177 address: v1888 value: a831 stateAfter: - lastLocationAccess: - #next: j1614  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1888 
=== Succesors ===
next: v1618 
=== Usages ===
j1615 
=== Predecessor ===
v892 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1888 #next: v1618  <|@  <|@
f <@~|@floating>@ <|@
tid j1615 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1614 
y: i401 
=== Succesors ===
=== Usages ===
v1922 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1614 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid v1922 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1615 
index: j1440 
=== Succesors ===
=== Usages ===
v1618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1615 index: j1440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1922 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v893 
=== Usages ===
=== Predecessor ===
j1614 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1922 value: i1442 stateAfter: - lastLocationAccess: - #next: v893  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 137]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1877 
value: i67 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v1618 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1877 value: i67 stateAfter: - lastLocationAccess: - #next: v475  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:432) [bci: 144]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.484117016631604
=== Inputs ===
condition: v900 
=== Succesors ===
trueSuccessor: v473 
falseSuccessor: v474 
=== Usages ===
=== Predecessor ===
v893 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v900 #trueSuccessor: v473 #falseSuccessor: v474  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B97" 
    xhandlers
    flags 
    probability 4601425329739960526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 184]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1866 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1866 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1881 
=== Succesors ===
next: v624 
=== Usages ===
v1059 v1060 
=== Predecessor ===
v473 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1881 #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
value: a1866 
=== Succesors ===
=== Usages ===
i1827 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1866  <|@  <|@
f <@~|@floating>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1866 
y: a1049 
=== Succesors ===
=== Usages ===
i1826 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a1866 y: a1049  <|@  <|@
f <@~|@floating>@ <|@
tid i1826 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1060 
trueValue: i37 
falseValue: i241 
=== Succesors ===
=== Usages ===
i1827 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1060 trueValue: i37 falseValue: i241  <|@  <|@
f <@~|@floating>@ <|@
tid i1827 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 189]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1059 
trueValue: i37 
falseValue: i1826 
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1059 trueValue: i37 falseValue: i1826  <|@  <|@
f <@~|@floating>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1827 
y: i67 
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1827 y: i67  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:436) [bci: 192]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.04425620390320373
=== Inputs ===
condition: v621 
=== Succesors ===
trueSuccessor: v622 
falseSuccessor: v623 
=== Usages ===
=== Predecessor ===
a1866 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v621 #trueSuccessor: v622 #falseSuccessor: v623  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 4581147617614681890
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 195]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v625 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v625  <|@  <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@11e1609f
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.createHash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1283 <|@
d <@d|@=== Debug Properties ===
bci: 196
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 437
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
bci: 196
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:437) [bci: 196]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.createHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v898 
stateDuring: ?1283 
=== Succesors ===
next: v728 
=== Usages ===
=== Predecessor ===
v622 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v898 stateDuring: ?1283 #next: v728  <|@  <|@
f <@*|@fixed>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 14]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors 
    xhandlers
    flags 
    probability 4601082179977069404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:440) [bci: 199]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v631  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 14]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4601934099479160900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 147]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1867 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1867  <|@  <|@
f <@~|@floating>@ <|@
tid v1949 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1860 
=== Succesors ===
=== Usages ===
i1867 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1867 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1949 
=== Succesors ===
next: i1868 
=== Usages ===
i703 v686 
=== Predecessor ===
v474 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1949 #next: i1868  <|@  <|@
f <@~|@floating>@ <|@
tid v1885 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1868 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1868 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 152]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1885 
=== Succesors ===
next: v648 
=== Usages ===
i693 
=== Predecessor ===
i1867 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1885 #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid i693 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 156]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32
=== Inputs ===
x: i67 
y: i1868 
=== Succesors ===
=== Usages ===
i694 i695 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i67 y: i1868  <|@  <|@
f <@~|@floating>@ <|@
tid i694 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$116/2011436689@f852abe
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 160]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i693 
y: i9 
=== Succesors ===
=== Usages ===
i695 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i693 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i695 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 161]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32
=== Inputs ===
x: i693 
y: i694 
=== Succesors ===
=== Usages ===
v696 v686 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i693 y: i694  <|@  <|@
f <@~|@floating>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1858 
y: i212 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1858 y: i212  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.816586191655617
=== Inputs ===
condition: v645 
=== Succesors ===
trueSuccessor: v646 
falseSuccessor: v647 
=== Usages ===
=== Predecessor ===
i1868 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v645 #trueSuccessor: v646 #falseSuccessor: v647  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors 
    xhandlers
    flags 
    probability 4600418646636463497
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@~|@floating>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1867 
y: i695 
=== Succesors ===
=== Usages ===
i687 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1867 y: i695  <|@  <|@
f <@~|@floating>@ <|@
tid i687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v686 
trueValue: i9 
falseValue: i10 
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v686 trueValue: i9 falseValue: i10  <|@  <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@65b1673e
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a2 i521 i687 
=== Succesors ===
=== Usages ===
v689 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i521 i687  <|@  <|@
tid ?1284 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v689 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v906 
stateDuring: ?1284 
=== Succesors ===
next: v690 
=== Usages ===
=== Predecessor ===
v646 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v906 stateDuring: ?1284 #next: v690  <|@  <|@
f <@*|@fixed>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 14]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v689 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4590726232033954540
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1192 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1192  <|@  <|@
f <@~|@floating>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1858 
y: i222 
=== Succesors ===
=== Usages ===
v1192 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1858 y: i222  <|@  <|@
f <@*|@fixed>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v700 
=== Succesors ===
trueSuccessor: v1189 
falseSuccessor: v1191 
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v700 #trueSuccessor: v1189 #falseSuccessor: v1191  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors 
    xhandlers
    flags 
    probability 4590726232033954540
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v699 
=== Usages ===
=== Predecessor ===
v1192 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v699  <|@  <|@
f <@~|@floating>@ <|@
tid i703 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i1867 
y: i9 
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1867 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i703 
y: i695 
=== Succesors ===
=== Usages ===
i697 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i703 y: i695  <|@  <|@
f <@~|@floating>@ <|@
tid i697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v696 
trueValue: i9 
falseValue: i10 
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v696 trueValue: i9 falseValue: i10  <|@  <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@4ea09f2e
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.putHashEntry(Object, int, boolean)>
=== Inputs ===
arguments: a1 a2 i521 i697 
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2 i521 i697  <|@  <|@
tid ?1286 <|@
d <@d|@=== Debug Properties ===
bci: 178
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 435
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: - - - - - - 
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
bci: 178
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:435) [bci: 178]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.putHashEntry
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v913 
stateDuring: ?1286 
=== Succesors ===
next: v704 
=== Usages ===
=== Predecessor ===
v1189 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v913 stateDuring: ?1286 #next: v704  <|@  <|@
f <@*|@fixed>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 14]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:434) [bci: 148]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1300 
=== Usages ===
=== Predecessor ===
v1192 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1300  <|@  <|@
f <@~|@floating>@ <|@
tid i1301 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -232211
stableDimension: 0
stamp: i32 [-232211] ⇊00000000fffc74ed ⇈00000000fffc74ed
stampKind: i32
value: int[-232211|0xfffffffffffc74ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1302 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1300 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1299 
=== Predecessor ===
v1191 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B92" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1302 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-232211 - -224019] ⇊00000000fffc14ed ⇈00000000fffcf4ed
valueDescription: i32
=== Inputs ===
merge: v1299 
values: i1301 i1306 
=== Succesors ===
=== Usages ===
v1304 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1299 values: i1301 i1306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1300 v1305 
=== Succesors ===
next: v1304 
=== Usages ===
i1302 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1300 v1305 #next: v1304  <|@  <|@
tid ?69 <|@
d <@d|@=== Debug Properties ===
bci: 140
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:430) [bci: 137]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 432
stackSize: 0
=== Inputs ===
outerFrameState: ?107 
values: a1 a2 - - i521 - 
=== Succesors ===
=== Usages ===
v1304 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 a2 - - i521 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?69 
actionAndReason: i1302 
speculation: a13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1299 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?69 actionAndReason: i1302 speculation: a13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:429) [bci: 127]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1344 
=== Usages ===
=== Predecessor ===
v1180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1344  <|@  <|@
f <@~|@floating>@ <|@
tid i1345 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -213787
stableDimension: 0
stamp: i32 [-213787] ⇊00000000fffcbce5 ⇈00000000fffcbce5
stampKind: i32
value: int[-213787|0xfffffffffffcbce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1336 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1333 
=== Predecessor ===
v1179 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:428) [bci: 120]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1342 
=== Usages ===
=== Predecessor ===
v1176 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1342  <|@  <|@
f <@~|@floating>@ <|@
tid i1343 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -211227
stableDimension: 0
stamp: i32 [-211227] ⇊00000000fffcc6e5 ⇈00000000fffcc6e5
stampKind: i32
value: int[-211227|0xfffffffffffcc6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1336 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1333 
=== Predecessor ===
v1175 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1339 
=== Usages ===
=== Predecessor ===
v1172 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1339  <|@  <|@
f <@~|@floating>@ <|@
tid a1341 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@709267404
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@709267404]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1340 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -210236
stableDimension: 0
stamp: i32 [-210236] ⇊00000000fffccac4 ⇈00000000fffccac4
stampKind: i32
value: int[-210236|0xfffffffffffccac4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1336 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1333 
=== Predecessor ===
v1171 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" "B105" "B104" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1336 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-213787 - -209931] ⇊00000000fffc80c4 ⇈00000000fffcfff5
valueDescription: i32
=== Inputs ===
merge: v1333 
values: i1340 i1343 i1345 
=== Succesors ===
=== Usages ===
v1338 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1333 values: i1340 i1343 i1345  <|@  <|@
f <@~|@floating>@ <|@
tid a1337 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v1333 
values: a1341 a13 a13 
=== Succesors ===
=== Usages ===
v1338 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1333 values: a1341 a13 a13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1339 v1342 v1344 
=== Succesors ===
next: v1338 
=== Usages ===
i1336 a1337 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1339 v1342 v1344 #next: v1338  <|@  <|@
f <@*|@fixed>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?518 
actionAndReason: i1336 
speculation: a1337 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1333 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?518 actionAndReason: i1336 speculation: a1337  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B109" 
    xhandlers
    flags 
    probability 4592377698484418052
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 25]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid i455 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i122 
y: i9 
=== Succesors ===
=== Usages ===
i1289 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i122 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
v559 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B19" "B108" 
    successors "B110" "B122" 
    xhandlers
    flags 
    probability 4594201059935926305
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i554 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v549 
values: i255 i122 
=== Succesors ===
=== Usages ===
?551 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v549 values: i255 i122  <|@  <|@
f <@~|@floating>@ <|@
tid i1289 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
valueDescription: i32
=== Inputs ===
merge: v549 
values: i456 i455 
=== Succesors ===
=== Usages ===
i1290 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v549 values: i456 i455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v550 v552 
=== Succesors ===
next: a1869 
=== Usages ===
i554 i1289 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v550 v552 #next: a1869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1869 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1878 
=== Succesors ===
next: v1870 
=== Usages ===
a975 v1923 v1890 
=== Predecessor ===
v549 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1878 #next: v1870  <|@  <|@
tid ?551 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<EconomicMapImpl.put(Object, Object)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:410) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 1
=== Inputs ===
outerFrameState: ?107 
values: a1 a2 a2 - - - i554 
=== Succesors ===
=== Usages ===
v1351 a1638 v1870 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?107 values: a1 a2 a2 - - - i554  <|@  <|@
f <@~|@floating>@ <|@
tid v1923 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1869 
=== Succesors ===
=== Usages ===
v1870 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1870 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?551 
guard: - 
address: v1923 
=== Succesors ===
next: v1200 
=== Usages ===
v1702 
=== Predecessor ===
a1869 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?551 guard: - address: v1923 #next: v1200  <|@  <|@
f <@~|@floating>@ <|@
tid v1702 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1870 
y: v1688 
=== Succesors ===
=== Usages ===
v1200 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1870 y: v1688  <|@  <|@
f <@*|@fixed>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1702 
=== Succesors ===
trueSuccessor: v1197 
falseSuccessor: v1199 
=== Usages ===
=== Predecessor ===
v1870 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1702 #trueSuccessor: v1197 #falseSuccessor: v1199  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B121" 
    xhandlers
    flags 
    probability 4594201059935926305
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i1871 
=== Usages ===
=== Predecessor ===
v1200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1871  <|@  <|@
f <@~|@floating>@ <|@
tid v1890 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1869 
=== Succesors ===
=== Usages ===
i1871 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1871 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1890 
=== Succesors ===
next: v1204 
=== Usages ===
v1007 
=== Predecessor ===
v1197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1890 #next: v1204  <|@  <|@
f <@~|@floating>@ <|@
tid i1290 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i1289 
y: i9 
=== Succesors ===
=== Usages ===
v1007 v1894 v1891 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1289 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:781) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1290 
y: i1871 
=== Succesors ===
=== Usages ===
v1204 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1290 y: i1871  <|@  <|@
f <@*|@fixed>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1007 
=== Succesors ===
trueSuccessor: v1201 
falseSuccessor: v1203 
=== Usages ===
=== Predecessor ===
i1871 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1007 #trueSuccessor: v1201 #falseSuccessor: v1203  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4594201059935926305
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1872 
=== Usages ===
v1033 a1872 v1045 
=== Predecessor ===
v1204 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1872  <|@  <|@
f <@~|@floating>@ <|@
tid a975 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a1869 
=== Succesors ===
=== Usages ===
v1891 v1894 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1869  <|@  <|@
f <@~|@floating>@ <|@
tid v1891 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a975 
index: i1290 
=== Succesors ===
=== Usages ===
a1872 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a975 index: i1290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1872 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1201 
address: v1891 
=== Succesors ===
next: v1250 
=== Usages ===
a989 v990 v1892 v1893 v1924 
=== Predecessor ===
v1201 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1201 address: v1891 #next: v1250  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
value: a1872 
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1872  <|@  <|@
f <@~|@floating>@ <|@
tid v1894 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a975 
index: i1290 
=== Succesors ===
=== Usages ===
v1045 v1033 j1669 j1676 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a975 index: i1290  <|@  <|@
f <@*|@fixed>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v990 
=== Succesors ===
trueSuccessor: v1249 
falseSuccessor: v1248 
=== Usages ===
=== Predecessor ===
a1872 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v990 #trueSuccessor: v1249 #falseSuccessor: v1248  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B119" 
    xhandlers
    flags 
    probability 4579206485213678848
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1258 
=== Usages ===
=== Predecessor ===
v1250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1258  <|@  <|@
f <@*|@fixed>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1359 
=== Predecessor ===
v1249 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B118" 
    xhandlers
    flags 
    probability 4593697755971387217
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1873 
=== Usages ===
=== Predecessor ===
v1250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1873  <|@  <|@
f <@~|@floating>@ <|@
tid v1924 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1872 
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1873 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1924 
=== Succesors ===
next: v1364 
=== Usages ===
v1703 
=== Predecessor ===
v1248 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1924 #next: v1364  <|@  <|@
f <@~|@floating>@ <|@
tid v1703 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1873 
y: v1695 
=== Succesors ===
=== Usages ===
v1364 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1873 y: v1695  <|@  <|@
f <@*|@fixed>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
trueSuccessorProbability: 0.07634483510838552
=== Inputs ===
condition: v1703 
=== Succesors ===
trueSuccessor: v1362 
falseSuccessor: v1361 
=== Usages ===
=== Predecessor ===
v1873 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1703 #trueSuccessor: v1362 #falseSuccessor: v1361  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4576686772559280649
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1627 
=== Usages ===
=== Predecessor ===
v1364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1627 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1642 
=== Usages ===
v1925 v1926 
=== Predecessor ===
v1362 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1642  <|@  <|@
f <@~|@floating>@ <|@
tid v1925 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1627 
index: - 
=== Succesors ===
=== Usages ===
j1642 v1644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1627 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1642 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1925 
=== Succesors ===
next: j1643 
=== Usages ===
j1704 j1648 v1937 
=== Predecessor ===
j1627 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1925 #next: j1643  <|@  <|@
f <@~|@floating>@ <|@
tid v1926 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1627 
index: - 
=== Succesors ===
=== Usages ===
j1643 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1627 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1643 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1926 
=== Succesors ===
next: v1635 
=== Usages ===
v1632 
=== Predecessor ===
j1642 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1926 #next: v1635  <|@  <|@
f <@~|@floating>@ <|@
tid j1704 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1642 
y: j781 
=== Succesors ===
=== Usages ===
v1632 v1644 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1642 y: j781  <|@  <|@
f <@~|@floating>@ <|@
tid v1632 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1643 
y: j1704 
=== Succesors ===
=== Usages ===
v1635 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1643 y: j1704  <|@  <|@
f <@*|@fixed>@ <|@
tid v1635 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1632 
=== Succesors ===
trueSuccessor: v1633 
falseSuccessor: v1634 
=== Usages ===
=== Predecessor ===
j1643 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1632 #trueSuccessor: v1633 #falseSuccessor: v1634  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4546710857385590802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1638 
=== Usages ===
=== Predecessor ===
v1635 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1638 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?551 
arguments: v1388 i399 i9 
=== Succesors ===
next: j1639 
=== Usages ===
j1639 
=== Predecessor ===
v1633 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?551 arguments: v1388 i399 i9 #next: j1639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1639 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1638 
=== Succesors ===
next: v1649 
=== Usages ===
j1648 
=== Predecessor ===
a1638 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1638 #next: v1649  <|@  <|@
f <@*|@fixed>@ <|@
tid v1649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1646 
=== Predecessor ===
j1639 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4576631441051498377
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1634 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1644 
=== Usages ===
=== Predecessor ===
v1635 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1644  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1644 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1925 
value: j1704 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1641 
=== Usages ===
=== Predecessor ===
v1634 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1925 value: j1704 stateAfter: - lastLocationAccess: - #next: v1641  <|@  <|@
f <@~|@floating>@ <|@
tid v1937 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1642 
index: - 
=== Succesors ===
=== Usages ===
v1641 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1642 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1641 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1937 
=== Succesors ===
next: v1647 
=== Usages ===
=== Predecessor ===
v1644 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1937 #next: v1647  <|@  <|@
f <@*|@fixed>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1646 
=== Predecessor ===
v1641 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" "B115" 
    successors "B120" 
    xhandlers
    flags 
    probability 4576686772559280649
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1648 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1646 
values: j1642 j1639 
=== Succesors ===
=== Usages ===
v1929 v1928 a1266 v1938 v1939 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1646 values: j1642 j1639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1647 v1649 
=== Succesors ===
next: a1266 
=== Usages ===
j1648 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1647 v1649 #next: a1266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1266 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1648 
=== Succesors ===
next: j1658 
=== Usages ===
a1271 
=== Predecessor ===
v1646 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1648 #next: j1658  <|@  <|@
f <@~|@floating>@ <|@
tid j1654 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1220 
=== Succesors ===
=== Usages ===
v1927 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1220  <|@  <|@
f <@~|@floating>@ <|@
tid v1927 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1654 
index: - 
=== Succesors ===
=== Usages ===
j1658 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1654 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1658 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1927 
=== Succesors ===
next: v1659 
=== Usages ===
v1659 
=== Predecessor ===
a1266 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1927 #next: v1659  <|@  <|@
f <@~|@floating>@ <|@
tid v1928 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1648 
index: - 
=== Succesors ===
=== Usages ===
v1659 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1648 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1928 
value: j1658 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1662 
=== Usages ===
=== Predecessor ===
j1658 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1928 value: j1658 stateAfter: - lastLocationAccess: - #next: v1662  <|@  <|@
f <@~|@floating>@ <|@
tid v1929 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1648 
index: - 
=== Succesors ===
=== Usages ===
v1662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1648 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1662 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1929 
value: v1695 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1874 
=== Usages ===
=== Predecessor ===
v1659 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1929 value: v1695 stateAfter: - lastLocationAccess: - #next: i1874  <|@  <|@
f <@~|@floating>@ <|@
tid v1893 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1872 
=== Succesors ===
=== Usages ===
i1874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1874 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.next
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1893 
=== Succesors ===
next: v1666 
=== Usages ===
v1666 
=== Predecessor ===
v1662 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1893 #next: v1666  <|@  <|@
f <@~|@floating>@ <|@
tid v1938 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1648 
index: - 
=== Succesors ===
=== Usages ===
v1666 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1648 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1666 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1938 
value: i1874 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1668 
=== Usages ===
=== Predecessor ===
i1874 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1938 value: i1874 stateAfter: - lastLocationAccess: - #next: v1668  <|@  <|@
f <@~|@floating>@ <|@
tid v1939 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1648 
index: - 
=== Succesors ===
=== Usages ===
v1668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1648 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1668 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1939 
value: a831 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1271 
=== Usages ===
=== Predecessor ===
v1666 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1939 value: a831 stateAfter: - lastLocationAccess: - #next: a1271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1271 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1266 
=== Succesors ===
next: v1272 
=== Usages ===
a1032 
=== Predecessor ===
v1668 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1266 #next: v1272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1033 
=== Usages ===
=== Predecessor ===
a1271 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1033  <|@  <|@
f <@~|@floating>@ <|@
tid a1032 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Compress
stamp: n -
=== Inputs ===
value: a1271 
=== Succesors ===
=== Usages ===
v1033 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1201 
address: v1894 
value: a1032 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1669 
=== Usages ===
=== Predecessor ===
v1272 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1201 address: v1894 value: a1032 stateAfter: - lastLocationAccess: - #next: j1669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1669 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1894 
=== Succesors ===
next: v1673 
=== Usages ===
j1670 
=== Predecessor ===
v1033 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1894 #next: v1673  <|@  <|@
f <@~|@floating>@ <|@
tid j1670 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1669 
y: i401 
=== Succesors ===
=== Usages ===
v1930 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1669 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid v1930 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1670 
index: j1440 
=== Succesors ===
=== Usages ===
v1673 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1670 index: j1440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1673 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:784) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1930 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1875 
=== Usages ===
=== Predecessor ===
j1669 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1930 value: i1442 stateAfter: - lastLocationAccess: - #next: a1875  <|@  <|@
f <@~|@floating>@ <|@
tid v1892 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1872 
=== Succesors ===
=== Usages ===
a1875 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1875 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1892 
=== Succesors ===
next: v109 
=== Usages ===
a995 
=== Predecessor ===
v1673 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1892 #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid a995 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:801) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1875 
=== Succesors ===
=== Usages ===
a110 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1875  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
a1875 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B119" 
    xhandlers
    flags 
    probability 4593032248177590113
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1365 
=== Usages ===
=== Predecessor ===
v1364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1365  <|@  <|@
f <@*|@fixed>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1359 
=== Predecessor ===
v1361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B112" "B118" 
    successors "B120" 
    xhandlers
    flags 
    probability 4593855238012287104
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:800) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1258 v1365 
=== Succesors ===
next: v1045 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1258 v1365 #next: v1045  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1201 
address: v1894 
value: a831 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1676 
=== Usages ===
=== Predecessor ===
v1359 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1201 address: v1894 value: a831 stateAfter: - lastLocationAccess: - #next: j1676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1894 
=== Succesors ===
next: v1680 
=== Usages ===
j1677 
=== Predecessor ===
v1045 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1894 #next: v1680  <|@  <|@
f <@~|@floating>@ <|@
tid j1677 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1676 
y: i401 
=== Succesors ===
=== Usages ===
v1931 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1676 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid v1931 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1677 
index: j1440 
=== Succesors ===
=== Usages ===
v1680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1677 index: j1440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1680 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.setValue(EconomicMapImpl.java:786) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:413) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1931 
value: i1442 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
j1676 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1931 value: i1442 stateAfter: - lastLocationAccess: - #next: v383  <|@  <|@
f <@~|@floating>@ <|@
tid a989 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a1872 
=== Succesors ===
=== Usages ===
a110 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1872  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v1680 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B117" "B86" "B119" 
    successors 
    xhandlers
    flags 
    probability 4594216442388571294
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a110 <|@
d <@d|@=== Debug Properties ===
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v108 
values: a995 a13 a989 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v108 values: a995 a13 a989  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v109 v113 v383 
=== Succesors ===
next: v12 
=== Usages ===
a110 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v109 v113 v383 #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 6]
stamp: void
=== Inputs ===
value: a110 
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a110  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 6]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v8 
trueValue: i9 
falseValue: i10 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v8 trueValue: i9 falseValue: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 14]
stamp: void
=== Inputs ===
result: i11 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i11 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.getValue(EconomicMapImpl.java:799) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:412) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:850) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1355 
=== Usages ===
=== Predecessor ===
v1204 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1355  <|@  <|@
f <@~|@floating>@ <|@
tid i1356 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -251419
stableDimension: 0
stamp: i32 [-251419] ⇊00000000fffc29e5 ⇈00000000fffc29e5
stampKind: i32
value: int[-251419|0xfffffffffffc29e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1349 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1346 
=== Predecessor ===
v1203 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B123" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1352 
=== Usages ===
=== Predecessor ===
v1200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1352  <|@  <|@
f <@~|@floating>@ <|@
tid a1354 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@2001755517
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@2001755517]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1350 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1353 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -289084
stableDimension: 0
stamp: i32 [-289084] ⇊00000000fffb96c4 ⇈00000000fffb96c4
stampKind: i32
value: int[-289084|0xfffffffffffb96c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1349 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1346 
=== Predecessor ===
v1199 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" "B121" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1349 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-289084 - -250123] ⇊00000000fff800c4 ⇈00000000ffffbff5
valueDescription: i32
=== Inputs ===
merge: v1346 
values: i1353 i1356 
=== Succesors ===
=== Usages ===
v1351 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1346 values: i1353 i1356  <|@  <|@
f <@~|@floating>@ <|@
tid a1350 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v1346 
