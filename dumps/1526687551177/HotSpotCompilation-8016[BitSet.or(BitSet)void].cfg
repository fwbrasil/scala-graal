begin_compilation
  name " HotSpotCompilation-8016[java.util.BitSet.or(BitSet)]"
  method "HotSpotCompilation-8016[java.util.BitSet.or(BitSet)]"
  date 1526687591779
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v285  <|@  <|@
f <@~|@floating>@ <|@
tid a386 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 v401 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/BitSet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v4 v717 v726 ?33 v719 j483 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/BitSet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v4 v721 ?33 v718 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<BitSet.or(BitSet)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: BitSet.java
sourceLine: 937
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - 
=== Succesors ===
=== Usages ===
v389 a444 i701 i704 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v4 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:937) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1 
y: a2 
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a1 y: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:937) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v4 
=== Succesors ===
trueSuccessor: v284 
falseSuccessor: v282 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4 #trueSuccessor: v284 #falseSuccessor: v282  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:937) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid i385 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -31507
stableDimension: 0
stamp: i32 [-31507] ⇊00000000ffff84ed ⇈00000000ffff84ed
stampKind: i32
value: int[-31507|0xffffffffffff84ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
v284 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:937) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i701 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i701  <|@  <|@
f <@~|@floating>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i701 i714 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i701 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.wordsInUse
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:940) [bci: 11]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v718 
=== Succesors ===
next: i702 
=== Usages ===
i243 v69 v13 i244 v81 v105 v231 i118 
=== Predecessor ===
v282 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v718 #next: i702  <|@  <|@
f <@~|@floating>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i702 v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i702 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.wordsInUse
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:940) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v717 
=== Succesors ===
next: v16 
=== Usages ===
i243 v69 v13 i118 
=== Predecessor ===
i701 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v717 #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at java.util.BitSet.or(BitSet.java:940) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i701 
y: i702 
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i701 y: i702  <|@  <|@
f <@~|@floating>@ <|@
tid i243 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v69 
trueValue: i701 
falseValue: i702 
=== Succesors ===
=== Usages ===
v202 v189 v208 i58 j493 ?33 v34 v51 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v69 trueValue: i701 falseValue: i702  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:942) [bci: 26]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i702 
y: i701 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i702 y: i701  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:948) [bci: 67]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i48 i97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:948) [bci: 45]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i32 v327 v189 v196 a444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a708 v233 a703 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:942) [bci: 26]
stamp: void
trueSuccessorProbability: 0.6382398586948134
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v15 
=== Usages ===
=== Predecessor ===
i702 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v14 #falseSuccessor: v15  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4603923973124858335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:943) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: a703 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a703 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.words
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 1]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
nullCheck: false
stamp: n# [J
=== Inputs ===
stateBefore: - 
guard: - 
address: v719 
=== Succesors ===
next: i704 
=== Usages ===
v727 v725 
=== Predecessor ===
v14 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v719 #next: i704  <|@  <|@
f <@~|@floating>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a703 
=== Succesors ===
=== Usages ===
i704 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i704 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 4]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v725 
=== Succesors ===
next: v84 
=== Usages ===
v81 i97 i364 v341 
=== Predecessor ===
a703 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v725 #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 6]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i704 
y: i701 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i704 y: i701  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 6]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
trueSuccessorProbability: 7.415936457133565E-4
=== Inputs ===
condition: v81 
=== Succesors ===
trueSuccessor: v82 
falseSuccessor: v83 
=== Usages ===
=== Predecessor ===
i704 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v81 #trueSuccessor: v82 #falseSuccessor: v83  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4557366737372999401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:336) [bci: 9]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:336) [bci: 15]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i704 
y: i47 
=== Succesors ===
=== Usages ===
i244 v105 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i704 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.BitSet.ensureCapacity(BitSet.java:336) [bci: 17]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i97 
y: i701 
=== Succesors ===
=== Usages ===
i244 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i97 y: i701  <|@  <|@
f <@~|@floating>@ <|@
tid i244 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v105 
trueValue: i701 
falseValue: i97 
=== Succesors ===
=== Usages ===
j502 v327 v341 i364 a444 v470 i420 v429 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v105 trueValue: i701 falseValue: i97  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:128) [bci: 3]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i244 
y: i28 
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i244 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:128) [bci: 3]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v327 
=== Succesors ===
trueSuccessor: v332 
falseSuccessor: v328 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v327 #trueSuccessor: v332 #falseSuccessor: v328  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:128) [bci: 3]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid i395 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -86881
stableDimension: 0
stamp: i32 [-86881] ⇊00000000fffeac9f ⇈00000000fffeac9f
stampKind: i32
value: int[-86881|0xfffffffffffeac9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
v332 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i387 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-86881 - -31507] ⇊00000000fffe0485
valueDescription: i32
=== Inputs ===
merge: v383 
values: i385 i395 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v383 values: i385 i395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v384 v394 
=== Succesors ===
next: v389 
=== Usages ===
i387 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v384 v394 #next: v389  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i387 
speculation: a386 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i387 speculation: a386  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4557366737372999401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:128) [bci: 3]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: j423 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j423 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j467 
=== Usages ===
v729 v730 
=== Predecessor ===
v328 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j467  <|@  <|@
f <@~|@floating>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j423 
index: - 
=== Succesors ===
=== Usages ===
j467 v469 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j467 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v729 
=== Succesors ===
next: j468 
=== Usages ===
j427 v731 v732 a443 v737 v733 v734 v735 v736 
=== Predecessor ===
j423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v729 #next: j468  <|@  <|@
f <@~|@floating>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j423 
index: - 
=== Succesors ===
=== Usages ===
j468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j468 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v730 
=== Succesors ===
next: v432 
=== Usages ===
v433 
=== Predecessor ===
j467 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v730 #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid i428 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i244 
y: i428 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i244 y: i428  <|@  <|@
f <@~|@floating>@ <|@
tid j419 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v471 v513 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v429 
=== Succesors ===
trueSuccessor: v431 
falseSuccessor: v430 
=== Usages ===
=== Predecessor ===
j468 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v429 #trueSuccessor: v431 #falseSuccessor: v430  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4556493626000119557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 58]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i420 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i420 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i244 
y: i145 
=== Succesors ===
=== Usages ===
i452 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i244 y: i145  <|@  <|@
f <@~|@floating>@ <|@
tid i451 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i452 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i452 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: i32 [-2147483641 - 2147483647] ⇊0000000000000007
=== Inputs ===
x: i420 
y: i451 
=== Succesors ===
=== Usages ===
i422 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i420 y: i451  <|@  <|@
f <@~|@floating>@ <|@
tid i421 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i422 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i422 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i452 
y: i421 
=== Succesors ===
=== Usages ===
j426 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i452 y: i421  <|@  <|@
f <@~|@floating>@ <|@
tid j426 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i422 
=== Succesors ===
=== Usages ===
j427 v733 v734 v735 v736 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i422  <|@  <|@
f <@~|@floating>@ <|@
tid j427 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: i64
=== Inputs ===
x: j426 
y: j467 
=== Succesors ===
=== Usages ===
v433 v469 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j426 y: j467  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j468 
y: j427 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j468 y: j427  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v433 
=== Succesors ===
trueSuccessor: v438 
falseSuccessor: v437 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v433 #trueSuccessor: v438 #falseSuccessor: v437  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4526643147387765891
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v436 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v436  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
v438 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4556415045976560371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v469 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v729 
value: j427 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v729 value: j427 stateAfter: - lastLocationAccess: - #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j426 
index: j467 
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j426 index: j467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
address: v733 
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v733 #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j426 
index: j467 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j426 index: j467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
address: v734 
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v734 #next: v462  <|@  <|@
f <@~|@floating>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j426 
index: j467 
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j426 index: j467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
address: v735 
=== Succesors ===
next: v465 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v735 #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j426 
index: j467 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j426 index: j467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
address: v736 
=== Succesors ===
next: v470 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v736 #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j467 
index: - 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j467 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v731 
value: i244 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v471 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v731 value: i244 stateAfter: - lastLocationAccess: - #next: v471  <|@  <|@
f <@~|@floating>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j467 
index: - 
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j467 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v732 
value: j419 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v732 value: j419 stateAfter: - lastLocationAccess: - #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j467 
index: - 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j467 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
rawvalue: meta{HotSpotType<[J, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[J, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v737 
value: v501 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v442 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v737 value: v501 stateAfter: - lastLocationAccess: - #next: v442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a443 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j467 
=== Succesors ===
next: v445 
=== Usages ===
a448 
=== Predecessor ===
v442 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j467 #next: v445  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
a443 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4542109715745128223
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v434  <|@  <|@
f <@*|@fixed>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4542738355933601711
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v434 v436 
=== Succesors ===
next: a444 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v434 v436 #next: a444  <|@  <|@
f <@~|@floating>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
rawvalue: meta{HotSpotType<[J, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[J, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a444 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v418 i244 i28 
=== Succesors ===
next: v447 
=== Usages ===
a448 
=== Predecessor ===
v435 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v418 i244 i28 #next: v447  <|@  <|@
f <@*|@fixed>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
a444 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4557366737372999401
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v446 
values: a443 a444 
=== Succesors ===
=== Usages ===
v741 a370 v728 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v446 values: a443 a444  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v445 v447 
=== Succesors ===
next: v606 
=== Usages ===
a448 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v445 v447 #next: v606  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v516 
=== Usages ===
j607 j609 
=== Predecessor ===
v446 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:130) [bci: 9]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i704 
y: i244 
=== Succesors ===
=== Usages ===
i364 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i704 y: i244  <|@  <|@
f <@~|@floating>@ <|@
tid i364 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v341 
trueValue: i704 
falseValue: i244 
=== Succesors ===
=== Usages ===
j503 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v341 trueValue: i704 falseValue: i244  <|@  <|@
f <@~|@floating>@ <|@
tid j503 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i364 
=== Succesors ===
=== Usages ===
j647 v741 j507 v513 v603 j637 j643 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i364  <|@  <|@
f <@~|@floating>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j503 
y: j419 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j503 y: j419  <|@  <|@
f <@~|@floating>@ <|@
tid j646 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j647 j680 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j625 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j626 j665 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j642 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j643 j677 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j634 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j635 j671 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j636 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j637 j672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j349 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:134) [bci: 31]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j660 v695 v673 j618 j627 v638 j666 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v513 
=== Succesors ===
trueSuccessor: v514 
falseSuccessor: v515 
=== Usages ===
=== Predecessor ===
v606 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v513 #trueSuccessor: v514 #falseSuccessor: v515  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B26" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v514 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v519 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a448 
index: - 
=== Succesors ===
=== Usages ===
j609 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a448 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j609 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v606 
address: v728 
=== Succesors ===
=== Usages ===
v742 v744 v746 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v606 address: v728  <|@  <|@
f <@~|@floating>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a703 
=== Succesors ===
=== Usages ===
j607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a703  <|@  <|@
f <@~|@floating>@ <|@
tid j607 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v606 
address: v727 
=== Succesors ===
=== Usages ===
v743 v745 v747 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v606 address: v727  <|@  <|@
f <@~|@floating>@ <|@
tid j637 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j503 
y: j636 
=== Succesors ===
=== Usages ===
v638 v640 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j503 y: j636  <|@  <|@
f <@~|@floating>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j637 
y: j349 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j637 y: j349  <|@  <|@
f <@*|@fixed>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v638 
=== Succesors ===
trueSuccessor: v517 
falseSuccessor: v518 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v638 #trueSuccessor: v517 #falseSuccessor: v518  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v529  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
v517 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v520  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
v518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B41" 
    successors "B19" "B41" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4552863137745628905
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j627 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v521 
values: j349 j635 
=== Succesors ===
=== Usages ===
v747 j635 v746 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v521 values: j349 j635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v520 
=== Succesors ===
next: v705 
=== Usages ===
v705 v525 v526 j627 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v520 #next: v705  <|@  <|@
f <@~|@floating>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j607 
index: j627 
=== Succesors ===
=== Usages ===
v705 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: j627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: long
nullCheck: false
stamp: <i64,i64,i64,i64>
=== Inputs ===
stateBefore: - 
guard: v521 
address: v747 
=== Succesors ===
next: v692 
=== Usages ===
v692 
=== Predecessor ===
v521 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v521 address: v747 #next: v692  <|@  <|@
f <@~|@floating>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j609 
index: j627 
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j609 index: j627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v746 
value: v705 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v705 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v746 value: v705 stateAfter: - lastLocationAccess: - #next: v528  <|@  <|@
f <@~|@floating>@ <|@
tid j635 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j627 
y: j634 
=== Succesors ===
=== Usages ===
j618 j627 v640 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j627 y: j634  <|@  <|@
f <@~|@floating>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j637 
y: j635 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j637 y: j635  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v640 
=== Succesors ===
trueSuccessor: v525 
falseSuccessor: v527 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v640 #trueSuccessor: v525 #falseSuccessor: v527  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v521 
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v521 #next: v531  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
v525 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j618 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v530 
values: j349 j635 
=== Succesors ===
=== Usages ===
v745 j626 j610 v644 v744 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v530 values: j349 j635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v529 v531 
=== Succesors ===
next: v546 
=== Usages ===
j618 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v529 v531 #next: v546  <|@  <|@
f <@~|@floating>@ <|@
tid j643 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j503 
y: j642 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j503 y: j642  <|@  <|@
f <@~|@floating>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j643 
y: j618 
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j643 y: j618  <|@  <|@
f <@*|@fixed>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v644 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v544 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v644 #trueSuccessor: v545 #falseSuccessor: v544  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v549 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v549  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
v545 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v706 
=== Usages ===
v706 
=== Predecessor ===
v546 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j607 
index: j618 
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: j618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: long
nullCheck: false
stamp: <i64,i64>
=== Inputs ===
stateBefore: - 
guard: v544 
address: v745 
=== Succesors ===
next: v690 
=== Usages ===
v690 
=== Predecessor ===
v544 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v544 address: v745 #next: v690  <|@  <|@
f <@~|@floating>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j609 
index: j618 
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j609 index: j618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v744 
value: v706 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v540 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v744 value: v706 stateAfter: - lastLocationAccess: - #next: v540  <|@  <|@
f <@~|@floating>@ <|@
tid j626 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j618 
y: j625 
=== Succesors ===
=== Usages ===
j610 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j618 y: j625  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
v690 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j610 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v541 
values: j626 j618 
=== Succesors ===
=== Usages ===
v743 v648 v742 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v541 values: j626 j618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v540 v549 
=== Succesors ===
next: v552 
=== Usages ===
j610 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v540 v549 #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid j647 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j503 
y: j646 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j503 y: j646  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j647 
y: j610 
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j647 y: j610  <|@  <|@
f <@*|@fixed>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v648 
=== Succesors ===
trueSuccessor: v551 
falseSuccessor: v550 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v648 #trueSuccessor: v551 #falseSuccessor: v550  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v555 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v555  <|@  <|@
f <@*|@fixed>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v551 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j707 
=== Usages ===
j707 
=== Predecessor ===
v552 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j707  <|@  <|@
f <@~|@floating>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j607 
index: j610 
=== Succesors ===
=== Usages ===
j707 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: j610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j707 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: long
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v550 
address: v743 
=== Succesors ===
next: v688 
=== Usages ===
v688 
=== Predecessor ===
v550 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v550 address: v743 #next: v688  <|@  <|@
f <@~|@floating>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j609 
index: j610 
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j609 index: j610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v742 
value: j707 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v543 
=== Usages ===
=== Predecessor ===
j707 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v742 value: j707 stateAfter: - lastLocationAccess: - #next: v543  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v688 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B14" "B25" "B24" 
    successors "B27" "B39" 
    xhandlers
    flags 
    probability 4557366737372999401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v533 v543 v555 
=== Succesors ===
next: v651 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v533 v543 v555 #next: v651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v562 
=== Usages ===
j653 
=== Predecessor ===
v534 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v562  <|@  <|@
f <@~|@floating>@ <|@
tid j502 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i244 
=== Succesors ===
=== Usages ===
j507 v603 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i244  <|@  <|@
f <@~|@floating>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j503 
y: j502 
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j503 y: j502  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v603 
=== Succesors ===
trueSuccessor: v561 
falseSuccessor: v560 
=== Usages ===
=== Predecessor ===
v651 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v603 #trueSuccessor: v561 #falseSuccessor: v560  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a448 
index: j503 
=== Succesors ===
=== Usages ===
j653 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a448 index: j503  <|@  <|@
f <@~|@floating>@ <|@
tid j653 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v651 
address: v741 
=== Succesors ===
=== Usages ===
v748 v749 v750 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v651 address: v741  <|@  <|@
f <@~|@floating>@ <|@
tid j507 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j502 
y: j503 
=== Succesors ===
=== Usages ===
j680 j672 j677 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j502 y: j503  <|@  <|@
f <@~|@floating>@ <|@
tid j672 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j507 
y: j636 
=== Succesors ===
=== Usages ===
v673 v675 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j507 y: j636  <|@  <|@
f <@~|@floating>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j672 
y: j349 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j672 y: j349  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v673 
=== Succesors ===
trueSuccessor: v563 
falseSuccessor: v564 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v673 #trueSuccessor: v563 #falseSuccessor: v564  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v574 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v574  <|@  <|@
f <@*|@fixed>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
v563 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v566  <|@  <|@
f <@*|@fixed>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
v564 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" 
    successors "B31" "B38" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4552863137745628905
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j666 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v567 
values: j349 j671 
=== Succesors ===
=== Usages ===
v750 j671 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v567 values: j349 j671  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v566 
=== Succesors ===
next: v698 
=== Usages ===
j666 v570 v571 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v566 #next: v698  <|@  <|@
f <@~|@floating>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j653 
index: j666 
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j653 index: j666  <|@  <|@
f <@~|@floating>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i64 [0] ⇈0000000000000000,i64 [0] ⇈0000000000000000,i64 [0] ⇈0000000000000000,i64 [0] ⇈0000000000000000>
stampKind: <i64,i64,i64,i64>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v750 
value: v699 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v750 value: v699 stateAfter: - lastLocationAccess: - #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid j671 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j666 
y: j634 
=== Succesors ===
=== Usages ===
j660 j666 v675 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j666 y: j634  <|@  <|@
f <@~|@floating>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j672 
y: j671 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j672 y: j671  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v675 
=== Succesors ===
trueSuccessor: v570 
falseSuccessor: v572 
=== Usages ===
=== Predecessor ===
v698 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v675 #trueSuccessor: v570 #falseSuccessor: v572  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v567 
=== Succesors ===
next: v576 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v567 #next: v576  <|@  <|@
f <@*|@fixed>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
v570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j660 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v575 
values: j349 j671 
=== Succesors ===
=== Usages ===
v749 j665 j654 v678 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v575 values: j349 j671  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v574 v576 
=== Succesors ===
next: v591 
=== Usages ===
j660 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v574 v576 #next: v591  <|@  <|@
f <@~|@floating>@ <|@
tid j677 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j507 
y: j642 
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j507 y: j642  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j677 
y: j660 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j677 y: j660  <|@  <|@
f <@*|@fixed>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v678 
=== Succesors ===
trueSuccessor: v590 
falseSuccessor: v589 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v678 #trueSuccessor: v590 #falseSuccessor: v589  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v594 
=== Usages ===
=== Predecessor ===
v591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v594  <|@  <|@
f <@*|@fixed>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
v590 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v697 
=== Usages ===
=== Predecessor ===
v591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v697  <|@  <|@
f <@~|@floating>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j653 
index: j660 
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j653 index: j660  <|@  <|@
f <@~|@floating>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i64 [0] ⇈0000000000000000,i64 [0] ⇈0000000000000000>
stampKind: <i64,i64>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v749 
value: v700 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v749 value: v700 stateAfter: - lastLocationAccess: - #next: v585  <|@  <|@
f <@~|@floating>@ <|@
tid j665 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j660 
y: j625 
=== Succesors ===
=== Usages ===
j654 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j660 y: j625  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
v697 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j654 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v586 
values: j665 j660 
=== Succesors ===
=== Usages ===
v748 v681 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v586 values: j665 j660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v585 v594 
=== Succesors ===
next: v597 
=== Usages ===
j654 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v585 v594 #next: v597  <|@  <|@
f <@~|@floating>@ <|@
tid j680 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j507 
y: j646 
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j507 y: j646  <|@  <|@
f <@~|@floating>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j680 
y: j654 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j680 y: j654  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v681 
=== Succesors ===
trueSuccessor: v596 
falseSuccessor: v595 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v681 #trueSuccessor: v596 #falseSuccessor: v595  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v600  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
v596 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v695  <|@  <|@
f <@~|@floating>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j653 
index: j654 
=== Succesors ===
=== Usages ===
v695 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j653 index: j654  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v748 
value: j349 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v588 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v748 value: j349 stateAfter: - lastLocationAccess: - #next: v588  <|@  <|@
f <@*|@fixed>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
v695 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4550680359313429295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v571 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v571  <|@  <|@
f <@*|@fixed>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v567 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v567  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B40" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v578  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
v560 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B37" "B36" 
    successors "B43" 
    xhandlers
    flags 
    probability 4557366737372999401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v578 v588 v600 
=== Succesors ===
next: a370 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v578 v588 v600 #next: a370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a448 
=== Succesors ===
next: v233 
=== Usages ===
a232 
=== Predecessor ===
v579 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a448 #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid a232 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
op: Compress
stamp: n! -
=== Inputs ===
value: a370 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: BitSet.words
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v719 
value: a232 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j483 
=== Usages ===
=== Predecessor ===
a370 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v719 value: a232 stateAfter: - lastLocationAccess: - #next: j483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v489 
=== Usages ===
j485 
=== Predecessor ===
v233 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v489  <|@  <|@
f <@~|@floating>@ <|@
tid i484 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j485 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j483 
y: i484 
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j483 y: i484  <|@  <|@
f <@~|@floating>@ <|@
tid j488 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j485 
index: j488 
=== Succesors ===
=== Usages ===
v489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j485 index: j488  <|@  <|@
f <@~|@floating>@ <|@
tid i242 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:338) [bci: 35]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v236 v489 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v738 
value: i242 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
j483 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v738 value: i242 stateAfter: - lastLocationAccess: - #next: v236  <|@  <|@
f <@~|@floating>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: BitSet.sizeIsSticky
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:338) [bci: 35]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v726 
value: i242 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v726 value: i242 stateAfter: - lastLocationAccess: - #next: v103  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v236 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4550680359313429295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v526  <|@  <|@
f <@*|@fixed>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v521 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v527 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v521  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B43" 
    xhandlers
    flags 
    probability 4603919709885732945
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:340) [bci: 38]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v83 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603923973124858335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v102 v103 
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v102 v103 #next: v231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: BitSet.wordsInUse
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:944) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v717 
value: i701 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v717 value: i701 stateAfter: - lastLocationAccess: - #next: v26  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:948) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
v231 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600188511268224066
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:948) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:948) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
v15 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i118 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v25 
values: i702 i701 
=== Succesors ===
=== Usages ===
i58 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v25 values: i702 i701  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:948) [bci: 45]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v24 v26 
=== Succesors ===
next: a708 
=== Usages ===
i118 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v24 v26 #next: a708  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a708 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.words
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 53]
nullCheck: false
stamp: n# [J
=== Inputs ===
stateBefore: - 
guard: - 
address: v719 
=== Succesors ===
next: a709 
=== Usages ===
v753 a180 v720 v752 
=== Predecessor ===
v25 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v719 #next: a709  <|@  <|@
f <@~|@floating>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a709 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a709 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.words
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 60]
nullCheck: false
stamp: n# [J
=== Inputs ===
stateBefore: - 
guard: - 
address: v721 
=== Succesors ===
next: v30 
=== Usages ===
v751 a178 v722 
=== Predecessor ===
a708 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v721 #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid a178 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:953) [bci: 82]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a709 
=== Succesors ===
=== Usages ===
j492 v723 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a709  <|@  <|@
f <@~|@floating>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a709 
=== Succesors ===
=== Usages ===
i710 i715 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a709  <|@  <|@
f <@~|@floating>@ <|@
tid a180 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:953) [bci: 87]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a708 
=== Succesors ===
=== Usages ===
j497 v724 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a708  <|@  <|@
f <@~|@floating>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a708 
=== Succesors ===
=== Usages ===
i711 i716 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a708  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:948) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
a709 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B49" 
    successors "B47" "B52" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610530767032561182
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v31 
values: i28 i48 
=== Succesors ===
=== Usages ===
?33 v34 v159 v723 v724 v168 i48 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v31 values: i28 i48  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.7434826604466092
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:948) [bci: 47]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v30 
=== Succesors ===
next: v39 
=== Usages ===
i32 v37 v49 v312 v307 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v30 #next: v39  <|@  <|@
tid ?33 <|@
d <@d|@=== Debug Properties ===
bci: 47
code: ResolvedJavaMethodBytecode<BitSet.or(BitSet)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: BitSet.java
sourceLine: 948
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i243 i32 
=== Succesors ===
=== Usages ===
v401 v751 v752 i710 v753 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i243 i32  <|@  <|@
f <@~|@floating>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:948) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i32 
y: i243 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i32 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:948) [bci: 49]
stamp: void
trueSuccessorProbability: 0.4264353625726104
=== Inputs ===
condition: v34 
=== Succesors ===
trueSuccessor: v35 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v34 #trueSuccessor: v35 #falseSuccessor: v37  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604871916010363964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v752 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v752  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?33 
object: a708 
=== Succesors ===
next: i710 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?33 object: a708 #next: i710  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i710 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 64]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?33 
guard: - 
address: v722 
=== Succesors ===
next: v308 
=== Usages ===
v159 
=== Predecessor ===
v752 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?33 guard: - address: v722 #next: v308  <|@  <|@
f <@~|@floating>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 64]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i32 
y: i710 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i32 y: i710  <|@  <|@
f <@*|@fixed>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 64]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v159 
=== Succesors ===
trueSuccessor: v304 
falseSuccessor: v307 
=== Usages ===
=== Predecessor ===
i710 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v159 #trueSuccessor: v304 #falseSuccessor: v307  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604871916010363964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 64]
stamp: void
=== Inputs ===
=== Succesors ===
next: i711 
=== Usages ===
j712 
=== Predecessor ===
v308 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i711 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 58]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v720 
=== Succesors ===
next: v313 
=== Usages ===
v168 
=== Predecessor ===
v304 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v720 #next: v313  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 66]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i32 
y: i711 
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i32 y: i711  <|@  <|@
f <@*|@fixed>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 66]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v168 
=== Succesors ===
trueSuccessor: v309 
falseSuccessor: v312 
=== Usages ===
=== Predecessor ===
i711 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v168 #trueSuccessor: v309 #falseSuccessor: v312  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4604871916010363964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: j712 
=== Usages ===
j713 v175 
=== Predecessor ===
v313 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j712  <|@  <|@
f <@~|@floating>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a178 
index: i32 
=== Succesors ===
=== Usages ===
j712 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a178 index: i32  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j712 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 64]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v304 
address: v723 
=== Succesors ===
next: j713 
=== Usages ===
j44 
=== Predecessor ===
v309 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v304 address: v723 #next: j713  <|@  <|@
f <@~|@floating>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a180 
index: i32 
=== Succesors ===
=== Usages ===
v175 j713 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a180 index: i32  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j713 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 58]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v309 
address: v724 
=== Succesors ===
next: v175 
=== Usages ===
j44 
=== Predecessor ===
j712 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v309 address: v724 #next: v175  <|@  <|@
f <@~|@floating>@ <|@
tid j44 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 65]
stamp: i64
=== Inputs ===
x: j712 
y: j713 
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j712 y: j713  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: long
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 66]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v309 
address: v724 
value: j44 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
j713 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v309 address: v724 value: j44 stateAfter: - lastLocationAccess: - #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:948) [bci: 67]
stamp: i32
=== Inputs ===
x: i32 
y: i47 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i32 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:948) [bci: 47]
stamp: void
=== Inputs ===
loopBegin: v31 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v31  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 66]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v31 
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v31 #next: v408  <|@  <|@
f <@~|@floating>@ <|@
tid i409 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -43291
stableDimension: 0
stamp: i32 [-43291] ⇊00000000ffff56e5 ⇈00000000ffff56e5
stampKind: i32
value: int[-43291|0xffffffffffff56e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v312 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 64]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v31 
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v31 #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid i407 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -40987
stableDimension: 0
stamp: i32 [-40987] ⇊00000000ffff5fe5 ⇈00000000ffff5fe5
stampKind: i32
value: int[-40987|0xffffffffffff5fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v307 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:952) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v31 
=== Succesors ===
next: i714 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v31 #next: i714  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i714 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.wordsInUse
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:952) [bci: 75]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v718 
=== Succesors ===
next: v54 
=== Usages ===
v51 
=== Predecessor ===
v37 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v718 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:952) [bci: 78]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i243 
y: i714 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i243 y: i714  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:952) [bci: 78]
stamp: void
trueSuccessorProbability: 0.6382398586948134
=== Inputs ===
condition: v51 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
i714 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v51 #trueSuccessor: v52 #falseSuccessor: v53  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4603923973124858335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:953) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: v751 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v751  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?33 
object: a709 
=== Succesors ===
next: v753 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?33 object: a709 #next: v753  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?33 
object: a708 
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?33 object: a708 #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i243 
y: i28 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i243 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i413 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -54625
stableDimension: 0
stamp: i32 [-54625] ⇊00000000ffff2a9f ⇈00000000ffff2a9f
stampKind: i32
value: int[-54625|0xffffffffffff2a9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i399 i399 i399 i399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v189 
=== Succesors ===
trueSuccessor: v187 
falseSuccessor: v186 
=== Usages ===
=== Predecessor ===
v753 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v189 #trueSuccessor: v187 #falseSuccessor: v186  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 4574008426735547807
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v412  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v187 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4603866485589062516
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:953) [bci: 96]
stamp: i32
=== Inputs ===
x: i118 
y: i243 
=== Succesors ===
=== Usages ===
j499 v196 i201 i207 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i118 y: i243  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i58 
y: i28 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i58 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v196 
=== Succesors ===
trueSuccessor: v199 
falseSuccessor: v197 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v196 #trueSuccessor: v199 #falseSuccessor: v197  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 4573934842689729158
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v416  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v199 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4603809572928624655
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: i715 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i715  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i715 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v722 
=== Succesors ===
next: v206 
=== Usages ===
i201 
=== Predecessor ===
v197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v722 #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: i32
=== Inputs ===
x: i715 
y: i58 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i715 y: i58  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i201 
y: i243 
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i201 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v202 
=== Succesors ===
trueSuccessor: v205 
falseSuccessor: v203 
=== Usages ===
=== Predecessor ===
i715 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v202 #trueSuccessor: v205 #falseSuccessor: v203  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4573861994484368696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v205 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B62" 
    xhandlers
    flags 
    probability 4603753229394791173
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: i716 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i716 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v720 
=== Succesors ===
next: v212 
=== Usages ===
i207 
=== Predecessor ===
v203 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v720 #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: i32
=== Inputs ===
x: i716 
y: i58 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i716 y: i58  <|@  <|@
f <@~|@floating>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i207 
y: i243 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i207 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v208 
=== Succesors ===
trueSuccessor: v211 
falseSuccessor: v209 
=== Usages ===
=== Predecessor ===
i716 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v208 #trueSuccessor: v211 #falseSuccessor: v209  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4573789874761061839
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v414  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v211 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" "B54" "B60" "B58" "B56" 
    successors 
    xhandlers
    flags 
    probability 4582905983922417868
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i399 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-55563 - -35083] ⇊00000000ffff0085 ⇈00000000ffff7fff
valueDescription: i32
=== Inputs ===
merge: v396 
values: i407 i409 i413 i413 i413 i413 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v396 values: i407 i409 i413 i413 i413 i413  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v406 v408 v412 v414 v415 v416 
=== Succesors ===
next: v401 
=== Usages ===
i399 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v406 v408 v412 v414 v415 v416 #next: v401  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?33 
actionAndReason: i399 
speculation: a386 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?33 actionAndReason: i399 speculation: a386  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 4603697449296296025
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: j492 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: i64
=== Inputs ===
object: a178 
=== Succesors ===
next: j497 
=== Usages ===
v739 
=== Predecessor ===
v209 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a178 #next: j497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: i64
=== Inputs ===
object: a180 
=== Succesors ===
next: v500 
=== Usages ===
v740 
=== Predecessor ===
j492 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a180 #next: v500  <|@  <|@
f <@~|@floating>@ <|@
tid j493 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i243 
=== Succesors ===
=== Usages ===
v740 v739 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i243  <|@  <|@
f <@~|@floating>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j492 
index: j493 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j492 index: j493  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j497 
index: j493 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j497 index: j493  <|@  <|@
f <@~|@floating>@ <|@
tid j499 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i58 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i58  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: longDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v739 v740 j499 
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
j497 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v739 v740 j499 #next: v116  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:958) [bci: 100]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v500 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 4600188511268224066
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:958) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:958) [bci: 100]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v285  <|@  <|@
f <@~|@floating>@ <|@
tid a386 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 v401 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/BitSet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v4 v717 v726 ?33 v719 j483 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/BitSet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v4 v721 ?33 v718 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<BitSet.or(BitSet)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: BitSet.java
sourceLine: 937
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - 
=== Succesors ===
=== Usages ===
v389 a444 i701 i704 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v4 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:937) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1 
y: a2 
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a1 y: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:937) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v4 
=== Succesors ===
trueSuccessor: v284 
falseSuccessor: v282 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4 #trueSuccessor: v284 #falseSuccessor: v282  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@f1a6d7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|QWORD[.], y: v0|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:937) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid i385 <|@
result int[-31507|0xffffffffffff84ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -31507
stableDimension: 0
stamp: i32 [-31507] ⇊00000000ffff84ed ⇈00000000ffff84ed
stampKind: i32
value: int[-31507|0xffffffffffff84ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
v284 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-31507|0xffffffffffff84ed]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:937) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i701 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i701  <|@  <|@
f <@~|@floating>@ <|@
tid v718 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i701 i714 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i701 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.wordsInUse
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:940) [bci: 11]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v718 
=== Succesors ===
next: i702 
=== Usages ===
i243 v69 v13 i244 v81 v105 v231 i118 
=== Predecessor ===
v282 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v718 #next: i702  <|@  <|@
f <@~|@floating>@ <|@
tid v717 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i702 v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i702 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.wordsInUse
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:940) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v717 
=== Succesors ===
next: v16 
=== Usages ===
i243 v69 v13 i118 
=== Predecessor ===
i701 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v717 #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at java.util.BitSet.or(BitSet.java:940) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i701 
y: i702 
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i701 y: i702  <|@  <|@
f <@~|@floating>@ <|@
tid i243 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v69 
trueValue: i701 
falseValue: i702 
=== Succesors ===
=== Usages ===
v202 v189 v208 i58 j493 ?33 v34 v51 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v69 trueValue: i701 falseValue: i702  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:942) [bci: 26]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i702 
y: i701 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i702 y: i701  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:948) [bci: 67]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i48 i97 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:948) [bci: 45]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i32 v327 v189 v196 a444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v719 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a708 v233 a703 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:942) [bci: 26]
stamp: void
trueSuccessorProbability: 0.6382398586948134
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v15 
=== Usages ===
=== Predecessor ===
i702 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v14 #falseSuccessor: v15  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.or(BitSet.java:937) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v2|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6382398586948134 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4603923973124858335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:943) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: a703 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a703 <|@
result v5|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.words
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 1]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
nullCheck: false
stamp: n# [J
=== Inputs ===
stateBefore: - 
guard: - 
address: v719 
=== Succesors ===
next: i704 
=== Usages ===
v727 v725 
=== Predecessor ===
v14 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v719 #next: i704  <|@  <|@
f <@~|@floating>@ <|@
tid v725 <|@
result [v5|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a703 
=== Succesors ===
=== Usages ===
i704 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i704 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 4]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v725 
=== Succesors ===
next: v84 
=== Usages ===
v81 i97 i364 v341 
=== Predecessor ===
a703 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v725 #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 6]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i704 
y: i701 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i704 y: i701  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 6]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
trueSuccessorProbability: 7.415936457133565E-4
=== Inputs ===
condition: v81 
=== Succesors ===
trueSuccessor: v82 
falseSuccessor: v83 
=== Usages ===
=== Predecessor ===
i704 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v81 #trueSuccessor: v82 #falseSuccessor: v83  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.or(BitSet.java:937) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v6|DWORD = MOV [v5|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 7.415936457133565E-4 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4557366737372999401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:336) [bci: 9]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:336) [bci: 15]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i704 
y: i47 
=== Succesors ===
=== Usages ===
i244 v105 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i704 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.BitSet.ensureCapacity(BitSet.java:336) [bci: 17]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i97 
y: i701 
=== Succesors ===
=== Usages ===
i244 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i97 y: i701  <|@  <|@
f <@~|@floating>@ <|@
tid i244 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v105 
trueValue: i701 
falseValue: i97 
=== Succesors ===
=== Usages ===
j502 v327 v341 i364 a444 v470 i420 v429 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v105 trueValue: i701 falseValue: i97  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:128) [bci: 3]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i244 
y: i28 
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i244 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:128) [bci: 3]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v327 
=== Succesors ===
trueSuccessor: v332 
falseSuccessor: v328 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v327 #trueSuccessor: v332 #falseSuccessor: v328  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHL v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = CMOVE (falseValue: v7|DWORD, ~trueValue: v2|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:128) [bci: 3]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid i395 <|@
result int[-86881|0xfffffffffffeac9f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -86881
stableDimension: 0
stamp: i32 [-86881] ⇊00000000fffeac9f ⇈00000000fffeac9f
stampKind: i32
value: int[-86881|0xfffffffffffeac9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
v332 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-86881|0xfffffffffffeac9f]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i387 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-86881 - -31507] ⇊00000000fffe0485
valueDescription: i32
=== Inputs ===
merge: v383 
values: i385 i395 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v383 values: i385 i395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v384 v394 
=== Succesors ===
next: v389 
=== Usages ===
i387 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v384 v394 #next: v389  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i387 
speculation: a386 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i387 speculation: a386  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.or(BitSet.java:937) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4557366737372999401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:128) [bci: 3]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: j423 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j423 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j467 
=== Usages ===
v729 v730 
=== Predecessor ===
v328 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j467  <|@  <|@
f <@~|@floating>@ <|@
tid v729 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j423 
index: - 
=== Succesors ===
=== Usages ===
j467 v469 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j467 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v729 
=== Succesors ===
next: j468 
=== Usages ===
j427 v731 v732 a443 v737 v733 v734 v735 v736 
=== Predecessor ===
j423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v729 #next: j468  <|@  <|@
f <@~|@floating>@ <|@
tid v730 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j423 
index: - 
=== Succesors ===
=== Usages ===
j468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j468 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v730 
=== Succesors ===
next: v432 
=== Usages ===
v433 
=== Predecessor ===
j467 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v730 #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid i428 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i244 
y: i428 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i244 y: i428  <|@  <|@
f <@~|@floating>@ <|@
tid j419 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v471 v513 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v429 
=== Succesors ===
trueSuccessor: v431 
falseSuccessor: v430 
=== Usages ===
=== Predecessor ===
j468 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v429 #trueSuccessor: v431 #falseSuccessor: v430  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4556493626000119557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 58]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i420 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i420 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i244 
y: i145 
=== Succesors ===
=== Usages ===
i452 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i244 y: i145  <|@  <|@
f <@~|@floating>@ <|@
tid i451 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i452 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i452 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: i32 [-2147483641 - 2147483647] ⇊0000000000000007
=== Inputs ===
x: i420 
y: i451 
=== Succesors ===
=== Usages ===
i422 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i420 y: i451  <|@  <|@
f <@~|@floating>@ <|@
tid i421 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i422 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i422 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i452 
y: i421 
=== Succesors ===
=== Usages ===
j426 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i452 y: i421  <|@  <|@
f <@~|@floating>@ <|@
tid j426 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i422 
=== Succesors ===
=== Usages ===
j427 v733 v734 v735 v736 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i422  <|@  <|@
f <@~|@floating>@ <|@
tid j427 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: i64
=== Inputs ===
x: j426 
y: j467 
=== Succesors ===
=== Usages ===
v433 v469 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j426 y: j467  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j468 
y: j427 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j468 y: j427  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v433 
=== Succesors ===
trueSuccessor: v438 
falseSuccessor: v437 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v433 #trueSuccessor: v438 #falseSuccessor: v437  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHL v8|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA [v12|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = AND v13|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4526643147387765891
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v436 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v436  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
v438 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4556415045976560371
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v469 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v729 
value: j427 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v729 value: j427 stateAfter: - lastLocationAccess: - #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid v733 <|@
result [v15|QWORD + v10|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j426 
index: j467 
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j426 index: j467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
address: v733 
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v733 #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid v734 <|@
result [v15|QWORD + v10|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j426 
index: j467 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j426 index: j467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
address: v734 
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v734 #next: v462  <|@  <|@
f <@~|@floating>@ <|@
tid v735 <|@
result [v15|QWORD + v10|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j426 
index: j467 
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j426 index: j467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
address: v735 
=== Succesors ===
next: v465 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v735 #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid v736 <|@
result [v15|QWORD + v10|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j426 
index: j467 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j426 index: j467  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
address: v736 
=== Succesors ===
next: v470 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v736 #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid v731 <|@
result [v10|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j467 
index: - 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j467 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v731 
value: i244 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v471 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v731 value: i244 stateAfter: - lastLocationAccess: - #next: v471  <|@  <|@
f <@~|@floating>@ <|@
tid v732 <|@
result [v10|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j467 
index: - 
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j467 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v732 
value: j419 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v732 value: j419 stateAfter: - lastLocationAccess: - #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid v737 <|@
result [v10|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j467 
index: - 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j467 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
result meta{HotSpotType<[J, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
rawvalue: meta{HotSpotType<[J, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[J, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v737 
value: v501 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v442 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v737 value: v501 stateAfter: - lastLocationAccess: - #next: v442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a443 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a443 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j467 
=== Succesors ===
next: v445 
=== Usages ===
a448 
=== Predecessor ===
v442 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j467 #next: v445  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
a443 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[J, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4542109715745128223
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v434  <|@  <|@
f <@*|@fixed>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4542738355933601711
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v434 v436 
=== Succesors ===
next: a444 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v434 v436 #next: a444  <|@  <|@
f <@~|@floating>@ <|@
tid v418 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
rawvalue: meta{HotSpotType<[J, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[J, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a444 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v418 i244 i28 
=== Succesors ===
next: v447 
=== Usages ===
a448 
=== Predecessor ===
v435 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v418 i244 i28 #next: v447  <|@  <|@
f <@*|@fixed>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
a444 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[J, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.or(BitSet.java:937) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4557366737372999401
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a448 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v446 
values: a443 a444 
=== Succesors ===
=== Usages ===
v741 a370 v728 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v446 values: a443 a444  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v445 v447 
=== Succesors ===
next: v606 
=== Usages ===
a448 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v445 v447 #next: v606  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v516 
=== Usages ===
j607 j609 
=== Predecessor ===
v446 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:130) [bci: 9]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i704 
y: i244 
=== Succesors ===
=== Usages ===
i364 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i704 y: i244  <|@  <|@
f <@~|@floating>@ <|@
tid i364 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v341 
trueValue: i704 
falseValue: i244 
=== Succesors ===
=== Usages ===
j503 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v341 trueValue: i704 falseValue: i244  <|@  <|@
f <@~|@floating>@ <|@
tid j503 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i364 
=== Succesors ===
=== Usages ===
j647 v741 j507 v513 v603 j637 j643 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i364  <|@  <|@
f <@~|@floating>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j503 
y: j419 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j503 y: j419  <|@  <|@
f <@~|@floating>@ <|@
tid j646 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j647 j680 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j625 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j626 j665 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j642 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j643 j677 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j634 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j635 j671 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j636 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j637 j672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j349 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:134) [bci: 31]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j660 v695 v673 j618 j627 v638 j666 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v513 
=== Succesors ===
trueSuccessor: v514 
falseSuccessor: v515 
=== Usages ===
=== Predecessor ===
v606 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v513 #trueSuccessor: v514 #falseSuccessor: v515  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: v8|DWORD, ~trueValue: v6|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v22|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B26" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v514 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v519 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid v728 <|@
result [v20|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a448 
index: - 
=== Succesors ===
=== Usages ===
j609 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a448 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j609 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v606 
address: v728 
=== Succesors ===
=== Usages ===
v742 v744 v746 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v606 address: v728  <|@  <|@
f <@~|@floating>@ <|@
tid v727 <|@
result [v5|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a703 
=== Succesors ===
=== Usages ===
j607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a703  <|@  <|@
f <@~|@floating>@ <|@
tid j607 <|@
result v24|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v606 
address: v727 
=== Succesors ===
=== Usages ===
v743 v745 v747 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v606 address: v727  <|@  <|@
f <@~|@floating>@ <|@
tid j637 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j503 
y: j636 
=== Succesors ===
=== Usages ===
v638 v640 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j503 y: j636  <|@  <|@
f <@~|@floating>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j637 
y: j349 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j637 y: j349  <|@  <|@
f <@*|@fixed>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v638 
=== Succesors ===
trueSuccessor: v517 
falseSuccessor: v518 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v638 #trueSuccessor: v517 #falseSuccessor: v518  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = LEA [v20|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = LEA [v5|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v22|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v529  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
v517 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v520  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
v518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B41" 
    successors "B19" "B41" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4552863137745628905
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j627 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v521 
values: j349 j635 
=== Succesors ===
=== Usages ===
v747 j635 v746 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v521 values: j349 j635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v520 
=== Succesors ===
next: v705 
=== Usages ===
v705 v525 v526 j627 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v520 #next: v705  <|@  <|@
f <@~|@floating>@ <|@
tid v747 <|@
result [v24|QWORD[*] + v26|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j607 
index: j627 
=== Succesors ===
=== Usages ===
v705 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: j627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v705 <|@
result v27|V256_QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: long
nullCheck: false
stamp: <i64,i64,i64,i64>
=== Inputs ===
stateBefore: - 
guard: v521 
address: v747 
=== Succesors ===
next: v692 
=== Usages ===
v692 
=== Predecessor ===
v521 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v521 address: v747 #next: v692  <|@  <|@
f <@~|@floating>@ <|@
tid v746 <|@
result [v23|QWORD[.] + v26|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j609 
index: j627 
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j609 index: j627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v746 
value: v705 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v705 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v746 value: v705 stateAfter: - lastLocationAccess: - #next: v528  <|@  <|@
f <@~|@floating>@ <|@
tid j635 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j627 
y: j634 
=== Succesors ===
=== Usages ===
j618 j627 v640 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j627 y: j634  <|@  <|@
f <@~|@floating>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j637 
y: j635 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j637 y: j635  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v640 
=== Succesors ===
trueSuccessor: v525 
falseSuccessor: v527 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v640 #trueSuccessor: v525 #falseSuccessor: v527  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|V256_QWORD = H [v24|QWORD[*] + v26|QWORD * 8] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v26|QWORD * 8], input: v27|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v26|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v521 
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v521 #next: v531  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
v525 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j618 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v530 
values: j349 j635 
=== Succesors ===
=== Usages ===
v745 j626 j610 v644 v744 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v530 values: j349 j635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v529 v531 
=== Succesors ===
next: v546 
=== Usages ===
j618 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v529 v531 #next: v546  <|@  <|@
f <@~|@floating>@ <|@
tid j643 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j503 
y: j642 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j503 y: j642  <|@  <|@
f <@~|@floating>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j643 
y: j618 
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j643 y: j618  <|@  <|@
f <@*|@fixed>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v644 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v544 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v644 #trueSuccessor: v545 #falseSuccessor: v544  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v22|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v549 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v549  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
v545 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v706 
=== Usages ===
v706 
=== Predecessor ===
v546 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid v745 <|@
result [v24|QWORD[*] + v29|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j607 
index: j618 
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: j618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v706 <|@
result v31|V128_QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: long
nullCheck: false
stamp: <i64,i64>
=== Inputs ===
stateBefore: - 
guard: v544 
address: v745 
=== Succesors ===
next: v690 
=== Usages ===
v690 
=== Predecessor ===
v544 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v544 address: v745 #next: v690  <|@  <|@
f <@~|@floating>@ <|@
tid v744 <|@
result [v23|QWORD[.] + v29|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j609 
index: j618 
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j609 index: j618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v744 
value: v706 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v540 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v744 value: v706 stateAfter: - lastLocationAccess: - #next: v540  <|@  <|@
f <@~|@floating>@ <|@
tid j626 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j618 
y: j625 
=== Succesors ===
=== Usages ===
j610 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j618 y: j625  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
v690 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|V128_QWORD = H [v24|QWORD[*] + v29|QWORD * 8] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v29|QWORD * 8], input: v31|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v29|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j610 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v541 
values: j626 j618 
=== Succesors ===
=== Usages ===
v743 v648 v742 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v541 values: j626 j618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v540 v549 
=== Succesors ===
next: v552 
=== Usages ===
j610 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v540 v549 #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid j647 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j503 
y: j646 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j503 y: j646  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j647 
y: j610 
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j647 y: j610  <|@  <|@
f <@*|@fixed>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v648 
=== Succesors ===
trueSuccessor: v551 
falseSuccessor: v550 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v648 #trueSuccessor: v551 #falseSuccessor: v550  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = DEC v22|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD, y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v555 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v555  <|@  <|@
f <@*|@fixed>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v551 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j707 
=== Usages ===
j707 
=== Predecessor ===
v552 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j707  <|@  <|@
f <@~|@floating>@ <|@
tid v743 <|@
result [v24|QWORD[*] + v33|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j607 
index: j610 
=== Succesors ===
=== Usages ===
j707 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j607 index: j610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j707 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: long
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v550 
address: v743 
=== Succesors ===
next: v688 
=== Usages ===
v688 
=== Predecessor ===
v550 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v550 address: v743 #next: v688  <|@  <|@
f <@~|@floating>@ <|@
tid v742 <|@
result [v23|QWORD[.] + v33|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j609 
index: j610 
=== Succesors ===
=== Usages ===
v688 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j609 index: j610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v742 
value: j707 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v543 
=== Usages ===
=== Predecessor ===
j707 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v742 value: j707 stateAfter: - lastLocationAccess: - #next: v543  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v688 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [v24|QWORD[*] + v33|QWORD * 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + v33|QWORD * 8], y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B14" "B25" "B24" 
    successors "B27" "B39" 
    xhandlers
    flags 
    probability 4557366737372999401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v533 v543 v555 
=== Succesors ===
next: v651 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v533 v543 v555 #next: v651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v562 
=== Usages ===
j653 
=== Predecessor ===
v534 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v562  <|@  <|@
f <@~|@floating>@ <|@
tid j502 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i244 
=== Succesors ===
=== Usages ===
j507 v603 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i244  <|@  <|@
f <@~|@floating>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j503 
y: j502 
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j503 y: j502  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v603 
=== Succesors ===
trueSuccessor: v561 
falseSuccessor: v560 
=== Usages ===
=== Predecessor ===
v651 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v603 #trueSuccessor: v561 #falseSuccessor: v560  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVSXD v8|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid v741 <|@
result [v20|QWORD[.] + v22|QWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a448 
index: j503 
=== Succesors ===
=== Usages ===
j653 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a448 index: j503  <|@  <|@
f <@~|@floating>@ <|@
tid j653 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v651 
address: v741 
=== Succesors ===
=== Usages ===
v748 v749 v750 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v651 address: v741  <|@  <|@
f <@~|@floating>@ <|@
tid j507 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j502 
y: j503 
=== Succesors ===
=== Usages ===
j680 j672 j677 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j502 y: j503  <|@  <|@
f <@~|@floating>@ <|@
tid j672 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j507 
y: j636 
=== Succesors ===
=== Usages ===
v673 v675 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j507 y: j636  <|@  <|@
f <@~|@floating>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j672 
y: j349 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j672 y: j349  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v673 
=== Succesors ===
trueSuccessor: v563 
falseSuccessor: v564 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v673 #trueSuccessor: v563 #falseSuccessor: v564  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = LEA [v20|QWORD[.] + v22|QWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = SUB (x: v36|QWORD, ~y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v38|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v574 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v574  <|@  <|@
f <@*|@fixed>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
v563 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v566  <|@  <|@
f <@*|@fixed>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
v564 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" 
    successors "B31" "B38" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4552863137745628905
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j666 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v567 
values: j349 j671 
=== Succesors ===
=== Usages ===
v750 j671 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v567 values: j349 j671  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v566 
=== Succesors ===
next: v698 
=== Usages ===
j666 v570 v571 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v566 #next: v698  <|@  <|@
f <@~|@floating>@ <|@
tid v750 <|@
result [v37|QWORD[.] + v40|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j653 
index: j666 
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j653 index: j666  <|@  <|@
f <@~|@floating>@ <|@
tid v699 <|@
result v41|V256_QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i64 [0] ⇈0000000000000000,i64 [0] ⇈0000000000000000,i64 [0] ⇈0000000000000000,i64 [0] ⇈0000000000000000>
stampKind: <i64,i64,i64,i64>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v698 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v750 
value: v699 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v750 value: v699 stateAfter: - lastLocationAccess: - #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid j671 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j666 
y: j634 
=== Succesors ===
=== Usages ===
j660 j666 v675 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j666 y: j634  <|@  <|@
f <@~|@floating>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j672 
y: j671 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j672 y: j671  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v675 
=== Succesors ===
trueSuccessor: v570 
falseSuccessor: v572 
=== Usages ===
=== Predecessor ===
v698 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v675 #trueSuccessor: v570 #falseSuccessor: v572  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v37|QWORD[.] + v40|QWORD * 8], input: v41|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v40|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v567 
=== Succesors ===
next: v576 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v567 #next: v576  <|@  <|@
f <@*|@fixed>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
v570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j660 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v575 
values: j349 j671 
=== Succesors ===
=== Usages ===
v749 j665 j654 v678 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v575 values: j349 j671  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v574 v576 
=== Succesors ===
next: v591 
=== Usages ===
j660 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v574 v576 #next: v591  <|@  <|@
f <@~|@floating>@ <|@
tid j677 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j507 
y: j642 
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j507 y: j642  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j677 
y: j660 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j677 y: j660  <|@  <|@
f <@*|@fixed>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v678 
=== Succesors ===
trueSuccessor: v590 
falseSuccessor: v589 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v678 #trueSuccessor: v590 #falseSuccessor: v589  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v38|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v594 
=== Usages ===
=== Predecessor ===
v591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v594  <|@  <|@
f <@*|@fixed>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
v590 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v697 
=== Usages ===
=== Predecessor ===
v591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v697  <|@  <|@
f <@~|@floating>@ <|@
tid v749 <|@
result [v37|QWORD[.] + v43|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j653 
index: j660 
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j653 index: j660  <|@  <|@
f <@~|@floating>@ <|@
tid v700 <|@
result v45|V128_QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i64 [0] ⇈0000000000000000,i64 [0] ⇈0000000000000000>
stampKind: <i64,i64>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v749 
value: v700 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v749 value: v700 stateAfter: - lastLocationAccess: - #next: v585  <|@  <|@
f <@~|@floating>@ <|@
tid j665 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j660 
y: j625 
=== Succesors ===
=== Usages ===
j654 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j660 y: j625  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
v697 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|V128_QWORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v37|QWORD[.] + v43|QWORD * 8], input: v45|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v43|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j654 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v586 
values: j665 j660 
=== Succesors ===
=== Usages ===
v748 v681 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v586 values: j665 j660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v585 v594 
=== Succesors ===
next: v597 
=== Usages ===
j654 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v585 v594 #next: v597  <|@  <|@
f <@~|@floating>@ <|@
tid j680 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j507 
y: j646 
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j507 y: j646  <|@  <|@
f <@~|@floating>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j680 
y: j654 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j680 y: j654  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v681 
=== Succesors ===
trueSuccessor: v596 
falseSuccessor: v595 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v681 #trueSuccessor: v596 #falseSuccessor: v595  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = DEC v38|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v600  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
v596 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v695  <|@  <|@
f <@~|@floating>@ <|@
tid v748 <|@
result [v37|QWORD[.] + v47|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j653 
index: j654 
=== Succesors ===
=== Usages ===
v695 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j653 index: j654  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v748 
value: j349 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v588 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v748 value: j349 stateAfter: - lastLocationAccess: - #next: v588  <|@  <|@
f <@*|@fixed>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
v695 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + v47|QWORD * 8], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4550680359313429295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v571 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v571  <|@  <|@
f <@*|@fixed>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v567 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v567  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD] destination: B38 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B40" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v578  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
v560 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B37" "B36" 
    successors "B43" 
    xhandlers
    flags 
    probability 4557366737372999401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v578 v588 v600 
=== Succesors ===
next: a370 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v578 v588 v600 #next: a370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a370 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a448 
=== Succesors ===
next: v233 
=== Usages ===
a232 
=== Predecessor ===
v579 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a448 #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid a232 <|@
result v49|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
op: Compress
stamp: n! -
=== Inputs ===
value: a370 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: BitSet.words
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v719 
value: a232 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j483 
=== Usages ===
=== Predecessor ===
a370 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v719 value: a232 stateAfter: - lastLocationAccess: - #next: j483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j483 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v489 
=== Usages ===
j485 
=== Predecessor ===
v233 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v489  <|@  <|@
f <@~|@floating>@ <|@
tid i484 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j485 <|@
result v50|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j483 
y: i484 
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j483 y: i484  <|@  <|@
f <@~|@floating>@ <|@
tid j488 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v738 <|@
result [v50|QWORD[*] + v51|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j485 
index: j488 
=== Succesors ===
=== Usages ===
v489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j485 index: j488  <|@  <|@
f <@~|@floating>@ <|@
tid i242 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:338) [bci: 35]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v236 v489 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v738 
value: i242 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
j483 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v738 value: i242 stateAfter: - lastLocationAccess: - #next: v236  <|@  <|@
f <@~|@floating>@ <|@
tid v726 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: BitSet.sizeIsSticky
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:338) [bci: 35]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v726 
value: i242 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v726 value: i242 stateAfter: - lastLocationAccess: - #next: v103  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v236 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[.] = COMPRESSPOINTER (input: v20|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3bb801e0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v49|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v50|QWORD[*] + v51|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 16], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4550680359313429295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v526  <|@  <|@
f <@*|@fixed>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v521 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v527 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v521  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B41 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B43" 
    xhandlers
    flags 
    probability 4603919709885732945
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:340) [bci: 38]
at java.util.BitSet.or(BitSet.java:943) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v83 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603923973124858335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v102 v103 
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v102 v103 #next: v231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: BitSet.wordsInUse
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:944) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v717 
value: i701 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v717 value: i701 stateAfter: - lastLocationAccess: - #next: v26  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:948) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
v231 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|DWORD] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600188511268224066
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:948) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:948) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
v15 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i118 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v25 
values: i702 i701 
=== Succesors ===
=== Usages ===
i58 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v25 values: i702 i701  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:948) [bci: 45]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v24 v26 
=== Succesors ===
next: a708 
=== Usages ===
i118 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v24 v26 #next: a708  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a708 <|@
result v53|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.words
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 53]
nullCheck: false
stamp: n# [J
=== Inputs ===
stateBefore: - 
guard: - 
address: v719 
=== Succesors ===
next: a709 
=== Usages ===
v753 a180 v720 v752 
=== Predecessor ===
v25 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v719 #next: a709  <|@  <|@
f <@~|@floating>@ <|@
tid v721 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a709 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a709 <|@
result v54|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.words
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 60]
nullCheck: false
stamp: n# [J
=== Inputs ===
stateBefore: - 
guard: - 
address: v721 
=== Succesors ===
next: v30 
=== Usages ===
v751 a178 v722 
=== Predecessor ===
a708 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v721 #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid a178 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:953) [bci: 82]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a709 
=== Succesors ===
=== Usages ===
j492 v723 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a709  <|@  <|@
f <@~|@floating>@ <|@
tid v722 <|@
result [v54|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a709 
=== Succesors ===
=== Usages ===
i710 i715 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a709  <|@  <|@
f <@~|@floating>@ <|@
tid a180 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:953) [bci: 87]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a708 
=== Succesors ===
=== Usages ===
j497 v724 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a708  <|@  <|@
f <@~|@floating>@ <|@
tid v720 <|@
result [v53|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a708 
=== Succesors ===
=== Usages ===
i711 i716 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a708  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:948) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
a709 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3bb801e0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3bb801e0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B49" 
    successors "B47" "B52" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610530767032561182
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i32 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v31 
values: i28 i48 
=== Succesors ===
=== Usages ===
?33 v34 v159 v723 v724 v168 i48 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v31 values: i28 i48  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.7434826604466092
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:948) [bci: 47]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v30 
=== Succesors ===
next: v39 
=== Usages ===
i32 v37 v49 v312 v307 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v30 #next: v39  <|@  <|@
tid ?33 <|@
d <@d|@=== Debug Properties ===
bci: 47
code: ResolvedJavaMethodBytecode<BitSet.or(BitSet)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: BitSet.java
sourceLine: 948
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i243 i32 
=== Succesors ===
=== Usages ===
v401 v751 v752 i710 v753 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i243 i32  <|@  <|@
f <@~|@floating>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:948) [bci: 49]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i32 
y: i243 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i32 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:948) [bci: 49]
stamp: void
trueSuccessorProbability: 0.4264353625726104
=== Inputs ===
condition: v34 
=== Succesors ===
trueSuccessor: v35 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v34 #trueSuccessor: v35 #falseSuccessor: v37  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4264353625726104 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604871916010363964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v752 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v752  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?33 
object: a708 
=== Succesors ===
next: i710 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?33 object: a708 #next: i710  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i710 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 64]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?33 
guard: - 
address: v722 
=== Succesors ===
next: v308 
=== Usages ===
v159 
=== Predecessor ===
v752 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?33 guard: - address: v722 #next: v308  <|@  <|@
f <@~|@floating>@ <|@
tid v159 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 64]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i32 
y: i710 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i32 y: i710  <|@  <|@
f <@*|@fixed>@ <|@
tid v308 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 64]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v159 
=== Succesors ===
trueSuccessor: v304 
falseSuccessor: v307 
=== Usages ===
=== Predecessor ===
i710 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v159 #trueSuccessor: v304 #falseSuccessor: v307  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.or(BitSet.java:948) [bci: 47]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v57|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v53|DWORD[.] * 8] state [bci:47] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.or(BitSet.java:948) [bci: 47]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v57|DWORD 
>@ <|@ instruction CMP (x: v57|DWORD, y: [v54|DWORD[.] * 8 + 12]) size: DWORD state [bci:47] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604871916010363964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 64]
stamp: void
=== Inputs ===
=== Succesors ===
next: i711 
=== Usages ===
j712 
=== Predecessor ===
v308 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i711 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 58]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v720 
=== Succesors ===
next: v313 
=== Usages ===
v168 
=== Predecessor ===
v304 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v720 #next: v313  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 66]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i32 
y: i711 
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i32 y: i711  <|@  <|@
f <@*|@fixed>@ <|@
tid v313 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 66]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v168 
=== Succesors ===
trueSuccessor: v309 
falseSuccessor: v312 
=== Usages ===
=== Predecessor ===
i711 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v168 #trueSuccessor: v309 #falseSuccessor: v312  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: [v53|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4604871916010363964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: j712 
=== Usages ===
j713 v175 
=== Predecessor ===
v313 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j712  <|@  <|@
f <@~|@floating>@ <|@
tid v723 <|@
result [v55|QWORD[.] + v57|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a178 
index: i32 
=== Succesors ===
=== Usages ===
j712 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a178 index: i32  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j712 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 64]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v304 
address: v723 
=== Succesors ===
next: j713 
=== Usages ===
j44 
=== Predecessor ===
v309 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v304 address: v723 #next: j713  <|@  <|@
f <@~|@floating>@ <|@
tid v724 <|@
result [v56|QWORD[.] + v57|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a180 
index: i32 
=== Succesors ===
=== Usages ===
v175 j713 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a180 index: i32  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j713 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 58]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v309 
address: v724 
=== Succesors ===
next: v175 
=== Usages ===
j44 
=== Predecessor ===
j712 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v309 address: v724 #next: v175  <|@  <|@
f <@~|@floating>@ <|@
tid j44 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 65]
stamp: i64
=== Inputs ===
x: j712 
y: j713 
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j712 y: j713  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: long
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 66]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v309 
address: v724 
value: j44 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
j713 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v309 address: v724 value: j44 stateAfter: - lastLocationAccess: - #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:948) [bci: 67]
stamp: i32
=== Inputs ===
x: i32 
y: i47 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i32 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:948) [bci: 47]
stamp: void
=== Inputs ===
loopBegin: v31 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v31  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOV [v55|QWORD[.] + v57|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = OR (x: v58|QWORD, ~y: [v56|QWORD[.] + v57|DWORD * 8 + 16]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v56|QWORD[.] + v57|DWORD * 8 + 16], y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|DWORD] destination: B49 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 66]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v31 
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v31 #next: v408  <|@  <|@
f <@~|@floating>@ <|@
tid i409 <|@
result int[-43291|0xffffffffffff56e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -43291
stableDimension: 0
stamp: i32 [-43291] ⇊00000000ffff56e5 ⇈00000000ffff56e5
stampKind: i32
value: int[-43291|0xffffffffffff56e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v312 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-43291|0xffffffffffff56e5]] destination: B50 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:949) [bci: 64]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v31 
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v31 #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid i407 <|@
result int[-40987|0xffffffffffff5fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -40987
stableDimension: 0
stamp: i32 [-40987] ⇊00000000ffff5fe5 ⇈00000000ffff5fe5
stampKind: i32
value: int[-40987|0xffffffffffff5fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v307 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-40987|0xffffffffffff5fe5]] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:952) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v31 
=== Succesors ===
next: i714 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v31 #next: i714  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i714 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.wordsInUse
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:952) [bci: 75]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v718 
=== Succesors ===
next: v54 
=== Usages ===
v51 
=== Predecessor ===
v37 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v718 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v51 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:952) [bci: 78]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i243 
y: i714 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i243 y: i714  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:952) [bci: 78]
stamp: void
trueSuccessorProbability: 0.6382398586948134
=== Inputs ===
condition: v51 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
i714 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v51 #trueSuccessor: v52 #falseSuccessor: v53  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6382398586948134 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4603923973124858335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:953) [bci: 81]
stamp: void
=== Inputs ===
=== Succesors ===
next: v751 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v751  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?33 
object: a709 
=== Succesors ===
next: v753 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?33 object: a709 #next: v753  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?33 
object: a708 
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?33 object: a708 #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i243 
y: i28 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i243 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i413 <|@
result int[-54625|0xffffffffffff2a9f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -54625
stableDimension: 0
stamp: i32 [-54625] ⇊00000000ffff2a9f ⇈00000000ffff2a9f
stampKind: i32
value: int[-54625|0xffffffffffff2a9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i399 i399 i399 i399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v189 
=== Succesors ===
trueSuccessor: v187 
falseSuccessor: v186 
=== Usages ===
=== Predecessor ===
v753 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v189 #trueSuccessor: v187 #falseSuccessor: v186  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.or(BitSet.java:948) [bci: 47]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v57|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v54|DWORD[.] * 8] state [bci:47] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.or(BitSet.java:948) [bci: 47]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v57|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v53|DWORD[.] * 8] state [bci:47] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 4574008426735547807
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v412  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v187 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-54625|0xffffffffffff2a9f]] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4603866485589062516
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:953) [bci: 96]
stamp: i32
=== Inputs ===
x: i118 
y: i243 
=== Succesors ===
=== Usages ===
j499 v196 i201 i207 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i118 y: i243  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i58 
y: i28 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i58 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v196 
=== Succesors ===
trueSuccessor: v199 
falseSuccessor: v197 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v196 #trueSuccessor: v199 #falseSuccessor: v197  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SUB (x: v52|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v61|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 4573934842689729158
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v416  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v199 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-54625|0xffffffffffff2a9f]] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4603809572928624655
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: i715 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i715  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i715 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v722 
=== Succesors ===
next: v206 
=== Usages ===
i201 
=== Predecessor ===
v197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v722 #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: i32
=== Inputs ===
x: i715 
y: i58 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i715 y: i58  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i201 
y: i243 
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i201 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v202 
=== Succesors ===
trueSuccessor: v205 
falseSuccessor: v203 
=== Usages ===
=== Predecessor ===
i715 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v202 #trueSuccessor: v205 #falseSuccessor: v203  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOV [v54|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SUB (x: v62|DWORD, ~y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4573861994484368696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v205 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-54625|0xffffffffffff2a9f]] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B62" 
    xhandlers
    flags 
    probability 4603753229394791173
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: i716 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i716 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v720 
=== Succesors ===
next: v212 
=== Usages ===
i207 
=== Predecessor ===
v203 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v720 #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: i32
=== Inputs ===
x: i716 
y: i58 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i716 y: i58  <|@  <|@
f <@~|@floating>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i207 
y: i243 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i207 y: i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v208 
=== Succesors ===
trueSuccessor: v211 
falseSuccessor: v209 
=== Usages ===
=== Predecessor ===
i716 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v208 #trueSuccessor: v211 #falseSuccessor: v209  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOV [v53|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SUB (x: v64|DWORD, ~y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4573789874761061839
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v414  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v211 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-54625|0xffffffffffff2a9f]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" "B54" "B60" "B58" "B56" 
    successors 
    xhandlers
    flags 
    probability 4582905983922417868
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i399 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-55563 - -35083] ⇊00000000ffff0085 ⇈00000000ffff7fff
valueDescription: i32
=== Inputs ===
merge: v396 
values: i407 i409 i413 i413 i413 i413 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v396 values: i407 i409 i413 i413 i413 i413  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v406 v408 v412 v414 v415 v416 
=== Succesors ===
next: v401 
=== Usages ===
i399 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v406 v408 v412 v414 v415 v416 #next: v401  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?33 
actionAndReason: i399 
speculation: a386 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?33 actionAndReason: i399 speculation: a386  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.or(BitSet.java:948) [bci: 47]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v57|DWORD 
>@ <|@ instruction DEOPT info [bci:47] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 4603697449296296025
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: j492 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j492 <|@
result v67|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: i64
=== Inputs ===
object: a178 
=== Succesors ===
next: j497 
=== Usages ===
v739 
=== Predecessor ===
v209 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a178 #next: j497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j497 <|@
result v68|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: i64
=== Inputs ===
object: a180 
=== Succesors ===
next: v500 
=== Usages ===
v740 
=== Predecessor ===
j492 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a180 #next: v500  <|@  <|@
f <@~|@floating>@ <|@
tid j493 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i243 
=== Succesors ===
=== Usages ===
v740 v739 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i243  <|@  <|@
f <@~|@floating>@ <|@
tid v739 <|@
result [v67|QWORD[*] + v69|QWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j492 
index: j493 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j492 index: j493  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
result [v68|QWORD[*] + v69|QWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j497 
index: j493 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j497 index: j493  <|@  <|@
f <@~|@floating>@ <|@
tid j499 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i58 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i58  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: longDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.BitSet.or(BitSet.java:953) [bci: 97]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v739 v740 j499 
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
j497 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v739 v740 j499 #next: v116  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:958) [bci: 100]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v500 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = MOVE v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOVSXD v4|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOVSXD v61|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v67|QWORD[*] + v69|QWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v68|QWORD[*] + v69|QWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v70|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: longDisjointArraycopy(Word,Word,Word)void@0x118a11f40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 4600188511268224066
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:958) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.or(BitSet.java:958) [bci: 100]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@f1a6d7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|QWORD[.], y: v0|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.or(BitSet.java:937) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v2|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6382398586948134 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4603923973124858335
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.or(BitSet.java:937) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v6|DWORD = MOV [v5|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 7.415936457133565E-4 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B43" 
    xhandlers
    flags 
    probability 4603919709885732945
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603923973124858335
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|DWORD] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3bb801e0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3bb801e0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604871916010363964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.or(BitSet.java:948) [bci: 47]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v57|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v53|DWORD[.] * 8] state [bci:47] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.or(BitSet.java:948) [bci: 47]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v57|DWORD 
>@ <|@ instruction CMP (x: v57|DWORD, y: [v54|DWORD[.] * 8 + 12]) size: DWORD state [bci:47] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604871916010363964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: [v53|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4604871916010363964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOV [v55|QWORD[.] + v57|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = OR (x: v58|QWORD, ~y: [v56|QWORD[.] + v57|DWORD * 8 + 16]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v56|QWORD[.] + v57|DWORD * 8 + 16], y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC v57|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|DWORD] destination: B49 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B49" 
    successors "B47" "B52" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610530767032561182
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4264353625726104 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6382398586948134 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4603923973124858335
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.or(BitSet.java:948) [bci: 47]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v57|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v54|DWORD[.] * 8] state [bci:47] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.or(BitSet.java:948) [bci: 47]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v57|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v53|DWORD[.] * 8] state [bci:47] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4603866485589062516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SUB (x: v52|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v61|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4603809572928624655
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOV [v54|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SUB (x: v62|DWORD, ~y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B62" 
    xhandlers
    flags 
    probability 4603753229394791173
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOV [v53|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SUB (x: v64|DWORD, ~y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 4603697449296296025
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[*] = MOVE v55|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[*] = MOVE v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOVSXD v4|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOVSXD v61|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v67|QWORD[*] + v69|QWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v68|QWORD[*] + v69|QWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v70|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: longDisjointArraycopy(Word,Word,Word)void@0x118a11f40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600188511268224066
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 4600188511268224066
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 4574008426735547807
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-54625|0xffffffffffff2a9f]] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" "B54" "B60" "B58" "B56" 
    successors 
    xhandlers
    flags 
    probability 4582905983922417868
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.or(BitSet.java:948) [bci: 47]
locals: v0|QWORD[.] v1|QWORD[.] v4|DWORD v57|DWORD 
>@ <|@ instruction DEOPT info [bci:47] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 4573934842689729158
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-54625|0xffffffffffff2a9f]] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4573861994484368696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-54625|0xffffffffffff2a9f]] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4573789874761061839
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-54625|0xffffffffffff2a9f]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4557366737372999401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHL v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = CMOVE (falseValue: v7|DWORD, ~trueValue: v2|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4557366737372999401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4556493626000119557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHL v8|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA [v12|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = AND v13|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4556415045976560371
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v15|QWORD + v10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD + 12], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[J, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4557366737372999401
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = CMOVE (falseValue: v8|DWORD, ~trueValue: v6|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v22|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = LEA [v20|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = LEA [v5|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v22|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v22|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|V128_QWORD = H [v24|QWORD[*] + v29|QWORD * 8] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v29|QWORD * 8], input: v31|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v29|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = DEC v22|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD, y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [v24|QWORD[*] + v33|QWORD * 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + v33|QWORD * 8], y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B14" "B25" "B24" 
    successors "B27" "B39" 
    xhandlers
    flags 
    probability 4557366737372999401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOVSXD v8|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B40" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B37" "B36" 
    successors "B43" 
    xhandlers
    flags 
    probability 4557366737372999401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[.] = COMPRESSPOINTER (input: v20|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3bb801e0 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v49|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v50|QWORD[*] + v51|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 16], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B26" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = LEA [v20|QWORD[.] + v22|QWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = SUB (x: v36|QWORD, ~y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v38|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v38|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|V128_QWORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v37|QWORD[.] + v43|QWORD * 8], input: v45|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v43|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = DEC v38|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD[.] + v47|QWORD * 8], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4550680359313429295
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B41 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B41" 
    successors "B19" "B41" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4552863137745628905
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|V256_QWORD = H [v24|QWORD[*] + v26|QWORD * 8] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v26|QWORD * 8], input: v27|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v26|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4550680359313429295
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD] destination: B38 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" 
    successors "B31" "B38" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4552863137745628905
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v37|QWORD[.] + v40|QWORD * 8], input: v41|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v40|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v42|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4542109715745128223
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4542738355933601711
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[J, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.or(BitSet.java:937) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4526643147387765891
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-31507|0xffffffffffff84ed]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.or(BitSet.java:937) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-86881|0xfffffffffffeac9f]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-43291|0xffffffffffff56e5]] destination: B50 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-40987|0xffffffffffff5fe5]] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     6
     5: return        
     6: aload_0       
     7: getfield      #1          // wordsInUse:int
    10: aload_1       
    11: getfield      #1          // wordsInUse:int
    14: invokestatic  #46         // java.lang.Math.min:(int, int)int
    17: istore_2      
    18: aload_0       
    19: getfield      #1          // wordsInUse:int
    22: aload_1       
    23: getfield      #1          // wordsInUse:int
    26: if_icmpge     45
    29: aload_0       
    30: aload_1       
    31: getfield      #1          // wordsInUse:int
    34: invokespecial #33         // ensureCapacity:(int)void
    37: aload_0       
    38: aload_1       
    39: getfield      #1          // wordsInUse:int
    42: putfield      #1          // wordsInUse:int
    45: iconst_0      
    46: istore_3      
    47: iload_3       
    48: iload_2       
    49: if_icmpge     73
    52: aload_0       
    53: getfield      #2          // words:long[]
    56: iload_3       
    57: dup2          
    58: laload        
    59: aload_1       
    60: getfield      #2          // words:long[]
    63: iload_3       
    64: laload        
    65: lor           
    66: lastore       
    67: iinc          
    70: goto          47
    73: iload_2       
    74: aload_1       
    75: getfield      #1          // wordsInUse:int
    78: if_icmpge     100
    81: aload_1       
    82: getfield      #2          // words:long[]
    85: iload_2       
    86: aload_0       
    87: getfield      #2          // words:long[]
    90: iload_2       
    91: aload_0       
    92: getfield      #1          // wordsInUse:int
    95: iload_2       
    96: isub          
    97: invokestatic  #48         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
   100: aload_0       
   101: invokespecial #13         // checkInvariants:()void
   104: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@f1a6d7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: r14|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.util.BitSet.or(BitSet.java:937) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction rdi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   28  <|@ instruction CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr   32  <|@ instruction CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.6382398586948134 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B42" 
    xhandlers
    flags 
    probability 4603923973124858335
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r8|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [r8:0, r13:0, r14:0]
live-base-pointers: []
java.util.BitSet.or(BitSet.java:937) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 7.415936457133565E-4 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B43" 
    xhandlers
    flags 
    probability 4603919709885732945
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603923973124858335
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  438  <|@ instruction rdi|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  440  <|@ instruction rsi|DWORD[.] = MOV [r14|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3bb801e0 encoding: base: 0 shift: 3 <|@ <|@
      nr  444  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3bb801e0 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604871916010363964
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  458  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r8:0, r13:0, r14:0]
live-base-pointers: []
java.util.BitSet.or(BitSet.java:948) [bci: 47]
locals: r13|QWORD[.] r14|QWORD[.] r11|DWORD r9|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:47] <|@ <|@
      nr  460  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r8:0, r13:0, r14:0]
live-base-pointers: []
java.util.BitSet.or(BitSet.java:948) [bci: 47]
locals: r13|QWORD[.] r14|QWORD[.] r11|DWORD r9|DWORD 
>@ <|@ instruction CMP (x: r9|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:47] <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604871916010363964
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction CMP (x: r9|DWORD, y: [rdi|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4604871916010363964
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction rcx|QWORD = MOV [rdx|QWORD[.] + r9|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  474  <|@ instruction rcx|QWORD = OR (x: rcx|QWORD, ~y: [r8|QWORD[.] + r9|DWORD * 8 + 16]) size: QWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [r8|QWORD[.] + r9|DWORD * 8 + 16], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ instruction r9|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B49 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B49" 
    successors "B47" "B52" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610530767032561182
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  452  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction BRANCH trueDestinationProbability: 0.4264353625726104 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction CMP (x: r11|DWORD, y: [r14|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  498  <|@ instruction BRANCH trueDestinationProbability: 0.6382398586948134 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4603923973124858335
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r8:0, r13:0, r14:0]
live-base-pointers: []
java.util.BitSet.or(BitSet.java:948) [bci: 47]
locals: r13|QWORD[.] r14|QWORD[.] r11|DWORD r9|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:47] <|@ <|@
      nr  504  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r8:0, r13:0, r14:0]
live-base-pointers: []
java.util.BitSet.or(BitSet.java:948) [bci: 47]
locals: r13|QWORD[.] r14|QWORD[.] r11|DWORD r9|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:47] <|@ <|@
      nr  506  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  508  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4603866485589062516
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4603809572928624655
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  534  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  538  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B62" 
    xhandlers
    flags 
    probability 4603753229394791173
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction rdi|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  550  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  552  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  554  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 4603697449296296025
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction rsi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  578  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  580  <|@ instruction rdi|QWORD = LEA [rdx|QWORD[*] + rsi|QWORD * 8 + 16] size: QWORD <|@ <|@
      nr  582  <|@ instruction rsi|QWORD = LEA [r8|QWORD[*] + rsi|QWORD * 8 + 16] size: QWORD <|@ <|@
      nr  584  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: longDisjointArraycopy(Word,Word,Word)void@0x118a11f40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  588  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600188511268224066
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 4600188511268224066
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 4574008426735547807
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ instruction rsi|DWORD = MOVE input: int[-54625|0xffffffffffff2a9f] // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" "B54" "B60" "B58" "B56" 
    successors 
    xhandlers
    flags 
    probability 4582905983922417868
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  566  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  568  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.util.BitSet.or(BitSet.java:948) [bci: 47]
locals: r13|QWORD[.] r14|QWORD[.] r11|DWORD r9|DWORD 
>@ <|@ instruction DEOPT info [bci:47] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 4573934842689729158
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction rsi|DWORD = MOVE input: int[-54625|0xffffffffffff2a9f] <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4573861994484368696
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction rsi|DWORD = MOVE input: int[-54625|0xffffffffffff2a9f] <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4573789874761061839
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction rsi|DWORD = MOVE input: int[-54625|0xffffffffffff2a9f] <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4557366737372999401
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rsi|DWORD = SHL r9|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr   54  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B11" 
    xhandlers
    flags 
    probability 4557366737372999401
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   80  <|@ instruction CMP rsi|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4556493626000119557
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rbx|DWORD = SHL rsi|DWORD y: 3 size: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD <|@ <|@
      nr   90  <|@ instruction rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD <|@ <|@
      nr   92  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr   94  <|@ instruction rdi|QWORD = ADD (x: rbx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4556415045976560371
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  122  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  124  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  126  <|@ instruction MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[J, resolved>;compressed} <|@ <|@
      nr  132  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction stack:28|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction r14|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4557366737372999401
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  188  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  192  <|@ instruction r10|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  194  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r8|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction r8|QWORD[*] = LEA [r8|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  212  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  214  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  246  <|@ instruction r9|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  248  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction xmm0|V128_QWORD = H [r8|QWORD[*] + rcx|QWORD * 8] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  260  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 8], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  262  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  264  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  270  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  272  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction r8|QWORD = MOV [r8|QWORD[*] + rcx|QWORD * 8] size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV (x: [r11|QWORD[.] + rcx|QWORD * 8], y: r8|QWORD) size: QWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B14" "B25" "B24" 
    successors "B27" "B39" 
    xhandlers
    flags 
    probability 4557366737372999401
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction r11|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  292  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B40" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B37" "B36" 
    successors "B43" 
    xhandlers
    flags 
    probability 4557366737372999401
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3bb801e0 encoding: base: 0 shift: 3 <|@ <|@
      nr  396  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  398  <|@ instruction r13|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  400  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  402  <|@ instruction MOVB (x: [r13|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  404  <|@ instruction MOVB (x: [r10|QWORD[.] + 16], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  406  <|@ instruction r11|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B26" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B14 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 8 + 16] size: QWORD <|@ <|@
      nr  300  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  302  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  304  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  338  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction xmm0|V128_QWORD = L oc: SIMD<0,0> <|@ <|@
      nr  352  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 8], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  354  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  356  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  362  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  364  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 8], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  378  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~[] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4550680359313429295
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B41 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B41" 
    successors "B19" "B41" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4552863137745628905
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  230  <|@ instruction xmm0|V256_QWORD = H [r8|QWORD[*] + rcx|QWORD * 8] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  232  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 8], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  234  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  236  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4550680359313429295
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B38 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B38" 
    successors "B31" "B38" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4552863137745628905
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  322  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  324  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 8], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  326  <|@ instruction r9|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  328  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4543855938490887913
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4542109715745128223
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction stack:28|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4542738355933601711
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[J, resolved>} <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  178  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction r14|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:36]
live-base-pointers: []
java.util.BitSet.or(BitSet.java:937) [bci: 0]
locals: stack:56|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B12" 
    xhandlers
    flags 
    probability 4526643147387765891
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction stack:28|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B9 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r11|DWORD = MOVE input: int[-31507|0xffffffffffff84ed] <|@ <|@
      nr   18  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   68  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [r10:0, r14:0]
live-base-pointers: []
java.util.BitSet.or(BitSet.java:937) [bci: 0]
locals: r10|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r11|DWORD = MOVE input: int[-86881|0xfffffffffffeac9f] <|@ <|@
      nr   62  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = MOVE input: int[-43291|0xffffffffffff56e5] <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B50 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rsi|DWORD = MOVE input: int[-40987|0xffffffffffff5fe5] <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     6
     5: return        
     6: aload_0       
     7: getfield      #1          // wordsInUse:int
    10: aload_1       
    11: getfield      #1          // wordsInUse:int
    14: invokestatic  #46         // java.lang.Math.min:(int, int)int
    17: istore_2      
    18: aload_0       
    19: getfield      #1          // wordsInUse:int
    22: aload_1       
    23: getfield      #1          // wordsInUse:int
    26: if_icmpge     45
    29: aload_0       
    30: aload_1       
    31: getfield      #1          // wordsInUse:int
    34: invokespecial #33         // ensureCapacity:(int)void
    37: aload_0       
    38: aload_1       
    39: getfield      #1          // wordsInUse:int
    42: putfield      #1          // wordsInUse:int
    45: iconst_0      
    46: istore_3      
    47: iload_3       
    48: iload_2       
    49: if_icmpge     73
    52: aload_0       
    53: getfield      #2          // words:long[]
    56: iload_3       
    57: dup2          
    58: laload        
    59: aload_1       
    60: getfield      #2          // words:long[]
    63: iload_3       
    64: laload        
    65: lor           
    66: lastore       
    67: iinc          
    70: goto          47
    73: iload_2       
    74: aload_1       
    75: getfield      #1          // wordsInUse:int
    78: if_icmpge     100
    81: aload_1       
    82: getfield      #2          // words:long[]
    85: iload_2       
    86: aload_0       
    87: getfield      #2          // words:long[]
    90: iload_2       
    91: aload_0       
    92: getfield      #1          // wordsInUse:int
    95: iload_2       
    96: isub          
    97: invokestatic  #48         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
   100: aload_0       
   101: invokespecial #13         // checkInvariants:()void
   104: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@f1a6d7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: r14|QWORD[.], y: r13|QWORD[.]) size: QWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.util.BitSet.or(BitSet.java:937) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction rdi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   28  <|@ instruction CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr   32  <|@ instruction CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.6382398586948134 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B43" 
    xhandlers
    flags 
    probability 4603923973124858335
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r8|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [r8:0, r13:0, r14:0]
live-base-pointers: []
java.util.BitSet.or(BitSet.java:937) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 7.415936457133565E-4 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B3" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603923973124858335
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  438  <|@ instruction rdi|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  440  <|@ instruction rsi|DWORD[.] = MOV [r14|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3bb801e0 encoding: base: 0 shift: 3 <|@ <|@
      nr  444  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3bb801e0 encoding: base: 0 shift: 3 <|@ <|@
      nr  446  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B51" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604871916010363964
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  458  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r8:0, r13:0, r14:0]
live-base-pointers: []
java.util.BitSet.or(BitSet.java:948) [bci: 47]
locals: r13|QWORD[.] r14|QWORD[.] r11|DWORD r9|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:47] <|@ <|@
      nr  460  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r8:0, r13:0, r14:0]
live-base-pointers: []
java.util.BitSet.or(BitSet.java:948) [bci: 47]
locals: r13|QWORD[.] r14|QWORD[.] r11|DWORD r9|DWORD 
>@ <|@ instruction CMP (x: r9|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:47] <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4604871916010363964
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction CMP (x: r9|DWORD, y: [rdi|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4604871916010363964
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction rcx|QWORD = MOV [rdx|QWORD[.] + r9|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  474  <|@ instruction rcx|QWORD = OR (x: rcx|QWORD, ~y: [r8|QWORD[.] + r9|DWORD * 8 + 16]) size: QWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [r8|QWORD[.] + r9|DWORD * 8 + 16], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ instruction r9|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B49 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B49" 
    successors "B47" "B52" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4610530767032561182
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  452  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction BRANCH trueDestinationProbability: 0.4264353625726104 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B53" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction CMP (x: r11|DWORD, y: [r14|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  498  <|@ instruction BRANCH trueDestinationProbability: 0.6382398586948134 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4603923973124858335
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r8:0, r13:0, r14:0]
live-base-pointers: []
java.util.BitSet.or(BitSet.java:948) [bci: 47]
locals: r13|QWORD[.] r14|QWORD[.] r11|DWORD r9|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:47] <|@ <|@
      nr  504  <|@ st <@st|@reference-map: [rdx:0, rsi:0, rdi:0, r8:0, r13:0, r14:0]
live-base-pointers: []
java.util.BitSet.or(BitSet.java:948) [bci: 47]
locals: r13|QWORD[.] r14|QWORD[.] r11|DWORD r9|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:47] <|@ <|@
      nr  506  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  508  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4603866485589062516
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  522  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4603809572928624655
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  534  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  538  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B62" 
    xhandlers
    flags 
    probability 4603753229394791173
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction rdi|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  550  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  552  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  554  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 4603697449296296025
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction rsi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  578  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  580  <|@ instruction rdi|QWORD = LEA [rdx|QWORD[*] + rsi|QWORD * 8 + 16] size: QWORD <|@ <|@
      nr  582  <|@ instruction rsi|QWORD = LEA [r8|QWORD[*] + rsi|QWORD * 8 + 16] size: QWORD <|@ <|@
      nr  584  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  586  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: longDisjointArraycopy(Word,Word,Word)void@0x118a11f40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  588  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600188511268224066
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors 
    xhandlers
    flags 
    probability 4600188511268224066
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 4574008426735547807
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ instruction rsi|DWORD = MOVE input: int[-54625|0xffffffffffff2a9f] // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" "B54" "B60" "B58" "B56" 
    successors 
    xhandlers
    flags 
    probability 4582905983922417868
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  566  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  568  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.util.BitSet.or(BitSet.java:948) [bci: 47]
locals: r13|QWORD[.] r14|QWORD[.] r11|DWORD r9|DWORD 
>@ <|@ instruction DEOPT info [bci:47] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 4573934842689729158
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction rsi|DWORD = MOVE input: int[-54625|0xffffffffffff2a9f] <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 4573861994484368696
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction rsi|DWORD = MOVE input: int[-54625|0xffffffffffff2a9f] <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 4573789874761061839
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction rsi|DWORD = MOVE input: int[-54625|0xffffffffffff2a9f] <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B7" 
    xhandlers
    flags 
    probability 4557366737372999401
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rsi|DWORD = SHL r9|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr   54  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B12" 
    xhandlers
    flags 
    probability 4557366737372999401
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   80  <|@ instruction CMP rsi|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" "B10" 
    xhandlers
    flags 
    probability 4556493626000119557
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rbx|DWORD = SHL rsi|DWORD y: 3 size: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD <|@ <|@
      nr   90  <|@ instruction rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD <|@ <|@
      nr   92  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr   94  <|@ instruction rdi|QWORD = ADD (x: rbx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B12 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4556415045976560371
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  122  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  124  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  126  <|@ instruction MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[J, resolved>;compressed} <|@ <|@
      nr  132  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction stack:28|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction r14|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" 
    successors "B26" "B15" 
    xhandlers
    flags 
    probability 4557366737372999401
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  188  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  192  <|@ instruction r10|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  194  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B26 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B18" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r8|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  206  <|@ instruction r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction r8|QWORD[*] = LEA [r8|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  212  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  218  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  214  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B20 falseDestination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B15" "B18" 
    successors "B23" "B22" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  246  <|@ instruction r9|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  248  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction xmm0|V128_QWORD = H [r8|QWORD[*] + rcx|QWORD * 8] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  260  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 8], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  262  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  264  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B26" "B25" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  270  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  272  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B26 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction r8|QWORD = MOV [r8|QWORD[*] + rcx|QWORD * 8] size: QWORD <|@ <|@
      nr  284  <|@ instruction MOV (x: [r11|QWORD[.] + rcx|QWORD * 8], y: r8|QWORD) size: QWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B13" "B25" "B23" 
    successors "B27" "B40" 
    xhandlers
    flags 
    probability 4557366737372999401
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction r11|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  292  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B26" "B37" "B35" 
    successors "B43" 
    xhandlers
    flags 
    probability 4557366737372999401
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3bb801e0 encoding: base: 0 shift: 3 <|@ <|@
      nr  396  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  398  <|@ instruction r13|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  400  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  402  <|@ instruction MOVB (x: [r13|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  404  <|@ instruction MOVB (x: [r10|QWORD[.] + 16], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  406  <|@ instruction r11|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" "B30" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 8 + 16] size: QWORD <|@ <|@
      nr  300  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  302  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  304  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B27 -> B32 falseDestination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" 
    successors "B35" "B34" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  338  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B35 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction xmm0|V128_QWORD = L oc: SIMD<0,0> <|@ <|@
      nr  352  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 8], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  354  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  356  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B40" "B37" 
    xhandlers
    flags 
    probability 4552863137745628905
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  362  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  364  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B40 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4550680359313429295
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 8], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~[] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B15" "B18" 
    successors "B20" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4552863137745628905
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  230  <|@ instruction xmm0|V256_QWORD = H [r8|QWORD[*] + rcx|QWORD * 8] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  232  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 8], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  234  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  236  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B20 falseDestination: B18 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" 
    successors "B32" "B30" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4552863137745628905
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  322  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  324  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 8], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  326  <|@ instruction r9|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  328  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B32 falseDestination: B30 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4542738355933601711
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction stack:28|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[J, resolved>} <|@ <|@
      nr  170  <|@ instruction rbx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  178  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction r14|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:36]
live-base-pointers: []
java.util.BitSet.or(BitSet.java:937) [bci: 0]
locals: stack:56|QWORD[.] stack:48|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r11|DWORD = MOVE input: int[-31507|0xffffffffffff84ed] <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [r10:0, r14:0]
live-base-pointers: []
java.util.BitSet.or(BitSet.java:937) [bci: 0]
locals: r10|QWORD[.] r14|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r11|DWORD = MOVE input: int[-86881|0xfffffffffffeac9f] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = MOVE input: int[-43291|0xffffffffffff56e5] <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B50 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rsi|DWORD = MOVE input: int[-40987|0xffffffffffff5fe5] <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B51 -> B61 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     6
     5: return        
     6: aload_0       
     7: getfield      #1          // wordsInUse:int
    10: aload_1       
    11: getfield      #1          // wordsInUse:int
    14: invokestatic  #46         // java.lang.Math.min:(int, int)int
    17: istore_2      
    18: aload_0       
    19: getfield      #1          // wordsInUse:int
    22: aload_1       
    23: getfield      #1          // wordsInUse:int
    26: if_icmpge     45
    29: aload_0       
    30: aload_1       
    31: getfield      #1          // wordsInUse:int
    34: invokespecial #33         // ensureCapacity:(int)void
    37: aload_0       
    38: aload_1       
    39: getfield      #1          // wordsInUse:int
    42: putfield      #1          // wordsInUse:int
    45: iconst_0      
    46: istore_3      
    47: iload_3       
    48: iload_2       
    49: if_icmpge     73
    52: aload_0       
    53: getfield      #2          // words:long[]
    56: iload_3       
    57: dup2          
    58: laload        
    59: aload_1       
    60: getfield      #2          // words:long[]
    63: iload_3       
    64: laload        
    65: lor           
    66: lastore       
    67: iinc          
    70: goto          47
    73: iload_2       
    74: aload_1       
    75: getfield      #1          // wordsInUse:int
    78: if_icmpge     100
    81: aload_1       
    82: getfield      #2          // words:long[]
    85: iload_2       
    86: aload_0       
    87: getfield      #2          // words:long[]
    90: iload_2       
    91: aload_0       
    92: getfield      #1          // wordsInUse:int
    95: iload_2       
    96: isub          
    97: invokestatic  #48         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
   100: aload_0       
   101: invokespecial #13         // checkInvariants:()void
   104: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24304c8bee4c8bf24d3bf50f8476030000458b560c418b7d0c413bfa448bdf450f4fda443bd70f8ef6000000458b4514468b0cc50c000000453bd10f8f2a0100004589550c418b7d14418b76148bd648c1e203448bc749c1e00341b900000000e93f0000000f1f8000000000660f1f440000418504fc443b0cf50c0000000f8332030000443b0cfd0c0000000f831a0300004a8b4cca104b0b4cc8104b894cc81041ffc1453bd97fc9453b5e0c0f8d77000000418504f4418504fc4585db0f8c79000000452bd34585d20f8c860000008b34f50c000000412bf2443bde0f8f7a0000008b3cfd0c000000412bfa443bdf0f8f6e0000004963f34d63d2488d7cf210498d74f010498bd2e80000000090488b6c24304883c438850500000000c5f877c3448bd7e91bffffff488b6c24304883c438850500000000c5f877c3be9f2affff4189b79c0200004d89a7a8020000e80000000090be9f2affffebe5be9f2affffebdebe9f2affffebd7418bf1d1e6443bd6410f4ff285f60f8c25020000498b5760498b4f7081feffffff000f83b40100008bdec1e3038d5b1783e3f84863db488bfb4803fa483bf90f879701000049897f600f188413c00000000f188413000100000f188413400100000f1884138001000089720c48c70201000000c74208addeadde488bc2448944242444895c2420448954241c4c897424104c896c2408448bf6458be9453bf5418bf6410f4ff54c63d64983fa010f8c5c000000448b4424244c8d58104e8d04c5100000004d8d4afc4d85c948c7c1000000000f8dcf0000004d8d4afe493bc90f8f13000000c4c17a6f04c8c4c17a7f04cb4c8d4902498bc94d8bca49ffc9493bc90f8f080000004d8b04c84d8904cb4d63de4d3bda0f8f3e0000004c8b54240848c1e803418942144d8bea49c1ed0949bb00c02408010000004788641d0045886210448b5c24204c8b7424104d8bea448b54241ce97dfdffff4e8d44d0104d2bda4d8d53fc4d85d249c7c1000000000f8d520000004d8d53fe4d3bca0f8f11000000c5f9efc0c4817a7f04c84d8d51024d8bca49ffcb4d3bcb7f804f8924c8e977ffffff666690c4c17e6f04c8c4c17e7f04cb488d4904493bc97eebe917ffffff660f1f440000c5f9efc0c4817e7f04c84d8d49044d3bca7eedeb99448944242444895c2420448954241c4c897424104c896c240848baaddeaddeaddeadde8bde488bf28bd3b900000000458be9448bf3e80000000090e980feffff41bbed84ffff4d8bd545899f9c0200004d89a7a8020000e8000000009041bb9facfeffebe1bee556ffffe98cfdffffbee55fffffe982fdffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@f1a6d7 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 54 10 CMP (x: r14|QWORD[.], y: r13|QWORD[.]) size: QWORD  <||@
  Comment 57 12 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 63 block B2 null  <||@
  Comment 63 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 24 r10|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 63 [r13:0, r14:0]at java.util.BitSet.or(BitSet.java:937) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 63 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 67 26 rdi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 71 28 CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 74 30 r11|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r10|DWORD) condition: >  <||@
  Comment 81 32 CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 84 34 BRANCH trueDestinationProbability: 0.6382398586948134 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B44  <||@
  Comment 90 block B3 null  <||@
  Comment 90 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 90 38 r8|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 94 40 r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 94 [r8:0, r13:0, r14:0]at java.util.BitSet.or(BitSet.java:937) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 94 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 102 42 CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 105 44 BRANCH trueDestinationProbability: 7.415936457133565E-4 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B43  <||@
  Comment 111 block B43 null  <||@
  Comment 111 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 111 426 MOV (x: [r13|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 115 428 JUMP ~[] destination: B43 -> B45  <||@
  Comment 115 block B45 null  <||@
  Comment 115 436 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 115 438 rdi|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 119 440 rsi|DWORD[.] = MOV [r14|QWORD[.] + 20] size: DWORD  <||@
  Comment 123 442 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3bb801e0 encoding: base: 0 shift: 3  <||@
  Comment 129 444 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3bb801e0 encoding: base: 0 shift: 3  <||@
  Comment 136 446 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 142 448 JUMP ~[] destination: B45 -> B46  <||@
  Comment 147 block B47 loop 2 depth 1 header:31|LoopBegin  <||@
  Comment 147 456 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 458 NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:47]  <||@
  Comment 160 [rdx:0, rsi:0, rdi:0, r8:0, r13:0, r14:0]at java.util.BitSet.or(BitSet.java:948) [bci: 47, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |r11|DWORD  |r9|DWORD   <||@
  Comment 160 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 164 460 CMP (x: r9|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:47]  <||@
  Comment 164 [rdx:0, rsi:0, rdi:0, r8:0, r13:0, r14:0]at java.util.BitSet.or(BitSet.java:948) [bci: 47, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |r11|DWORD  |r9|DWORD   <||@
  Comment 164 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 172 462 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51  <||@
  Comment 178 block B48 loop 2 depth 1 header:31|LoopBegin  <||@
  Comment 178 464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 178 466 CMP (x: r9|DWORD, y: [rdi|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 186 468 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 192 block B49 loop 2 depth 1 header:31|LoopBegin  <||@
  Comment 192 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 192 472 rcx|QWORD = MOV [rdx|QWORD[.] + r9|DWORD * 8 + 16] size: QWORD  <||@
  Comment 197 474 rcx|QWORD = OR (x: rcx|QWORD, ~y: [r8|QWORD[.] + r9|DWORD * 8 + 16]) size: QWORD  <||@
  Comment 202 476 MOV (x: [r8|QWORD[.] + r9|DWORD * 8 + 16], y: rcx|QWORD) size: QWORD  <||@
  Comment 207 478 r9|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 210 480 JUMP ~[] destination: B49 -> B46  <||@
  Comment 210 block B46 loop 2 depth 1 header:31|LoopBegin  <||@
  Comment 210 450 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 210 452 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 213 454 BRANCH trueDestinationProbability: 0.4264353625726104 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B52  <||@
  Comment 215 block B52 null  <||@
  Comment 215 494 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 215 496 CMP (x: r11|DWORD, y: [r14|QWORD[.] + 12]) size: DWORD  <||@
  Comment 219 498 BRANCH trueDestinationProbability: 0.6382398586948134 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B63  <||@
  Comment 225 block B53 null  <||@
  Comment 225 500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 225 502 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:47]  <||@
  Comment 225 [rdx:0, rsi:0, rdi:0, r8:0, r13:0, r14:0]at java.util.BitSet.or(BitSet.java:948) [bci: 47, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |r11|DWORD  |r9|DWORD   <||@
  Comment 225 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 229 504 NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:47]  <||@
  Comment 229 [rdx:0, rsi:0, rdi:0, r8:0, r13:0, r14:0]at java.util.BitSet.or(BitSet.java:948) [bci: 47, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |r11|DWORD  |r9|DWORD   <||@
  Comment 229 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 233 506 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 236 508 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55  <||@
  Comment 242 block B55 null  <||@
  Comment 242 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 242 518 r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 245 520 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 248 522 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 254 block B57 null  <||@
  Comment 254 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 254 532 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 261 534 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 264 536 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 267 538 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59  <||@
  Comment 273 block B59 null  <||@
  Comment 273 546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 273 548 rdi|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 280 550 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 283 552 CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 286 554 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B62  <||@
  Comment 292 block B62 null  <||@
  Comment 292 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 292 572 rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 292 574 r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 292 576 rsi|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 295 578 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 298 580 rdi|QWORD = LEA [rdx|QWORD[*] + rsi|QWORD * 8 + 16] size: QWORD  <||@
  Comment 303 582 rsi|QWORD = LEA [r8|QWORD[*] + rsi|QWORD * 8 + 16] size: QWORD  <||@
  Comment 308 584 rdx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 311 586 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: longDisjointArraycopy(Word,Word,Word)void@0x118a11f40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 311 {Field[name=StubRoutines::_arrayof_jlong_disjoint_arraycopy, type=address, offset=0, address=0x10b07dd18, value=0x118a11f40]:0x118a11f40}  <||@
  Comment 317 588 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 326 12  <||@
  Comment 336 block B44 null  <||@
  Comment 336 430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 336 432 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 339 434 JUMP ~[] destination: B44 -> B45  <||@
  Comment 344 block B63 null  <||@
  Comment 344 590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 344 592 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 353 12  <||@
  Comment 363 block B54 null  <||@
  Comment 363 510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 363 512 rsi|DWORD = MOVE input: int[-54625|0xffffffffffff2a9f]  <||@
  Comment 368 514 JUMP ~[] destination: B54 -> B61  <||@
  Comment 368 block B61 null  <||@
  Comment 368 562 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 368 564 MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD  <||@
  Comment 375 566 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 382 568 DEOPT info [bci:47]  <||@
  Comment 382 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 387 [r13:0, r14:0]at java.util.BitSet.or(BitSet.java:948) [bci: 47, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |r11|DWORD  |r9|DWORD   <||@
  Comment 388 block B56 null  <||@
  Comment 388 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 388 526 rsi|DWORD = MOVE input: int[-54625|0xffffffffffff2a9f]  <||@
  Comment 393 528 JUMP ~[] destination: B56 -> B61  <||@
  Comment 395 block B58 null  <||@
  Comment 395 540 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 395 542 rsi|DWORD = MOVE input: int[-54625|0xffffffffffff2a9f]  <||@
  Comment 400 544 JUMP ~[] destination: B58 -> B61  <||@
  Comment 402 block B60 null  <||@
  Comment 402 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 402 558 rsi|DWORD = MOVE input: int[-54625|0xffffffffffff2a9f]  <||@
  Comment 407 560 JUMP ~[] destination: B60 -> B61  <||@
  Comment 409 block B4 null  <||@
  Comment 409 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 409 48 rsi|DWORD = SHL r9|DWORD size: DWORD  <||@
  Comment 414 50 CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 417 52 rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r10|DWORD) condition: >  <||@
  Comment 421 54 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 423 56 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B7  <||@
  Comment 429 block B7 null  <||@
  Comment 429 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 429 76 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 433 78 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 437 80 CMP rsi|DWORD y: 16777215 size: DWORD  <||@
  Comment 443 82 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B12  <||@
  Comment 449 block B8 null  <||@
  Comment 449 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 449 86 rbx|DWORD = SHL rsi|DWORD y: 3 size: DWORD  <||@
  Comment 454 88 rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD  <||@
  Comment 457 90 rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD  <||@
  Comment 460 92 rbx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 463 94 rdi|QWORD = ADD (x: rbx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 469 96 CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 472 98 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B12 falseDestination: B8 -> B10  <||@
  Comment 478 block B10 null  <||@
  Comment 478 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 478 116 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 482 118 AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 490 120 AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 498 122 AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 506 124 AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 514 126 MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 517 128 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 524 130 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[J, resolved>;compressed}  <||@
  Comment 524 {meta{HotSpotType<[J, resolved>;compressed}}  <||@
  Comment 531 132 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 531 134 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 534 136 stack:28|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 539 138 stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 544 140 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 549 142 stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 554 144 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 559 146 r14|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 562 148 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 565 150 JUMP ~[] destination: B10 -> B13  <||@
  Comment 565 block B13 null  <||@
  Comment 565 186 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 565 188 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 568 190 rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 575 192 r10|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 578 194 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 582 196 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B26 falseDestination: B13 -> B15  <||@
  Comment 588 block B15 null  <||@
  Comment 588 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 588 204 r8|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 593 206 r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 597 208 r8|QWORD[*] = LEA [r8|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 605 210 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 609 212 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 612 218 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 619 214 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B20 falseDestination: B15 -> B18  <||@
  Comment 625 block B20 null  <||@
  Comment 625 244 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 625 246 r9|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 629 248 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 632 250 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22  <||@
  Comment 638 block B22 null  <||@
  Comment 638 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 638 258 xmm0|V128_QWORD = H [r8|QWORD[*] + rcx|QWORD * 8] nZ: XMM oh: VMOVDQU  <||@
  Comment 644 260 J (address: [r11|QWORD[.] + rcx|QWORD * 8], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 650 262 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 654 264 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 657 266 JUMP ~[] destination: B22 -> B23  <||@
  Comment 657 block B23 null  <||@
  Comment 657 268 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 657 270 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 663 272 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 666 274 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B26 falseDestination: B23 -> B25  <||@
  Comment 672 block B25 null  <||@
  Comment 672 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 672 282 r8|QWORD = MOV [r8|QWORD[*] + rcx|QWORD * 8] size: QWORD  <||@
  Comment 676 284 MOV (x: [r11|QWORD[.] + rcx|QWORD * 8], y: r8|QWORD) size: QWORD  <||@
  Comment 680 286 JUMP ~[] destination: B25 -> B26  <||@
  Comment 680 block B26 null  <||@
  Comment 680 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 680 290 r11|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 683 292 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 686 294 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B40  <||@
  Comment 692 block B40 null  <||@
  Comment 692 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 692 388 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 697 394 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3bb801e0 encoding: base: 0 shift: 3  <||@
  Comment 701 396 MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 705 398 r13|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 712 400 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 722 402 MOVB (x: [r13|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 727 404 MOVB (x: [r10|QWORD[.] + 16], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 731 406 r11|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 736 408 r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 741 410 r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 744 412 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 749 414 JUMP ~[] destination: B40 -> B43  <||@
  Comment 754 block B27 null  <||@
  Comment 754 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 754 298 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 8 + 16] size: QWORD  <||@
  Comment 759 300 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 762 302 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 766 304 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 769 310 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 776 306 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B27 -> B32 falseDestination: B27 -> B30  <||@
  Comment 782 block B32 null  <||@
  Comment 782 336 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 782 338 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 786 340 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 789 342 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B35 falseDestination: B32 -> B34  <||@
  Comment 795 block B34 null  <||@
  Comment 795 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 795 350 xmm0|V128_QWORD = L oc: SIMD<0,0>  <||@
  Comment 799 352 J (address: [r8|QWORD[.] + r9|QWORD * 8], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 805 354 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 809 356 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 812 358 JUMP ~[] destination: B34 -> B35  <||@
  Comment 812 block B35 null  <||@
  Comment 812 360 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 812 362 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 815 364 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 818 366 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B40 falseDestination: B35 -> B37  <||@
  Comment 820 block B37 null  <||@
  Comment 820 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 820 376 MOV (x: [r8|QWORD[.] + r9|QWORD * 8], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 824 380 JUMP ~[] destination: B37 -> B40  <||@
  Comment 829 block B18 loop 0 depth 1 header:521|LoopBegin  <||@
  Comment 829 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 832 230 xmm0|V256_QWORD = H [r8|QWORD[*] + rcx|QWORD * 8] nZ: YMM oh: VMOVDQU  <||@
  Comment 838 232 J (address: [r11|QWORD[.] + rcx|QWORD * 8], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 844 234 rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 848 236 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 851 238 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B20 falseDestination: B18 -> B18  <||@
  Comment 858 block B30 loop 1 depth 1 header:567|LoopBegin  <||@
  Comment 858 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 864 322 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 868 324 J (address: [r8|QWORD[.] + r9|QWORD * 8], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 874 326 r9|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 878 328 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 881 330 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B32 falseDestination: B30 -> B30  <||@
  Comment 885 block B12 null  <||@
  Comment 885 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 885 154 stack:28|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 890 156 stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 895 158 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 900 160 stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 905 162 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 910 168 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[J, resolved>}  <||@
  Comment 910 {meta{HotSpotType<[J, resolved>}}  <||@
  Comment 920 170 rbx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 922 172 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 925 174 rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 927 176 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 932 178 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 935 180 r14|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 938 182 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 938 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 943 [stack:8, stack:16, stack:36]at java.util.BitSet.or(BitSet.java:937) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:56|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 944 184 JUMP ~[] destination: B12 -> B13  <||@
  Comment 949 block B1 null  <||@
  Comment 949 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 949 16 r11|DWORD = MOVE input: int[-31507|0xffffffffffff84ed]  <||@
  Comment 955 20 JUMP ~[] destination: B1 -> B6  <||@
  Comment 955 block B6 null  <||@
  Comment 955 66 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 955 18 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 958 68 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 965 70 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 972 72 DEOPT info [bci:0]  <||@
  Comment 972 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 977 [r10:0, r14:0]at java.util.BitSet.or(BitSet.java:937) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r10|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 978 block B5 null  <||@
  Comment 978 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 978 60 r11|DWORD = MOVE input: int[-86881|0xfffffffffffeac9f]  <||@
  Comment 984 64 JUMP ~[] destination: B5 -> B6  <||@
  Comment 986 block B50 null  <||@
  Comment 986 482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 986 484 rsi|DWORD = MOVE input: int[-43291|0xffffffffffff56e5]  <||@
  Comment 991 486 JUMP ~[] destination: B50 -> B61  <||@
  Comment 996 block B51 null  <||@
  Comment 996 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 996 490 rsi|DWORD = MOVE input: int[-40987|0xffffffffffff5fe5]  <||@
  Comment 1001 492 JUMP ~[] destination: B51 -> B61  <||@
  Comment 1006 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1006 4  <||@
  Comment 1012 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 1012 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8016[java.util.BitSet.or(BitSet)]"
  method "HotSpotCompilation-8016[java.util.BitSet.or(BitSet)]"
  date 1526687592096
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 119969540 448b560849c1e203493bc20f850fb909ff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24304c8bee4c8bf24d3bf50f8476030000458b560c418b7d0c413bfa448bdf450f4fda443bd70f8ef6000000458b4514468b0cc50c000000453bd10f8f2a0100004589550c418b7d14418b76148bd648c1e203448bc749c1e00341b900000000e93f0000000f1f8000000000660f1f440000418504fc443b0cf50c0000000f8332030000443b0cfd0c0000000f831a0300004a8b4cca104b0b4cc8104b894cc81041ffc1453bd97fc9453b5e0c0f8d77000000418504f4418504fc4585db0f8c79000000452bd34585d20f8c860000008b34f50c000000412bf2443bde0f8f7a0000008b3cfd0c000000412bfa443bdf0f8f6e0000004963f34d63d2488d7cf210498d74f010498bd2e8c4880aff90488b6c24304883c43885057a2957f0c5f877c3448bd7e91bffffff488b6c24304883c43885055f2957f0c5f877c3be9f2affff4189b79c0200004d89a7a8020000e83bcf09ff90be9f2affffebe5be9f2affffebdebe9f2affffebd7418bf1d1e6443bd6410f4ff285f60f8c25020000498b5760498b4f7081feffffff000f83b40100008bdec1e3038d5b1783e3f84863db488bfb4803fa483bf90f879701000049897f600f188413c00000000f188413000100000f188413400100000f1884138001000089720c48c70201000000c74208a90100f8488bc2448944242444895c2420448954241c4c897424104c896c2408448bf6458be9453bf5418bf6410f4ff54c63d64983fa010f8c5c000000448b4424244c8d58104e8d04c5100000004d8d4afc4d85c948c7c1000000000f8dcf0000004d8d4afe493bc90f8f13000000c4c17a6f04c8c4c17a7f04cb4c8d4902498bc94d8bca49ffc9493bc90f8f080000004d8b04c84d8904cb4d63de4d3bda0f8f3e0000004c8b54240848c1e803418942144d8bea49c1ed0949bb00c02408010000004788641d0045886210448b5c24204c8b7424104d8bea448b54241ce97dfdffff4e8d44d0104d2bda4d8d53fc4d85d249c7c1000000000f8d520000004d8d53fe4d3bca0f8f11000000c5f9efc0c4817a7f04c84d8d51024d8bca49ffcb4d3bcb7f804f8924c8e977ffffff666690c4c17e6f04c8c4c17e7f04cb488d4904493bc97eebe917ffffff660f1f440000c5f9efc0c4817e7f04c84d8d49044d3bca7eedeb99448944242444895c2420448954241c4c897424104c896c240848ba480d00c0070000008bde488bf28bd3b900000000458be9448bf3e8b1a97fff90e980feffff41bbed84ffff4d8bd545899f9c0200004d89a7a8020000e8edcc09ff9041bb9facfeffebe1bee556ffffe98cfdffffbee55fffffe982fdffffe86d5e49ff90e8c7cb09ff90f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@f1a6d7 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 54 10 CMP (x: r14|QWORD[.], y: r13|QWORD[.]) size: QWORD  <||@
  Comment 57 12 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 63 block B2 null  <||@
  Comment 63 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 24 r10|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 63 [r13:0, r14:0]at java.util.BitSet.or(BitSet.java:937) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 63 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 67 26 rdi|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 71 28 CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 74 30 r11|DWORD = CMOVE (falseValue: rdi|DWORD, ~trueValue: r10|DWORD) condition: >  <||@
  Comment 81 32 CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 84 34 BRANCH trueDestinationProbability: 0.6382398586948134 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B44  <||@
  Comment 90 block B3 null  <||@
  Comment 90 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 90 38 r8|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 94 40 r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 94 [r8:0, r13:0, r14:0]at java.util.BitSet.or(BitSet.java:937) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 94 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 102 42 CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 105 44 BRANCH trueDestinationProbability: 7.415936457133565E-4 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B43  <||@
  Comment 111 block B43 null  <||@
  Comment 111 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 111 426 MOV (x: [r13|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 115 428 JUMP ~[] destination: B43 -> B45  <||@
  Comment 115 block B45 null  <||@
  Comment 115 436 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 115 438 rdi|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 119 440 rsi|DWORD[.] = MOV [r14|QWORD[.] + 20] size: DWORD  <||@
  Comment 123 442 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3bb801e0 encoding: base: 0 shift: 3  <||@
  Comment 129 444 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3bb801e0 encoding: base: 0 shift: 3  <||@
  Comment 136 446 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 142 448 JUMP ~[] destination: B45 -> B46  <||@
  Comment 147 block B47 loop 2 depth 1 header:31|LoopBegin  <||@
  Comment 147 456 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 458 NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:47]  <||@
  Comment 160 [rdx:0, rsi:0, rdi:0, r8:0, r13:0, r14:0]at java.util.BitSet.or(BitSet.java:948) [bci: 47, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |r11|DWORD  |r9|DWORD   <||@
  Comment 160 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 164 460 CMP (x: r9|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:47]  <||@
  Comment 164 [rdx:0, rsi:0, rdi:0, r8:0, r13:0, r14:0]at java.util.BitSet.or(BitSet.java:948) [bci: 47, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |r11|DWORD  |r9|DWORD   <||@
  Comment 164 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 172 462 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B51  <||@
  Comment 178 block B48 loop 2 depth 1 header:31|LoopBegin  <||@
  Comment 178 464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 178 466 CMP (x: r9|DWORD, y: [rdi|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 186 468 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 192 block B49 loop 2 depth 1 header:31|LoopBegin  <||@
  Comment 192 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 192 472 rcx|QWORD = MOV [rdx|QWORD[.] + r9|DWORD * 8 + 16] size: QWORD  <||@
  Comment 197 474 rcx|QWORD = OR (x: rcx|QWORD, ~y: [r8|QWORD[.] + r9|DWORD * 8 + 16]) size: QWORD  <||@
  Comment 202 476 MOV (x: [r8|QWORD[.] + r9|DWORD * 8 + 16], y: rcx|QWORD) size: QWORD  <||@
  Comment 207 478 r9|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 210 480 JUMP ~[] destination: B49 -> B46  <||@
  Comment 210 block B46 loop 2 depth 1 header:31|LoopBegin  <||@
  Comment 210 450 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 210 452 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 213 454 BRANCH trueDestinationProbability: 0.4264353625726104 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B52  <||@
  Comment 215 block B52 null  <||@
  Comment 215 494 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 215 496 CMP (x: r11|DWORD, y: [r14|QWORD[.] + 12]) size: DWORD  <||@
  Comment 219 498 BRANCH trueDestinationProbability: 0.6382398586948134 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B63  <||@
  Comment 225 block B53 null  <||@
  Comment 225 500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 225 502 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:47]  <||@
  Comment 225 [rdx:0, rsi:0, rdi:0, r8:0, r13:0, r14:0]at java.util.BitSet.or(BitSet.java:948) [bci: 47, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |r11|DWORD  |r9|DWORD   <||@
  Comment 225 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 229 504 NULLCHECK [r12|QWORD[*] + rdi|DWORD[.] * 8] state [bci:47]  <||@
  Comment 229 [rdx:0, rsi:0, rdi:0, r8:0, r13:0, r14:0]at java.util.BitSet.or(BitSet.java:948) [bci: 47, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |r11|DWORD  |r9|DWORD   <||@
  Comment 229 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 233 506 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 236 508 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55  <||@
  Comment 242 block B55 null  <||@
  Comment 242 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 242 518 r10|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 245 520 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 248 522 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 254 block B57 null  <||@
  Comment 254 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 254 532 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 261 534 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 264 536 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 267 538 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B57 -> B58 falseDestination: B57 -> B59  <||@
  Comment 273 block B59 null  <||@
  Comment 273 546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 273 548 rdi|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 280 550 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 283 552 CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 286 554 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B62  <||@
  Comment 292 block B62 null  <||@
  Comment 292 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 292 572 rdx|QWORD[*] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 292 574 r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 292 576 rsi|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 295 578 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 298 580 rdi|QWORD = LEA [rdx|QWORD[*] + rsi|QWORD * 8 + 16] size: QWORD  <||@
  Comment 303 582 rsi|QWORD = LEA [r8|QWORD[*] + rsi|QWORD * 8 + 16] size: QWORD  <||@
  Comment 308 584 rdx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 311 586 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: longDisjointArraycopy(Word,Word,Word)void@0x118a11f40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 311 {Field[name=StubRoutines::_arrayof_jlong_disjoint_arraycopy, type=address, offset=0, address=0x10b07dd18, value=0x118a11f40]:0x118a11f40}  <||@
  Comment 317 588 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 326 12  <||@
  Comment 336 block B44 null  <||@
  Comment 336 430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 336 432 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 339 434 JUMP ~[] destination: B44 -> B45  <||@
  Comment 344 block B63 null  <||@
  Comment 344 590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 344 592 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 353 12  <||@
  Comment 363 block B54 null  <||@
  Comment 363 510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 363 512 rsi|DWORD = MOVE input: int[-54625|0xffffffffffff2a9f]  <||@
  Comment 368 514 JUMP ~[] destination: B54 -> B61  <||@
  Comment 368 block B61 null  <||@
  Comment 368 562 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 368 564 MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD  <||@
  Comment 375 566 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 382 568 DEOPT info [bci:47]  <||@
  Comment 382 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 387 [r13:0, r14:0]at java.util.BitSet.or(BitSet.java:948) [bci: 47, duringCall: false, rethrow: false]
              |0             |1             |2          |3        
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |r11|DWORD  |r9|DWORD   <||@
  Comment 388 block B56 null  <||@
  Comment 388 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 388 526 rsi|DWORD = MOVE input: int[-54625|0xffffffffffff2a9f]  <||@
  Comment 393 528 JUMP ~[] destination: B56 -> B61  <||@
  Comment 395 block B58 null  <||@
  Comment 395 540 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 395 542 rsi|DWORD = MOVE input: int[-54625|0xffffffffffff2a9f]  <||@
  Comment 400 544 JUMP ~[] destination: B58 -> B61  <||@
  Comment 402 block B60 null  <||@
  Comment 402 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 402 558 rsi|DWORD = MOVE input: int[-54625|0xffffffffffff2a9f]  <||@
  Comment 407 560 JUMP ~[] destination: B60 -> B61  <||@
  Comment 409 block B4 null  <||@
  Comment 409 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 409 48 rsi|DWORD = SHL r9|DWORD size: DWORD  <||@
  Comment 414 50 CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 417 52 rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: r10|DWORD) condition: >  <||@
  Comment 421 54 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 423 56 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B7  <||@
  Comment 429 block B7 null  <||@
  Comment 429 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 429 76 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 433 78 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 437 80 CMP rsi|DWORD y: 16777215 size: DWORD  <||@
  Comment 443 82 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B12  <||@
  Comment 449 block B8 null  <||@
  Comment 449 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 449 86 rbx|DWORD = SHL rsi|DWORD y: 3 size: DWORD  <||@
  Comment 454 88 rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD  <||@
  Comment 457 90 rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD  <||@
  Comment 460 92 rbx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 463 94 rdi|QWORD = ADD (x: rbx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 469 96 CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 472 98 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B12 falseDestination: B8 -> B10  <||@
  Comment 478 block B10 null  <||@
  Comment 478 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 478 116 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 482 118 AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 490 120 AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 498 122 AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 506 124 AMD64PREFETCH ~[rbx|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 514 126 MOV (x: [rdx|QWORD + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 517 128 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 524 130 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[J, resolved>;compressed}  <||@
  Comment 524 {meta{HotSpotType<[J, resolved>;compressed}}  <||@
  Comment 531 132 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 531 134 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 534 136 stack:28|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 539 138 stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 544 140 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 549 142 stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 554 144 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 559 146 r14|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 562 148 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 565 150 JUMP ~[] destination: B10 -> B13  <||@
  Comment 565 block B13 null  <||@
  Comment 565 186 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 565 188 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 568 190 rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 575 192 r10|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 578 194 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 582 196 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B13 -> B26 falseDestination: B13 -> B15  <||@
  Comment 588 block B15 null  <||@
  Comment 588 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 588 204 r8|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 593 206 r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 597 208 r8|QWORD[*] = LEA [r8|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 605 210 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 609 212 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 612 218 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 619 214 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B15 -> B20 falseDestination: B15 -> B18  <||@
  Comment 625 block B20 null  <||@
  Comment 625 244 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 625 246 r9|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 629 248 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 632 250 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22  <||@
  Comment 638 block B22 null  <||@
  Comment 638 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 638 258 xmm0|V128_QWORD = H [r8|QWORD[*] + rcx|QWORD * 8] nZ: XMM oh: VMOVDQU  <||@
  Comment 644 260 J (address: [r11|QWORD[.] + rcx|QWORD * 8], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 650 262 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 654 264 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 657 266 JUMP ~[] destination: B22 -> B23  <||@
  Comment 657 block B23 null  <||@
  Comment 657 268 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 657 270 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 663 272 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 666 274 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B23 -> B26 falseDestination: B23 -> B25  <||@
  Comment 672 block B25 null  <||@
  Comment 672 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 672 282 r8|QWORD = MOV [r8|QWORD[*] + rcx|QWORD * 8] size: QWORD  <||@
  Comment 676 284 MOV (x: [r11|QWORD[.] + rcx|QWORD * 8], y: r8|QWORD) size: QWORD  <||@
  Comment 680 286 JUMP ~[] destination: B25 -> B26  <||@
  Comment 680 block B26 null  <||@
  Comment 680 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 680 290 r11|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 683 292 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 686 294 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B40  <||@
  Comment 692 block B40 null  <||@
  Comment 692 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 692 388 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 697 394 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3bb801e0 encoding: base: 0 shift: 3  <||@
  Comment 701 396 MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 705 398 r13|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 712 400 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 722 402 MOVB (x: [r13|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 727 404 MOVB (x: [r10|QWORD[.] + 16], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 731 406 r11|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 736 408 r14|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 741 410 r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 744 412 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 749 414 JUMP ~[] destination: B40 -> B43  <||@
  Comment 754 block B27 null  <||@
  Comment 754 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 754 298 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 8 + 16] size: QWORD  <||@
  Comment 759 300 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 762 302 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 766 304 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 769 310 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 776 306 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B27 -> B32 falseDestination: B27 -> B30  <||@
  Comment 782 block B32 null  <||@
  Comment 782 336 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 782 338 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 786 340 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 789 342 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B35 falseDestination: B32 -> B34  <||@
  Comment 795 block B34 null  <||@
  Comment 795 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 795 350 xmm0|V128_QWORD = L oc: SIMD<0,0>  <||@
  Comment 799 352 J (address: [r8|QWORD[.] + r9|QWORD * 8], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 805 354 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 809 356 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 812 358 JUMP ~[] destination: B34 -> B35  <||@
  Comment 812 block B35 null  <||@
  Comment 812 360 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 812 362 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 815 364 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 818 366 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B40 falseDestination: B35 -> B37  <||@
  Comment 820 block B37 null  <||@
  Comment 820 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 820 376 MOV (x: [r8|QWORD[.] + r9|QWORD * 8], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 824 380 JUMP ~[] destination: B37 -> B40  <||@
  Comment 829 block B18 loop 0 depth 1 header:521|LoopBegin  <||@
  Comment 829 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 832 230 xmm0|V256_QWORD = H [r8|QWORD[*] + rcx|QWORD * 8] nZ: YMM oh: VMOVDQU  <||@
  Comment 838 232 J (address: [r11|QWORD[.] + rcx|QWORD * 8], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 844 234 rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 848 236 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 851 238 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B20 falseDestination: B18 -> B18  <||@
  Comment 858 block B30 loop 1 depth 1 header:567|LoopBegin  <||@
  Comment 858 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 864 322 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 868 324 J (address: [r8|QWORD[.] + r9|QWORD * 8], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 874 326 r9|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 878 328 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 881 330 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B30 -> B32 falseDestination: B30 -> B30  <||@
  Comment 885 block B12 null  <||@
  Comment 885 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 885 154 stack:28|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 890 156 stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 895 158 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 900 160 stack:48|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 905 162 stack:56|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 910 168 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[J, resolved>}  <||@
  Comment 910 {meta{HotSpotType<[J, resolved>}}  <||@
  Comment 920 170 rbx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 922 172 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 925 174 rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 927 176 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 932 178 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 935 180 r14|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 938 182 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 938 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 943 [stack:8, stack:16, stack:36]at java.util.BitSet.or(BitSet.java:937) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:56|QWORD[.]  |stack:48|QWORD[.]  |-  |-   <||@
  Comment 944 184 JUMP ~[] destination: B12 -> B13  <||@
  Comment 949 block B1 null  <||@
  Comment 949 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 949 16 r11|DWORD = MOVE input: int[-31507|0xffffffffffff84ed]  <||@
  Comment 955 20 JUMP ~[] destination: B1 -> B6  <||@
  Comment 955 block B6 null  <||@
  Comment 955 66 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 955 18 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 958 68 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 965 70 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 972 72 DEOPT info [bci:0]  <||@
  Comment 972 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 977 [r10:0, r14:0]at java.util.BitSet.or(BitSet.java:937) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r10|QWORD[.]  |r14|QWORD[.]  |-  |-   <||@
  Comment 978 block B5 null  <||@
  Comment 978 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 978 60 r11|DWORD = MOVE input: int[-86881|0xfffffffffffeac9f]  <||@
  Comment 984 64 JUMP ~[] destination: B5 -> B6  <||@
  Comment 986 block B50 null  <||@
  Comment 986 482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 986 484 rsi|DWORD = MOVE input: int[-43291|0xffffffffffff56e5]  <||@
  Comment 991 486 JUMP ~[] destination: B50 -> B61  <||@
  Comment 996 block B51 null  <||@
  Comment 996 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 996 490 rsi|DWORD = MOVE input: int[-40987|0xffffffffffff5fe5]  <||@
  Comment 1001 492 JUMP ~[] destination: B51 -> B61  <||@
  Comment 1006 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1006 4  <||@
  Comment 1012 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 1012 5  <||@
  HexCodeFile>>> <|@
end_nmethod
