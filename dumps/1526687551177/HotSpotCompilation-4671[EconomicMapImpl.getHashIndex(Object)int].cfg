begin_compilation
  name " HotSpotCompilation-4671[org.graalvm.collections.EconomicMapImpl.getHashIndex(Object)]"
  method "HotSpotCompilation-4671[org.graalvm.collections.EconomicMapImpl.getHashIndex(Object)]"
  date 1526687580559
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a265 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a265  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v274 ?38 v277 v275 ?26 ?28 ?242 ?243 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a265 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a265 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 1]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v274 
=== Succesors ===
next: v9 
=== Usages ===
a133 v135 v194 v196 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v274 #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
stamp: void
=== Inputs ===
value: a265 
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a265  <|@  <|@
f <@~|@floating>@ <|@
tid i72 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i73 i129 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
rawvalue: 131072
stableDimension: 0
stamp: i32 [131072] ⇊0000000000020000 ⇈0000000000020000
stampKind: i32
value: int[131072|0x20000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 v125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 54]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i45 i104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i52 i106 i118 i122 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
rawvalue: 512
stableDimension: 0
stamp: i32 [512] ⇊0000000000000200 ⇈0000000000000200
stampKind: i32
value: int[512|0x200]
=== Inputs ===
=== Succesors ===
=== Usages ===
v58 v98 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a271 a267 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a270 a266 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v138 v170 v281 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a247 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v250 v260 ?28 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 4]
stamp: void
trueSuccessorProbability: 0.6701608957200011
=== Inputs ===
condition: v135 
=== Succesors ===
trueSuccessor: v7 
falseSuccessor: v8 
=== Usages ===
=== Predecessor ===
a265 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v135 #trueSuccessor: v7 #falseSuccessor: v8  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4604211492265762166
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v13 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v13  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
v7 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B9" 
    xhandlers
    flags 
    probability 4599613472986416404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v18  <|@  <|@
f <@~|@floating>@ <|@
tid a193 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
rawvalue: Equivalence$1@1531265431
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1531265431]
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a265 
y: a193 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a265 y: a193  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
stamp: void
trueSuccessorProbability: 0.8651541593949971
=== Inputs ===
condition: v194 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v16 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v194 #trueSuccessor: v17 #falseSuccessor: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4598812238814641692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v15  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
v17 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606781801714130052
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v13 v15 
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v13 v15 #next: v281  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 47
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a247 - 
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a247 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?28 
object: a2 
=== Succesors ===
next: i37 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?28 object: a2 #next: i37  <|@  <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@42ee2d49
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
i37 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?242 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
i37 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
bci: 48
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v170 
stateDuring: ?242 
=== Succesors ===
next: a266 
=== Usages ===
?38 i104 i103 
=== Predecessor ===
v281 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v170 stateDuring: ?242 #next: a266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a266 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v275 
=== Succesors ===
next: v283 
=== Usages ===
v279 v283 
=== Predecessor ===
i37 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v275 #next: v283  <|@  <|@
tid ?38 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - i37 
=== Succesors ===
=== Usages ===
v260 v283 i268 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?38 
object: a266 
=== Succesors ===
next: a267 
=== Usages ===
=== Predecessor ===
a266 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?38 object: a266 #next: a267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a267 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v277 
=== Succesors ===
next: i268 
=== Usages ===
v280 
=== Predecessor ===
v283 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v277 #next: i268  <|@  <|@
f <@~|@floating>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a267 
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i268 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?38 
guard: - 
address: v280 
=== Succesors ===
next: i269 
=== Usages ===
i129 i118 
=== Predecessor ===
a267 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?38 guard: - address: v280 #next: i269  <|@  <|@
f <@~|@floating>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a266 
=== Succesors ===
=== Usages ===
i269 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i269 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v279 
=== Succesors ===
next: v101 
=== Usages ===
v98 v125 
=== Predecessor ===
i268 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v279 #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i269 
y: i57 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i269 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i37 
y: i44 
=== Succesors ===
=== Usages ===
i103 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i37 y: i44  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$113/740208175@7c498486
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
stamp: i32
=== Inputs ===
x: i37 
y: i104 
=== Succesors ===
=== Usages ===
i123 i119 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i37 y: i104  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: void
trueSuccessorProbability: 0.816586191655617
=== Inputs ===
condition: v98 
=== Succesors ===
trueSuccessor: v99 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
i269 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v98 #trueSuccessor: v99 #falseSuccessor: v100  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4605203235701711747
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i268 
y: i51 
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i268 y: i51  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
stamp: i32
=== Inputs ===
x: i103 
y: i118 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i103 y: i118  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 67]
stamp: void
=== Inputs ===
result: i119 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i119 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4595482284340208645
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i269 
y: i67 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i269 y: i67  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v125 
=== Succesors ===
trueSuccessor: v222 
falseSuccessor: v224 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v125 #trueSuccessor: v222 #falseSuccessor: v224  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4595482284340208645
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i268 
y: i72 
=== Succesors ===
=== Usages ===
i122 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i268 y: i72  <|@  <|@
f <@~|@floating>@ <|@
tid i122 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
stamp: i32 [-1 - 1073741822]
=== Inputs ===
x: i129 
y: i51 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i129 y: i51  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
stamp: i32
=== Inputs ===
x: i103 
y: i122 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i103 y: i122  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 67]
stamp: void
=== Inputs ===
result: i123 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i123 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v260  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -47379
stableDimension: 0
stamp: i32 [-47379] ⇊00000000ffff46ed ⇈00000000ffff46ed
stampKind: i32
value: int[-47379|0xffffffffffff46ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?38 
actionAndReason: i264 
speculation: a247 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?38 actionAndReason: i264 speculation: a247  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4586570694409992130
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid a195 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
rawvalue: Equivalence$3@1032552445
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1032552445]
=== Inputs ===
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a265 
y: a195 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a265 y: a195  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v196 
=== Succesors ===
trueSuccessor: v228 
falseSuccessor: v226 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v196 #trueSuccessor: v228 #falseSuccessor: v226  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v227  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 391
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 134
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4586570694409992130
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i25 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i25  <|@  <|@
f <@~|@floating>@ <|@
tid a133 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 1]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a265 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a265  <|@  <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@220204d3
stamp: void
targetMethod: HotSpotMethod<Equivalence.hashCode(Object)>
=== Inputs ===
arguments: a133 a2 
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a133 a2  <|@  <|@
tid ?243 <|@
d <@d|@=== Debug Properties ===
bci: 40
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 395
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
bci: 40
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
polymorphic: false
stamp: i32
targetMethod: Direct#Equivalence.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v138 
stateDuring: ?243 
=== Succesors ===
next: a270 
=== Usages ===
?26 i45 i46 
=== Predecessor ===
v226 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v138 stateDuring: ?243 #next: a270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a270 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v275 
=== Succesors ===
next: v282 
=== Usages ===
v276 v282 
=== Predecessor ===
i25 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v275 #next: v282  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 395
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - i25 
=== Succesors ===
=== Usages ===
v250 v282 i272 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - i25  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?26 
object: a270 
=== Succesors ===
next: a271 
=== Usages ===
=== Predecessor ===
a270 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?26 object: a270 #next: a271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a271 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v277 
=== Succesors ===
next: i272 
=== Usages ===
v278 
=== Predecessor ===
v282 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v277 #next: i272  <|@  <|@
f <@~|@floating>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a271 
=== Succesors ===
=== Usages ===
i272 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i272 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v278 
=== Succesors ===
next: i273 
=== Usages ===
i73 i106 
=== Predecessor ===
a271 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v278 #next: i273  <|@  <|@
f <@~|@floating>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a270 
=== Succesors ===
=== Usages ===
i273 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i273 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v276 
=== Succesors ===
next: v61 
=== Usages ===
v58 v68 
=== Predecessor ===
i272 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v276 #next: v61  <|@  <|@
f <@~|@floating>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i273 
y: i57 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i273 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i25 
y: i44 
=== Succesors ===
=== Usages ===
i46 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i25 y: i44  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$113/740208175@7c498486
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
stamp: i32
=== Inputs ===
x: i25 
y: i45 
=== Succesors ===
=== Usages ===
i107 i53 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i25 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: void
trueSuccessorProbability: 0.816586191655617
=== Inputs ===
condition: v58 
=== Succesors ===
trueSuccessor: v59 
falseSuccessor: v60 
=== Usages ===
=== Predecessor ===
i273 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v58 #trueSuccessor: v59 #falseSuccessor: v60  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4585395035123425270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v108 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i272 
y: i51 
=== Succesors ===
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i272 y: i51  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
stamp: i32
=== Inputs ===
x: i46 
y: i106 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i46 y: i106  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 67]
stamp: void
=== Inputs ===
result: i107 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i107 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4575856258927320881
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v241 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v241  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i273 
y: i67 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i273 y: i67  <|@  <|@
f <@*|@fixed>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v68 
=== Succesors ===
trueSuccessor: v238 
falseSuccessor: v240 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v68 #trueSuccessor: v238 #falseSuccessor: v240  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 4575856258927320881
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i272 
y: i72 
=== Succesors ===
=== Usages ===
i52 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i272 y: i72  <|@  <|@
f <@~|@floating>@ <|@
tid i52 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
stamp: i32 [-1 - 1073741822]
=== Inputs ===
x: i73 
y: i51 
=== Succesors ===
=== Usages ===
i53 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i73 y: i51  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
stamp: i32
=== Inputs ===
x: i46 
y: i52 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i46 y: i52  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 67]
stamp: void
=== Inputs ===
result: i53 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i53 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v250 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v250  <|@  <|@
f <@~|@floating>@ <|@
tid i254 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -40467
stableDimension: 0
stamp: i32 [-40467] ⇊00000000ffff61ed ⇈00000000ffff61ed
stampKind: i32
value: int[-40467|0xffffffffffff61ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?26 
actionAndReason: i254 
speculation: a247 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?26 actionAndReason: i254 speculation: a247  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a265 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a265  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v274 ?38 v277 v275 ?26 ?28 ?242 ?243 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v274 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a265 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a265 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 1]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v274 
=== Succesors ===
next: v9 
=== Usages ===
a133 v135 v194 v196 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v274 #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
stamp: void
=== Inputs ===
value: a265 
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a265  <|@  <|@
f <@~|@floating>@ <|@
tid i72 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i73 i129 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
result int[131072|0x20000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
rawvalue: 131072
stableDimension: 0
stamp: i32 [131072] ⇊0000000000020000 ⇈0000000000020000
stampKind: i32
value: int[131072|0x20000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 v125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i44 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 54]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i45 i104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i52 i106 i118 i122 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
result int[512|0x200] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
rawvalue: 512
stableDimension: 0
stamp: i32 [512] ⇊0000000000000200 ⇈0000000000000200
stampKind: i32
value: int[512|0x200]
=== Inputs ===
=== Succesors ===
=== Usages ===
v58 v98 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v277 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a271 a267 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v275 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a270 a266 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v138 v170 v281 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a247 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v250 v260 ?28 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 4]
stamp: void
trueSuccessorProbability: 0.6701608957200011
=== Inputs ===
condition: v135 
=== Succesors ===
trueSuccessor: v7 
falseSuccessor: v8 
=== Usages ===
=== Predecessor ===
a265 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v135 #trueSuccessor: v7 #falseSuccessor: v8  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5165ea71 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6701608957200011 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4604211492265762166
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v13 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v13  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
v7 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B9" 
    xhandlers
    flags 
    probability 4599613472986416404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v18  <|@  <|@
f <@~|@floating>@ <|@
tid a193 <|@
result NarrowOop[Equivalence$1@1531265431] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
rawvalue: Equivalence$1@1531265431
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1531265431]
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a265 
y: a193 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a265 y: a193  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
stamp: void
trueSuccessorProbability: 0.8651541593949971
=== Inputs ===
condition: v194 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v16 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v194 #trueSuccessor: v17 #falseSuccessor: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1531265431] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8651541593949971 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4598812238814641692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v15  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
v17 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606781801714130052
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v13 v15 
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v13 v15 #next: v281  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 47
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a247 - 
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a247 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?28 
object: a2 
=== Succesors ===
next: i37 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?28 object: a2 #next: i37  <|@  <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@42ee2d49
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
i37 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?242 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
i37 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i37 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 48
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v170 
stateDuring: ?242 
=== Succesors ===
next: a266 
=== Usages ===
?38 i104 i103 
=== Predecessor ===
v281 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v170 stateDuring: ?242 #next: a266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a266 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v275 
=== Succesors ===
next: v283 
=== Usages ===
v279 v283 
=== Predecessor ===
i37 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v275 #next: v283  <|@  <|@
tid ?38 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - i37 
=== Succesors ===
=== Usages ===
v260 v283 i268 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?38 
object: a266 
=== Succesors ===
next: a267 
=== Usages ===
=== Predecessor ===
a266 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?38 object: a266 #next: a267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a267 <|@
result v5|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v277 
=== Succesors ===
next: i268 
=== Usages ===
v280 
=== Predecessor ===
v283 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v277 #next: i268  <|@  <|@
f <@~|@floating>@ <|@
tid v280 <|@
result [v5|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a267 
=== Succesors ===
=== Usages ===
i268 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i268 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?38 
guard: - 
address: v280 
=== Succesors ===
next: i269 
=== Usages ===
i129 i118 
=== Predecessor ===
a267 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?38 guard: - address: v280 #next: i269  <|@  <|@
f <@~|@floating>@ <|@
tid v279 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a266 
=== Succesors ===
=== Usages ===
i269 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i269 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v279 
=== Succesors ===
next: v101 
=== Usages ===
v98 v125 
=== Predecessor ===
i268 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v279 #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i269 
y: i57 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i269 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i37 
y: i44 
=== Succesors ===
=== Usages ===
i103 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i37 y: i44  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$113/740208175@7c498486
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
stamp: i32
=== Inputs ===
x: i37 
y: i104 
=== Succesors ===
=== Usages ===
i123 i119 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i37 y: i104  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: void
trueSuccessorProbability: 0.816586191655617
=== Inputs ===
condition: v98 
=== Succesors ===
trueSuccessor: v99 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
i269 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v98 #trueSuccessor: v99 #falseSuccessor: v100  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:47] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:48] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: v3|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v4|DWORD[.] * 8] state [bci:51] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: v3|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction v6|DWORD = MOV [v5|DWORD[.] * 8 + 12] size: DWORD state [bci:51] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR v3|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = XOR (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.816586191655617 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4605203235701711747
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i268 
y: i51 
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i268 y: i51  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
stamp: i32
=== Inputs ===
x: i103 
y: i118 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i103 y: i118  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 67]
stamp: void
=== Inputs ===
result: i119 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i119 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = AND (x: v9|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4595482284340208645
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i269 
y: i67 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i269 y: i67  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v125 
=== Succesors ===
trueSuccessor: v222 
falseSuccessor: v224 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v125 #trueSuccessor: v222 #falseSuccessor: v224  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4595482284340208645
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid i129 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i268 
y: i72 
=== Succesors ===
=== Usages ===
i122 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i268 y: i72  <|@  <|@
f <@~|@floating>@ <|@
tid i122 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
stamp: i32 [-1 - 1073741822]
=== Inputs ===
x: i129 
y: i51 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i129 y: i51  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
stamp: i32
=== Inputs ===
x: i103 
y: i122 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i103 y: i122  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 67]
stamp: void
=== Inputs ===
result: i123 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i123 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = DEC v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = AND (x: v9|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v260  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
result int[-47379|0xffffffffffff46ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -47379
stableDimension: 0
stamp: i32 [-47379] ⇊00000000ffff46ed ⇈00000000ffff46ed
stampKind: i32
value: int[-47379|0xffffffffffff46ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?38 
actionAndReason: i264 
speculation: a247 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?38 actionAndReason: i264 speculation: a247  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -47379 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: v3|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4586570694409992130
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid a195 <|@
result NarrowOop[Equivalence$3@1032552445] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
rawvalue: Equivalence$3@1032552445
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1032552445]
=== Inputs ===
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a265 
y: a195 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a265 y: a195  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v196 
=== Succesors ===
trueSuccessor: v228 
falseSuccessor: v226 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v196 #trueSuccessor: v228 #falseSuccessor: v226  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v227  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 391
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 134
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -34323 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4586570694409992130
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: i25 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i25  <|@  <|@
f <@~|@floating>@ <|@
tid a133 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 1]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a265 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a265  <|@  <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@220204d3
stamp: void
targetMethod: HotSpotMethod<Equivalence.hashCode(Object)>
=== Inputs ===
arguments: a133 a2 
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a133 a2  <|@  <|@
tid ?243 <|@
d <@d|@=== Debug Properties ===
bci: 40
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 395
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
i25 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i25 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 40
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
polymorphic: false
stamp: i32
targetMethod: Direct#Equivalence.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v138 
stateDuring: ?243 
=== Succesors ===
next: a270 
=== Usages ===
?26 i45 i46 
=== Predecessor ===
v226 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v138 stateDuring: ?243 #next: a270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a270 <|@
result v17|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v275 
=== Succesors ===
next: v282 
=== Usages ===
v276 v282 
=== Predecessor ===
i25 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v275 #next: v282  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 395
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - i25 
=== Succesors ===
=== Usages ===
v250 v282 i272 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - i25  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?26 
object: a270 
=== Succesors ===
next: a271 
=== Usages ===
=== Predecessor ===
a270 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?26 object: a270 #next: a271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a271 <|@
result v18|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v277 
=== Succesors ===
next: i272 
=== Usages ===
v278 
=== Predecessor ===
v282 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v277 #next: i272  <|@  <|@
f <@~|@floating>@ <|@
tid v278 <|@
result [v18|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a271 
=== Succesors ===
=== Usages ===
i272 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i272 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?26 
guard: - 
address: v278 
=== Succesors ===
next: i273 
=== Usages ===
i73 i106 
=== Predecessor ===
a271 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?26 guard: - address: v278 #next: i273  <|@  <|@
f <@~|@floating>@ <|@
tid v276 <|@
result [v17|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a270 
=== Succesors ===
=== Usages ===
i273 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i273 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v276 
=== Succesors ===
next: v61 
=== Usages ===
v58 v68 
=== Predecessor ===
i272 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v276 #next: v61  <|@  <|@
f <@~|@floating>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i273 
y: i57 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i273 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i25 
y: i44 
=== Succesors ===
=== Usages ===
i46 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i25 y: i44  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$113/740208175@7c498486
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
stamp: i32
=== Inputs ===
x: i25 
y: i45 
=== Succesors ===
=== Usages ===
i107 i53 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i25 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: void
trueSuccessorProbability: 0.816586191655617
=== Inputs ===
condition: v58 
=== Succesors ===
trueSuccessor: v59 
falseSuccessor: v60 
=== Usages ===
=== Predecessor ===
i273 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v58 #trueSuccessor: v59 #falseSuccessor: v60  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6401bc96 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:40] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: v16|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v17|DWORD[.] * 8] state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: v16|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction v19|DWORD = MOV [v18|DWORD[.] * 8 + 12] size: DWORD state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v17|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SHR v16|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = XOR (x: v16|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v20|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.816586191655617 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4585395035123425270
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v108 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i272 
y: i51 
=== Succesors ===
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i272 y: i51  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
stamp: i32
=== Inputs ===
x: i46 
y: i106 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i46 y: i106  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 67]
stamp: void
=== Inputs ===
result: i107 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i107 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = DEC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = AND (x: v22|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4575856258927320881
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v241 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v241  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i273 
y: i67 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i273 y: i67  <|@  <|@
f <@*|@fixed>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v68 
=== Succesors ===
trueSuccessor: v238 
falseSuccessor: v240 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v68 #trueSuccessor: v238 #falseSuccessor: v240  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v20|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 4575856258927320881
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i272 
y: i72 
=== Succesors ===
=== Usages ===
i52 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i272 y: i72  <|@  <|@
f <@~|@floating>@ <|@
tid i52 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
stamp: i32 [-1 - 1073741822]
=== Inputs ===
x: i73 
y: i51 
=== Succesors ===
=== Usages ===
i53 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i73 y: i51  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
stamp: i32
=== Inputs ===
x: i46 
y: i52 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i46 y: i52  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 67]
stamp: void
=== Inputs ===
result: i53 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i53 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SHR v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = DEC v25|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = AND (x: v22|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v250 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v250  <|@  <|@
f <@~|@floating>@ <|@
tid i254 <|@
result int[-40467|0xffffffffffff61ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -40467
stableDimension: 0
stamp: i32 [-40467] ⇊00000000ffff61ed ⇈00000000ffff61ed
stampKind: i32
value: int[-40467|0xffffffffffff61ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?26 
actionAndReason: i254 
speculation: a247 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?26 actionAndReason: i254 speculation: a247  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -40467 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: v16|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:43] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5165ea71 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6701608957200011 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4604211492265762166
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606781801714130052
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:47] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:48] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: v3|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v4|DWORD[.] * 8] state [bci:51] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: v3|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction v6|DWORD = MOV [v5|DWORD[.] * 8 + 12] size: DWORD state [bci:51] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR v3|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = XOR (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.816586191655617 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4605203235701711747
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = AND (x: v9|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B9" 
    xhandlers
    flags 
    probability 4599613472986416404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1531265431] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8651541593949971 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4598812238814641692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4595482284340208645
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4595482284340208645
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = DEC v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = AND (x: v9|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4586570694409992130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4586570694409992130
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6401bc96 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v15|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:40] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: v16|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v17|DWORD[.] * 8] state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: v16|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction v19|DWORD = MOV [v18|DWORD[.] * 8 + 12] size: DWORD state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v17|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SHR v16|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = XOR (x: v16|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v20|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.816586191655617 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4585395035123425270
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = DEC v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = AND (x: v22|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v24|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4575856258927320881
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v20|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 4575856258927320881
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SHR v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = DEC v25|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = AND (x: v22|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -34323 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -47379 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: v3|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -40467 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: v16|DWORD 
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:43] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #13         // strategy:org.graalvm.collections.Equivalence
     4: ifnull        47
     7: aload_0       
     8: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    11: getstatic     #32         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    14: if_acmpeq     47
    17: aload_0       
    18: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    21: getstatic     #31         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    24: if_acmpne     35
    27: aload_1       
    28: invokestatic  #45         // java.lang.System.identityHashCode:(java.lang.Object)int
    31: istore_2      
    32: goto          52
    35: aload_0       
    36: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    39: aload_1       
    40: invokevirtual #46         // org.graalvm.collections.Equivalence.hashCode:(java.lang.Object)int
    43: istore_2      
    44: goto          52
    47: aload_1       
    48: invokevirtual #47         // java.lang.Object.hashCode:()int
    51: istore_2      
    52: iload_2       
    53: iload_2       
    54: bipush        16
    56: iushr         
    57: ixor          
    58: istore_2      
    59: iload_2       
    60: aload_0       
    61: invokespecial #48         // getHashTableSize:()int
    64: iconst_1      
    65: isub          
    66: iand          
    67: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5165ea71 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.6701608957200011 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4604211492265762166
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction JUMP ~[] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606781801714130052
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rdx:0, stack:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
locals: stack:32|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:47] <|@ <|@
      nr   32  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:48] <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:51] <|@ <|@
      nr   42  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:51] <|@ <|@
      nr   46  <|@ instruction rdx|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr   50  <|@ instruction r11|DWORD = XOR (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction CMP rdx|DWORD y: 512 size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.816586191655617 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4605203235701711747
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r10|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction r11|DWORD = AND (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B9" 
    xhandlers
    flags 
    probability 4599613472986416404
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1531265431] <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.8651541593949971 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4598812238814641692
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4595482284340208645
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction CMP rdx|DWORD y: 131072 size: DWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4595482284340208645
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction r10|DWORD = SHR r10|DWORD size: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction r11|DWORD = AND (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4586570694409992130
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445] <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4586570694409992130
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6401bc96 encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:40] <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:43] <|@ <|@
      nr  120  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:43] <|@ <|@
      nr  124  <|@ instruction r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  126  <|@ instruction r8|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  128  <|@ instruction r8|DWORD = XOR (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction CMP r10|DWORD y: 512 size: DWORD <|@ <|@
      nr  132  <|@ instruction BRANCH trueDestinationProbability: 0.816586191655617 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4585395035123425270
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  138  <|@ instruction r8|DWORD = AND (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4575856258927320881
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction CMP r10|DWORD y: 131072 size: DWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 4575856258927320881
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction r11|DWORD = SHR r11|DWORD size: DWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  156  <|@ instruction r8|DWORD = AND (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r15|QWORD + 668] y: -34323 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction MOV [r15|QWORD + 668] y: -47379 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction MOV [r15|QWORD + 668] y: -40467 size: DWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  168  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:43] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #13         // strategy:org.graalvm.collections.Equivalence
     4: ifnull        47
     7: aload_0       
     8: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    11: getstatic     #32         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    14: if_acmpeq     47
    17: aload_0       
    18: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    21: getstatic     #31         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    24: if_acmpne     35
    27: aload_1       
    28: invokestatic  #45         // java.lang.System.identityHashCode:(java.lang.Object)int
    31: istore_2      
    32: goto          52
    35: aload_0       
    36: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    39: aload_1       
    40: invokevirtual #46         // org.graalvm.collections.Equivalence.hashCode:(java.lang.Object)int
    43: istore_2      
    44: goto          52
    47: aload_1       
    48: invokevirtual #47         // java.lang.Object.hashCode:()int
    51: istore_2      
    52: iload_2       
    53: iload_2       
    54: bipush        16
    56: iushr         
    57: ixor          
    58: istore_2      
    59: iload_2       
    60: aload_0       
    61: invokespecial #48         // getHashTableSize:()int
    64: iconst_1      
    65: isub          
    66: iand          
    67: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B4" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5165ea71 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.6701608957200011 condition: = trueDestination: B0 -> B4 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606781801714130052
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rdx:0, stack:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
locals: stack:32|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:47] <|@ <|@
      nr   32  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:48] <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:51] <|@ <|@
      nr   42  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:51] <|@ <|@
      nr   46  <|@ instruction rdx|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr   50  <|@ instruction r11|DWORD = XOR (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction CMP rdx|DWORD y: 512 size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.816586191655617 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4605203235701711747
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r10|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction r11|DWORD = AND (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B9" 
    xhandlers
    flags 
    probability 4599613472986416404
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1531265431] <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.8651541593949971 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4595482284340208645
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction CMP rdx|DWORD y: 131072 size: DWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4595482284340208645
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction r10|DWORD = SHR r10|DWORD size: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction r11|DWORD = AND (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rax|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4586570694409992130
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445] <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4586570694409992130
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6401bc96 encoding: base: 0 shift: 3 <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:40] <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:43] <|@ <|@
      nr  120  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:43] <|@ <|@
      nr  124  <|@ instruction r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  126  <|@ instruction r8|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  128  <|@ instruction r8|DWORD = XOR (x: rax|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction CMP r10|DWORD y: 512 size: DWORD <|@ <|@
      nr  132  <|@ instruction BRANCH trueDestinationProbability: 0.816586191655617 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 4585395035123425270
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  138  <|@ instruction r8|DWORD = AND (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4575856258927320881
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction CMP r10|DWORD y: 131072 size: DWORD <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 4575856258927320881
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction r11|DWORD = SHR r11|DWORD size: DWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  156  <|@ instruction r8|DWORD = AND (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV [r15|QWORD + 668] y: -34323 size: DWORD <|@ <|@
      nr  102  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  104  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction MOV [r15|QWORD + 668] y: -47379 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction MOV [r15|QWORD + 668] y: -40467 size: DWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  168  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:43] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #13         // strategy:org.graalvm.collections.Equivalence
     4: ifnull        47
     7: aload_0       
     8: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    11: getstatic     #32         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    14: if_acmpeq     47
    17: aload_0       
    18: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    21: getstatic     #31         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    24: if_acmpne     35
    27: aload_1       
    28: invokestatic  #45         // java.lang.System.identityHashCode:(java.lang.Object)int
    31: istore_2      
    32: goto          52
    35: aload_0       
    36: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    39: aload_1       
    40: invokevirtual #46         // org.graalvm.collections.Equivalence.hashCode:(java.lang.Object)int
    43: istore_2      
    44: goto          52
    47: aload_1       
    48: invokevirtual #47         // java.lang.Object.hashCode:()int
    51: istore_2      
    52: iload_2       
    53: iload_2       
    54: bipush        16
    56: iushr         
    57: ixor          
    58: istore_2      
    59: iload_2       
    60: aload_0       
    61: invokespecial #48         // getHashTableSize:()int
    64: iconst_1      
    65: isub          
    66: iand          
    67: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c241048893424448b56204585d20f856c0000008502488bf248b8ffffffffffffffff0f1f8000000000e80000000090488b34248b5618418504d4448b561c468b14d50c0000008b14d50c000000448bd841c1eb104433d881fa000200000f832a00000041ffca4523da418bc3488b6c24104883c418850500000000c5f877c34181faaddeadde748be92b00000081fa000002000f83dd00000041d1ea41ffca4523da418bc3488b6c24104883c418850500000000c5f877c34181faaddeadde0f849900000049c1e203498bf248b8ffffffffffffffff666690e80000000090488b3424448b5618438504d4448b5e1c468b1cdd0c000000468b14d50c000000448bc041c1e8104433c04181fa000200000f831c00000041ffcb4523c3418bc0488b6c24104883c418850500000000c5f877c34181fa000002000f834f00000041d1eb41ffcb4523c3418bc0488b6c24104883c418850500000000c5f877c341c7879c020000ed79ffff4d89a7a8020000e8000000009041c7879c020000ed46ffff4d89a7a8020000e8000000009041c7879c020000ed61ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5165ea71 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 52 8 r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 56 10 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 59 12 BRANCH trueDestinationProbability: 0.6701608957200011 condition: = trueDestination: B0 -> B4 falseDestination: B0 -> B2  <||@
  Comment 65 block B4 null  <||@
  Comment 65 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 65 30 NULLCHECK [rdx|QWORD[.]] state [bci:47]  <||@
  Comment 65 [rdx:0, stack:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47, duringCall: false, rethrow: false]
              |0                  |1             |2 
     locals:  |stack:32|QWORD[.]  |Object[null]  |-   <||@
  Comment 65 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 67 32 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 70 34 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:48]  <||@
  Comment 70 7  <||@
  Comment 87 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 92 [stack:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 93 36 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 97 38 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 100 40 NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:51]  <||@
  Comment 100 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |    <||@
  Comment 100 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 104 42 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 108 44 r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:51]  <||@
  Comment 108 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |    <||@
  Comment 108 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 116 46 rdx|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 123 48 r11|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 130 50 r11|DWORD = XOR (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 133 52 CMP rdx|DWORD y: 512 size: DWORD  <||@
  Comment 139 54 BRANCH trueDestinationProbability: 0.816586191655617 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 145 block B5 null  <||@
  Comment 145 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 145 58 r10|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 148 60 r11|DWORD = AND (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 151 62 rax|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 154 64 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 163 12  <||@
  Comment 173 block B2 null  <||@
  Comment 173 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 173 20 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1531265431]  <||@
  Comment 173 {NarrowOop[Equivalence$1@1531265431]}  <||@
  Comment 180 22 BRANCH trueDestinationProbability: 0.8651541593949971 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B9  <||@
  Comment 187 block B6 null  <||@
  Comment 187 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 187 68 CMP rdx|DWORD y: 131072 size: DWORD  <||@
  Comment 193 70 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 199 block B7 null  <||@
  Comment 199 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 199 74 r10|DWORD = SHR r10|DWORD size: DWORD  <||@
  Comment 202 76 r10|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 205 78 r11|DWORD = AND (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 208 80 rax|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 211 82 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 220 12  <||@
  Comment 230 block B9 null  <||@
  Comment 230 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 230 94 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445]  <||@
  Comment 230 {NarrowOop[Equivalence$3@1032552445]}  <||@
  Comment 237 96 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 243 block B11 null  <||@
  Comment 243 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 243 108 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6401bc96 encoding: base: 0 shift: 3  <||@
  Comment 247 110 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 250 112 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:40]  <||@
  Comment 250 7  <||@
  Comment 263 {HotSpotMethod<Equivalence.hashCode(Object)>}  <||@
  Comment 268 [stack:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 269 114 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 273 116 r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 277 118 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:43]  <||@
  Comment 277 [rsi:0, r10:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |    <||@
  Comment 277 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 281 120 r11|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 285 122 r11|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:43]  <||@
  Comment 285 [rsi:0, r10:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |    <||@
  Comment 285 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 293 124 r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 301 126 r8|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 308 128 r8|DWORD = XOR (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 311 130 CMP r10|DWORD y: 512 size: DWORD  <||@
  Comment 318 132 BRANCH trueDestinationProbability: 0.816586191655617 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 324 block B12 null  <||@
  Comment 324 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 324 136 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 327 138 r8|DWORD = AND (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 330 140 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 333 142 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 342 12  <||@
  Comment 352 block B13 null  <||@
  Comment 352 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 352 146 CMP r10|DWORD y: 131072 size: DWORD  <||@
  Comment 359 148 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 365 block B14 null  <||@
  Comment 365 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 365 152 r11|DWORD = SHR r11|DWORD size: DWORD  <||@
  Comment 368 154 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 371 156 r8|DWORD = AND (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 374 158 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 377 160 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 386 12  <||@
  Comment 396 block B10 null  <||@
  Comment 396 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 396 100 MOV [r15|QWORD + 668] y: -34323 size: DWORD  <||@
  Comment 407 102 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 414 104 DEOPT info [bci:0]  <||@
  Comment 414 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 419 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 420 block B8 null  <||@
  Comment 420 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 420 86 MOV [r15|QWORD + 668] y: -47379 size: DWORD  <||@
  Comment 431 88 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 438 90 DEOPT info [bci:51]  <||@
  Comment 438 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 443 [rsi:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |    <||@
  Comment 444 block B15 null  <||@
  Comment 444 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 444 164 MOV [r15|QWORD + 668] y: -40467 size: DWORD  <||@
  Comment 455 166 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 462 168 DEOPT info [bci:43]  <||@
  Comment 462 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 467 [rsi:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |    <||@
  Comment 468 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 468 4  <||@
  Comment 474 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 474 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4671[org.graalvm.collections.EconomicMapImpl.getHashIndex(Object)]"
  method "HotSpotCompilation-4671[org.graalvm.collections.EconomicMapImpl.getHashIndex(Object)]"
  date 1526687580659
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 119847a80 448b560849c1e203493bc20f85cfd31bff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c241048893424448b56204585d20f856c0000008502488bf248b8ffffffffffffffff0f1f8000000000e804d81bff90488b34248b5618418504d4448b561c468b14d50c0000008b14d50c000000448bd841c1eb104433d881fa000200000f832a00000041ffca4523da418bc3488b6c24104883c4188505dd4469f0c5f877c34181fade8902d8748be92b00000081fa000002000f83dd00000041d1ea41ffca4523da418bc3488b6c24104883c4188505a44469f0c5f877c34181fadfbd03d80f849900000049c1e203498bf248b8ffffffffffffffff666690e854d71bff90488b3424448b5618438504d4448b5e1c468b1cdd0c000000468b14d50c000000448bc041c1e8104433c04181fa000200000f831c00000041ffcb4523c3418bc0488b6c24104883c41885052a4469f0c5f877c34181fa000002000f834f00000041d1eb41ffcb4523c3418bc0488b6c24104883c4188505fe4369f0c5f877c341c7879c020000ed79ffff4d89a7a8020000e8dbe91bff9041c7879c020000ed46ffff4d89a7a8020000e8c3e91bff9041c7879c020000ed61ffff4d89a7a8020000e8abe91bff90e8477b5bff90e8a1e81bff90  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5165ea71 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 52 8 r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 56 10 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 59 12 BRANCH trueDestinationProbability: 0.6701608957200011 condition: = trueDestination: B0 -> B4 falseDestination: B0 -> B2  <||@
  Comment 65 block B4 null  <||@
  Comment 65 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 65 30 NULLCHECK [rdx|QWORD[.]] state [bci:47]  <||@
  Comment 65 [rdx:0, stack:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47, duringCall: false, rethrow: false]
              |0                  |1             |2 
     locals:  |stack:32|QWORD[.]  |Object[null]  |-   <||@
  Comment 65 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 67 32 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 70 34 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:48]  <||@
  Comment 70 7  <||@
  Comment 87 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 92 [stack:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 93 36 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 97 38 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 100 40 NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:51]  <||@
  Comment 100 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |    <||@
  Comment 100 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 104 42 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 108 44 r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:51]  <||@
  Comment 108 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |    <||@
  Comment 108 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 116 46 rdx|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 123 48 r11|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 130 50 r11|DWORD = XOR (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 133 52 CMP rdx|DWORD y: 512 size: DWORD  <||@
  Comment 139 54 BRANCH trueDestinationProbability: 0.816586191655617 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 145 block B5 null  <||@
  Comment 145 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 145 58 r10|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 148 60 r11|DWORD = AND (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 151 62 rax|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 154 64 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 163 12  <||@
  Comment 173 block B2 null  <||@
  Comment 173 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 173 20 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1531265431]  <||@
  Comment 173 {NarrowOop[Equivalence$1@1531265431]}  <||@
  Comment 180 22 BRANCH trueDestinationProbability: 0.8651541593949971 condition: = trueDestination: B2 -> B4 falseDestination: B2 -> B9  <||@
  Comment 187 block B6 null  <||@
  Comment 187 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 187 68 CMP rdx|DWORD y: 131072 size: DWORD  <||@
  Comment 193 70 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 199 block B7 null  <||@
  Comment 199 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 199 74 r10|DWORD = SHR r10|DWORD size: DWORD  <||@
  Comment 202 76 r10|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 205 78 r11|DWORD = AND (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 208 80 rax|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 211 82 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 220 12  <||@
  Comment 230 block B9 null  <||@
  Comment 230 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 230 94 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445]  <||@
  Comment 230 {NarrowOop[Equivalence$3@1032552445]}  <||@
  Comment 237 96 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 243 block B11 null  <||@
  Comment 243 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 243 108 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@6401bc96 encoding: base: 0 shift: 3  <||@
  Comment 247 110 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 250 112 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:40]  <||@
  Comment 250 7  <||@
  Comment 263 {HotSpotMethod<Equivalence.hashCode(Object)>}  <||@
  Comment 268 [stack:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 269 114 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 273 116 r10|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 277 118 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:43]  <||@
  Comment 277 [rsi:0, r10:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |    <||@
  Comment 277 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 281 120 r11|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 285 122 r11|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:43]  <||@
  Comment 285 [rsi:0, r10:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |    <||@
  Comment 285 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 293 124 r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 301 126 r8|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 308 128 r8|DWORD = XOR (x: rax|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 311 130 CMP r10|DWORD y: 512 size: DWORD  <||@
  Comment 318 132 BRANCH trueDestinationProbability: 0.816586191655617 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 324 block B12 null  <||@
  Comment 324 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 324 136 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 327 138 r8|DWORD = AND (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 330 140 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 333 142 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 342 12  <||@
  Comment 352 block B13 null  <||@
  Comment 352 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 352 146 CMP r10|DWORD y: 131072 size: DWORD  <||@
  Comment 359 148 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 365 block B14 null  <||@
  Comment 365 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 365 152 r11|DWORD = SHR r11|DWORD size: DWORD  <||@
  Comment 368 154 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 371 156 r8|DWORD = AND (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 374 158 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 377 160 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 386 12  <||@
  Comment 396 block B10 null  <||@
  Comment 396 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 396 100 MOV [r15|QWORD + 668] y: -34323 size: DWORD  <||@
  Comment 407 102 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 414 104 DEOPT info [bci:0]  <||@
  Comment 414 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 419 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 420 block B8 null  <||@
  Comment 420 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 420 86 MOV [r15|QWORD + 668] y: -47379 size: DWORD  <||@
  Comment 431 88 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 438 90 DEOPT info [bci:51]  <||@
  Comment 438 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 443 [rsi:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 51, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |    <||@
  Comment 444 block B15 null  <||@
  Comment 444 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 444 164 MOV [r15|QWORD + 668] y: -40467 size: DWORD  <||@
  Comment 455 166 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 462 168 DEOPT info [bci:43]  <||@
  Comment 462 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 467 [rsi:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 43, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |- 
     stack:   |rax|DWORD     |   |    <||@
  Comment 468 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 468 4  <||@
  Comment 474 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 474 5  <||@
  HexCodeFile>>> <|@
end_nmethod
