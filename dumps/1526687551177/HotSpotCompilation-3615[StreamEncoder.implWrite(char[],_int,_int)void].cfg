begin_compilation
  name " HotSpotCompilation-3615[sun.nio.cs.StreamEncoder.implWrite(char[], int, int)]"
  method "HotSpotCompilation-3615[sun.nio.cs.StreamEncoder.implWrite(char[], int, int)]"
  date 1526687561459
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i1644 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i1644  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/nio/cs/StreamEncoder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v1028 v1672 ?16 ?1423 v1675 v1676 ?103 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 a1415 v1671 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v190 i145 v192 v1565 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i145 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 265
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 - - 
=== Succesors ===
=== Usages ===
v1433 a1526 i1644 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1671 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1644 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v1671 
=== Succesors ===
next: v1253 
=== Usages ===
v173 v1569 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v1671 #next: v1253  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 5]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: i32
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
v175 v1567 v190 v173 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1644 
y: i145 
=== Succesors ===
=== Usages ===
v1253 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1644 y: i145  <|@  <|@
f <@~|@floating>@ <|@
tid a1430 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1433 v1506 v1478 v1449 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v173 
=== Succesors ===
trueSuccessor: v1252 
falseSuccessor: v1250 
=== Usages ===
=== Predecessor ===
i1644 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v173 #trueSuccessor: v1252 #falseSuccessor: v1250  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1434 
=== Usages ===
=== Predecessor ===
v1253 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1434  <|@  <|@
f <@~|@floating>@ <|@
tid i1435 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -241683
stableDimension: 0
stamp: i32 [-241683] ⇊00000000fffc4fed ⇈00000000fffc4fed
stampKind: i32
value: int[-241683|0xfffffffffffc4fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1431 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1434 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1427 
=== Predecessor ===
v1252 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1257 
=== Usages ===
=== Predecessor ===
v1253 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1257  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 ?227 v751 v497 v522 v567 v73 v611 v1571 v175 v192 v1563 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i145 
y: i10 
=== Succesors ===
=== Usages ===
v1257 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i145 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v175 
=== Succesors ===
trueSuccessor: v1256 
falseSuccessor: v1254 
=== Usages ===
=== Predecessor ===
v1250 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v175 #trueSuccessor: v1256 #falseSuccessor: v1254  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1436 
=== Usages ===
=== Predecessor ===
v1257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1436  <|@  <|@
f <@~|@floating>@ <|@
tid i1437 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -241939
stableDimension: 0
stamp: i32 [-241939] ⇊00000000fffc4eed ⇈00000000fffc4eed
stampKind: i32
value: int[-241939|0xfffffffffffc4eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1431 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1436 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1427 
=== Predecessor ===
v1256 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1261 
=== Usages ===
=== Predecessor ===
v1257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1261  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i145 
y: i3 
=== Succesors ===
=== Usages ===
v1261 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i145 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v190 
=== Succesors ===
trueSuccessor: v1260 
falseSuccessor: v1258 
=== Usages ===
=== Predecessor ===
v1254 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v190 #trueSuccessor: v1260 #falseSuccessor: v1258  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1438 
=== Usages ===
=== Predecessor ===
v1261 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1438  <|@  <|@
f <@~|@floating>@ <|@
tid i1439 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -242195
stableDimension: 0
stamp: i32 [-242195] ⇊00000000fffc4ded ⇈00000000fffc4ded
stampKind: i32
value: int[-242195|0xfffffffffffc4ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1431 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1438 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1427 
=== Predecessor ===
v1260 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1265 
=== Usages ===
=== Predecessor ===
v1261 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1265  <|@  <|@
f <@~|@floating>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i10 
=== Succesors ===
=== Usages ===
v1265 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v192 
=== Succesors ===
trueSuccessor: v1264 
falseSuccessor: v1262 
=== Usages ===
=== Predecessor ===
v1258 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v192 #trueSuccessor: v1264 #falseSuccessor: v1262  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1440 
=== Usages ===
=== Predecessor ===
v1265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1440  <|@  <|@
f <@~|@floating>@ <|@
tid i1441 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -242451
stableDimension: 0
stamp: i32 [-242451] ⇊00000000fffc4ced ⇈00000000fffc4ced
stampKind: i32
value: int[-242451|0xfffffffffffc4ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1431 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1427 
=== Predecessor ===
v1264 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B112" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1645 
=== Usages ===
=== Predecessor ===
v1265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1645  <|@  <|@
f <@~|@floating>@ <|@
tid v1672 <|@
d <@d|@=== Debug Properties ===
displacement: 23
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1645 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1645 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: StreamEncoder.haveLeftoverChar
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 9]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1672 
=== Succesors ===
next: v1269 
=== Usages ===
i951 
=== Predecessor ===
v1262 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1672 #next: v1269  <|@  <|@
f <@~|@floating>@ <|@
tid i951 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 9]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1645 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1645  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i951 
y: i10 
=== Succesors ===
=== Usages ===
v1269 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i951 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v1266 
falseSuccessor: v1268 
=== Usages ===
=== Predecessor ===
i1645 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v1266 #falseSuccessor: v1268  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1514 
=== Usages ===
=== Predecessor ===
v1269 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1514 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1533 
=== Usages ===
v1698 v1699 
=== Predecessor ===
v1266 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1533  <|@  <|@
f <@~|@floating>@ <|@
tid v1698 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1514 
index: - 
=== Succesors ===
=== Usages ===
j1533 v1535 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1514 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1533 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1698 
=== Succesors ===
next: j1534 
=== Usages ===
j1578 j1539 v1703 
=== Predecessor ===
j1514 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1698 #next: j1534  <|@  <|@
f <@~|@floating>@ <|@
tid v1699 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1514 
index: - 
=== Succesors ===
=== Usages ===
j1534 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1514 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1534 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1699 
=== Succesors ===
next: v1522 
=== Usages ===
v1519 
=== Predecessor ===
j1533 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1699 #next: v1522  <|@  <|@
f <@~|@floating>@ <|@
tid j1577 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1578 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1578 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1533 
y: j1577 
=== Succesors ===
=== Usages ===
v1519 v1535 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1533 y: j1577  <|@  <|@
f <@~|@floating>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1534 
y: j1578 
=== Succesors ===
=== Usages ===
v1522 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1534 y: j1578  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:281) [bci: 116]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v54 v117 v78 v1111 v1081 i309 i381 i341 i308 v889 a1526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1519 
=== Succesors ===
trueSuccessor: v1520 
falseSuccessor: v1521 
=== Usages ===
=== Predecessor ===
j1534 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1519 #trueSuccessor: v1520 #falseSuccessor: v1521  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1526 
=== Usages ===
=== Predecessor ===
v1522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1526  <|@  <|@
f <@~|@floating>@ <|@
tid v1512 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1580 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1526 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?5 
arguments: v1512 i1580 i41 
=== Succesors ===
next: j1527 
=== Usages ===
j1527 
=== Predecessor ===
v1520 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?5 arguments: v1512 i1580 i41 #next: j1527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1527 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1526 
=== Succesors ===
next: v1540 
=== Usages ===
j1539 
=== Predecessor ===
a1526 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1526 #next: v1540  <|@  <|@
f <@*|@fixed>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1537 
=== Predecessor ===
j1527 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1521 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1535 
=== Usages ===
=== Predecessor ===
v1522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1698 
value: j1578 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1531 
=== Usages ===
=== Predecessor ===
v1521 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1698 value: j1578 stateAfter: - lastLocationAccess: - #next: v1531  <|@  <|@
f <@~|@floating>@ <|@
tid v1703 <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j1533 
index: - 
=== Succesors ===
=== Usages ===
v1531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1533 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1703 
=== Succesors ===
next: v1538 
=== Usages ===
=== Predecessor ===
v1535 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1703 #next: v1538  <|@  <|@
f <@*|@fixed>@ <|@
tid v1538 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1537 
=== Predecessor ===
v1531 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1539 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1537 
values: j1533 j1527 
=== Succesors ===
=== Usages ===
v1702 v1701 a1411 v1704 v1705 v1706 v1707 v1708 v1709 v1710 v1711 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1537 values: j1533 j1527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1537 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1538 v1540 
=== Succesors ===
next: a1411 
=== Usages ===
j1539 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1538 v1540 #next: a1411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1411 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1539 
=== Succesors ===
next: j1551 
=== Usages ===
a1418 
=== Predecessor ===
v1537 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1539 #next: j1551  <|@  <|@
f <@~|@floating>@ <|@
tid v1545 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1546 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1546 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1545 
=== Succesors ===
=== Usages ===
v1700 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1545  <|@  <|@
f <@~|@floating>@ <|@
tid v1700 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1546 
index: - 
=== Succesors ===
=== Usages ===
j1551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1546 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1551 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1700 
=== Succesors ===
next: v1552 
=== Usages ===
v1552 
=== Predecessor ===
a1411 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1700 #next: v1552  <|@  <|@
f <@~|@floating>@ <|@
tid v1701 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1539 
index: - 
=== Succesors ===
=== Usages ===
v1552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1701 
value: j1551 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1556 
=== Usages ===
=== Predecessor ===
j1551 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1701 value: j1551 stateAfter: - lastLocationAccess: - #next: v1556  <|@  <|@
f <@~|@floating>@ <|@
tid v1702 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1539 
index: - 
=== Succesors ===
=== Usages ===
v1556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1539 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1556 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1702 
value: v1583 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1561 
=== Usages ===
=== Predecessor ===
v1552 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1702 value: v1583 stateAfter: - lastLocationAccess: - #next: v1561  <|@  <|@
f <@~|@floating>@ <|@
tid v1704 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1539 
index: - 
=== Succesors ===
=== Usages ===
v1561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1539 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1559 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4294967295
stableDimension: 0
stamp: i64 [4294967295] ⇊00000000ffffffff ⇈00000000ffffffff
stampKind: i64
value: long[4294967295|0xffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1561 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1561 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1704 
value: j1559 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1563 
=== Usages ===
=== Predecessor ===
v1556 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1704 value: j1559 stateAfter: - lastLocationAccess: - #next: v1563  <|@  <|@
f <@~|@floating>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j1539 
index: - 
=== Succesors ===
=== Usages ===
v1563 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1563 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1705 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1565 
=== Usages ===
=== Predecessor ===
v1561 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1705 value: i10 stateAfter: - lastLocationAccess: - #next: v1565  <|@  <|@
f <@~|@floating>@ <|@
tid v1706 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j1539 
index: - 
=== Succesors ===
=== Usages ===
v1565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1565 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1706 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1567 
=== Usages ===
=== Predecessor ===
v1563 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1706 value: i3 stateAfter: - lastLocationAccess: - #next: v1567  <|@  <|@
f <@~|@floating>@ <|@
tid v1707 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j1539 
index: - 
=== Succesors ===
=== Usages ===
v1567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1707 
value: i145 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1569 
=== Usages ===
=== Predecessor ===
v1565 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1707 value: i145 stateAfter: - lastLocationAccess: - #next: v1569  <|@  <|@
f <@~|@floating>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j1539 
index: - 
=== Succesors ===
=== Usages ===
v1569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1708 
value: i1644 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1571 
=== Usages ===
=== Predecessor ===
v1567 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1708 value: i1644 stateAfter: - lastLocationAccess: - #next: v1571  <|@  <|@
f <@~|@floating>@ <|@
tid v1709 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j1539 
index: - 
=== Succesors ===
=== Usages ===
v1571 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1709 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1574 
=== Usages ===
=== Predecessor ===
v1569 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1709 value: i10 stateAfter: - lastLocationAccess: - #next: v1574  <|@  <|@
f <@~|@floating>@ <|@
tid v1710 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j1539 
index: - 
=== Succesors ===
=== Usages ===
v1574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1539 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i1572 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i8
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1574 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1710 
value: i1572 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1576 
=== Usages ===
=== Predecessor ===
v1571 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1710 value: i1572 stateAfter: - lastLocationAccess: - #next: v1576  <|@  <|@
f <@~|@floating>@ <|@
tid v1711 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j1539 
index: - 
=== Succesors ===
=== Usages ===
v1576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1539 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1415 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n# [C
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v1576 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1711 
value: a1415 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1418 
=== Usages ===
=== Predecessor ===
v1574 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1711 value: a1415 stateAfter: - lastLocationAccess: - #next: a1418  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1418 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1411 
=== Succesors ===
next: v1419 
=== Usages ===
v1688 ?861 v1673 v1674 v1690 v1691 v1692 v1024 
=== Predecessor ===
v1576 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1411 #next: v1419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1419 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
a1418 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v1419 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B71" 
    successors "B14" "B110" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.0000058657907085
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v14 
=== Succesors ===
next: a1646 
=== Usages ===
v33 v46 v829 v1403 v1398 v1393 v1388 v1383 v1378 v1373 v1288 v1367 v1298 v1303 v1308 v1313 v1318 v1323 v1329 v1361 v1339 v1349 v1355 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v14 #next: a1646  <|@  <|@
f <@~|@floating>@ <|@
tid v1690 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a1418 
index: - 
=== Succesors ===
=== Usages ===
a1646 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1418 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1646 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.hb
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1690 
=== Succesors ===
next: v1712 
=== Usages ===
v1712 a1113 v1678 
=== Predecessor ===
v15 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1690 #next: v1712  <|@  <|@
tid a133 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@5cf3e7f
hasIdentity: true
objectId: 0
stamp: a!# Ljava/nio/HeapCharBuffer;
type: HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?212 ?1423 ?389 ?321 ?16 ?316 ?103 ?280 ?227 ?212 ?861 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?861 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a133 
materializedValue: a1418 
=== Succesors ===
=== Usages ===
?16 ?316 ?1422 ?280 ?385 ?321 ?525 ?1423 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a133 materializedValue: a1418  <|@  <|@
tid ?16 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - a133 - 
virtualObjectMappings: ?861 
=== Succesors ===
=== Usages ===
v1449 v1712 a1648 v1713 v1714 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - a133 - virtualObjectMappings: ?861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?16 
object: a1646 
=== Succesors ===
next: a1647 
=== Usages ===
=== Predecessor ===
a1646 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?16 object: a1646 #next: a1647  <|@  <|@
f <@~|@floating>@ <|@
tid v1676 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1647 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1647 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: StreamEncoder.bb
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 37]
nullCheck: false
stamp: n Ljava/nio/ByteBuffer;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1676 
=== Succesors ===
next: a1648 
=== Usages ===
a966 v1697 v1689 v1693 v1694 v1695 v1696 
=== Predecessor ===
v1712 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1676 #next: a1648  <|@  <|@
f <@~|@floating>@ <|@
tid v1693 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1647 
=== Succesors ===
=== Usages ===
a1648 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1648 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: true
stamp: n# [B
=== Inputs ===
stateBefore: ?16 
guard: - 
address: v1693 
=== Succesors ===
next: v1713 
=== Usages ===
?321 v1713 v1680 v1681 v1683 v1685 v1686 v1687 ?316 ?280 v1715 
=== Predecessor ===
a1647 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?16 guard: - address: v1693 #next: v1713  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?16 
object: a1648 
=== Succesors ===
next: i1649 
=== Usages ===
=== Predecessor ===
a1648 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?16 object: a1648 #next: i1649  <|@  <|@
f <@~|@floating>@ <|@
tid v1673 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1418 
index: - 
=== Succesors ===
=== Usages ===
i1649 i1666 v1068 i1669 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1418 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1649 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 24]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1673 
=== Succesors ===
next: i1650 
=== Usages ===
v66 i753 
=== Predecessor ===
v1713 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1673 #next: i1650  <|@  <|@
f <@~|@floating>@ <|@
tid v1674 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1418 
index: - 
=== Succesors ===
=== Usages ===
i1650 i1665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1418 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1650 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 24]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1674 
=== Succesors ===
next: v1289 
=== Usages ===
v66 i888 v495 i754 
=== Predecessor ===
i1649 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1674 #next: v1289  <|@  <|@
f <@~|@floating>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1649 
y: i1650 
=== Succesors ===
=== Usages ===
v1289 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1649 y: i1650  <|@  <|@
f <@*|@fixed>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 27]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v66 
=== Succesors ===
trueSuccessor: v1285 
falseSuccessor: v1288 
=== Usages ===
=== Predecessor ===
i1650 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v66 #trueSuccessor: v1285 #falseSuccessor: v1288  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1651 
=== Usages ===
=== Predecessor ===
v1289 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1651  <|@  <|@
f <@~|@floating>@ <|@
tid v1675 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1651 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1651 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: StreamEncoder.encoder
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 31]
nullCheck: false
stamp: n# Lsun/nio/cs/UTF_8$Encoder;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1675 
=== Succesors ===
next: v1714 
=== Usages ===
?316 v1714 v1677 ?321 ?227 ?280 
=== Predecessor ===
v1285 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1675 #next: v1714  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1714 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?16 
object: a1651 
=== Succesors ===
next: i1652 
=== Usages ===
=== Predecessor ===
a1651 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?16 object: a1651 #next: i1652  <|@  <|@
f <@~|@floating>@ <|@
tid v1691 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a1418 
index: - 
=== Succesors ===
=== Usages ===
i1652 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1418 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1652 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.isReadOnly
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1691 
=== Succesors ===
next: v1299 
=== Usages ===
i1116 
=== Predecessor ===
v1714 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1691 #next: v1299  <|@  <|@
f <@~|@floating>@ <|@
tid i1116 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1652 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1652  <|@  <|@
f <@~|@floating>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1116 
y: i10 
=== Succesors ===
=== Usages ===
v1299 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1116 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v611 
=== Succesors ===
trueSuccessor: v1295 
falseSuccessor: v1298 
=== Usages ===
=== Predecessor ===
i1652 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v611 #trueSuccessor: v1295 #falseSuccessor: v1298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1653 
=== Usages ===
=== Predecessor ===
v1299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1653  <|@  <|@
f <@~|@floating>@ <|@
tid v1694 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1647 
=== Succesors ===
=== Usages ===
i1653 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1653 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.isReadOnly
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1694 
=== Succesors ===
next: v1304 
=== Usages ===
i1125 
=== Predecessor ===
v1295 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1694 #next: v1304  <|@  <|@
f <@~|@floating>@ <|@
tid i1125 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1653 
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1653  <|@  <|@
f <@~|@floating>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1125 
y: i10 
=== Succesors ===
=== Usages ===
v1304 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1125 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v751 
=== Succesors ===
trueSuccessor: v1300 
falseSuccessor: v1303 
=== Usages ===
=== Predecessor ===
i1653 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v751 #trueSuccessor: v1300 #falseSuccessor: v1303  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1654 
=== Usages ===
=== Predecessor ===
v1304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1654  <|@  <|@
f <@~|@floating>@ <|@
tid v1677 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1651 
=== Succesors ===
=== Usages ===
i1654 v1081 v1111 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1654 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharsetEncoder.state
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 12]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1677 
=== Succesors ===
next: i1655 
=== Usages ===
v73 v78 
=== Predecessor ===
v1300 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1677 #next: i1655  <|@  <|@
f <@~|@floating>@ <|@
tid v1695 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1647 
=== Succesors ===
=== Usages ===
i1655 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1655 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 34]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1695 
=== Succesors ===
next: i1656 
=== Usages ===
i756 i758 i476 
=== Predecessor ===
i1654 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1695 #next: i1656  <|@  <|@
f <@~|@floating>@ <|@
tid v1697 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1647 
=== Succesors ===
=== Usages ===
i1656 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1656 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 49]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1697 
=== Succesors ===
next: i1657 
=== Usages ===
i758 v520 
=== Predecessor ===
i1655 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1697 #next: i1657  <|@  <|@
f <@~|@floating>@ <|@
tid v1696 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1647 
=== Succesors ===
=== Usages ===
i1657 v1075 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1657 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 38]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1696 
=== Succesors ===
next: i1658 
=== Usages ===
i756 
=== Predecessor ===
i1656 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1696 #next: i1658  <|@  <|@
f <@~|@floating>@ <|@
tid v1692 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1418 
index: - 
=== Succesors ===
=== Usages ===
i1658 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1418 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1658 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.offset
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1692 
=== Succesors ===
next: v1309 
=== Usages ===
i469 i754 i753 
=== Predecessor ===
i1657 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1692 #next: v1309  <|@  <|@
f <@~|@floating>@ <|@
tid i758 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 52]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i1655 
y: i1656 
=== Succesors ===
=== Usages ===
i760 i354 v334 i821 i821 ?316 ?321 ?280 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1655 y: i1656  <|@  <|@
f <@~|@floating>@ <|@
tid i756 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 41]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i1655 
y: i1657 
=== Succesors ===
=== Usages ===
i760 ?280 ?280 i820 i285 i1205 v1215 j1219 v1223 i1643 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1655 y: i1657  <|@  <|@
f <@~|@floating>@ <|@
tid i760 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 66]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i758 
y: i756 
=== Succesors ===
=== Usages ===
v775 i464 i464 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i758 y: i756  <|@  <|@
f <@~|@floating>@ <|@
tid i754 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:587) [bci: 24]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i1650 
y: i1658 
=== Succesors ===
=== Usages ===
i759 ?321 v322 v1238 ?316 i1229 ?280 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1650 y: i1658  <|@  <|@
f <@~|@floating>@ <|@
tid i753 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 13]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i1649 
y: i1658 
=== Succesors ===
=== Usages ===
i759 ?280 i284 j1204 v1212 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1649 y: i1658  <|@  <|@
f <@~|@floating>@ <|@
tid i759 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 61]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i754 
y: i753 
=== Succesors ===
=== Usages ===
v775 i464 i820 i464 i1643 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i754 y: i753  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i760 
y: i759 
=== Succesors ===
=== Usages ===
v778 v459 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i760 y: i759  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1654 
y: i41 
=== Succesors ===
=== Usages ===
v1309 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1654 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9953429630233886
=== Inputs ===
condition: v78 
=== Succesors ===
trueSuccessor: v1305 
falseSuccessor: v75 
=== Usages ===
=== Predecessor ===
i1658 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v78 #trueSuccessor: v1305 #falseSuccessor: v75  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607140524528326569
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1111 
=== Usages ===
=== Predecessor ===
v1309 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CharsetEncoder.state
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:573) [bci: 51]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1677 
value: i41 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v778 
=== Usages ===
=== Predecessor ===
v1305 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1677 value: i41 stateAfter: - lastLocationAccess: - #next: v778  <|@  <|@
f <@*|@fixed>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.6178512370566368
=== Inputs ===
condition: v775 
=== Succesors ===
trueSuccessor: v776 
falseSuccessor: v777 
=== Usages ===
=== Predecessor ===
v1111 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v775 #trueSuccessor: v776 #falseSuccessor: v777  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603714444319643983
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v782 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v782  <|@  <|@
f <@*|@fixed>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v776 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600523780335271091
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid i1643 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i756 
y: i759 
=== Succesors ===
=== Usages ===
i821 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i756 y: i759  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v777 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572019251726359622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v1309 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v76  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 15]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1654 
y: i10 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1654 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 15]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v74 
falseSuccessor: v1308 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v74 #falseSuccessor: v1308  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572019251726359622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:573) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1081 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1081  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CharsetEncoder.state
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:573) [bci: 51]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1677 
value: i41 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1677 value: i41 stateAfter: - lastLocationAccess: - #next: v459  <|@  <|@
f <@*|@fixed>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.6178512370566368
=== Inputs ===
condition: v775 
=== Succesors ===
trueSuccessor: v457 
falseSuccessor: v458 
=== Usages ===
=== Predecessor ===
v1081 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v775 #trueSuccessor: v457 #falseSuccessor: v458  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568781192793351174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v465 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v465  <|@  <|@
f <@*|@fixed>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v457 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565850200655571212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v463  <|@  <|@
f <@~|@floating>@ <|@
tid i820 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i756 
y: i759 
=== Succesors ===
=== Usages ===
i821 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i756 y: i759  <|@  <|@
f <@*|@fixed>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v458 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" "B18" "B19" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i464 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v462 
values: i759 i760 i760 i759 
=== Succesors ===
=== Usages ===
?280 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v462 values: i759 i760 i760 i759  <|@  <|@
f <@~|@floating>@ <|@
tid i821 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v462 
values: i820 i758 i758 i1643 
=== Succesors ===
=== Usages ===
i1205 v287 v1215 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v462 values: i820 i758 i758 i1643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v463 v465 v782 v783 
=== Succesors ===
next: i1659 
=== Usages ===
i464 i821 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v463 v465 v782 v783 #next: i1659  <|@  <|@
f <@~|@floating>@ <|@
tid v1678 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1646 
=== Succesors ===
=== Usages ===
i1659 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1659 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1678 
=== Succesors ===
next: v1600 
=== Usages ===
v1212 v1235 j1202 
=== Predecessor ===
v462 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1678 #next: v1600  <|@  <|@
f <@~|@floating>@ <|@
tid j1202 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1659 
=== Succesors ===
=== Usages ===
v1211 v1234 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1659  <|@  <|@
f <@~|@floating>@ <|@
tid i1205 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i32
=== Inputs ===
x: i821 
y: i756 
=== Succesors ===
=== Usages ===
j1206 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i821 y: i756  <|@  <|@
f <@~|@floating>@ <|@
tid j1206 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1205 
=== Succesors ===
=== Usages ===
j1208 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1205  <|@  <|@
f <@~|@floating>@ <|@
tid j1207 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1208 j1231 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1208 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1206 
y: j1207 
=== Succesors ===
=== Usages ===
j1209 j1220 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1206 y: j1207  <|@  <|@
f <@~|@floating>@ <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i756 
y: i821 
=== Succesors ===
=== Usages ===
v1600 v1616 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i756 y: i821  <|@  <|@
tid ?103 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 271
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - a133 - 
=== Succesors ===
=== Usages ===
?227 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - a133 -  <|@  <|@
f <@~|@floating>@ <|@
tid a966 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 37]
op: Uncompress
stamp: a Ljava/nio/ByteBuffer;
=== Inputs ===
value: a1647 
=== Succesors ===
=== Usages ===
?227 ?525 ?321 ?389 ?316 v1024 ?280 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1647  <|@  <|@
tid ?212 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a133 
materializedValue: a133 
=== Succesors ===
=== Usages ===
?227 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a133 materializedValue: a133  <|@  <|@
tid ?227 <|@
d <@d|@=== Debug Properties ===
bci: 57
code: ResolvedJavaMethodBytecode<CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: CharsetEncoder.java
sourceLine: 579
stackSize: 0
=== Inputs ===
outerFrameState: ?103 
values: a1651 a133 a966 i10 - - - 
virtualObjectMappings: ?212 
=== Succesors ===
=== Usages ===
?397 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?103 values: a1651 a133 a966 i10 - - - virtualObjectMappings: ?212  <|@  <|@
tid ?397 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 691
stackSize: 0
=== Inputs ===
outerFrameState: ?227 
values: - - - 
=== Succesors ===
=== Usages ===
?389 ?385 ?280 ?1422 ?316 ?321 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?227 values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a1113 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1646 
=== Succesors ===
=== Usages ===
?316 v1682 v1679 ?321 ?280 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1646  <|@  <|@
f <@*|@fixed>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1215 
=== Succesors ===
trueSuccessor: v1599 
falseSuccessor: v1596 
=== Usages ===
=== Predecessor ===
i1659 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1215 #trueSuccessor: v1599 #falseSuccessor: v1596  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1608 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1608  <|@  <|@
f <@~|@floating>@ <|@
tid j1204 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i753 
=== Succesors ===
=== Usages ===
j1209 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i753  <|@  <|@
f <@~|@floating>@ <|@
tid j1209 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1204 
y: j1208 
=== Succesors ===
=== Usages ===
v1211 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1204 y: j1208  <|@  <|@
f <@~|@floating>@ <|@
tid v1211 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1209 
y: j1202 
=== Succesors ===
=== Usages ===
v1608 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1209 y: j1202  <|@  <|@
f <@*|@fixed>@ <|@
tid v1608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1211 
=== Succesors ===
trueSuccessor: v1607 
falseSuccessor: v1604 
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1211 #trueSuccessor: v1607 #falseSuccessor: v1604  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1606 
=== Usages ===
=== Predecessor ===
v1608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1606  <|@  <|@
f <@~|@floating>@ <|@
tid v1212 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i753 
y: i1659 
=== Succesors ===
=== Usages ===
v1606 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i753 y: i1659  <|@  <|@
f <@*|@fixed>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1212 
=== Succesors ===
trueSuccessor: v1597 
falseSuccessor: v1605 
=== Usages ===
=== Predecessor ===
v1607 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1212 #trueSuccessor: v1597 #falseSuccessor: v1605  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1595 
=== Usages ===
=== Predecessor ===
v1606 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1595  <|@  <|@
f <@*|@fixed>@ <|@
tid v1595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1593 
=== Predecessor ===
v1597 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1603 
=== Usages ===
=== Predecessor ===
v1606 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1603  <|@  <|@
f <@*|@fixed>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1601 
=== Predecessor ===
v1605 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1602 
=== Usages ===
=== Predecessor ===
v1608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1602  <|@  <|@
f <@*|@fixed>@ <|@
tid v1602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1601 
=== Predecessor ===
v1604 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1602 v1603 
=== Succesors ===
next: v1313 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1602 v1603 #next: v1313  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1465 
=== Usages ===
=== Predecessor ===
v1601 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1465  <|@  <|@
f <@~|@floating>@ <|@
tid i1466 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -249371
stableDimension: 0
stamp: i32 [-249371] ⇊00000000fffc31e5 ⇈00000000fffc31e5
stampKind: i32
value: int[-249371|0xfffffffffffc31e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
v1313 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1594 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1594  <|@  <|@
f <@*|@fixed>@ <|@
tid v1594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1593 
=== Predecessor ===
v1596 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B27" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1594 v1595 
=== Succesors ===
next: v1616 
=== Usages ===
v1217 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1594 v1595 #next: v1616  <|@  <|@
f <@*|@fixed>@ <|@
tid v1616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1215 
=== Succesors ===
trueSuccessor: v1615 
falseSuccessor: v1612 
=== Usages ===
=== Predecessor ===
v1593 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1215 #trueSuccessor: v1615 #falseSuccessor: v1612  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1660 
=== Usages ===
=== Predecessor ===
v1616 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1660  <|@  <|@
f <@~|@floating>@ <|@
tid v1680 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1648 
=== Succesors ===
=== Usages ===
i1660 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1660 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1680 
=== Succesors ===
next: v1624 
=== Usages ===
v1223 j1218 
=== Predecessor ===
v1615 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1680 #next: v1624  <|@  <|@
f <@~|@floating>@ <|@
tid j1219 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i756 
=== Succesors ===
=== Usages ===
j1220 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i756  <|@  <|@
f <@~|@floating>@ <|@
tid j1220 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1208 
y: j1219 
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1208 y: j1219  <|@  <|@
f <@~|@floating>@ <|@
tid j1218 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1660 
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1660  <|@  <|@
f <@~|@floating>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1220 
y: j1218 
=== Succesors ===
=== Usages ===
v1624 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1220 y: j1218  <|@  <|@
f <@*|@fixed>@ <|@
tid v1624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1222 
=== Succesors ===
trueSuccessor: v1623 
falseSuccessor: v1620 
=== Usages ===
=== Predecessor ===
i1660 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1222 #trueSuccessor: v1623 #falseSuccessor: v1620  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1622 
=== Usages ===
=== Predecessor ===
v1624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1622  <|@  <|@
f <@~|@floating>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i756 
y: i1660 
=== Succesors ===
=== Usages ===
v1622 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i756 y: i1660  <|@  <|@
f <@*|@fixed>@ <|@
tid v1622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1223 
=== Succesors ===
trueSuccessor: v1613 
falseSuccessor: v1621 
=== Usages ===
=== Predecessor ===
v1623 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1223 #trueSuccessor: v1613 #falseSuccessor: v1621  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1611 
=== Usages ===
=== Predecessor ===
v1622 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1611  <|@  <|@
f <@*|@fixed>@ <|@
tid v1611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1609 
=== Predecessor ===
v1613 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1619 
=== Usages ===
=== Predecessor ===
v1622 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1619  <|@  <|@
f <@*|@fixed>@ <|@
tid v1619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1617 
=== Predecessor ===
v1621 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1618 
=== Usages ===
=== Predecessor ===
v1624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1618  <|@  <|@
f <@*|@fixed>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1617 
=== Predecessor ===
v1620 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1618 v1619 
=== Succesors ===
next: v1318 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1618 v1619 #next: v1318  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1471 
=== Usages ===
=== Predecessor ===
v1617 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1471  <|@  <|@
f <@~|@floating>@ <|@
tid i1472 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -255003
stableDimension: 0
stamp: i32 [-255003] ⇊00000000fffc1be5 ⇈00000000fffc1be5
stampKind: i32
value: int[-255003|0xfffffffffffc1be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
v1318 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B31" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1468 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-255003 - -249371] ⇊00000000fffc11e5 ⇈00000000fffc3be5
valueDescription: i32
=== Inputs ===
merge: v1464 
values: i1466 i1472 
=== Succesors ===
=== Usages ===
v1470 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1464 values: i1466 i1472  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1464 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1465 v1471 
=== Succesors ===
next: v1470 
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1465 v1471 #next: v1470  <|@  <|@
tid ?280 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 592
stackSize: 2
=== Inputs ===
outerFrameState: ?397 
values: a1651 a133 a966 a1113 i753 i754 a1648 i756 i758 - - - i756 i464 
virtualObjectMappings: ?861 
=== Succesors ===
=== Usages ===
v1470 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?397 values: a1651 a133 a966 a1113 i753 i754 a1648 i756 i758 - - - i756 i464 virtualObjectMappings: ?861  <|@  <|@
f <@~|@floating>@ <|@
tid a1467 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1860143242
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1860143242]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?280 
actionAndReason: i1468 
speculation: a1467 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1464 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?280 actionAndReason: i1468 speculation: a1467  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1610 
=== Usages ===
=== Predecessor ===
v1616 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1610  <|@  <|@
f <@*|@fixed>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1609 
=== Predecessor ===
v1612 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B36" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1610 v1611 
=== Succesors ===
next: v282 
=== Usages ===
v1227 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1610 v1611 #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid i1137 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1138 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
v1609 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B46" 
    successors "B45" "B48" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4628407492724222633
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i284 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v283 
values: i753 i309 
=== Succesors ===
=== Usages ===
j1228 v1238 v1679 v1235 i309 i1229 ?316 i319 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v283 values: i753 i309  <|@  <|@
f <@~|@floating>@ <|@
tid i285 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v283 
values: i756 i308 
=== Succesors ===
=== Usages ===
v1681 v287 ?316 i320 i308 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v283 values: i756 i308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 27.406449703577707
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v282 
=== Succesors ===
next: v293 
=== Usages ===
i284 i285 v289 v301 v315 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v282 #next: v293  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i285 
y: i821 
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i285 y: i821  <|@  <|@
f <@*|@fixed>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.96368033705285
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v288 
falseSuccessor: v289 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v288 #falseSuccessor: v289  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4628127312854812177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 80]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1661 
=== Usages ===
v1217 v1227 
=== Predecessor ===
v293 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1661  <|@  <|@
f <@~|@floating>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1593 v288 
=== Succesors ===
=== Usages ===
i1661 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1593 v288  <|@  <|@
f <@~|@floating>@ <|@
tid v1679 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1113 
index: i284 
=== Succesors ===
=== Usages ===
i1661 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1113 index: i284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1661 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1217 
address: v1679 
=== Succesors ===
next: v307 
=== Usages ===
v1138 i1140 
=== Predecessor ===
v288 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1217 address: v1679 #next: v307  <|@  <|@
f <@~|@floating>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1661 
y: i1137 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1661 y: i1137  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9998255660785367
=== Inputs ===
condition: v1138 
=== Succesors ===
trueSuccessor: v297 
falseSuccessor: v301 
=== Usages ===
=== Predecessor ===
i1661 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1138 #trueSuccessor: v297 #falseSuccessor: v301  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4628126016096438674
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 90]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1003 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1003  <|@  <|@
f <@~|@floating>@ <|@
tid v1227 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1609 v288 
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1609 v288  <|@  <|@
f <@~|@floating>@ <|@
tid v1681 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i285 
index: a1648 
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i285 index: a1648  <|@  <|@
f <@~|@floating>@ <|@
tid i1140 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 104]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1661 
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1661  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1227 
address: v1681 
value: i1140 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1227 address: v1681 value: i1140 stateAfter: - lastLocationAccess: - #next: v315  <|@  <|@
f <@~|@floating>@ <|@
tid i308 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i285 
y: i41 
=== Succesors ===
=== Usages ===
i285 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i285 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i309 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 100]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i284 
y: i41 
=== Succesors ===
=== Usages ===
i284 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i284 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v283 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1003 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v283  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571961544451550048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v283 
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v283 #next: v300  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
v301 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607140975366411019
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v283 
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v283 #next: v298  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
v289 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v298 v300 
=== Succesors ===
next: v1632 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v298 v300 #next: v1632  <|@  <|@
f <@~|@floating>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i284 
y: i754 
=== Succesors ===
=== Usages ===
v1632 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i284 y: i754  <|@  <|@
f <@*|@fixed>@ <|@
tid v1632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1238 
=== Succesors ===
trueSuccessor: v1631 
falseSuccessor: v1628 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1238 #trueSuccessor: v1631 #falseSuccessor: v1628  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1640 
=== Usages ===
=== Predecessor ===
v1632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1640  <|@  <|@
f <@~|@floating>@ <|@
tid j1228 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i284 
=== Succesors ===
=== Usages ===
j1232 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i284  <|@  <|@
f <@~|@floating>@ <|@
tid i1229 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i32
=== Inputs ===
x: i754 
y: i284 
=== Succesors ===
=== Usages ===
j1230 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i754 y: i284  <|@  <|@
f <@~|@floating>@ <|@
tid j1230 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1229 
=== Succesors ===
=== Usages ===
j1231 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1229  <|@  <|@
f <@~|@floating>@ <|@
tid j1231 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1230 
y: j1207 
=== Succesors ===
=== Usages ===
j1232 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1230 y: j1207  <|@  <|@
f <@~|@floating>@ <|@
tid j1232 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1228 
y: j1231 
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1228 y: j1231  <|@  <|@
f <@~|@floating>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1232 
y: j1202 
=== Succesors ===
=== Usages ===
v1640 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1232 y: j1202  <|@  <|@
f <@*|@fixed>@ <|@
tid v1640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1234 
=== Succesors ===
trueSuccessor: v1639 
falseSuccessor: v1636 
=== Usages ===
=== Predecessor ===
v1631 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1234 #trueSuccessor: v1639 #falseSuccessor: v1636  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1638 
=== Usages ===
=== Predecessor ===
v1640 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1638  <|@  <|@
f <@~|@floating>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i284 
y: i1659 
=== Succesors ===
=== Usages ===
v1638 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i284 y: i1659  <|@  <|@
f <@*|@fixed>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1235 
=== Succesors ===
trueSuccessor: v1629 
falseSuccessor: v1637 
=== Usages ===
=== Predecessor ===
v1639 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1235 #trueSuccessor: v1629 #falseSuccessor: v1637  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1627 
=== Usages ===
=== Predecessor ===
v1638 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1627  <|@  <|@
f <@*|@fixed>@ <|@
tid v1627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1625 
=== Predecessor ===
v1629 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1635 
=== Usages ===
=== Predecessor ===
v1638 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1635  <|@  <|@
f <@*|@fixed>@ <|@
tid v1635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1633 
=== Predecessor ===
v1637 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1634 
=== Usages ===
=== Predecessor ===
v1640 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1634  <|@  <|@
f <@*|@fixed>@ <|@
tid v1634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1633 
=== Predecessor ===
v1636 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1634 v1635 
=== Succesors ===
next: v1323 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1634 v1635 #next: v1323  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1321 
=== Usages ===
=== Predecessor ===
v1633 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1321  <|@  <|@
tid ?316 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: ?397 
values: a1651 a133 a966 a1113 i284 i754 a1648 i285 i758 - - - 
virtualObjectMappings: ?861 
=== Succesors ===
=== Usages ===
v1321 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?397 values: a1651 a133 a966 a1113 i284 i754 a1648 i285 i758 - - - virtualObjectMappings: ?861  <|@  <|@
f <@*|@fixed>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1006
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
reason: BoundsCheckException
speculation: Object[d.a@772285300]
stamp: void
=== Inputs ===
stateBefore: ?316 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1323 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?316  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1626 
=== Usages ===
=== Predecessor ===
v1632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1626  <|@  <|@
f <@*|@fixed>@ <|@
tid v1626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1625 
=== Predecessor ===
v1628 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B52" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1626 v1627 
=== Succesors ===
next: v317 
=== Usages ===
v1240 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1626 v1627 #next: v317  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
v1625 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B63" "B83" 
    successors "B60" "B90" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4607830099549312102
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i319 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v318 
values: i284 i381 i381 
=== Succesors ===
=== Usages ===
?321 v322 ?389 v1682 v1024 i469 i381 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v318 values: i284 i381 i381  <|@  <|@
f <@~|@floating>@ <|@
tid i320 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v318 
values: i285 i341 i395 
=== Succesors ===
=== Usages ===
?321 v1037 v334 v1024 i341 v1683 i395 i354 v1685 i394 ?389 i476 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v318 values: i285 i341 i395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.1438073067604162
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v317 
=== Succesors ===
next: v328 
=== Usages ===
i319 i320 v324 v336 v382 v396 v1372 v1328 v1348 v1354 v1360 v1366 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v317 #next: v328  <|@  <|@
f <@~|@floating>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i319 
y: i754 
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i319 y: i754  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.12574763249709253
=== Inputs ===
condition: v322 
=== Succesors ===
trueSuccessor: v323 
falseSuccessor: v324 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v322 #trueSuccessor: v323 #falseSuccessor: v324  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594350110784090454
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 116]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1662 
=== Usages ===
v1240 
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1662  <|@  <|@
f <@~|@floating>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1625 v323 
=== Succesors ===
=== Usages ===
i1662 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1625 v323  <|@  <|@
f <@~|@floating>@ <|@
tid v1682 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1113 
index: i319 
=== Succesors ===
=== Usages ===
i1662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1113 index: i319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1662 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1240 
address: v1682 
=== Succesors ===
next: i1663 
=== Usages ===
i1013 
=== Predecessor ===
v323 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1240 address: v1682 #next: i1663  <|@  <|@
f <@~|@floating>@ <|@
tid v1715 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1648 
=== Succesors ===
=== Usages ===
i1663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1663 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1715 
=== Succesors ===
next: v333 
=== Usages ===
v1037 v1057 
=== Predecessor ===
i1662 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1715 #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i320 
y: i1663 
=== Succesors ===
=== Usages ===
v1368 v1330 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i320 y: i1663  <|@  <|@
f <@~|@floating>@ <|@
tid i1013 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1662 
=== Succesors ===
=== Usages ===
v330 i342 i367 v347 i375 v483 i360 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1662  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 84]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i376 v330 i370 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1013 
y: i295 
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1013 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid i381 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i319 
y: i41 
=== Succesors ===
=== Usages ===
i319 i319 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i319 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 151]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i320 
y: i41 
=== Succesors ===
=== Usages ===
i320 v1686 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i320 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9463253509496284
=== Inputs ===
condition: v330 
=== Succesors ===
trueSuccessor: v331 
falseSuccessor: v332 
=== Usages ===
=== Predecessor ===
i1663 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v330 #trueSuccessor: v331 #falseSuccessor: v332  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B66" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594071963895501621
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i320 
y: i758 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i320 y: i758  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.999825479930192
=== Inputs ===
condition: v334 
=== Succesors ===
trueSuccessor: v335 
falseSuccessor: v336 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v334 #trueSuccessor: v335 #falseSuccessor: v336  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594071108058921348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 147]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1330 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1330  <|@  <|@
f <@*|@fixed>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1037 
=== Succesors ===
trueSuccessor: v1325 
falseSuccessor: v1328 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1037 #trueSuccessor: v1325 #falseSuccessor: v1328  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4594071108058921348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1023 
=== Usages ===
v1023 
=== Predecessor ===
v1330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1023  <|@  <|@
f <@~|@floating>@ <|@
tid v1683 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i320 
index: a1648 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i320 index: a1648  <|@  <|@
f <@~|@floating>@ <|@
tid i342 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 156]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1013 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1013  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1325 
address: v1683 
value: i342 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v1325 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1325 address: v1683 value: i342 stateAfter: - lastLocationAccess: - #next: v382  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v318 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v318  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1329 
=== Usages ===
=== Predecessor ===
v1330 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1329  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1474 
=== Usages ===
=== Predecessor ===
v1328 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1474  <|@  <|@
f <@~|@floating>@ <|@
tid i1475 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -260123
stableDimension: 0
stamp: i32 [-260123] ⇊00000000fffc07e5 ⇈00000000fffc07e5
stampKind: i32
value: int[-260123|0xfffffffffffc07e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1474 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
v1329 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537632238400317159
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 137]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: a384 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: a384  <|@  <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
returnStamp: a# Ljava/nio/charset/CoderResult;
signature: [Ljdk.vm.ci.meta.JavaType;@60fde432
stamp: void
targetMethod: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>
=== Inputs ===
arguments: a1418 i319 a966 i320 
=== Succesors ===
=== Usages ===
a384 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1418 i319 a966 i320  <|@  <|@
tid ?1422 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 602
stackSize: 0
=== Inputs ===
outerFrameState: ?397 
values: - - - - - - - - - - - - 
virtualObjectMappings: ?861 
=== Succesors ===
=== Usages ===
a384 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?397 values: - - - - - - - - - - - - virtualObjectMappings: ?861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a384 <|@
d <@d|@=== Debug Properties ===
bci: 143
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
polymorphic: false
stamp: a# Ljava/nio/charset/CoderResult;
targetMethod: Direct#UTF_8$Encoder.overflow
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1024 
stateDuring: ?1422 
=== Succesors ===
next: i1664 
=== Usages ===
?385 v1684 
=== Predecessor ===
v336 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1024 stateDuring: ?1422 #next: i1664  <|@  <|@
tid ?385 <|@
d <@d|@=== Debug Properties ===
bci: 146
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 602
stackSize: 1
=== Inputs ===
outerFrameState: ?397 
values: - - - - - - - - - - - - a384 
virtualObjectMappings: ?861 
=== Succesors ===
=== Usages ===
v1506 i1664 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?397 values: - - - - - - - - - - - - a384 virtualObjectMappings: ?861  <|@  <|@
f <@~|@floating>@ <|@
tid v1684 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a384 
index: - 
=== Succesors ===
=== Usages ===
i1664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a384 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1664 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CoderResult.type
nodeSourcePosition: at java.nio.charset.CoderResult.isOverflow(CoderResult.java:129) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 91]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?385 
guard: - 
address: v1684 
=== Succesors ===
next: v1340 
=== Usages ===
v117 v567 
=== Predecessor ===
a384 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?385 guard: - address: v1684 #next: v1340  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CoderResult.isUnderflow(CoderResult.java:120) [bci: 4]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:272) [bci: 48]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1664 
y: i10 
=== Succesors ===
=== Usages ===
v1340 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1664 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 105]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9999941683736323
=== Inputs ===
condition: v567 
=== Succesors ===
trueSuccessor: v33 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
i1664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v567 #trueSuccessor: v33 #falseSuccessor: v93  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4537632197514707335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 105]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: i1665 
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: i1665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1665 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1674 
=== Succesors ===
next: i1666 
=== Usages ===
i53 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1674 #next: i1666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1666 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1673 
=== Succesors ===
next: v1344 
=== Usages ===
i53 
=== Predecessor ===
i1665 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1673 #next: v1344  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
stamp: i32
=== Inputs ===
x: i1665 
y: i1666 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1665 y: i1666  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i41 
=== Succesors ===
=== Usages ===
v1344 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i53 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v1343 
falseSuccessor: v1341 
=== Usages ===
=== Predecessor ===
i1666 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v1343 #falseSuccessor: v1341  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1502 
=== Usages ===
=== Predecessor ===
v1344 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1502  <|@  <|@
f <@~|@floating>@ <|@
tid i1503 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -264211
stableDimension: 0
stamp: i32 [-264211] ⇊00000000fffbf7ed ⇈00000000fffbf7ed
stampKind: i32
value: int[-264211|0xfffffffffffbf7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1504 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1501 
=== Predecessor ===
v1343 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4537632197514707335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v1344 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:287) [bci: 155]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1341 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4459418990120258528
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 100]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CoderResult.isOverflow(CoderResult.java:129) [bci: 5]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 91]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1664 
y: i41 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1664 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 94]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v101 
falseSuccessor: v1339 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v101 #falseSuccessor: v1339  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4459418990120258528
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v44  <|@  <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@72f4ab7f
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.writeBytes()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1423 <|@
d <@d|@=== Debug Properties ===
bci: 141
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 282
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - a133 - 
virtualObjectMappings: ?861 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - a133 - virtualObjectMappings: ?861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
bci: 141
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.writeBytes
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1028 
stateDuring: ?1423 
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1028 stateDuring: ?1423 #next: v46  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
stamp: void
=== Inputs ===
loopBegin: v15 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v15  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 105]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1509 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1509  <|@  <|@
f <@~|@floating>@ <|@
tid i1510 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -263443
stableDimension: 0
stamp: i32 [-263443] ⇊00000000fffbfaed ⇈00000000fffbfaed
stampKind: i32
value: int[-263443|0xfffffffffffbfaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1504 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1501 
=== Predecessor ===
v1339 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1504 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-264211 - -262411] ⇊00000000fffbf2e5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v1501 
values: i1503 i1510 
=== Succesors ===
=== Usages ===
v1506 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1501 values: i1503 i1510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1502 v1509 
=== Succesors ===
next: v1506 
=== Usages ===
i1504 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1502 v1509 #next: v1506  <|@  <|@
f <@*|@fixed>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?385 
actionAndReason: i1504 
speculation: a1430 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1501 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?385 actionAndReason: i1504 speculation: a1430  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B75" "B77" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 161]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1350 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1350  <|@  <|@
f <@~|@floating>@ <|@
tid i346 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 163]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] ⇊0000000000000800 ⇈0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1013 
y: i346 
=== Succesors ===
=== Usages ===
v1350 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1013 y: i346  <|@  <|@
f <@*|@fixed>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v347 
=== Succesors ===
trueSuccessor: v1348 
falseSuccessor: v1345 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v347 #trueSuccessor: v1348 #falseSuccessor: v1345  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1349 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1349  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1479 
=== Usages ===
=== Predecessor ===
v1348 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1479  <|@  <|@
f <@~|@floating>@ <|@
tid i1480 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -264467
stableDimension: 0
stamp: i32 [-264467] ⇊00000000fffbf6ed ⇈00000000fffbf6ed
stampKind: i32
value: int[-264467|0xfffffffffffbf6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
v1349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B78" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1356 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1356  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] ⇊000000000000d800 ⇈000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1013 
y: i482 
=== Succesors ===
=== Usages ===
v1356 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1013 y: i482  <|@  <|@
f <@*|@fixed>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v483 
=== Succesors ===
trueSuccessor: v1351 
falseSuccessor: v1354 
=== Usages ===
=== Predecessor ===
v1345 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v483 #trueSuccessor: v1351 #falseSuccessor: v1354  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B81" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1362 
=== Usages ===
=== Predecessor ===
v1356 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1362  <|@  <|@
f <@~|@floating>@ <|@
tid i354 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 398]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i758 
y: i320 
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i758 y: i320  <|@  <|@
f <@~|@floating>@ <|@
tid i355 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 399]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v356 i395 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i354 
y: i355 
=== Succesors ===
=== Usages ===
v1362 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i354 y: i355  <|@  <|@
f <@*|@fixed>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v356 
=== Succesors ===
trueSuccessor: v1360 
falseSuccessor: v1357 
=== Usages ===
=== Predecessor ===
v1351 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v356 #trueSuccessor: v1360 #falseSuccessor: v1357  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1361 
=== Usages ===
=== Predecessor ===
v1362 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1361  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1483 
=== Usages ===
=== Predecessor ===
v1360 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1483  <|@  <|@
f <@~|@floating>@ <|@
tid i1484 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -264979
stableDimension: 0
stamp: i32 [-264979] ⇊00000000fffbf4ed ⇈00000000fffbf4ed
stampKind: i32
value: int[-264979|0xfffffffffffbf4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
v1361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B82" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1368 
=== Usages ===
=== Predecessor ===
v1362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1368  <|@  <|@
f <@*|@fixed>@ <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1037 
=== Succesors ===
trueSuccessor: v1363 
falseSuccessor: v1366 
=== Usages ===
=== Predecessor ===
v1357 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1037 #trueSuccessor: v1363 #falseSuccessor: v1366  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1374 
=== Usages ===
v1200 
=== Predecessor ===
v1368 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1374  <|@  <|@
f <@~|@floating>@ <|@
tid i393 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i394 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i394 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i320 
y: i393 
=== Succesors ===
=== Usages ===
v1057 v1687 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i320 y: i393  <|@  <|@
f <@~|@floating>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i394 
y: i1663 
=== Succesors ===
=== Usages ===
v1374 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i394 y: i1663  <|@  <|@
f <@*|@fixed>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1057 
=== Succesors ===
trueSuccessor: v1369 
falseSuccessor: v1372 
=== Usages ===
=== Predecessor ===
v1363 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1057 #trueSuccessor: v1369 #falseSuccessor: v1372  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1045 
=== Usages ===
v1200 
=== Predecessor ===
v1374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1045  <|@  <|@
f <@~|@floating>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1369 v1363 
=== Succesors ===
=== Usages ===
v1045 v1065 v1055 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1369 v1363  <|@  <|@
f <@~|@floating>@ <|@
tid v1685 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i320 
index: a1648 
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i320 index: a1648  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 425]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i360 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i360 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 427]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [0 - 15] ⇈000000000000000f
=== Inputs ===
x: i1013 
y: i359 
=== Succesors ===
=== Usages ===
i361 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1013 y: i359  <|@  <|@
f <@~|@floating>@ <|@
tid i358 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 420]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] ⇊00000000000000e0 ⇈00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i361 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i361 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 428]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [224 - 239] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
x: i360 
y: i358 
=== Succesors ===
=== Usages ===
i362 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i360 y: i358  <|@  <|@
f <@~|@floating>@ <|@
tid i362 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 429]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 8
stamp: i8 [-32 - -17] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
value: i361 
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1200 
address: v1685 
value: i362 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1055 
=== Usages ===
=== Predecessor ===
v1369 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1200 address: v1685 value: i362 stateAfter: - lastLocationAccess: - #next: v1055  <|@  <|@
f <@~|@floating>@ <|@
tid v1686 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i341 
index: a1648 
=== Succesors ===
=== Usages ===
v1055 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i341 index: a1648  <|@  <|@
f <@~|@floating>@ <|@
tid i366 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 443]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i367 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 445]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [0 - 1023] ⇈00000000000003ff
=== Inputs ===
x: i1013 
y: i366 
=== Succesors ===
=== Usages ===
i369 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1013 y: i366  <|@  <|@
f <@~|@floating>@ <|@
tid i368 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 446]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i369 i375 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i369 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 448]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i367 
y: i368 
=== Succesors ===
=== Usages ===
i370 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i367 y: i368  <|@  <|@
f <@~|@floating>@ <|@
tid i370 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 449]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i369 
y: i295 
=== Succesors ===
=== Usages ===
i371 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i369 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid i371 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 450]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i370 
=== Succesors ===
=== Usages ===
v1055 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1200 
address: v1686 
value: i371 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1065 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1200 address: v1686 value: i371 stateAfter: - lastLocationAccess: - #next: v1065  <|@  <|@
f <@~|@floating>@ <|@
tid v1687 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i394 
index: a1648 
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i394 index: a1648  <|@  <|@
f <@~|@floating>@ <|@
tid i375 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 466]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i1013 
y: i368 
=== Succesors ===
=== Usages ===
i376 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1013 y: i368  <|@  <|@
f <@~|@floating>@ <|@
tid i376 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 467]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i375 
y: i295 
=== Succesors ===
=== Usages ===
i377 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i375 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 468]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i376 
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1200 
address: v1687 
value: i377 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v1055 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1200 address: v1687 value: i377 stateAfter: - lastLocationAccess: - #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid i395 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 456]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i320 
y: i355 
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i320 y: i355  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v318 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1065 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v318  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1373 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1373  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1487 
=== Usages ===
=== Predecessor ===
v1372 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1487  <|@  <|@
f <@~|@floating>@ <|@
tid i1488 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -270875
stableDimension: 0
stamp: i32 [-270875] ⇊00000000fffbdde5 ⇈00000000fffbdde5
stampKind: i32
value: int[-270875|0xfffffffffffbdde5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
v1373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1367 
=== Usages ===
=== Predecessor ===
v1368 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1367  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1485 
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1485  <|@  <|@
f <@~|@floating>@ <|@
tid i1486 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -265755
stableDimension: 0
stamp: i32 [-265755] ⇊00000000fffbf1e5 ⇈00000000fffbf1e5
stampKind: i32
value: int[-265755|0xfffffffffffbf1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1485 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
v1367 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1355 
=== Usages ===
=== Predecessor ===
v1356 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1355  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1481 
=== Usages ===
=== Predecessor ===
v1354 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1481  <|@  <|@
f <@~|@floating>@ <|@
tid i1482 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -264723
stableDimension: 0
stamp: i32 [-264723] ⇊00000000fffbf5ed ⇈00000000fffbf5ed
stampKind: i32
value: int[-264723|0xfffffffffffbf5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
v1355 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 476]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1379 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1379  <|@  <|@
f <@~|@floating>@ <|@
tid i469 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 6]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i319 
y: i1658 
=== Succesors ===
=== Usages ===
v503 v495 v497 v1068 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i319 y: i1658  <|@  <|@
f <@~|@floating>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1650 
y: i469 
=== Succesors ===
=== Usages ===
v1379 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1650 y: i469  <|@  <|@
f <@*|@fixed>@ <|@
tid v1379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v495 
=== Succesors ===
trueSuccessor: v1378 
falseSuccessor: v1375 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v495 #trueSuccessor: v1378 #falseSuccessor: v1375  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1489 
=== Usages ===
=== Predecessor ===
v1379 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1489  <|@  <|@
f <@~|@floating>@ <|@
tid i1490 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -272915
stableDimension: 0
stamp: i32 [-272915] ⇊00000000fffbd5ed ⇈00000000fffbd5ed
stampKind: i32
value: int[-272915|0xfffffffffffbd5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
v1378 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1384 
=== Usages ===
=== Predecessor ===
v1379 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1384  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i469 
y: i10 
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i469 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v497 
=== Succesors ===
trueSuccessor: v1383 
falseSuccessor: v1380 
=== Usages ===
=== Predecessor ===
v1375 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v497 #trueSuccessor: v1383 #falseSuccessor: v1380  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1491 
=== Usages ===
=== Predecessor ===
v1384 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1491  <|@  <|@
f <@~|@floating>@ <|@
tid i1492 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -273171
stableDimension: 0
stamp: i32 [-273171] ⇊00000000fffbd4ed ⇈00000000fffbd4ed
stampKind: i32
value: int[-273171|0xfffffffffffbd4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
v1383 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1667 
=== Usages ===
=== Predecessor ===
v1384 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1667  <|@  <|@
f <@~|@floating>@ <|@
tid v1688 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1418 
index: - 
=== Succesors ===
=== Usages ===
i1667 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1418 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1667 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1688 
=== Succesors ===
next: v1389 
=== Usages ===
v503 
=== Predecessor ===
v1380 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1688 #next: v1389  <|@  <|@
f <@~|@floating>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i469 
y: i1667 
=== Succesors ===
=== Usages ===
v1389 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i469 y: i1667  <|@  <|@
f <@*|@fixed>@ <|@
tid v1389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v503 
=== Succesors ===
trueSuccessor: v1388 
falseSuccessor: v1385 
=== Usages ===
=== Predecessor ===
i1667 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v503 #trueSuccessor: v1388 #falseSuccessor: v1385  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1493 
=== Usages ===
=== Predecessor ===
v1389 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1493  <|@  <|@
f <@~|@floating>@ <|@
tid i1494 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274195
stableDimension: 0
stamp: i32 [-274195] ⇊00000000fffbd0ed ⇈00000000fffbd0ed
stampKind: i32
value: int[-274195|0xfffffffffffbd0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
v1388 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1394 
=== Usages ===
=== Predecessor ===
v1389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1394  <|@  <|@
f <@~|@floating>@ <|@
tid i476 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 17]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i320 
y: i1655 
=== Succesors ===
=== Usages ===
?525 v520 v522 v1075 v528 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i320 y: i1655  <|@  <|@
f <@~|@floating>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1656 
y: i476 
=== Succesors ===
=== Usages ===
v1394 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1656 y: i476  <|@  <|@
f <@*|@fixed>@ <|@
tid v1394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v520 
=== Succesors ===
trueSuccessor: v1393 
falseSuccessor: v1390 
=== Usages ===
=== Predecessor ===
v1385 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v520 #trueSuccessor: v1393 #falseSuccessor: v1390  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1495 
=== Usages ===
=== Predecessor ===
v1394 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1495  <|@  <|@
f <@~|@floating>@ <|@
tid i1496 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274451
stableDimension: 0
stamp: i32 [-274451] ⇊00000000fffbcfed ⇈00000000fffbcfed
stampKind: i32
value: int[-274451|0xfffffffffffbcfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
v1393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1399 
=== Usages ===
=== Predecessor ===
v1394 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1399  <|@  <|@
f <@~|@floating>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i476 
y: i10 
=== Succesors ===
=== Usages ===
v1399 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i476 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v522 
=== Succesors ===
trueSuccessor: v1398 
falseSuccessor: v1395 
=== Usages ===
=== Predecessor ===
v1390 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v522 #trueSuccessor: v1398 #falseSuccessor: v1395  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1497 
=== Usages ===
=== Predecessor ===
v1399 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1497  <|@  <|@
f <@~|@floating>@ <|@
tid i1498 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274707
stableDimension: 0
stamp: i32 [-274707] ⇊00000000fffbceed ⇈00000000fffbceed
stampKind: i32
value: int[-274707|0xfffffffffffbceed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
v1398 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B103" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1668 
=== Usages ===
=== Predecessor ===
v1399 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1668  <|@  <|@
f <@~|@floating>@ <|@
tid v1689 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1647 
=== Succesors ===
=== Usages ===
i1668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1668 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1689 
=== Succesors ===
next: v1404 
=== Usages ===
v528 
=== Predecessor ===
v1395 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1689 #next: v1404  <|@  <|@
f <@~|@floating>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i476 
y: i1668 
=== Succesors ===
=== Usages ===
v1404 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i476 y: i1668  <|@  <|@
f <@*|@fixed>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v528 
=== Succesors ===
trueSuccessor: v1403 
falseSuccessor: v1400 
=== Usages ===
=== Predecessor ===
i1668 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v528 #trueSuccessor: v1403 #falseSuccessor: v1400  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1499 
=== Usages ===
=== Predecessor ===
v1404 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1499  <|@  <|@
f <@~|@floating>@ <|@
tid i1500 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -275987
stableDimension: 0
stamp: i32 [-275987] ⇊00000000fffbc9ed ⇈00000000fffbc9ed
stampKind: i32
value: int[-275987|0xfffffffffffbc9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1499 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
v1403 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B65" "B76" "B89" "B80" "B87" "B85" "B91" "B93" "B95" "B97" "B99" "B101" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1476 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-275987 - -260123] ⇊00000000fff800e5 ⇈00000000ffffffed
valueDescription: i32
=== Inputs ===
merge: v1473 
values: i1475 i1480 i1482 i1484 i1486 i1488 i1490 i1492 i1494 i1496 i1498 i1500 
=== Succesors ===
=== Usages ===
v1478 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1473 values: i1475 i1480 i1482 i1484 i1486 i1488 i1490 i1492 i1494 i1496 i1498 i1500  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1474 v1479 v1481 v1483 v1485 v1487 v1489 v1491 v1493 v1495 v1497 v1499 
=== Succesors ===
next: v1478 
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1474 v1479 v1481 v1483 v1485 v1487 v1489 v1491 v1493 v1495 v1497 v1499 #next: v1478  <|@  <|@
tid ?321 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: ?397 
values: a1651 a133 a966 a1113 i319 i754 a1648 i320 i758 - - - 
virtualObjectMappings: ?861 
=== Succesors ===
=== Usages ===
v1478 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?397 values: a1651 a133 a966 a1113 i319 i754 a1648 i320 i758 - - - virtualObjectMappings: ?861  <|@  <|@
f <@*|@fixed>@ <|@
tid v1478 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?321 
actionAndReason: i1476 
speculation: a1430 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1473 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?321 actionAndReason: i1476 speculation: a1430  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B104" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1068 
=== Usages ===
=== Predecessor ===
v1404 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1068  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1673 
value: i469 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1075 
=== Usages ===
=== Predecessor ===
v1400 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1673 value: i469 stateAfter: - lastLocationAccess: - #next: v1075  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1696 
value: i476 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v829 
=== Usages ===
=== Predecessor ===
v1068 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1696 value: i476 stateAfter: - lastLocationAccess: - #next: v829  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:273) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: i1669 
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: i1669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1669 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1673 
=== Succesors ===
next: v1408 
=== Usages ===
i888 
=== Predecessor ===
v829 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1673 #next: v1408  <|@  <|@
f <@~|@floating>@ <|@
tid i888 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
stamp: i32
=== Inputs ===
x: i1650 
y: i1669 
=== Succesors ===
=== Usages ===
v889 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1650 y: i1669  <|@  <|@
f <@~|@floating>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i888 
y: i41 
=== Succesors ===
=== Usages ===
v1408 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i888 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v1408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v889 
=== Succesors ===
trueSuccessor: v1407 
falseSuccessor: v1405 
=== Usages ===
=== Predecessor ===
i1669 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v889 #trueSuccessor: v1407 #falseSuccessor: v1405  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1406 
=== Usages ===
=== Predecessor ===
v1408 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1406  <|@  <|@
tid ?389 <|@
d <@d|@=== Debug Properties ===
bci: 482
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 636
stackSize: 0
=== Inputs ===
outerFrameState: ?397 
values: - a133 a966 - i319 - - i320 - - - - 
=== Succesors ===
=== Usages ===
?481 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?397 values: - a133 a966 - i319 - - i320 - - - -  <|@  <|@
tid ?481 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<UTF_8.access$200(Buffer, int, Buffer, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 57
stackSize: 0
=== Inputs ===
outerFrameState: ?389 
values: - - - - 
=== Succesors ===
=== Usages ===
?531 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?389 values: - - - -  <|@  <|@
tid ?531 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<UTF_8.updatePositions(Buffer, int, Buffer, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 78
stackSize: 0
=== Inputs ===
outerFrameState: ?481 
values: - - - - 
=== Succesors ===
=== Usages ===
?525 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?481 values: - - - -  <|@  <|@
tid ?525 <|@
d <@d|@=== Debug Properties ===
bci: 25
code: ResolvedJavaMethodBytecode<Buffer.position(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rethrowException: false
sourceFile: Buffer.java
sourceLine: 246
stackSize: 0
=== Inputs ===
outerFrameState: ?531 
values: a966 i476 
virtualObjectMappings: ?861 
=== Succesors ===
=== Usages ===
v1406 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?531 values: a966 i476 virtualObjectMappings: ?861  <|@  <|@
f <@*|@fixed>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1080
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?525 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1407 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?525  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v891 
=== Usages ===
=== Predecessor ===
v1408 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v891  <|@  <|@
f <@*|@fixed>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:287) [bci: 155]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B111" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1462 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1462  <|@  <|@
f <@~|@floating>@ <|@
tid i1463 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -284179
stableDimension: 0
stamp: i32 [-284179] ⇊00000000fffba9ed ⇈00000000fffba9ed
stampKind: i32
value: int[-284179|0xfffffffffffba9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1447 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1444 
=== Predecessor ===
v1308 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B111" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1460 
=== Usages ===
=== Predecessor ===
v1304 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1460  <|@  <|@
f <@~|@floating>@ <|@
tid i1461 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -305171
stableDimension: 0
stamp: i32 [-305171] ⇊00000000fffb57ed ⇈00000000fffb57ed
stampKind: i32
value: int[-305171|0xfffffffffffb57ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1447 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1460 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1444 
=== Predecessor ===
v1303 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B111" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1458 
=== Usages ===
=== Predecessor ===
v1299 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1458  <|@  <|@
f <@~|@floating>@ <|@
tid i1459 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -304659
stableDimension: 0
stamp: i32 [-304659] ⇊00000000fffb59ed ⇈00000000fffb59ed
stampKind: i32
value: int[-304659|0xfffffffffffb59ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1447 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1458 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1444 
=== Predecessor ===
v1298 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B111" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1454 
=== Usages ===
=== Predecessor ===
v1289 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1454  <|@  <|@
f <@~|@floating>@ <|@
tid i1455 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -245523
stableDimension: 0
stamp: i32 [-245523] ⇊00000000fffc40ed ⇈00000000fffc40ed
stampKind: i32
value: int[-245523|0xfffffffffffc40ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1447 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1444 
=== Predecessor ===
v1288 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B109" "B108" "B107" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1447 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-305427 - -245523] ⇊00000000fff800e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1444 
values: i1455 i1459 i1461 i1463 
=== Succesors ===
=== Usages ===
v1449 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1444 values: i1455 i1459 i1461 i1463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1454 v1458 v1460 v1462 
=== Succesors ===
next: v1449 
=== Usages ===
i1447 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1454 v1458 v1460 v1462 #next: v1449  <|@  <|@
f <@*|@fixed>@ <|@
tid v1449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?16 
actionAndReason: i1447 
speculation: a1430 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1444 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?16 actionAndReason: i1447 speculation: a1430  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1442 
=== Usages ===
=== Predecessor ===
v1269 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1442  <|@  <|@
f <@~|@floating>@ <|@
tid i1443 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -243731
stableDimension: 0
stamp: i32 [-243731] ⇊00000000fffc47ed ⇈00000000fffc47ed
stampKind: i32
value: int[-243731|0xfffffffffffc47ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1431 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1427 
=== Predecessor ===
v1268 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B112" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1431 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-243731 - -240395] ⇊00000000fffc44e5 ⇈00000000fffc5ffd
valueDescription: i32
=== Inputs ===
merge: v1427 
values: i1435 i1437 i1439 i1441 i1443 
=== Succesors ===
=== Usages ===
v1433 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1427 values: i1435 i1437 i1439 i1441 i1443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1434 v1436 v1438 v1440 v1442 
=== Succesors ===
next: v1433 
=== Usages ===
i1431 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1434 v1436 v1438 v1440 v1442 #next: v1433  <|@  <|@
f <@*|@fixed>@ <|@
tid v1433 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i1431 
speculation: a1430 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1427 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i1431 speculation: a1430  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i1644 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i1644  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/nio/cs/StreamEncoder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v1028 v1672 ?16 ?1423 v1675 v1676 ?103 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 a1415 v1671 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v190 i145 v192 v1565 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i145 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 265
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 - - 
=== Succesors ===
=== Usages ===
v1433 a1526 i1644 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1671 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1644 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v1671 
=== Succesors ===
next: v1253 
=== Usages ===
v173 v1569 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v1671 #next: v1253  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 5]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: i32
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
v175 v1567 v190 v173 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1644 
y: i145 
=== Succesors ===
=== Usages ===
v1253 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1644 y: i145  <|@  <|@
f <@~|@floating>@ <|@
tid a1430 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1433 v1506 v1478 v1449 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v173 
=== Succesors ===
trueSuccessor: v1252 
falseSuccessor: v1250 
=== Usages ===
=== Predecessor ===
i1644 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v173 #trueSuccessor: v1252 #falseSuccessor: v1250  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1d0825d6 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1434 
=== Usages ===
=== Predecessor ===
v1253 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1434  <|@  <|@
f <@~|@floating>@ <|@
tid i1435 <|@
result int[-241683|0xfffffffffffc4fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -241683
stableDimension: 0
stamp: i32 [-241683] ⇊00000000fffc4fed ⇈00000000fffc4fed
stampKind: i32
value: int[-241683|0xfffffffffffc4fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1431 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1434 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1427 
=== Predecessor ===
v1252 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-241683|0xfffffffffffc4fed]] destination: B1 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1257 
=== Usages ===
=== Predecessor ===
v1253 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1257  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 ?227 v751 v497 v522 v567 v73 v611 v1571 v175 v192 v1563 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i145 
y: i10 
=== Succesors ===
=== Usages ===
v1257 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i145 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v175 
=== Succesors ===
trueSuccessor: v1256 
falseSuccessor: v1254 
=== Usages ===
=== Predecessor ===
v1250 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v175 #trueSuccessor: v1256 #falseSuccessor: v1254  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1436 
=== Usages ===
=== Predecessor ===
v1257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1436  <|@  <|@
f <@~|@floating>@ <|@
tid i1437 <|@
result int[-241939|0xfffffffffffc4eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -241939
stableDimension: 0
stamp: i32 [-241939] ⇊00000000fffc4eed ⇈00000000fffc4eed
stampKind: i32
value: int[-241939|0xfffffffffffc4eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1431 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1436 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1427 
=== Predecessor ===
v1256 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-241939|0xfffffffffffc4eed]] destination: B3 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:274) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:201) [bci: 55]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1261 
=== Usages ===
=== Predecessor ===
v1257 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1261  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i145 
y: i3 
=== Succesors ===
=== Usages ===
v1261 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i145 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v190 
=== Succesors ===
trueSuccessor: v1260 
falseSuccessor: v1258 
=== Usages ===
=== Predecessor ===
v1254 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v190 #trueSuccessor: v1260 #falseSuccessor: v1258  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1438 
=== Usages ===
=== Predecessor ===
v1261 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1438  <|@  <|@
f <@~|@floating>@ <|@
tid i1439 <|@
result int[-242195|0xfffffffffffc4ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -242195
stableDimension: 0
stamp: i32 [-242195] ⇊00000000fffc4ded ⇈00000000fffc4ded
stampKind: i32
value: int[-242195|0xfffffffffffc4ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1431 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1438 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1427 
=== Predecessor ===
v1260 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-242195|0xfffffffffffc4ded]] destination: B5 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1265 
=== Usages ===
=== Predecessor ===
v1261 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1265  <|@  <|@
f <@~|@floating>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i10 
=== Succesors ===
=== Usages ===
v1265 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v192 
=== Succesors ===
trueSuccessor: v1264 
falseSuccessor: v1262 
=== Usages ===
=== Predecessor ===
v1258 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v192 #trueSuccessor: v1264 #falseSuccessor: v1262  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1440 
=== Usages ===
=== Predecessor ===
v1265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1440  <|@  <|@
f <@~|@floating>@ <|@
tid i1441 <|@
result int[-242451|0xfffffffffffc4ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -242451
stableDimension: 0
stamp: i32 [-242451] ⇊00000000fffc4ced ⇈00000000fffc4ced
stampKind: i32
value: int[-242451|0xfffffffffffc4ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1431 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1427 
=== Predecessor ===
v1264 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-242451|0xfffffffffffc4ced]] destination: B7 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B112" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at java.nio.Buffer.<init>(Buffer.java:202) [bci: 61]
at java.nio.CharBuffer.<init>(CharBuffer.java:281) [bci: 6]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:70) [bci: 10]
at java.nio.CharBuffer.wrap(CharBuffer.java:373) [bci: 7]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1645 
=== Usages ===
=== Predecessor ===
v1265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1645  <|@  <|@
f <@~|@floating>@ <|@
tid v1672 <|@
result [v0|QWORD[.] + 23] <|@
d <@d|@=== Debug Properties ===
displacement: 23
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1645 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1645 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: StreamEncoder.haveLeftoverChar
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 9]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1672 
=== Succesors ===
next: v1269 
=== Usages ===
i951 
=== Predecessor ===
v1262 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1672 #next: v1269  <|@  <|@
f <@~|@floating>@ <|@
tid i951 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 9]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1645 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1645  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i951 
y: i10 
=== Succesors ===
=== Usages ===
v1269 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i951 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v1266 
falseSuccessor: v1268 
=== Usages ===
=== Predecessor ===
i1645 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v1266 #falseSuccessor: v1268  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVZXB [v0|QWORD[.] + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1514 
=== Usages ===
=== Predecessor ===
v1269 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1514 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1533 
=== Usages ===
v1698 v1699 
=== Predecessor ===
v1266 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1533  <|@  <|@
f <@~|@floating>@ <|@
tid v1698 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1514 
index: - 
=== Succesors ===
=== Usages ===
j1533 v1535 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1514 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1533 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1698 
=== Succesors ===
next: j1534 
=== Usages ===
j1578 j1539 v1703 
=== Predecessor ===
j1514 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1698 #next: j1534  <|@  <|@
f <@~|@floating>@ <|@
tid v1699 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1514 
index: - 
=== Succesors ===
=== Usages ===
j1534 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1514 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1534 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1699 
=== Succesors ===
next: v1522 
=== Usages ===
v1519 
=== Predecessor ===
j1533 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1699 #next: v1522  <|@  <|@
f <@~|@floating>@ <|@
tid j1577 <|@
result long[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1578 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1578 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1533 
y: j1577 
=== Succesors ===
=== Usages ===
v1519 v1535 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1533 y: j1577  <|@  <|@
f <@~|@floating>@ <|@
tid v1519 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1534 
y: j1578 
=== Succesors ===
=== Usages ===
v1522 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1534 y: j1578  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:281) [bci: 116]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v54 v117 v78 v1111 v1081 i309 i381 i341 i308 v889 a1526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1522 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1519 
=== Succesors ===
trueSuccessor: v1520 
falseSuccessor: v1521 
=== Usages ===
=== Predecessor ===
j1534 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1519 #trueSuccessor: v1520 #falseSuccessor: v1521  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA [v7|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1526 
=== Usages ===
=== Predecessor ===
v1522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1526  <|@  <|@
f <@~|@floating>@ <|@
tid v1512 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1580 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1526 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?5 
arguments: v1512 i1580 i41 
=== Succesors ===
next: j1527 
=== Usages ===
j1527 
=== Predecessor ===
v1520 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?5 arguments: v1512 i1580 i41 #next: j1527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1527 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1526 
=== Succesors ===
next: v1540 
=== Usages ===
j1539 
=== Predecessor ===
a1526 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1526 #next: v1540  <|@  <|@
f <@*|@fixed>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1537 
=== Predecessor ===
j1527 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1521 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1535 
=== Usages ===
=== Predecessor ===
v1522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1698 
value: j1578 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1531 
=== Usages ===
=== Predecessor ===
v1521 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1698 value: j1578 stateAfter: - lastLocationAccess: - #next: v1531  <|@  <|@
f <@~|@floating>@ <|@
tid v1703 <|@
result [v7|QWORD + 240] <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j1533 
index: - 
=== Succesors ===
=== Usages ===
v1531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1533 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1703 
=== Succesors ===
next: v1538 
=== Usages ===
=== Predecessor ===
v1535 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1703 #next: v1538  <|@  <|@
f <@*|@fixed>@ <|@
tid v1538 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1537 
=== Predecessor ===
v1531 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v7|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1539 <|@
result v11|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1537 
values: j1533 j1527 
=== Succesors ===
=== Usages ===
v1702 v1701 a1411 v1704 v1705 v1706 v1707 v1708 v1709 v1710 v1711 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1537 values: j1533 j1527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1537 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1538 v1540 
=== Succesors ===
next: a1411 
=== Usages ===
j1539 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1538 v1540 #next: a1411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1411 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1539 
=== Succesors ===
next: j1551 
=== Usages ===
a1418 
=== Predecessor ===
v1537 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1539 #next: j1551  <|@  <|@
f <@~|@floating>@ <|@
tid v1545 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1546 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1546 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1545 
=== Succesors ===
=== Usages ===
v1700 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1545  <|@  <|@
f <@~|@floating>@ <|@
tid v1700 <|@
result [v13|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1546 
index: - 
=== Succesors ===
=== Usages ===
j1551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1546 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1551 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1700 
=== Succesors ===
next: v1552 
=== Usages ===
v1552 
=== Predecessor ===
a1411 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1700 #next: v1552  <|@  <|@
f <@~|@floating>@ <|@
tid v1701 <|@
result [v11|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1539 
index: - 
=== Succesors ===
=== Usages ===
v1552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1701 
value: j1551 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1556 
=== Usages ===
=== Predecessor ===
j1551 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1701 value: j1551 stateAfter: - lastLocationAccess: - #next: v1556  <|@  <|@
f <@~|@floating>@ <|@
tid v1702 <|@
result [v11|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1539 
index: - 
=== Succesors ===
=== Usages ===
v1556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1539 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1583 <|@
result meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1556 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1702 
value: v1583 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1561 
=== Usages ===
=== Predecessor ===
v1552 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1702 value: v1583 stateAfter: - lastLocationAccess: - #next: v1561  <|@  <|@
f <@~|@floating>@ <|@
tid v1704 <|@
result [v11|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1539 
index: - 
=== Succesors ===
=== Usages ===
v1561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1539 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1559 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4294967295
stableDimension: 0
stamp: i64 [4294967295] ⇊00000000ffffffff ⇈00000000ffffffff
stampKind: i64
value: long[4294967295|0xffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1561 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1561 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1704 
value: j1559 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1563 
=== Usages ===
=== Predecessor ===
v1556 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1704 value: j1559 stateAfter: - lastLocationAccess: - #next: v1563  <|@  <|@
f <@~|@floating>@ <|@
tid v1705 <|@
result [v11|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j1539 
index: - 
=== Succesors ===
=== Usages ===
v1563 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1563 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1705 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1565 
=== Usages ===
=== Predecessor ===
v1561 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1705 value: i10 stateAfter: - lastLocationAccess: - #next: v1565  <|@  <|@
f <@~|@floating>@ <|@
tid v1706 <|@
result [v11|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j1539 
index: - 
=== Succesors ===
=== Usages ===
v1565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1565 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1706 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1567 
=== Usages ===
=== Predecessor ===
v1563 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1706 value: i3 stateAfter: - lastLocationAccess: - #next: v1567  <|@  <|@
f <@~|@floating>@ <|@
tid v1707 <|@
result [v11|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j1539 
index: - 
=== Succesors ===
=== Usages ===
v1567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1707 
value: i145 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1569 
=== Usages ===
=== Predecessor ===
v1565 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1707 value: i145 stateAfter: - lastLocationAccess: - #next: v1569  <|@  <|@
f <@~|@floating>@ <|@
tid v1708 <|@
result [v11|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j1539 
index: - 
=== Succesors ===
=== Usages ===
v1569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1708 
value: i1644 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1571 
=== Usages ===
=== Predecessor ===
v1567 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1708 value: i1644 stateAfter: - lastLocationAccess: - #next: v1571  <|@  <|@
f <@~|@floating>@ <|@
tid v1709 <|@
result [v11|QWORD[*] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j1539 
index: - 
=== Succesors ===
=== Usages ===
v1571 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1539 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1709 
value: i10 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1574 
=== Usages ===
=== Predecessor ===
v1569 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1709 value: i10 stateAfter: - lastLocationAccess: - #next: v1574  <|@  <|@
f <@~|@floating>@ <|@
tid v1710 <|@
result [v11|QWORD[*] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j1539 
index: - 
=== Succesors ===
=== Usages ===
v1574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1539 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i1572 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i8
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1574 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1710 
value: i1572 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1576 
=== Usages ===
=== Predecessor ===
v1571 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1710 value: i1572 stateAfter: - lastLocationAccess: - #next: v1576  <|@  <|@
f <@~|@floating>@ <|@
tid v1711 <|@
result [v11|QWORD[*] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j1539 
index: - 
=== Succesors ===
=== Usages ===
v1576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1539 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1415 <|@
result v16|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n# [C
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v1576 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1711 
value: a1415 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1418 
=== Usages ===
=== Predecessor ===
v1574 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1711 value: a1415 stateAfter: - lastLocationAccess: - #next: a1418  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1418 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1411 
=== Succesors ===
next: v1419 
=== Usages ===
v1688 ?861 v1673 v1674 v1690 v1691 v1692 v1024 
=== Predecessor ===
v1576 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1411 #next: v1419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1419 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
a1418 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v1419 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE v11|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [v13|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*]], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 12], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 28], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 32], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 36], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v11|QWORD[*] + 40], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@61c8dcce encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 44], y: v16|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B71" 
    successors "B14" "B110" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.0000058657907085
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v14 
=== Succesors ===
next: a1646 
=== Usages ===
v33 v46 v829 v1403 v1398 v1393 v1388 v1383 v1378 v1373 v1288 v1367 v1298 v1303 v1308 v1313 v1318 v1323 v1329 v1361 v1339 v1349 v1355 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v14 #next: a1646  <|@  <|@
f <@~|@floating>@ <|@
tid v1690 <|@
result [v12|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a1418 
index: - 
=== Succesors ===
=== Usages ===
a1646 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1418 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1646 <|@
result v17|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.hb
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1690 
=== Succesors ===
next: v1712 
=== Usages ===
v1712 a1113 v1678 
=== Predecessor ===
v15 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1690 #next: v1712  <|@  <|@
tid a133 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@5cf3e7f
hasIdentity: true
objectId: 0
stamp: a!# Ljava/nio/HeapCharBuffer;
type: HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?212 ?1423 ?389 ?321 ?16 ?316 ?103 ?280 ?227 ?212 ?861 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?861 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a133 
materializedValue: a1418 
=== Succesors ===
=== Usages ===
?16 ?316 ?1422 ?280 ?385 ?321 ?525 ?1423 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a133 materializedValue: a1418  <|@  <|@
tid ?16 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - a133 - 
virtualObjectMappings: ?861 
=== Succesors ===
=== Usages ===
v1449 v1712 a1648 v1713 v1714 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - a133 - virtualObjectMappings: ?861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?16 
object: a1646 
=== Succesors ===
next: a1647 
=== Usages ===
=== Predecessor ===
a1646 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?16 object: a1646 #next: a1647  <|@  <|@
f <@~|@floating>@ <|@
tid v1676 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1647 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1647 <|@
result v18|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: StreamEncoder.bb
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 37]
nullCheck: false
stamp: n Ljava/nio/ByteBuffer;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1676 
=== Succesors ===
next: a1648 
=== Usages ===
a966 v1697 v1689 v1693 v1694 v1695 v1696 
=== Predecessor ===
v1712 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1676 #next: a1648  <|@  <|@
f <@~|@floating>@ <|@
tid v1693 <|@
result [v18|DWORD[.] * 8 + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1647 
=== Succesors ===
=== Usages ===
a1648 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1648 <|@
result v19|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: true
stamp: n# [B
=== Inputs ===
stateBefore: ?16 
guard: - 
address: v1693 
=== Succesors ===
next: v1713 
=== Usages ===
?321 v1713 v1680 v1681 v1683 v1685 v1686 v1687 ?316 ?280 v1715 
=== Predecessor ===
a1647 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?16 guard: - address: v1693 #next: v1713  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?16 
object: a1648 
=== Succesors ===
next: i1649 
=== Usages ===
=== Predecessor ===
a1648 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?16 object: a1648 #next: i1649  <|@  <|@
f <@~|@floating>@ <|@
tid v1673 <|@
result [v12|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1418 
index: - 
=== Succesors ===
=== Usages ===
i1649 i1666 v1068 i1669 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1418 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1649 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 24]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1673 
=== Succesors ===
next: i1650 
=== Usages ===
v66 i753 
=== Predecessor ===
v1713 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1673 #next: i1650  <|@  <|@
f <@~|@floating>@ <|@
tid v1674 <|@
result [v12|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1418 
index: - 
=== Succesors ===
=== Usages ===
i1650 i1665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1418 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1650 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 24]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1674 
=== Succesors ===
next: v1289 
=== Usages ===
v66 i888 v495 i754 
=== Predecessor ===
i1649 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1674 #next: v1289  <|@  <|@
f <@~|@floating>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:402) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1649 
y: i1650 
=== Succesors ===
=== Usages ===
v1289 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1649 y: i1650  <|@  <|@
f <@*|@fixed>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 27]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v66 
=== Succesors ===
trueSuccessor: v1285 
falseSuccessor: v1288 
=== Usages ===
=== Predecessor ===
i1650 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v66 #trueSuccessor: v1285 #falseSuccessor: v1288  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v12|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v17|DWORD[.] * 8] state [bci:22] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction v19|DWORD[.] = MOV [v18|DWORD[.] * 8 + 44] size: DWORD state [bci:22] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v19|DWORD[.] * 8] state [bci:22] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v12|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV [v12|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1651 
=== Usages ===
=== Predecessor ===
v1289 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1651  <|@  <|@
f <@~|@floating>@ <|@
tid v1675 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1651 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1651 <|@
result v22|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: StreamEncoder.encoder
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 31]
nullCheck: false
stamp: n# Lsun/nio/cs/UTF_8$Encoder;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1675 
=== Succesors ===
next: v1714 
=== Usages ===
?316 v1714 v1677 ?321 ?227 ?280 
=== Predecessor ===
v1285 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1675 #next: v1714  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1714 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?16 
object: a1651 
=== Succesors ===
next: i1652 
=== Usages ===
=== Predecessor ===
a1651 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?16 object: a1651 #next: i1652  <|@  <|@
f <@~|@floating>@ <|@
tid v1691 <|@
result [v12|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a1418 
index: - 
=== Succesors ===
=== Usages ===
i1652 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1418 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1652 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.isReadOnly
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1691 
=== Succesors ===
next: v1299 
=== Usages ===
i1116 
=== Predecessor ===
v1714 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1691 #next: v1299  <|@  <|@
f <@~|@floating>@ <|@
tid i1116 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1652 
=== Succesors ===
=== Usages ===
v611 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1652  <|@  <|@
f <@~|@floating>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1116 
y: i10 
=== Succesors ===
=== Usages ===
v1299 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1116 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v611 
=== Succesors ===
trueSuccessor: v1295 
falseSuccessor: v1298 
=== Usages ===
=== Predecessor ===
i1652 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v611 #trueSuccessor: v1295 #falseSuccessor: v1298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v22|DWORD[.] * 8] state [bci:22] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVZXB [v12|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v23|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1653 
=== Usages ===
=== Predecessor ===
v1299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1653  <|@  <|@
f <@~|@floating>@ <|@
tid v1694 <|@
result [v18|DWORD[.] * 8 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1647 
=== Succesors ===
=== Usages ===
i1653 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1653 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.isReadOnly
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v1694 
=== Succesors ===
next: v1304 
=== Usages ===
i1125 
=== Predecessor ===
v1295 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1694 #next: v1304  <|@  <|@
f <@~|@floating>@ <|@
tid i1125 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1653 
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1653  <|@  <|@
f <@~|@floating>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1125 
y: i10 
=== Succesors ===
=== Usages ===
v1304 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1125 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v751 
=== Succesors ===
trueSuccessor: v1300 
falseSuccessor: v1303 
=== Usages ===
=== Predecessor ===
i1653 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v751 #trueSuccessor: v1300 #falseSuccessor: v1303  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVZXB [v18|DWORD[.] * 8 + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1654 
=== Usages ===
=== Predecessor ===
v1304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1654  <|@  <|@
f <@~|@floating>@ <|@
tid v1677 <|@
result [v22|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1651 
=== Succesors ===
=== Usages ===
i1654 v1081 v1111 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1654 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharsetEncoder.state
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 12]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1677 
=== Succesors ===
next: i1655 
=== Usages ===
v73 v78 
=== Predecessor ===
v1300 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1677 #next: i1655  <|@  <|@
f <@~|@floating>@ <|@
tid v1695 <|@
result [v18|DWORD[.] * 8 + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1647 
=== Succesors ===
=== Usages ===
i1655 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1655 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 34]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1695 
=== Succesors ===
next: i1656 
=== Usages ===
i756 i758 i476 
=== Predecessor ===
i1654 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1695 #next: i1656  <|@  <|@
f <@~|@floating>@ <|@
tid v1697 <|@
result [v18|DWORD[.] * 8 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1647 
=== Succesors ===
=== Usages ===
i1656 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1656 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 49]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1697 
=== Succesors ===
next: i1657 
=== Usages ===
i758 v520 
=== Predecessor ===
i1655 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1697 #next: i1657  <|@  <|@
f <@~|@floating>@ <|@
tid v1696 <|@
result [v18|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1647 
=== Succesors ===
=== Usages ===
i1657 v1075 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1657 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 38]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1696 
=== Succesors ===
next: i1658 
=== Usages ===
i756 
=== Predecessor ===
i1656 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1696 #next: i1658  <|@  <|@
f <@~|@floating>@ <|@
tid v1692 <|@
result [v12|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1418 
index: - 
=== Succesors ===
=== Usages ===
i1658 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1418 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1658 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.offset
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1692 
=== Succesors ===
next: v1309 
=== Usages ===
i469 i754 i753 
=== Predecessor ===
i1657 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1692 #next: v1309  <|@  <|@
f <@~|@floating>@ <|@
tid i758 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 52]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i1655 
y: i1656 
=== Succesors ===
=== Usages ===
i760 i354 v334 i821 i821 ?316 ?321 ?280 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1655 y: i1656  <|@  <|@
f <@~|@floating>@ <|@
tid i756 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 41]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i1655 
y: i1657 
=== Succesors ===
=== Usages ===
i760 ?280 ?280 i820 i285 i1205 v1215 j1219 v1223 i1643 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1655 y: i1657  <|@  <|@
f <@~|@floating>@ <|@
tid i760 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 66]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i758 
y: i756 
=== Succesors ===
=== Usages ===
v775 i464 i464 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i758 y: i756  <|@  <|@
f <@~|@floating>@ <|@
tid i754 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:587) [bci: 24]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i1650 
y: i1658 
=== Succesors ===
=== Usages ===
i759 ?321 v322 v1238 ?316 i1229 ?280 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1650 y: i1658  <|@  <|@
f <@~|@floating>@ <|@
tid i753 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 13]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i1649 
y: i1658 
=== Succesors ===
=== Usages ===
i759 ?280 i284 j1204 v1212 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1649 y: i1658  <|@  <|@
f <@~|@floating>@ <|@
tid i759 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 61]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i754 
y: i753 
=== Succesors ===
=== Usages ===
v775 i464 i820 i464 i1643 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i754 y: i753  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i760 
y: i759 
=== Succesors ===
=== Usages ===
v778 v459 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i760 y: i759  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1654 
y: i41 
=== Succesors ===
=== Usages ===
v1309 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1654 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9953429630233886
=== Inputs ===
condition: v78 
=== Succesors ===
trueSuccessor: v1305 
falseSuccessor: v75 
=== Usages ===
=== Predecessor ===
i1658 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v78 #trueSuccessor: v1305 #falseSuccessor: v75  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOV [v22|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOV [v18|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOV [v18|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV [v18|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV [v12|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v26|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = ADD (x: v28|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SUB (x: v30|DWORD, ~y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = ADD (x: v21|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = ADD (x: v20|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SUB (x: v33|DWORD, ~y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v25|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9953429630233886 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607140524528326569
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1111 
=== Usages ===
=== Predecessor ===
v1309 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CharsetEncoder.state
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:573) [bci: 51]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1677 
value: i41 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v778 
=== Usages ===
=== Predecessor ===
v1305 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1677 value: i41 stateAfter: - lastLocationAccess: - #next: v778  <|@  <|@
f <@*|@fixed>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.6178512370566368
=== Inputs ===
condition: v775 
=== Succesors ===
trueSuccessor: v776 
falseSuccessor: v777 
=== Usages ===
=== Predecessor ===
v1111 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v775 #trueSuccessor: v776 #falseSuccessor: v777  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6178512370566368 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603714444319643983
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v782 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v782  <|@  <|@
f <@*|@fixed>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v776 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|DWORD, v30|DWORD] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600523780335271091
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid i1643 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i756 
y: i759 
=== Succesors ===
=== Usages ===
i821 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i756 y: i759  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v777 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = ADD (x: v35|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD, v36|DWORD] destination: B19 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572019251726359622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v1309 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v76  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 15]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1654 
y: i10 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1654 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 15]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v74 
falseSuccessor: v1308 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v74 #falseSuccessor: v1308  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572019251726359622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:573) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1081 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1081  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CharsetEncoder.state
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:573) [bci: 51]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1677 
value: i41 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1677 value: i41 stateAfter: - lastLocationAccess: - #next: v459  <|@  <|@
f <@*|@fixed>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.6178512370566368
=== Inputs ===
condition: v775 
=== Succesors ===
trueSuccessor: v457 
falseSuccessor: v458 
=== Usages ===
=== Predecessor ===
v1081 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v775 #trueSuccessor: v457 #falseSuccessor: v458  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6178512370566368 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568781192793351174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v465 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v465  <|@  <|@
f <@*|@fixed>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v457 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|DWORD, v30|DWORD] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565850200655571212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v463  <|@  <|@
f <@~|@floating>@ <|@
tid i820 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i756 
y: i759 
=== Succesors ===
=== Usages ===
i821 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i756 y: i759  <|@  <|@
f <@*|@fixed>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
v458 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = ADD (x: v31|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD, v37|DWORD] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" "B18" "B19" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i464 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v462 
values: i759 i760 i760 i759 
=== Succesors ===
=== Usages ===
?280 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v462 values: i759 i760 i760 i759  <|@  <|@
f <@~|@floating>@ <|@
tid i821 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v462 
values: i820 i758 i758 i1643 
=== Succesors ===
=== Usages ===
i1205 v287 v1215 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v462 values: i820 i758 i758 i1643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v463 v465 v782 v783 
=== Succesors ===
next: i1659 
=== Usages ===
i464 i821 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v463 v465 v782 v783 #next: i1659  <|@  <|@
f <@~|@floating>@ <|@
tid v1678 <|@
result [v17|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1646 
=== Succesors ===
=== Usages ===
i1659 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1659 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1678 
=== Succesors ===
next: v1600 
=== Usages ===
v1212 v1235 j1202 
=== Predecessor ===
v462 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1678 #next: v1600  <|@  <|@
f <@~|@floating>@ <|@
tid j1202 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1659 
=== Succesors ===
=== Usages ===
v1211 v1234 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1659  <|@  <|@
f <@~|@floating>@ <|@
tid i1205 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i32
=== Inputs ===
x: i821 
y: i756 
=== Succesors ===
=== Usages ===
j1206 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i821 y: i756  <|@  <|@
f <@~|@floating>@ <|@
tid j1206 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1205 
=== Succesors ===
=== Usages ===
j1208 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1205  <|@  <|@
f <@~|@floating>@ <|@
tid j1207 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1208 j1231 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1208 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1206 
y: j1207 
=== Succesors ===
=== Usages ===
j1209 j1220 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1206 y: j1207  <|@  <|@
f <@~|@floating>@ <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i756 
y: i821 
=== Succesors ===
=== Usages ===
v1600 v1616 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i756 y: i821  <|@  <|@
tid ?103 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 271
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - a133 - 
=== Succesors ===
=== Usages ===
?227 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - a133 -  <|@  <|@
f <@~|@floating>@ <|@
tid a966 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 37]
op: Uncompress
stamp: a Ljava/nio/ByteBuffer;
=== Inputs ===
value: a1647 
=== Succesors ===
=== Usages ===
?227 ?525 ?321 ?389 ?316 v1024 ?280 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1647  <|@  <|@
tid ?212 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a133 
materializedValue: a133 
=== Succesors ===
=== Usages ===
?227 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a133 materializedValue: a133  <|@  <|@
tid ?227 <|@
d <@d|@=== Debug Properties ===
bci: 57
code: ResolvedJavaMethodBytecode<CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: CharsetEncoder.java
sourceLine: 579
stackSize: 0
=== Inputs ===
outerFrameState: ?103 
values: a1651 a133 a966 i10 - - - 
virtualObjectMappings: ?212 
=== Succesors ===
=== Usages ===
?397 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?103 values: a1651 a133 a966 i10 - - - virtualObjectMappings: ?212  <|@  <|@
tid ?397 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 691
stackSize: 0
=== Inputs ===
outerFrameState: ?227 
values: - - - 
=== Succesors ===
=== Usages ===
?389 ?385 ?280 ?1422 ?316 ?321 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?227 values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a1113 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1646 
=== Succesors ===
=== Usages ===
?316 v1682 v1679 ?321 ?280 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1646  <|@  <|@
f <@*|@fixed>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1215 
=== Succesors ===
trueSuccessor: v1599 
falseSuccessor: v1596 
=== Usages ===
=== Predecessor ===
i1659 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1215 #trueSuccessor: v1599 #falseSuccessor: v1596  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOV [v17|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = SUB (x: v39|DWORD, ~y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = DEC v43|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@61c8dcce encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@61c8dcce encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1608 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1608  <|@  <|@
f <@~|@floating>@ <|@
tid j1204 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i753 
=== Succesors ===
=== Usages ===
j1209 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i753  <|@  <|@
f <@~|@floating>@ <|@
tid j1209 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1204 
y: j1208 
=== Succesors ===
=== Usages ===
v1211 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1204 y: j1208  <|@  <|@
f <@~|@floating>@ <|@
tid v1211 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1209 
y: j1202 
=== Succesors ===
=== Usages ===
v1608 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1209 y: j1202  <|@  <|@
f <@*|@fixed>@ <|@
tid v1608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1211 
=== Succesors ===
trueSuccessor: v1607 
falseSuccessor: v1604 
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1211 #trueSuccessor: v1607 #falseSuccessor: v1604  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVSXD v34|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = ADD (x: v47|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1606 
=== Usages ===
=== Predecessor ===
v1608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1606  <|@  <|@
f <@~|@floating>@ <|@
tid v1212 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i753 
y: i1659 
=== Succesors ===
=== Usages ===
v1606 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i753 y: i1659  <|@  <|@
f <@*|@fixed>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1212 
=== Succesors ===
trueSuccessor: v1597 
falseSuccessor: v1605 
=== Usages ===
=== Predecessor ===
v1607 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1212 #trueSuccessor: v1597 #falseSuccessor: v1605  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1595 
=== Usages ===
=== Predecessor ===
v1606 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1595  <|@  <|@
f <@*|@fixed>@ <|@
tid v1595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1593 
=== Predecessor ===
v1597 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1603 
=== Usages ===
=== Predecessor ===
v1606 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1603  <|@  <|@
f <@*|@fixed>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1601 
=== Predecessor ===
v1605 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1602 
=== Usages ===
=== Predecessor ===
v1608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1602  <|@  <|@
f <@*|@fixed>@ <|@
tid v1602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1601 
=== Predecessor ===
v1604 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1602 v1603 
=== Succesors ===
next: v1313 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1602 v1603 #next: v1313  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1465 
=== Usages ===
=== Predecessor ===
v1601 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1465  <|@  <|@
f <@~|@floating>@ <|@
tid i1466 <|@
result int[-249371|0xfffffffffffc31e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -249371
stableDimension: 0
stamp: i32 [-249371] ⇊00000000fffc31e5 ⇈00000000fffc31e5
stampKind: i32
value: int[-249371|0xfffffffffffc31e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
v1313 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-249371|0xfffffffffffc31e5]] destination: B31 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1594 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1594  <|@  <|@
f <@*|@fixed>@ <|@
tid v1594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1593 
=== Predecessor ===
v1596 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B27" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1594 v1595 
=== Succesors ===
next: v1616 
=== Usages ===
v1217 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1594 v1595 #next: v1616  <|@  <|@
f <@*|@fixed>@ <|@
tid v1616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1215 
=== Succesors ===
trueSuccessor: v1615 
falseSuccessor: v1612 
=== Usages ===
=== Predecessor ===
v1593 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1215 #trueSuccessor: v1615 #falseSuccessor: v1612  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1660 
=== Usages ===
=== Predecessor ===
v1616 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1660  <|@  <|@
f <@~|@floating>@ <|@
tid v1680 <|@
result [v19|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1648 
=== Succesors ===
=== Usages ===
i1660 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1660 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1680 
=== Succesors ===
next: v1624 
=== Usages ===
v1223 j1218 
=== Predecessor ===
v1615 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1680 #next: v1624  <|@  <|@
f <@~|@floating>@ <|@
tid j1219 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i756 
=== Succesors ===
=== Usages ===
j1220 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i756  <|@  <|@
f <@~|@floating>@ <|@
tid j1220 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1208 
y: j1219 
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1208 y: j1219  <|@  <|@
f <@~|@floating>@ <|@
tid j1218 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i1660 
=== Succesors ===
=== Usages ===
v1222 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1660  <|@  <|@
f <@~|@floating>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1220 
y: j1218 
=== Succesors ===
=== Usages ===
v1624 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1220 y: j1218  <|@  <|@
f <@*|@fixed>@ <|@
tid v1624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1222 
=== Succesors ===
trueSuccessor: v1623 
falseSuccessor: v1620 
=== Usages ===
=== Predecessor ===
i1660 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1222 #trueSuccessor: v1623 #falseSuccessor: v1620  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOV [v19|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = ADD (x: v50|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1622 
=== Usages ===
=== Predecessor ===
v1624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1622  <|@  <|@
f <@~|@floating>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i756 
y: i1660 
=== Succesors ===
=== Usages ===
v1622 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i756 y: i1660  <|@  <|@
f <@*|@fixed>@ <|@
tid v1622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1223 
=== Succesors ===
trueSuccessor: v1613 
falseSuccessor: v1621 
=== Usages ===
=== Predecessor ===
v1623 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1223 #trueSuccessor: v1613 #falseSuccessor: v1621  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1611 
=== Usages ===
=== Predecessor ===
v1622 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1611  <|@  <|@
f <@*|@fixed>@ <|@
tid v1611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1609 
=== Predecessor ===
v1613 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1619 
=== Usages ===
=== Predecessor ===
v1622 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1619  <|@  <|@
f <@*|@fixed>@ <|@
tid v1619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1617 
=== Predecessor ===
v1621 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1618 
=== Usages ===
=== Predecessor ===
v1624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1618  <|@  <|@
f <@*|@fixed>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1617 
=== Predecessor ===
v1620 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1618 v1619 
=== Succesors ===
next: v1318 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1618 v1619 #next: v1318  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1471 
=== Usages ===
=== Predecessor ===
v1617 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1471  <|@  <|@
f <@~|@floating>@ <|@
tid i1472 <|@
result int[-255003|0xfffffffffffc1be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -255003
stableDimension: 0
stamp: i32 [-255003] ⇊00000000fffc1be5 ⇈00000000fffc1be5
stampKind: i32
value: int[-255003|0xfffffffffffc1be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1464 
=== Predecessor ===
v1318 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-255003|0xfffffffffffc1be5]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B31" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1468 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-255003 - -249371] ⇊00000000fffc11e5 ⇈00000000fffc3be5
valueDescription: i32
=== Inputs ===
merge: v1464 
values: i1466 i1472 
=== Succesors ===
=== Usages ===
v1470 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1464 values: i1466 i1472  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1464 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1465 v1471 
=== Succesors ===
next: v1470 
=== Usages ===
i1468 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1465 v1471 #next: v1470  <|@  <|@
tid ?280 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 592
stackSize: 2
=== Inputs ===
outerFrameState: ?397 
values: a1651 a133 a966 a1113 i753 i754 a1648 i756 i758 - - - i756 i464 
virtualObjectMappings: ?861 
=== Succesors ===
=== Usages ===
v1470 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?397 values: a1651 a133 a966 a1113 i753 i754 a1648 i756 i758 - - - i756 i464 virtualObjectMappings: ?861  <|@  <|@
f <@~|@floating>@ <|@
tid a1467 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1860143242
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1860143242]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1470 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?280 
actionAndReason: i1468 
speculation: a1467 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1464 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?280 actionAndReason: i1468 speculation: a1467  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1860143242] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v54|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
stack: v31|DWORD v38|DWORD 
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] v46|QWORD[.] v34|DWORD v33|DWORD v19|DWORD[.] v31|DWORD v30|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:70, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1610 
=== Usages ===
=== Predecessor ===
v1616 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1610  <|@  <|@
f <@*|@fixed>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1609 
=== Predecessor ===
v1612 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B36" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1610 v1611 
=== Succesors ===
next: v282 
=== Usages ===
v1227 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1610 v1611 #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid i1137 <|@
result short[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1138 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
v1609 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD, v31|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B46" 
    successors "B45" "B48" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4628407492724222633
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i284 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v283 
values: i753 i309 
=== Succesors ===
=== Usages ===
j1228 v1238 v1679 v1235 i309 i1229 ?316 i319 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v283 values: i753 i309  <|@  <|@
f <@~|@floating>@ <|@
tid i285 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v283 
values: i756 i308 
=== Succesors ===
=== Usages ===
v1681 v287 ?316 i320 i308 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v283 values: i756 i308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 27.406449703577707
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v282 
=== Succesors ===
next: v293 
=== Usages ===
i284 i285 v289 v301 v315 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v282 #next: v293  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i285 
y: i821 
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i285 y: i821  <|@  <|@
f <@*|@fixed>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.96368033705285
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v288 
falseSuccessor: v289 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v288 #falseSuccessor: v289  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD, v56|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.96368033705285 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4628127312854812177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 80]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1661 
=== Usages ===
v1217 v1227 
=== Predecessor ===
v293 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1661  <|@  <|@
f <@~|@floating>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1593 v288 
=== Succesors ===
=== Usages ===
i1661 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1593 v288  <|@  <|@
f <@~|@floating>@ <|@
tid v1679 <|@
result [v46|QWORD[.] + v55|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1113 
index: i284 
=== Succesors ===
=== Usages ===
i1661 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1113 index: i284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1661 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1217 
address: v1679 
=== Succesors ===
next: v307 
=== Usages ===
v1138 i1140 
=== Predecessor ===
v288 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1217 address: v1679 #next: v307  <|@  <|@
f <@~|@floating>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1661 
y: i1137 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1661 y: i1137  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9998255660785367
=== Inputs ===
condition: v1138 
=== Succesors ===
trueSuccessor: v297 
falseSuccessor: v301 
=== Usages ===
=== Predecessor ===
i1661 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1138 #trueSuccessor: v297 #falseSuccessor: v301  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVSX [v46|QWORD[.] + v55|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v57|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998255660785367 condition: |<| trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4628126016096438674
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 90]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1003 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1003  <|@  <|@
f <@~|@floating>@ <|@
tid v1227 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1609 v288 
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1609 v288  <|@  <|@
f <@~|@floating>@ <|@
tid v1681 <|@
result [v56|DWORD + v19|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i285 
index: a1648 
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i285 index: a1648  <|@  <|@
f <@~|@floating>@ <|@
tid i1140 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 104]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1661 
=== Succesors ===
=== Usages ===
v1003 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1661  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1003 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1227 
address: v1681 
value: i1140 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1227 address: v1681 value: i1140 stateAfter: - lastLocationAccess: - #next: v315  <|@  <|@
f <@~|@floating>@ <|@
tid i308 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i285 
y: i41 
=== Succesors ===
=== Usages ===
i285 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i285 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i309 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 100]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i284 
y: i41 
=== Succesors ===
=== Usages ===
i284 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i284 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v283 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1003 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v283  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v56|DWORD + v19|DWORD[.] * 8 + 16], y: v57|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = INC v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = INC v55|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|DWORD, v58|DWORD] destination: B46 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571961544451550048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v283 
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v283 #next: v300  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
v301 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607140975366411019
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v283 
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v283 #next: v298  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
v289 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v298 v300 
=== Succesors ===
next: v1632 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v298 v300 #next: v1632  <|@  <|@
f <@~|@floating>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i284 
y: i754 
=== Succesors ===
=== Usages ===
v1632 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i284 y: i754  <|@  <|@
f <@*|@fixed>@ <|@
tid v1632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1238 
=== Succesors ===
trueSuccessor: v1631 
falseSuccessor: v1628 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1238 #trueSuccessor: v1631 #falseSuccessor: v1628  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1640 
=== Usages ===
=== Predecessor ===
v1632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1640  <|@  <|@
f <@~|@floating>@ <|@
tid j1228 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i284 
=== Succesors ===
=== Usages ===
j1232 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i284  <|@  <|@
f <@~|@floating>@ <|@
tid i1229 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i32
=== Inputs ===
x: i754 
y: i284 
=== Succesors ===
=== Usages ===
j1230 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i754 y: i284  <|@  <|@
f <@~|@floating>@ <|@
tid j1230 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1229 
=== Succesors ===
=== Usages ===
j1231 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1229  <|@  <|@
f <@~|@floating>@ <|@
tid j1231 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1230 
y: j1207 
=== Succesors ===
=== Usages ===
j1232 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1230 y: j1207  <|@  <|@
f <@~|@floating>@ <|@
tid j1232 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1228 
y: j1231 
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1228 y: j1231  <|@  <|@
f <@~|@floating>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1232 
y: j1202 
=== Succesors ===
=== Usages ===
v1640 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1232 y: j1202  <|@  <|@
f <@*|@fixed>@ <|@
tid v1640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1234 
=== Succesors ===
trueSuccessor: v1639 
falseSuccessor: v1636 
=== Usages ===
=== Predecessor ===
v1631 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1234 #trueSuccessor: v1639 #falseSuccessor: v1636  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD v55|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SUB (x: v33|DWORD, ~y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVSXD v61|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = DEC v62|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = ADD (x: v60|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1638 
=== Usages ===
=== Predecessor ===
v1640 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1638  <|@  <|@
f <@~|@floating>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i284 
y: i1659 
=== Succesors ===
=== Usages ===
v1638 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i284 y: i1659  <|@  <|@
f <@*|@fixed>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1235 
=== Succesors ===
trueSuccessor: v1629 
falseSuccessor: v1637 
=== Usages ===
=== Predecessor ===
v1639 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1235 #trueSuccessor: v1629 #falseSuccessor: v1637  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1627 
=== Usages ===
=== Predecessor ===
v1638 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1627  <|@  <|@
f <@*|@fixed>@ <|@
tid v1627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1625 
=== Predecessor ===
v1629 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1635 
=== Usages ===
=== Predecessor ===
v1638 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1635  <|@  <|@
f <@*|@fixed>@ <|@
tid v1635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1633 
=== Predecessor ===
v1637 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1634 
=== Usages ===
=== Predecessor ===
v1640 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1634  <|@  <|@
f <@*|@fixed>@ <|@
tid v1634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1633 
=== Predecessor ===
v1636 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1634 v1635 
=== Succesors ===
next: v1323 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1634 v1635 #next: v1323  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1321 
=== Usages ===
=== Predecessor ===
v1633 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1321  <|@  <|@
tid ?316 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: ?397 
values: a1651 a133 a966 a1113 i284 i754 a1648 i285 i758 - - - 
virtualObjectMappings: ?861 
=== Succesors ===
=== Usages ===
v1321 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?397 values: a1651 a133 a966 a1113 i284 i754 a1648 i285 i758 - - - virtualObjectMappings: ?861  <|@  <|@
f <@*|@fixed>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1006
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
reason: BoundsCheckException
speculation: Object[d.a@772285300]
stamp: void
=== Inputs ===
stateBefore: ?316 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1323 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?316  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@772285300] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -257563 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v65|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] v46|QWORD[.] v55|DWORD v33|DWORD v19|DWORD[.] v56|DWORD v30|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:109, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1626 
=== Usages ===
=== Predecessor ===
v1632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1626  <|@  <|@
f <@*|@fixed>@ <|@
tid v1626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1625 
=== Predecessor ===
v1628 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B52" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1626 v1627 
=== Succesors ===
next: v317 
=== Usages ===
v1240 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1626 v1627 #next: v317  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
v1625 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|DWORD, v56|DWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B63" "B83" 
    successors "B60" "B90" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4607830099549312102
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i319 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v318 
values: i284 i381 i381 
=== Succesors ===
=== Usages ===
?321 v322 ?389 v1682 v1024 i469 i381 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v318 values: i284 i381 i381  <|@  <|@
f <@~|@floating>@ <|@
tid i320 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v318 
values: i285 i341 i395 
=== Succesors ===
=== Usages ===
?321 v1037 v334 v1024 i341 v1683 i395 i354 v1685 i394 ?389 i476 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v318 values: i285 i341 i395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.1438073067604162
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v317 
=== Succesors ===
next: v328 
=== Usages ===
i319 i320 v324 v336 v382 v396 v1372 v1328 v1348 v1354 v1360 v1366 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v317 #next: v328  <|@  <|@
f <@~|@floating>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i319 
y: i754 
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i319 y: i754  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.12574763249709253
=== Inputs ===
condition: v322 
=== Succesors ===
trueSuccessor: v323 
falseSuccessor: v324 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v322 #trueSuccessor: v323 #falseSuccessor: v324  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|DWORD, v67|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.12574763249709253 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594350110784090454
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 116]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1662 
=== Usages ===
v1240 
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1662  <|@  <|@
f <@~|@floating>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1625 v323 
=== Succesors ===
=== Usages ===
i1662 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1625 v323  <|@  <|@
f <@~|@floating>@ <|@
tid v1682 <|@
result [v46|QWORD[.] + v66|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1113 
index: i319 
=== Succesors ===
=== Usages ===
i1662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1113 index: i319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1662 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1240 
address: v1682 
=== Succesors ===
next: i1663 
=== Usages ===
i1013 
=== Predecessor ===
v323 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1240 address: v1682 #next: i1663  <|@  <|@
f <@~|@floating>@ <|@
tid v1715 <|@
result [v19|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1648 
=== Succesors ===
=== Usages ===
i1663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1663 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1715 
=== Succesors ===
next: v333 
=== Usages ===
v1037 v1057 
=== Predecessor ===
i1662 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1715 #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i320 
y: i1663 
=== Succesors ===
=== Usages ===
v1368 v1330 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i320 y: i1663  <|@  <|@
f <@~|@floating>@ <|@
tid i1013 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1662 
=== Succesors ===
=== Usages ===
v330 i342 i367 v347 i375 v483 i360 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1662  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
result int[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 84]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i376 v330 i370 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1013 
y: i295 
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1013 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid i381 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i319 
y: i41 
=== Succesors ===
=== Usages ===
i319 i319 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i319 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i341 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 151]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i320 
y: i41 
=== Succesors ===
=== Usages ===
i320 v1686 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i320 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9463253509496284
=== Inputs ===
condition: v330 
=== Succesors ===
trueSuccessor: v331 
falseSuccessor: v332 
=== Usages ===
=== Predecessor ===
i1663 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v330 #trueSuccessor: v331 #falseSuccessor: v332  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVSX [v46|QWORD[.] + v66|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV [v19|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVZX v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = INC v66|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC v67|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v70|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9463253509496284 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B66" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594071963895501621
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i320 
y: i758 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i320 y: i758  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.999825479930192
=== Inputs ===
condition: v334 
=== Succesors ===
trueSuccessor: v335 
falseSuccessor: v336 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v334 #trueSuccessor: v335 #falseSuccessor: v336  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.999825479930192 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594071108058921348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 147]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1330 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1330  <|@  <|@
f <@*|@fixed>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1037 
=== Succesors ===
trueSuccessor: v1325 
falseSuccessor: v1328 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1037 #trueSuccessor: v1325 #falseSuccessor: v1328  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4594071108058921348
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1023 
=== Usages ===
v1023 
=== Predecessor ===
v1330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1023  <|@  <|@
f <@~|@floating>@ <|@
tid v1683 <|@
result [v67|DWORD + v19|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i320 
index: a1648 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i320 index: a1648  <|@  <|@
f <@~|@floating>@ <|@
tid i342 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 156]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 8
stamp: i8
=== Inputs ===
value: i1013 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1013  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1023 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1325 
address: v1683 
value: i342 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v1325 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1325 address: v1683 value: i342 stateAfter: - lastLocationAccess: - #next: v382  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v318 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v318  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v67|DWORD + v19|DWORD[.] * 8 + 16], y: v70|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|DWORD, v72|DWORD] destination: B63 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1329 
=== Usages ===
=== Predecessor ===
v1330 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1329  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1474 
=== Usages ===
=== Predecessor ===
v1328 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1474  <|@  <|@
f <@~|@floating>@ <|@
tid i1475 <|@
result int[-260123|0xfffffffffffc07e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -260123
stableDimension: 0
stamp: i32 [-260123] ⇊00000000fffc07e5 ⇈00000000fffc07e5
stampKind: i32
value: int[-260123|0xfffffffffffc07e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1474 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
v1329 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-260123|0xfffffffffffc07e5]] destination: B65 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537632238400317159
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 137]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: a384 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: a384  <|@  <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
returnStamp: a# Ljava/nio/charset/CoderResult;
signature: [Ljdk.vm.ci.meta.JavaType;@60fde432
stamp: void
targetMethod: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>
=== Inputs ===
arguments: a1418 i319 a966 i320 
=== Succesors ===
=== Usages ===
a384 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1418 i319 a966 i320  <|@  <|@
tid ?1422 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 602
stackSize: 0
=== Inputs ===
outerFrameState: ?397 
values: - - - - - - - - - - - - 
virtualObjectMappings: ?861 
=== Succesors ===
=== Usages ===
a384 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?397 values: - - - - - - - - - - - - virtualObjectMappings: ?861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a384 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 143
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
polymorphic: false
stamp: a# Ljava/nio/charset/CoderResult;
targetMethod: Direct#UTF_8$Encoder.overflow
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1024 
stateDuring: ?1422 
=== Succesors ===
next: i1664 
=== Usages ===
?385 v1684 
=== Predecessor ===
v336 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1024 stateDuring: ?1422 #next: i1664  <|@  <|@
tid ?385 <|@
d <@d|@=== Debug Properties ===
bci: 146
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 602
stackSize: 1
=== Inputs ===
outerFrameState: ?397 
values: - - - - - - - - - - - - a384 
virtualObjectMappings: ?861 
=== Succesors ===
=== Usages ===
v1506 i1664 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?397 values: - - - - - - - - - - - - a384 virtualObjectMappings: ?861  <|@  <|@
f <@~|@floating>@ <|@
tid v1684 <|@
result [v73|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a384 
index: - 
=== Succesors ===
=== Usages ===
i1664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a384 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1664 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CoderResult.type
nodeSourcePosition: at java.nio.charset.CoderResult.isOverflow(CoderResult.java:129) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 91]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?385 
guard: - 
address: v1684 
=== Succesors ===
next: v1340 
=== Usages ===
v117 v567 
=== Predecessor ===
a384 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?385 guard: - address: v1684 #next: v1340  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CoderResult.isUnderflow(CoderResult.java:120) [bci: 4]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:272) [bci: 48]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1664 
y: i10 
=== Succesors ===
=== Usages ===
v1340 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1664 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 105]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.9999941683736323
=== Inputs ===
condition: v567 
=== Succesors ===
trueSuccessor: v33 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
i1664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v567 #trueSuccessor: v33 #falseSuccessor: v93  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v66|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 17, 57, 41] <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: v73|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction v74|DWORD = MOV [v73|QWORD[.] + 12] size: DWORD state [bci:146, 17, 57, 41] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v74|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999941683736323 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4537632197514707335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 105]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: i1665 
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: i1665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1665 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1674 
=== Succesors ===
next: i1666 
=== Usages ===
i53 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1674 #next: i1666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1666 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1673 
=== Succesors ===
next: v1344 
=== Usages ===
i53 
=== Predecessor ===
i1665 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1673 #next: v1344  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
stamp: i32
=== Inputs ===
x: i1665 
y: i1666 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1665 y: i1666  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i41 
=== Succesors ===
=== Usages ===
v1344 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i53 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v1343 
falseSuccessor: v1341 
=== Usages ===
=== Predecessor ===
i1666 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v1343 #falseSuccessor: v1341  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV [v12|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = SUB (x: v75|DWORD, ~y: [v12|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v76|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1502 
=== Usages ===
=== Predecessor ===
v1344 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1502  <|@  <|@
f <@~|@floating>@ <|@
tid i1503 <|@
result int[-264211|0xfffffffffffbf7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -264211
stableDimension: 0
stamp: i32 [-264211] ⇊00000000fffbf7ed ⇈00000000fffbf7ed
stampKind: i32
value: int[-264211|0xfffffffffffbf7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1504 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1501 
=== Predecessor ===
v1343 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-264211|0xfffffffffffbf7ed]] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4537632197514707335
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v1344 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:287) [bci: 155]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1341 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4459418990120258528
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 100]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CoderResult.isOverflow(CoderResult.java:129) [bci: 5]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 91]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1664 
y: i41 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1664 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 94]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v117 
=== Succesors ===
trueSuccessor: v101 
falseSuccessor: v1339 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v117 #trueSuccessor: v101 #falseSuccessor: v1339  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v74|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4459418990120258528
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v44  <|@  <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@72f4ab7f
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.writeBytes()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1423 <|@
d <@d|@=== Debug Properties ===
bci: 141
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: StreamEncoder.java
sourceLine: 282
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - a133 - 
virtualObjectMappings: ?861 
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - a133 - virtualObjectMappings: ?861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
bci: 141
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.writeBytes
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1028 
stateDuring: ?1423 
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1028 stateDuring: ?1423 #next: v46  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
stamp: void
=== Inputs ===
loopBegin: v15 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v15  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:141] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:589) [bci: 105]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1509 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1509  <|@  <|@
f <@~|@floating>@ <|@
tid i1510 <|@
result int[-263443|0xfffffffffffbfaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -263443
stableDimension: 0
stamp: i32 [-263443] ⇊00000000fffbfaed ⇈00000000fffbfaed
stampKind: i32
value: int[-263443|0xfffffffffffbfaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1504 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1501 
=== Predecessor ===
v1339 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-263443|0xfffffffffffbfaed]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1504 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-264211 - -262411] ⇊00000000fffbf2e5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v1501 
values: i1503 i1510 
=== Succesors ===
=== Usages ===
v1506 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1501 values: i1503 i1510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1502 v1509 
=== Succesors ===
next: v1506 
=== Usages ===
i1504 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1502 v1509 #next: v1506  <|@  <|@
f <@*|@fixed>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?385 
actionAndReason: i1504 
speculation: a1430 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1501 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?385 actionAndReason: i1504 speculation: a1430  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: v73|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:146, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B75" "B77" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 161]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1350 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1350  <|@  <|@
f <@~|@floating>@ <|@
tid i346 <|@
result int[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 163]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] ⇊0000000000000800 ⇈0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1013 
y: i346 
=== Succesors ===
=== Usages ===
v1350 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1013 y: i346  <|@  <|@
f <@*|@fixed>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v347 
=== Succesors ===
trueSuccessor: v1348 
falseSuccessor: v1345 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v347 #trueSuccessor: v1348 #falseSuccessor: v1345  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v70|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B74 -> B75 falseDestination: B74 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1349 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1349  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1479 
=== Usages ===
=== Predecessor ===
v1348 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1479  <|@  <|@
f <@~|@floating>@ <|@
tid i1480 <|@
result int[-264467|0xfffffffffffbf6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -264467
stableDimension: 0
stamp: i32 [-264467] ⇊00000000fffbf6ed ⇈00000000fffbf6ed
stampKind: i32
value: int[-264467|0xfffffffffffbf6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1479 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
v1349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-264467|0xfffffffffffbf6ed]] destination: B76 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B78" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1356 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1356  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
result int[55296|0xd800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] ⇊000000000000d800 ⇈000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1013 
y: i482 
=== Succesors ===
=== Usages ===
v1356 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1013 y: i482  <|@  <|@
f <@*|@fixed>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v483 
=== Succesors ===
trueSuccessor: v1351 
falseSuccessor: v1354 
=== Usages ===
=== Predecessor ===
v1345 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v483 #trueSuccessor: v1351 #falseSuccessor: v1354  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v70|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B77 -> B78 falseDestination: B77 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B81" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1362 
=== Usages ===
=== Predecessor ===
v1356 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1362  <|@  <|@
f <@~|@floating>@ <|@
tid i354 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 398]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i758 
y: i320 
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i758 y: i320  <|@  <|@
f <@~|@floating>@ <|@
tid i355 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 399]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v356 i395 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i354 
y: i355 
=== Succesors ===
=== Usages ===
v1362 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i354 y: i355  <|@  <|@
f <@*|@fixed>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v356 
=== Succesors ===
trueSuccessor: v1360 
falseSuccessor: v1357 
=== Usages ===
=== Predecessor ===
v1351 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v356 #trueSuccessor: v1360 #falseSuccessor: v1357  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = SUB (x: v30|DWORD, ~y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v78|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1361 
=== Usages ===
=== Predecessor ===
v1362 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1361  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1483 
=== Usages ===
=== Predecessor ===
v1360 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1483  <|@  <|@
f <@~|@floating>@ <|@
tid i1484 <|@
result int[-264979|0xfffffffffffbf4ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -264979
stableDimension: 0
stamp: i32 [-264979] ⇊00000000fffbf4ed ⇈00000000fffbf4ed
stampKind: i32
value: int[-264979|0xfffffffffffbf4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
v1361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-264979|0xfffffffffffbf4ed]] destination: B80 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B82" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1368 
=== Usages ===
=== Predecessor ===
v1362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1368  <|@  <|@
f <@*|@fixed>@ <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1037 
=== Succesors ===
trueSuccessor: v1363 
falseSuccessor: v1366 
=== Usages ===
=== Predecessor ===
v1357 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1037 #trueSuccessor: v1363 #falseSuccessor: v1366  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1374 
=== Usages ===
v1200 
=== Predecessor ===
v1368 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1374  <|@  <|@
f <@~|@floating>@ <|@
tid i393 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i394 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i394 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i320 
y: i393 
=== Succesors ===
=== Usages ===
v1057 v1687 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i320 y: i393  <|@  <|@
f <@~|@floating>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i394 
y: i1663 
=== Succesors ===
=== Usages ===
v1374 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i394 y: i1663  <|@  <|@
f <@*|@fixed>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1057 
=== Succesors ===
trueSuccessor: v1369 
falseSuccessor: v1372 
=== Usages ===
=== Predecessor ===
v1363 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1057 #trueSuccessor: v1369 #falseSuccessor: v1372  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = LEA [v67|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|DWORD, y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1045 
=== Usages ===
v1200 
=== Predecessor ===
v1374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1045  <|@  <|@
f <@~|@floating>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1369 v1363 
=== Succesors ===
=== Usages ===
v1045 v1065 v1055 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1369 v1363  <|@  <|@
f <@~|@floating>@ <|@
tid v1685 <|@
result [v67|DWORD + v19|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i320 
index: a1648 
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i320 index: a1648  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
result int[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 425]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i360 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i360 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 427]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [0 - 15] ⇈000000000000000f
=== Inputs ===
x: i1013 
y: i359 
=== Succesors ===
=== Usages ===
i361 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1013 y: i359  <|@  <|@
f <@~|@floating>@ <|@
tid i358 <|@
result int[224|0xe0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 420]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] ⇊00000000000000e0 ⇈00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i361 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i361 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 428]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [224 - 239] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
x: i360 
y: i358 
=== Succesors ===
=== Usages ===
i362 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i360 y: i358  <|@  <|@
f <@~|@floating>@ <|@
tid i362 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 429]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 8
stamp: i8 [-32 - -17] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
value: i361 
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1045 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1200 
address: v1685 
value: i362 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1055 
=== Usages ===
=== Predecessor ===
v1369 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1200 address: v1685 value: i362 stateAfter: - lastLocationAccess: - #next: v1055  <|@  <|@
f <@~|@floating>@ <|@
tid v1686 <|@
result [v72|DWORD + v19|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i341 
index: a1648 
=== Succesors ===
=== Usages ===
v1055 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i341 index: a1648  <|@  <|@
f <@~|@floating>@ <|@
tid i366 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 443]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i367 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 445]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [0 - 1023] ⇈00000000000003ff
=== Inputs ===
x: i1013 
y: i366 
=== Succesors ===
=== Usages ===
i369 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1013 y: i366  <|@  <|@
f <@~|@floating>@ <|@
tid i368 <|@
result int[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 446]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i369 i375 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i369 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 448]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i367 
y: i368 
=== Succesors ===
=== Usages ===
i370 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i367 y: i368  <|@  <|@
f <@~|@floating>@ <|@
tid i370 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 449]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i369 
y: i295 
=== Succesors ===
=== Usages ===
i371 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i369 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid i371 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 450]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i370 
=== Succesors ===
=== Usages ===
v1055 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1055 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1200 
address: v1686 
value: i371 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1065 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1200 address: v1686 value: i371 stateAfter: - lastLocationAccess: - #next: v1065  <|@  <|@
f <@~|@floating>@ <|@
tid v1687 <|@
result [v79|DWORD + v19|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i394 
index: a1648 
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i394 index: a1648  <|@  <|@
f <@~|@floating>@ <|@
tid i375 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 466]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i1013 
y: i368 
=== Succesors ===
=== Usages ===
i376 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1013 y: i368  <|@  <|@
f <@~|@floating>@ <|@
tid i376 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 467]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i375 
y: i295 
=== Succesors ===
=== Usages ===
i377 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i375 y: i295  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 468]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i376 
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1065 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1200 
address: v1687 
value: i377 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v1055 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1200 address: v1687 value: i377 stateAfter: - lastLocationAccess: - #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid i395 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 456]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i320 
y: i355 
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i320 y: i355  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v318 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1065 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v318  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = SHR v70|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = OR v80|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v67|DWORD + v19|DWORD[.] * 8 + 16], y: v81|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = SHR v70|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = AND v82|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = OR v83|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v72|DWORD + v19|DWORD[.] * 8 + 16], y: v84|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = AND v70|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = OR v85|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v79|DWORD + v19|DWORD[.] * 8 + 16], y: v86|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA [v67|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|DWORD, v87|DWORD] destination: B83 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1373 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1373  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1487 
=== Usages ===
=== Predecessor ===
v1372 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1487  <|@  <|@
f <@~|@floating>@ <|@
tid i1488 <|@
result int[-270875|0xfffffffffffbdde5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -270875
stableDimension: 0
stamp: i32 [-270875] ⇊00000000fffbdde5 ⇈00000000fffbdde5
stampKind: i32
value: int[-270875|0xfffffffffffbdde5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
v1373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-270875|0xfffffffffffbdde5]] destination: B85 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1367 
=== Usages ===
=== Predecessor ===
v1368 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1367  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1485 
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1485  <|@  <|@
f <@~|@floating>@ <|@
tid i1486 <|@
result int[-265755|0xfffffffffffbf1e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -265755
stableDimension: 0
stamp: i32 [-265755] ⇊00000000fffbf1e5 ⇈00000000fffbf1e5
stampKind: i32
value: int[-265755|0xfffffffffffbf1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1485 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
v1367 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-265755|0xfffffffffffbf1e5]] destination: B87 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1355 
=== Usages ===
=== Predecessor ===
v1356 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1355  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1481 
=== Usages ===
=== Predecessor ===
v1354 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1481  <|@  <|@
f <@~|@floating>@ <|@
tid i1482 <|@
result int[-264723|0xfffffffffffbf5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -264723
stableDimension: 0
stamp: i32 [-264723] ⇊00000000fffbf5ed ⇈00000000fffbf5ed
stampKind: i32
value: int[-264723|0xfffffffffffbf5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
v1355 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-264723|0xfffffffffffbf5ed]] destination: B89 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 476]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v318 
=== Succesors ===
next: v1379 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v318 #next: v1379  <|@  <|@
f <@~|@floating>@ <|@
tid i469 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 6]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i319 
y: i1658 
=== Succesors ===
=== Usages ===
v503 v495 v497 v1068 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i319 y: i1658  <|@  <|@
f <@~|@floating>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1650 
y: i469 
=== Succesors ===
=== Usages ===
v1379 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1650 y: i469  <|@  <|@
f <@*|@fixed>@ <|@
tid v1379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v495 
=== Succesors ===
trueSuccessor: v1378 
falseSuccessor: v1375 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v495 #trueSuccessor: v1378 #falseSuccessor: v1375  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = SUB (x: v66|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1489 
=== Usages ===
=== Predecessor ===
v1379 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1489  <|@  <|@
f <@~|@floating>@ <|@
tid i1490 <|@
result int[-272915|0xfffffffffffbd5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -272915
stableDimension: 0
stamp: i32 [-272915] ⇊00000000fffbd5ed ⇈00000000fffbd5ed
stampKind: i32
value: int[-272915|0xfffffffffffbd5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
v1378 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-272915|0xfffffffffffbd5ed]] destination: B91 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1384 
=== Usages ===
=== Predecessor ===
v1379 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1384  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i469 
y: i10 
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i469 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v497 
=== Succesors ===
trueSuccessor: v1383 
falseSuccessor: v1380 
=== Usages ===
=== Predecessor ===
v1375 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v497 #trueSuccessor: v1383 #falseSuccessor: v1380  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v88|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1491 
=== Usages ===
=== Predecessor ===
v1384 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1491  <|@  <|@
f <@~|@floating>@ <|@
tid i1492 <|@
result int[-273171|0xfffffffffffbd4ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -273171
stableDimension: 0
stamp: i32 [-273171] ⇊00000000fffbd4ed ⇈00000000fffbd4ed
stampKind: i32
value: int[-273171|0xfffffffffffbd4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
v1383 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-273171|0xfffffffffffbd4ed]] destination: B93 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1667 
=== Usages ===
=== Predecessor ===
v1384 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1667  <|@  <|@
f <@~|@floating>@ <|@
tid v1688 <|@
result [v12|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1418 
index: - 
=== Succesors ===
=== Usages ===
i1667 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1418 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1667 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1688 
=== Succesors ===
next: v1389 
=== Usages ===
v503 
=== Predecessor ===
v1380 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1688 #next: v1389  <|@  <|@
f <@~|@floating>@ <|@
tid v503 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i469 
y: i1667 
=== Succesors ===
=== Usages ===
v1389 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i469 y: i1667  <|@  <|@
f <@*|@fixed>@ <|@
tid v1389 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v503 
=== Succesors ===
trueSuccessor: v1388 
falseSuccessor: v1385 
=== Usages ===
=== Predecessor ===
i1667 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v503 #trueSuccessor: v1388 #falseSuccessor: v1385  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|DWORD, y: [v12|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1493 
=== Usages ===
=== Predecessor ===
v1389 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1493  <|@  <|@
f <@~|@floating>@ <|@
tid i1494 <|@
result int[-274195|0xfffffffffffbd0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274195
stableDimension: 0
stamp: i32 [-274195] ⇊00000000fffbd0ed ⇈00000000fffbd0ed
stampKind: i32
value: int[-274195|0xfffffffffffbd0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
v1388 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274195|0xfffffffffffbd0ed]] destination: B95 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1394 
=== Usages ===
=== Predecessor ===
v1389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1394  <|@  <|@
f <@~|@floating>@ <|@
tid i476 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 17]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: i32
=== Inputs ===
x: i320 
y: i1655 
=== Succesors ===
=== Usages ===
?525 v520 v522 v1075 v528 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i320 y: i1655  <|@  <|@
f <@~|@floating>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1656 
y: i476 
=== Succesors ===
=== Usages ===
v1394 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1656 y: i476  <|@  <|@
f <@*|@fixed>@ <|@
tid v1394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v520 
=== Succesors ===
trueSuccessor: v1393 
falseSuccessor: v1390 
=== Usages ===
=== Predecessor ===
v1385 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v520 #trueSuccessor: v1393 #falseSuccessor: v1390  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = SUB (x: v67|DWORD, ~y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B96 -> B97 falseDestination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1495 
=== Usages ===
=== Predecessor ===
v1394 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1495  <|@  <|@
f <@~|@floating>@ <|@
tid i1496 <|@
result int[-274451|0xfffffffffffbcfed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274451
stableDimension: 0
stamp: i32 [-274451] ⇊00000000fffbcfed ⇈00000000fffbcfed
stampKind: i32
value: int[-274451|0xfffffffffffbcfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
v1393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274451|0xfffffffffffbcfed]] destination: B97 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1399 
=== Usages ===
=== Predecessor ===
v1394 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1399  <|@  <|@
f <@~|@floating>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i476 
y: i10 
=== Succesors ===
=== Usages ===
v1399 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i476 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v522 
=== Succesors ===
trueSuccessor: v1398 
falseSuccessor: v1395 
=== Usages ===
=== Predecessor ===
v1390 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v522 #trueSuccessor: v1398 #falseSuccessor: v1395  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v89|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1497 
=== Usages ===
=== Predecessor ===
v1399 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1497  <|@  <|@
f <@~|@floating>@ <|@
tid i1498 <|@
result int[-274707|0xfffffffffffbceed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274707
stableDimension: 0
stamp: i32 [-274707] ⇊00000000fffbceed ⇈00000000fffbceed
stampKind: i32
value: int[-274707|0xfffffffffffbceed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
v1398 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274707|0xfffffffffffbceed]] destination: B99 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B103" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1668 
=== Usages ===
=== Predecessor ===
v1399 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1668  <|@  <|@
f <@~|@floating>@ <|@
tid v1689 <|@
result [v18|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1647 
=== Succesors ===
=== Usages ===
i1668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1668 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1689 
=== Succesors ===
next: v1404 
=== Usages ===
v528 
=== Predecessor ===
v1395 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1689 #next: v1404  <|@  <|@
f <@~|@floating>@ <|@
tid v528 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i476 
y: i1668 
=== Succesors ===
=== Usages ===
v1404 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i476 y: i1668  <|@  <|@
f <@*|@fixed>@ <|@
tid v1404 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v528 
=== Succesors ===
trueSuccessor: v1403 
falseSuccessor: v1400 
=== Usages ===
=== Predecessor ===
i1668 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v528 #trueSuccessor: v1403 #falseSuccessor: v1400  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: [v18|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1499 
=== Usages ===
=== Predecessor ===
v1404 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1499  <|@  <|@
f <@~|@floating>@ <|@
tid i1500 <|@
result int[-275987|0xfffffffffffbc9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -275987
stableDimension: 0
stamp: i32 [-275987] ⇊00000000fffbc9ed ⇈00000000fffbc9ed
stampKind: i32
value: int[-275987|0xfffffffffffbc9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1499 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1473 
=== Predecessor ===
v1403 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-275987|0xfffffffffffbc9ed]] destination: B101 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B65" "B76" "B89" "B80" "B87" "B85" "B91" "B93" "B95" "B97" "B99" "B101" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1476 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-275987 - -260123] ⇊00000000fff800e5 ⇈00000000ffffffed
valueDescription: i32
=== Inputs ===
merge: v1473 
values: i1475 i1480 i1482 i1484 i1486 i1488 i1490 i1492 i1494 i1496 i1498 i1500 
=== Succesors ===
=== Usages ===
v1478 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1473 values: i1475 i1480 i1482 i1484 i1486 i1488 i1490 i1492 i1494 i1496 i1498 i1500  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1474 v1479 v1481 v1483 v1485 v1487 v1489 v1491 v1493 v1495 v1497 v1499 
=== Succesors ===
next: v1478 
=== Usages ===
i1476 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1474 v1479 v1481 v1483 v1485 v1487 v1489 v1491 v1493 v1495 v1497 v1499 #next: v1478  <|@  <|@
tid ?321 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: ?397 
values: a1651 a133 a966 a1113 i319 i754 a1648 i320 i758 - - - 
virtualObjectMappings: ?861 
=== Succesors ===
=== Usages ===
v1478 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?397 values: a1651 a133 a966 a1113 i319 i754 a1648 i320 i758 - - - virtualObjectMappings: ?861  <|@  <|@
f <@*|@fixed>@ <|@
tid v1478 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?321 
actionAndReason: i1476 
speculation: a1430 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1473 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?321 actionAndReason: i1476 speculation: a1430  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] v46|QWORD[.] v66|DWORD v33|DWORD v19|DWORD[.] v67|DWORD v30|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:109, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B104" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1068 
=== Usages ===
=== Predecessor ===
v1404 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1068  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1673 
value: i469 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1075 
=== Usages ===
=== Predecessor ===
v1400 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1673 value: i469 stateAfter: - lastLocationAccess: - #next: v1075  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1696 
value: i476 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v829 
=== Usages ===
=== Predecessor ===
v1068 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1696 value: i476 stateAfter: - lastLocationAccess: - #next: v829  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD[.] + 24], y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|DWORD[.] * 8 + 24], y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:273) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: i1669 
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: i1669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1669 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1673 
=== Succesors ===
next: v1408 
=== Usages ===
i888 
=== Predecessor ===
v829 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1673 #next: v1408  <|@  <|@
f <@~|@floating>@ <|@
tid i888 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:391) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 84]
stamp: i32
=== Inputs ===
x: i1650 
y: i1669 
=== Succesors ===
=== Usages ===
v889 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1650 y: i1669  <|@  <|@
f <@~|@floating>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i888 
y: i41 
=== Succesors ===
=== Usages ===
v1408 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i888 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v1408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v889 
=== Succesors ===
trueSuccessor: v1407 
falseSuccessor: v1405 
=== Usages ===
=== Predecessor ===
i1669 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v889 #trueSuccessor: v1407 #falseSuccessor: v1405  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = SUB (x: v21|DWORD, ~y: [v12|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v91|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1406 
=== Usages ===
=== Predecessor ===
v1408 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1406  <|@  <|@
tid ?389 <|@
d <@d|@=== Debug Properties ===
bci: 482
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 12
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 636
stackSize: 0
=== Inputs ===
outerFrameState: ?397 
values: - a133 a966 - i319 - - i320 - - - - 
=== Succesors ===
=== Usages ===
?481 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?397 values: - a133 a966 - i319 - - i320 - - - -  <|@  <|@
tid ?481 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<UTF_8.access$200(Buffer, int, Buffer, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 57
stackSize: 0
=== Inputs ===
outerFrameState: ?389 
values: - - - - 
=== Succesors ===
=== Usages ===
?531 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?389 values: - - - -  <|@  <|@
tid ?531 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<UTF_8.updatePositions(Buffer, int, Buffer, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 78
stackSize: 0
=== Inputs ===
outerFrameState: ?481 
values: - - - - 
=== Succesors ===
=== Usages ===
?525 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?481 values: - - - -  <|@  <|@
tid ?525 <|@
d <@d|@=== Debug Properties ===
bci: 25
code: ResolvedJavaMethodBytecode<Buffer.position(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
rethrowException: false
sourceFile: Buffer.java
sourceLine: 246
stackSize: 0
=== Inputs ===
outerFrameState: ?531 
values: a966 i476 
virtualObjectMappings: ?861 
=== Succesors ===
=== Usages ===
v1406 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?531 values: a966 i476 virtualObjectMappings: ?861  <|@  <|@
f <@*|@fixed>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1080
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?525 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1407 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?525  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -276499 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.position(Buffer.java:246) [bci: 25]
locals: v45|QWORD[.] v89|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
locals: - - - - 
sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
locals: - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
locals: - v12|QWORD[.] v45|QWORD[.] - v66|DWORD - - v67|DWORD - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:25, 18, 4, 482, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:274) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v891 
=== Usages ===
=== Predecessor ===
v1408 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v891  <|@  <|@
f <@*|@fixed>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:287) [bci: 155]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B111" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:570) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1462 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1462  <|@  <|@
f <@~|@floating>@ <|@
tid i1463 <|@
result int[-284179|0xfffffffffffba9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -284179
stableDimension: 0
stamp: i32 [-284179] ⇊00000000fffba9ed ⇈00000000fffba9ed
stampKind: i32
value: int[-284179|0xfffffffffffba9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1447 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1444 
=== Predecessor ===
v1308 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-284179|0xfffffffffffba9ed]] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B111" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1460 
=== Usages ===
=== Predecessor ===
v1304 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1460  <|@  <|@
f <@~|@floating>@ <|@
tid i1461 <|@
result int[-305171|0xfffffffffffb57ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -305171
stableDimension: 0
stamp: i32 [-305171] ⇊00000000fffb57ed ⇈00000000fffb57ed
stampKind: i32
value: int[-305171|0xfffffffffffb57ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1447 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1460 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1444 
=== Predecessor ===
v1303 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-305171|0xfffffffffffb57ed]] destination: B108 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B111" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1458 
=== Usages ===
=== Predecessor ===
v1299 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1458  <|@  <|@
f <@~|@floating>@ <|@
tid i1459 <|@
result int[-304659|0xfffffffffffb59ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -304659
stableDimension: 0
stamp: i32 [-304659] ⇊00000000fffb59ed ⇈00000000fffb59ed
stampKind: i32
value: int[-304659|0xfffffffffffb59ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1447 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1458 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1444 
=== Predecessor ===
v1298 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-304659|0xfffffffffffb59ed]] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B111" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v1454 
=== Usages ===
=== Predecessor ===
v1289 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v1454  <|@  <|@
f <@~|@floating>@ <|@
tid i1455 <|@
result int[-245523|0xfffffffffffc40ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -245523
stableDimension: 0
stamp: i32 [-245523] ⇊00000000fffc40ed ⇈00000000fffc40ed
stampKind: i32
value: int[-245523|0xfffffffffffc40ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1447 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1444 
=== Predecessor ===
v1288 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-245523|0xfffffffffffc40ed]] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B109" "B108" "B107" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1447 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-305427 - -245523] ⇊00000000fff800e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1444 
values: i1455 i1459 i1461 i1463 
=== Succesors ===
=== Usages ===
v1449 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1444 values: i1455 i1459 i1461 i1463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1454 v1458 v1460 v1462 
=== Succesors ===
next: v1449 
=== Usages ===
i1447 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1454 v1458 v1460 v1462 #next: v1449  <|@  <|@
f <@*|@fixed>@ <|@
tid v1449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?16 
actionAndReason: i1447 
speculation: a1430 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1444 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?16 actionAndReason: i1447 speculation: a1430  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v92|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:267) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1442 
=== Usages ===
=== Predecessor ===
v1269 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1442  <|@  <|@
f <@~|@floating>@ <|@
tid i1443 <|@
result int[-243731|0xfffffffffffc47ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -243731
stableDimension: 0
stamp: i32 [-243731] ⇊00000000fffc47ed ⇈00000000fffc47ed
stampKind: i32
value: int[-243731|0xfffffffffffc47ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1431 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1427 
=== Predecessor ===
v1268 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-243731|0xfffffffffffc47ed]] destination: B112 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B112" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1431 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-243731 - -240395] ⇊00000000fffc44e5 ⇈00000000fffc5ffd
valueDescription: i32
=== Inputs ===
merge: v1427 
values: i1435 i1437 i1439 i1441 i1443 
=== Succesors ===
=== Usages ===
v1433 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1427 values: i1435 i1437 i1439 i1441 i1443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1434 v1436 v1438 v1440 v1442 
=== Succesors ===
next: v1433 
=== Usages ===
i1431 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1434 v1436 v1438 v1440 v1442 #next: v1433  <|@  <|@
f <@*|@fixed>@ <|@
tid v1433 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i1431 
speculation: a1430 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1427 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i1431 speculation: a1430  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1d0825d6 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B112" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVZXB [v0|QWORD[.] + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = LEA [v7|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v7|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE v11|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [v13|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*]], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v11|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 12], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 28], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 32], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 36], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v11|QWORD[*] + 40], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@61c8dcce encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[*] + 44], y: v16|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v22|DWORD[.] * 8] state [bci:22] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVZXB [v12|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v23|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVZXB [v18|DWORD[.] * 8 + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOV [v22|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOV [v18|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOV [v18|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = MOV [v18|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV [v12|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v26|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = ADD (x: v28|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SUB (x: v30|DWORD, ~y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = ADD (x: v21|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = ADD (x: v20|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SUB (x: v33|DWORD, ~y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v25|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9953429630233886 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607140524528326569
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6178512370566368 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603714444319643983
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|DWORD, v30|DWORD] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" "B18" "B19" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD, v39|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOV [v17|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = SUB (x: v39|DWORD, ~y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD v42|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = DEC v43|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@61c8dcce encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@61c8dcce encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B27" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B36" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD, v31|DWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4628127312854812177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVSX [v46|QWORD[.] + v55|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v57|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998255660785367 condition: |<| trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4628126016096438674
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v56|DWORD + v19|DWORD[.] * 8 + 16], y: v57|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = INC v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = INC v55|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|DWORD, v58|DWORD] destination: B46 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B46" 
    successors "B45" "B48" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4628407492724222633
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD, v56|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.96368033705285 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607140975366411019
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B52" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|DWORD, v56|DWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B63" "B83" 
    successors "B60" "B90" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4607830099549312102
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|DWORD, v67|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|DWORD, y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.12574763249709253 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594350110784090454
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVSX [v46|QWORD[.] + v66|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV [v19|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVZX v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = INC v66|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = INC v67|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v70|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9463253509496284 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B66" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594071963895501621
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.999825479930192 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594071108058921348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4594071108058921348
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v67|DWORD + v19|DWORD[.] * 8 + 16], y: v70|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|DWORD, v72|DWORD] destination: B63 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B75" "B77" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v70|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B74 -> B75 falseDestination: B74 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B78" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v70|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B77 -> B78 falseDestination: B77 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B81" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = SUB (x: v30|DWORD, ~y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v78|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B82" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = LEA [v67|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|DWORD, y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = SHR v70|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = OR v80|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v67|DWORD + v19|DWORD[.] * 8 + 16], y: v81|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = SHR v70|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = AND v82|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = OR v83|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v72|DWORD + v19|DWORD[.] * 8 + 16], y: v84|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = AND v70|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = OR v85|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v79|DWORD + v19|DWORD[.] * 8 + 16], y: v86|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA [v67|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|DWORD, v87|DWORD] destination: B83 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOV [v19|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOVSXD v31|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = ADD (x: v50|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV v49|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD v55|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SUB (x: v33|DWORD, ~y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVSXD v61|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = DEC v62|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = ADD (x: v60|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|DWORD, y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVSXD v34|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = ADD (x: v47|QWORD, y: v44|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600523780335271091
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = ADD (x: v35|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD, v36|DWORD] destination: B19 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572019251726359622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572019251726359622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v22|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6178512370566368 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568781192793351174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|DWORD, v30|DWORD] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571961544451550048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565850200655571212
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = ADD (x: v31|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD, v37|DWORD] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537632238400317159
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v66|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 17, 57, 41] <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: v73|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction v74|DWORD = MOV [v73|QWORD[.] + 12] size: DWORD state [bci:146, 17, 57, 41] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v74|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9999941683736323 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4459418990120258528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v74|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4459418990120258528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:141] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B71" 
    successors "B14" "B110" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v12|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v17|DWORD[.] * 8] state [bci:22] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction v19|DWORD[.] = MOV [v18|DWORD[.] * 8 + 44] size: DWORD state [bci:22] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v19|DWORD[.] * 8] state [bci:22] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v12|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV [v12|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = SUB (x: v66|DWORD, ~y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v88|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|DWORD, y: [v12|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = SUB (x: v67|DWORD, ~y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B96 -> B97 falseDestination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v89|DWORD, y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B103" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v89|DWORD, y: [v18|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B104" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD[.] + 24], y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|DWORD[.] * 8 + 24], y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = SUB (x: v21|DWORD, ~y: [v12|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v91|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4537632197514707335
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV [v12|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = SUB (x: v75|DWORD, ~y: [v12|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v76|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4537632197514707335
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-249371|0xfffffffffffc31e5]] destination: B31 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B31" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1860143242] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v54|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
stack: v31|DWORD v38|DWORD 
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] v46|QWORD[.] v34|DWORD v33|DWORD v19|DWORD[.] v31|DWORD v30|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:70, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-270875|0xfffffffffffbdde5]] destination: B85 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B65" "B76" "B89" "B80" "B87" "B85" "B91" "B93" "B95" "B97" "B99" "B101" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] v46|QWORD[.] v66|DWORD v33|DWORD v19|DWORD[.] v67|DWORD v30|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:109, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-275987|0xfffffffffffbc9ed]] destination: B101 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -276499 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.position(Buffer.java:246) [bci: 25]
locals: v45|QWORD[.] v89|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
locals: - - - - 
sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
locals: - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
locals: - v12|QWORD[.] v45|QWORD[.] - v66|DWORD - - v67|DWORD - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:25, 18, 4, 482, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-264211|0xfffffffffffbf7ed]] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: v73|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:146, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274707|0xfffffffffffbceed]] destination: B99 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274451|0xfffffffffffbcfed]] destination: B97 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274195|0xfffffffffffbd0ed]] destination: B95 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-273171|0xfffffffffffbd4ed]] destination: B93 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-272915|0xfffffffffffbd5ed]] destination: B91 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-242195|0xfffffffffffc4ded]] destination: B5 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B112" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-263443|0xfffffffffffbfaed]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-265755|0xfffffffffffbf1e5]] destination: B87 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-264979|0xfffffffffffbf4ed]] destination: B80 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-264723|0xfffffffffffbf5ed]] destination: B89 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B111" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-284179|0xfffffffffffba9ed]] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B109" "B108" "B107" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v92|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B111" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-305171|0xfffffffffffb57ed]] destination: B108 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B111" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-245523|0xfffffffffffc40ed]] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B111" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-304659|0xfffffffffffb59ed]] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-241683|0xfffffffffffc4fed]] destination: B1 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-260123|0xfffffffffffc07e5]] destination: B65 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@772285300] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -257563 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v65|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] v46|QWORD[.] v55|DWORD v33|DWORD v19|DWORD[.] v56|DWORD v30|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: v22|DWORD[.] v12|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: v0|QWORD[.] - - - v12|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:109, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-243731|0xfffffffffffc47ed]] destination: B112 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-255003|0xfffffffffffc1be5]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-242451|0xfffffffffffc4ced]] destination: B7 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-241939|0xfffffffffffc4eed]] destination: B3 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-264467|0xfffffffffffbf6ed]] destination: B76 -> B102 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #60         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: getfield      #26         // haveLeftoverChar:boolean
    12: ifeq          22
    15: aload_0       
    16: aload         4
    18: iconst_0      
    19: invokespecial #56         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    22: aload         4
    24: invokevirtual #51         // java.nio.Buffer.hasRemaining:()boolean
    27: ifeq          155
    30: aload_0       
    31: getfield      #32         // encoder:java.nio.charset.CharsetEncoder
    34: aload         4
    36: aload_0       
    37: getfield      #34         // bb:java.nio.ByteBuffer
    40: iconst_0      
    41: invokevirtual #54         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    44: astore        5
    46: aload         5
    48: invokevirtual #55         // java.nio.charset.CoderResult.isUnderflow:()boolean
    51: ifeq          108
    54: getstatic     #39         // $assertionsDisabled:boolean
    57: ifne          82
    60: aload         4
    62: invokevirtual #61         // java.nio.Buffer.remaining:()int
    65: iconst_1      
    66: if_icmple     82
    69: new           #47         // java.lang.AssertionError
    72: dup           
    73: aload         4
    75: invokevirtual #61         // java.nio.Buffer.remaining:()int
    78: invokespecial #42         // java.lang.AssertionError.<init>:(int)void
    81: athrow        
    82: aload         4
    84: invokevirtual #61         // java.nio.Buffer.remaining:()int
    87: iconst_1      
    88: if_icmpne     155
    91: aload_0       
    92: iconst_1      
    93: putfield      #26         // haveLeftoverChar:boolean
    96: aload_0       
    97: aload         4
    99: invokevirtual #52         // java.nio.CharBuffer.get:()char
   102: putfield      #49         // leftoverChar:char
   105: goto          155
   108: aload         5
   110: invokevirtual #57         // java.nio.charset.CoderResult.isOverflow:()boolean
   113: ifeq          147
   116: getstatic     #39         // $assertionsDisabled:boolean
   119: ifne          140
   122: aload_0       
   123: getfield      #34         // bb:java.nio.ByteBuffer
   126: invokevirtual #38         // java.nio.Buffer.position:()int
   129: ifgt          140
   132: new           #47         // java.lang.AssertionError
   135: dup           
   136: invokespecial #40         // java.lang.AssertionError.<init>:()void
   139: athrow        
   140: aload_0       
   141: invokespecial #58         // writeBytes:()void
   144: goto          22
   147: aload         5
   149: invokevirtual #59         // java.nio.charset.CoderResult.throwException:()void
   152: goto          22
   155: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1d0825d6 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rsi:0, r13:0, stack:64]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] r14|DWORD r8|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction r11|DWORD = ADD (x: r14|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B112" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = MOVZXB [rsi|QWORD[.] + 23] size: DWORD <|@ <|@
      nr   66  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   74  <|@ instruction rcx|QWORD = LEA [rdx|QWORD + 48] size: QWORD <|@ <|@
      nr   76  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 240] instr: 0 <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  118  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction stack:56|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [rdx|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr  132  <|@ instruction MOV (x: [rdx|QWORD[*] + 12], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [rdx|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [rdx|QWORD[*] + 24], y: r14|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV (x: [rdx|QWORD[*] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rdx|QWORD[*] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [rdx|QWORD[*] + 36], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  144  <|@ instruction MOVB (x: [rdx|QWORD[*] + 40], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  146  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@61c8dcce encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction MOV (x: [rdx|QWORD[*] + 44], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  174  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r9:0, r10:0, r11:0, stack:40, stack:64]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - r9|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:22] <|@ <|@
      nr  178  <|@ instruction rdi|DWORD = MOVZXB [r9|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  180  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction rdi|DWORD = MOVZXB [r10|DWORD[.] * 8 + 40] size: DWORD <|@ <|@
      nr  188  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  196  <|@ instruction rax|DWORD = MOV [r10|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr  198  <|@ instruction rbp|DWORD = MOV [r10|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  202  <|@ instruction r14|DWORD = MOV [r9|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  204  <|@ instruction r9|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction rbp|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction stack:36|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r8|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  224  <|@ instruction BRANCH trueDestinationProbability: 0.9953429630233886 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607140524528326569
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction MOV [rbx|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  230  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  232  <|@ instruction BRANCH trueDestinationProbability: 0.6178512370566368 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603714444319643983
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rdi|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction stack:64|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" "B18" "B19" 
    successors "B25" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  296  <|@ instruction rbp|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  298  <|@ instruction r8|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction r14|DWORD = SUB (x: rdi|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  304  <|@ instruction r14|QWORD = DEC r14|QWORD size: QWORD <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@61c8dcce encoding: base: 0 shift: 3 <|@ <|@
      nr  308  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@61c8dcce encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction stack:68|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B27" 
    successors "B34" "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" "B36" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4628127312854812177
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  460  <|@ instruction rsi|DWORD = MOVSX [rdx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  462  <|@ instruction CMP rsi|DWORD y: 128 size: WORD <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 0.9998255660785367 condition: |<| trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4628126016096438674
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction MOVB (x: [rcx|DWORD + r11|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  470  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  472  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B46 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B46" 
    successors "B45" "B48" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4628407492724222633
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  454  <|@ instruction CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  456  <|@ instruction BRANCH trueDestinationProbability: 0.96368033705285 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607140975366411019
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  488  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B52" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B63" "B83" 
    successors "B60" "B90" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4607830099549312102
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  558  <|@ instruction CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  560  <|@ instruction BRANCH trueDestinationProbability: 0.12574763249709253 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594350110784090454
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  564  <|@ instruction rsi|DWORD = MOVSX [rdx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  568  <|@ instruction rsi|DWORD = MOVZX rsi|DWORD size: DWORD <|@ <|@
      nr  570  <|@ instruction rdi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction rbp|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  574  <|@ instruction CMP rsi|DWORD y: 128 size: DWORD <|@ <|@
      nr  576  <|@ instruction BRANCH trueDestinationProbability: 0.9463253509496284 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B66" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594071963895501621
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction BRANCH trueDestinationProbability: 0.999825479930192 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594071108058921348
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4594071108058921348
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ instruction MOVB (x: [r8|DWORD + r11|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  594  <|@ instruction r8|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B63 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B75" "B77" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction CMP rsi|DWORD y: 2048 size: DWORD <|@ <|@
      nr  704  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B74 -> B75 falseDestination: B74 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B78" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction CMP rsi|DWORD y: 55296 size: DWORD <|@ <|@
      nr  730  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B77 -> B78 falseDestination: B77 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B81" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction r13|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr  738  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B82" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction r13|DWORD = LEA [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  770  <|@ instruction CMP (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rcx|DWORD = SHR rsi|DWORD y: 12 size: DWORD <|@ <|@
      nr  778  <|@ instruction rcx|DWORD = OR rcx|DWORD y: 224 size: DWORD <|@ <|@
      nr  780  <|@ instruction MOVB (x: [r8|DWORD + r11|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr  782  <|@ instruction rcx|DWORD = SHR rsi|DWORD y: 6 size: DWORD <|@ <|@
      nr  784  <|@ instruction rcx|DWORD = AND rcx|DWORD y: 63 size: DWORD <|@ <|@
      nr  786  <|@ instruction rcx|DWORD = OR rcx|DWORD y: 128 size: DWORD <|@ <|@
      nr  788  <|@ instruction MOVB (x: [rbp|DWORD + r11|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr  790  <|@ instruction rsi|DWORD = AND rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  792  <|@ instruction rsi|DWORD = OR rsi|DWORD y: 128 size: DWORD <|@ <|@
      nr  794  <|@ instruction MOVB (x: [r13|DWORD + r11|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  796  <|@ instruction r8|DWORD = LEA [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  798  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction JUMP ~[] destination: B83 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r10|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  382  <|@ instruction rsi|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  384  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr  386  <|@ instruction r14|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr  388  <|@ instruction CMP (x: r14|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B36 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction rsi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  494  <|@ instruction rdi|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  498  <|@ instruction rdi|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  502  <|@ instruction CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  504  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction CMP (x: rbp|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  510  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B52 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction stack:68|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction r10|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  322  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr  324  <|@ instruction CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction CMP (x: rbp|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B27 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600523780335271091
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction rdi|DWORD = ADD (x: r8|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  248  <|@ instruction stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:64|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B19 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572019251726359622
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction stack:64|DWORD = MOVE r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:68|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572019251726359622
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction MOV [rbx|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  268  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction BRANCH trueDestinationProbability: 0.6178512370566368 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568781192793351174
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction r10|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4571961544451550048
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565850200655571212
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction rsi|DWORD = ADD (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  286  <|@ instruction rdi|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction r10|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537632238400317159
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rdi|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction rcx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ st <@st|@reference-map: [stack:12, stack:16, stack:40, stack:64]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:84|DWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 17, 57, 41] <|@ <|@
      nr  638  <|@ st <@st|@reference-map: [rax:0, stack:12, stack:16, stack:40, stack:64]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: rax|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:84|DWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - stack:56|QWORD[.] - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:146, 17, 57, 41] <|@ <|@
      nr  640  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  642  <|@ instruction BRANCH trueDestinationProbability: 0.9999941683736323 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4459418990120258528
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  668  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  670  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4459418990120258528
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  674  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141]
locals: stack:32|QWORD[.] - - - stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:141] <|@ <|@
      nr  678  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction JUMP ~[] destination: B71 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B71" 
    successors "B14" "B110" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction rdx|DWORD[.] = MOV [r9|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, stack:40, stack:64]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - r9|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:22] <|@ <|@
      nr  158  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  160  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:64]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - r9|QWORD[.] - 
>@ <|@ instruction r11|DWORD[.] = MOV [r10|DWORD[.] * 8 + 44] size: DWORD state [bci:22] <|@ <|@
      nr  162  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r10:0, r11:0, stack:40, stack:64]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - r9|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:22] <|@ <|@
      nr  164  <|@ instruction rcx|DWORD = MOV [r9|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  166  <|@ instruction r8|DWORD = MOV [r9|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  168  <|@ instruction CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  864  <|@ instruction r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  866  <|@ instruction stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  870  <|@ instruction CMP (x: rsi|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  892  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  910  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction CMP (x: rsi|DWORD, y: [rbx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  914  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  930  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  932  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  934  <|@ instruction rdi|DWORD = SUB (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B96 -> B97 falseDestination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  954  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  956  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B103" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  972  <|@ instruction rcx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction CMP (x: rdi|DWORD, y: [rcx|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  976  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B104" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1000  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction MOV (x: [rcx|DWORD[.] * 8 + 24], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1004  <|@ instruction rsi|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1010  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rbx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1012  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1014  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1026  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   90  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [r13:0, stack:64]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0]
locals: stack:32|QWORD[.] r13|QWORD[.] r14|DWORD stack:44|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4537632197514707335
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction r10|DWORD = MOV [rbx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  650  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: [rbx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  652  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr  654  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4537632197514707335
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction r10|DWORD = MOVE input: int[-249371|0xfffffffffffc31e5] <|@ <|@
      nr  362  <|@ instruction r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B31 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B31" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  432  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1860143242] <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 680], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  438  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r11:0, stack:12, stack:16, stack:64]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
stack: r13|DWORD r8|DWORD 
locals: stack:84|DWORD[.] rbx|QWORD[.] stack:80|QWORD[.] rdx|QWORD[.] rcx|DWORD rax|DWORD r11|DWORD[.] r13|DWORD r9|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:84|DWORD[.] rbx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:70, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction rcx|DWORD = MOVE input: int[-270875|0xfffffffffffbdde5] <|@ <|@
      nr  814  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction rbp|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B85 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B65" "B76" "B89" "B80" "B87" "B85" "B91" "B93" "B95" "B97" "B99" "B101" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  992  <|@ instruction MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  994  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  996  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rbp:0, rsi:0, rdi:0, r11:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: rdi|DWORD[.] rbx|QWORD[.] rsi|QWORD[.] rdx|QWORD[.] r10|DWORD rax|DWORD r11|DWORD[.] r8|DWORD r9|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: rdi|DWORD[.] rbx|QWORD[.] rsi|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: rbp|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:109, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  980  <|@ instruction rcx|DWORD = MOVE input: int[-275987|0xfffffffffffbc9ed] <|@ <|@
      nr  982  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction rbp|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  988  <|@ instruction JUMP ~[] destination: B101 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1018  <|@ instruction MOV [r15|QWORD + 668] y: -276499 size: DWORD <|@ <|@
      nr 1020  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1022  <|@ st <@st|@reference-map: [rbx:0, stack:12, stack:16, stack:64]
live-base-pointers: []
java.nio.Buffer.position(Buffer.java:246) [bci: 25]
locals: stack:80|QWORD[.] rdi|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
locals: - - - - 
sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
locals: - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
locals: - rbx|QWORD[.] stack:80|QWORD[.] - r10|DWORD - - r8|DWORD - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:84|DWORD[.] rbx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:25, 18, 4, 482, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  658  <|@ instruction r10|DWORD = MOVE input: int[-264211|0xfffffffffffbf7ed] <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  694  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  696  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  698  <|@ st <@st|@reference-map: [rax:0, rbx:0, stack:12, stack:16, stack:64]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: rax|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:84|DWORD[.] rbx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:146, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  960  <|@ instruction rcx|DWORD = MOVE input: int[-274707|0xfffffffffffbceed] <|@ <|@
      nr  962  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  966  <|@ instruction rbp|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B99 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  942  <|@ instruction rcx|DWORD = MOVE input: int[-274451|0xfffffffffffbcfed] <|@ <|@
      nr  944  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rbp|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B97 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  918  <|@ instruction rcx|DWORD = MOVE input: int[-274195|0xfffffffffffbd0ed] <|@ <|@
      nr  920  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction rbp|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B95 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  896  <|@ instruction rcx|DWORD = MOVE input: int[-273171|0xfffffffffffbd4ed] <|@ <|@
      nr  898  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction rbp|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction JUMP ~[] destination: B93 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction rcx|DWORD = MOVE input: int[-272915|0xfffffffffffbd5ed] <|@ <|@
      nr  878  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  884  <|@ instruction rbp|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B91 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVE input: int[-242195|0xfffffffffffc4ded] <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B5 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B112" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1076  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1078  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1080  <|@ st <@st|@reference-map: [r13:0, stack:64]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0]
locals: stack:32|QWORD[.] r13|QWORD[.] r14|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-263443|0xfffffffffffbfaed] <|@ <|@
      nr  688  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction rcx|DWORD = MOVE input: int[-265755|0xfffffffffffbf1e5] <|@ <|@
      nr  834  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction rbp|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B87 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  750  <|@ instruction rcx|DWORD = MOVE input: int[-264979|0xfffffffffffbf4ed] <|@ <|@
      nr  752  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction rbp|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B80 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  844  <|@ instruction stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction rcx|DWORD = MOVE input: int[-264723|0xfffffffffffbf5ed] <|@ <|@
      nr  854  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  858  <|@ instruction rbp|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction JUMP ~[] destination: B89 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B111" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1030  <|@ instruction r10|DWORD = MOVE input: int[-284179|0xfffffffffffba9ed] <|@ <|@
      nr 1032  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B109" "B108" "B107" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1062  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1064  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1066  <|@ st <@st|@reference-map: [rbx:0, stack:64]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: stack:32|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B111" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1038  <|@ instruction r10|DWORD = MOVE input: int[-305171|0xfffffffffffb57ed] <|@ <|@
      nr 1040  <|@ instruction rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1042  <|@ instruction JUMP ~[] destination: B108 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B111" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1054  <|@ instruction r10|DWORD = MOVE input: int[-245523|0xfffffffffffc40ed] <|@ <|@
      nr 1056  <|@ instruction rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B111" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1046  <|@ instruction r10|DWORD = MOVE input: int[-304659|0xfffffffffffb59ed] <|@ <|@
      nr 1048  <|@ instruction rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r10|DWORD = MOVE input: int[-241683|0xfffffffffffc4fed] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction rcx|DWORD = MOVE input: int[-260123|0xfffffffffffc07e5] <|@ <|@
      nr  612  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction rbp|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B65 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@772285300] <|@ <|@
      nr  540  <|@ instruction MOV [r15|QWORD + 668] y: -257563 size: DWORD <|@ <|@
      nr  542  <|@ instruction MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  544  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r11:0, stack:12, stack:16, stack:64]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:84|DWORD[.] rbx|QWORD[.] stack:80|QWORD[.] rdx|QWORD[.] r10|DWORD rax|DWORD r11|DWORD[.] rcx|DWORD r9|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:84|DWORD[.] rbx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:109, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1070  <|@ instruction r10|DWORD = MOVE input: int[-243731|0xfffffffffffc47ed] <|@ <|@
      nr 1072  <|@ instruction JUMP ~[] destination: B112 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction r10|DWORD = MOVE input: int[-255003|0xfffffffffffc1be5] <|@ <|@
      nr  426  <|@ instruction r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r10|DWORD = MOVE input: int[-242451|0xfffffffffffc4ced] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B7 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction r10|DWORD = MOVE input: int[-241939|0xfffffffffffc4eed] <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B3 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction rcx|DWORD = MOVE input: int[-264467|0xfffffffffffbf6ed] <|@ <|@
      nr  718  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction rbp|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B76 -> B102 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #60         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: getfield      #26         // haveLeftoverChar:boolean
    12: ifeq          22
    15: aload_0       
    16: aload         4
    18: iconst_0      
    19: invokespecial #56         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    22: aload         4
    24: invokevirtual #51         // java.nio.Buffer.hasRemaining:()boolean
    27: ifeq          155
    30: aload_0       
    31: getfield      #32         // encoder:java.nio.charset.CharsetEncoder
    34: aload         4
    36: aload_0       
    37: getfield      #34         // bb:java.nio.ByteBuffer
    40: iconst_0      
    41: invokevirtual #54         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    44: astore        5
    46: aload         5
    48: invokevirtual #55         // java.nio.charset.CoderResult.isUnderflow:()boolean
    51: ifeq          108
    54: getstatic     #39         // $assertionsDisabled:boolean
    57: ifne          82
    60: aload         4
    62: invokevirtual #61         // java.nio.Buffer.remaining:()int
    65: iconst_1      
    66: if_icmple     82
    69: new           #47         // java.lang.AssertionError
    72: dup           
    73: aload         4
    75: invokevirtual #61         // java.nio.Buffer.remaining:()int
    78: invokespecial #42         // java.lang.AssertionError.<init>:(int)void
    81: athrow        
    82: aload         4
    84: invokevirtual #61         // java.nio.Buffer.remaining:()int
    87: iconst_1      
    88: if_icmpne     155
    91: aload_0       
    92: iconst_1      
    93: putfield      #26         // haveLeftoverChar:boolean
    96: aload_0       
    97: aload         4
    99: invokevirtual #52         // java.nio.CharBuffer.get:()char
   102: putfield      #49         // leftoverChar:char
   105: goto          155
   108: aload         5
   110: invokevirtual #57         // java.nio.charset.CoderResult.isOverflow:()boolean
   113: ifeq          147
   116: getstatic     #39         // $assertionsDisabled:boolean
   119: ifne          140
   122: aload_0       
   123: getfield      #34         // bb:java.nio.ByteBuffer
   126: invokevirtual #38         // java.nio.Buffer.position:()int
   129: ifgt          140
   132: new           #47         // java.lang.AssertionError
   135: dup           
   136: invokespecial #40         // java.lang.AssertionError.<init>:()void
   139: athrow        
   140: aload_0       
   141: invokespecial #58         // writeBytes:()void
   144: goto          22
   147: aload         5
   149: invokevirtual #59         // java.nio.charset.CoderResult.throwException:()void
   152: goto          22
   155: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1d0825d6 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rsi:0, r13:0, stack:64]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0]
locals: rsi|QWORD[.] r13|QWORD[.] r14|DWORD r8|DWORD - - 
>@ <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction r11|DWORD = ADD (x: r14|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   16  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B112" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rdx|DWORD = MOVZXB [rsi|QWORD[.] + 23] size: DWORD <|@ <|@
      nr   66  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   74  <|@ instruction rcx|QWORD = LEA [rdx|QWORD + 48] size: QWORD <|@ <|@
      nr   76  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 240] instr: 0 <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  118  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction stack:56|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV (x: [rdx|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = MOVE input: long[4294967295|0xffffffff] <|@ <|@
      nr  132  <|@ instruction MOV (x: [rdx|QWORD[*] + 12], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [rdx|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV (x: [rdx|QWORD[*] + 24], y: r14|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV (x: [rdx|QWORD[*] + 28], y: r11|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV (x: [rdx|QWORD[*] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [rdx|QWORD[*] + 36], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  144  <|@ instruction MOVB (x: [rdx|QWORD[*] + 40], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  146  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@61c8dcce encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction MOV (x: [rdx|QWORD[*] + 44], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B109" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  174  <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  176  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r9:0, r10:0, r11:0, stack:40, stack:64]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - r9|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:22] <|@ <|@
      nr  178  <|@ instruction rdi|DWORD = MOVZXB [r9|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  180  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B108" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction rdi|DWORD = MOVZXB [r10|DWORD[.] * 8 + 40] size: DWORD <|@ <|@
      nr  188  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  196  <|@ instruction rax|DWORD = MOV [r10|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr  198  <|@ instruction rbp|DWORD = MOV [r10|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr  200  <|@ instruction r13|DWORD = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  202  <|@ instruction r14|DWORD = MOV [r9|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  204  <|@ instruction r9|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction r13|DWORD = ADD (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction rbp|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction stack:36|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rax|DWORD = ADD (x: r8|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction r8|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  224  <|@ instruction BRANCH trueDestinationProbability: 0.9953429630233886 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607140524528326569
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction MOV [rbx|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  230  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  232  <|@ instruction BRANCH trueDestinationProbability: 0.6178512370566368 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603714444319643983
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rdi|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  240  <|@ instruction stack:64|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B18 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" "B18" "B19" 
    successors "B25" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  296  <|@ instruction rbp|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  298  <|@ instruction r8|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction r14|DWORD = SUB (x: rdi|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  304  <|@ instruction r14|QWORD = DEC r14|QWORD size: QWORD <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@61c8dcce encoding: base: 0 shift: 3 <|@ <|@
      nr  308  <|@ instruction stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@61c8dcce encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction stack:68|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B34" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B49" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 2
    probability 4628127312854812177
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  460  <|@ instruction rsi|DWORD = MOVSX [rdx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  462  <|@ instruction CMP rsi|DWORD y: 128 size: WORD <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 0.9998255660785367 condition: |<| trueDestination: B45 -> B46 falseDestination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4628126016096438674
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction MOVB (x: [rcx|DWORD + r11|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  470  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  472  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B46 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B46" 
    successors "B45" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4628407492724222633
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  454  <|@ instruction CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  456  <|@ instruction BRANCH trueDestinationProbability: 0.96368033705285 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B44" "B45" 
    successors "B50" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  488  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B63" "B83" 
    successors "B60" "B90" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4607830099549312102
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  558  <|@ instruction CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  560  <|@ instruction BRANCH trueDestinationProbability: 0.12574763249709253 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B74" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594350110784090454
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  564  <|@ instruction rsi|DWORD = MOVSX [rdx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  566  <|@ instruction rcx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  568  <|@ instruction rsi|DWORD = MOVZX rsi|DWORD size: DWORD <|@ <|@
      nr  570  <|@ instruction rdi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  572  <|@ instruction rbp|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  574  <|@ instruction CMP rsi|DWORD y: 128 size: DWORD <|@ <|@
      nr  576  <|@ instruction BRANCH trueDestinationProbability: 0.9463253509496284 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B66" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594071963895501621
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  580  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction BRANCH trueDestinationProbability: 0.999825479930192 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4594071108058921348
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4594071108058921348
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ instruction MOVB (x: [r8|DWORD + r11|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  594  <|@ instruction r8|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B63 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B75" "B77" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction CMP rsi|DWORD y: 2048 size: DWORD <|@ <|@
      nr  704  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B74 -> B75 falseDestination: B74 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B78" "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction CMP rsi|DWORD y: 55296 size: DWORD <|@ <|@
      nr  730  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B77 -> B78 falseDestination: B77 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B81" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction r13|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  736  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr  738  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B82" "B86" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  764  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction r13|DWORD = LEA [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  770  <|@ instruction CMP (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B59" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4575550722588525599
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rcx|DWORD = SHR rsi|DWORD y: 12 size: DWORD <|@ <|@
      nr  778  <|@ instruction rcx|DWORD = OR rcx|DWORD y: 224 size: DWORD <|@ <|@
      nr  780  <|@ instruction MOVB (x: [r8|DWORD + r11|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr  782  <|@ instruction rcx|DWORD = SHR rsi|DWORD y: 6 size: DWORD <|@ <|@
      nr  784  <|@ instruction rcx|DWORD = AND rcx|DWORD y: 63 size: DWORD <|@ <|@
      nr  786  <|@ instruction rcx|DWORD = OR rcx|DWORD y: 128 size: DWORD <|@ <|@
      nr  788  <|@ instruction MOVB (x: [rbp|DWORD + r11|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr  790  <|@ instruction rsi|DWORD = AND rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  792  <|@ instruction rsi|DWORD = OR rsi|DWORD y: 128 size: DWORD <|@ <|@
      nr  794  <|@ instruction MOVB (x: [r13|DWORD + r11|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  796  <|@ instruction r8|DWORD = LEA [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  798  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction JUMP ~[] destination: B83 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r10|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  382  <|@ instruction rsi|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  384  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr  386  <|@ instruction r14|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr  388  <|@ instruction CMP (x: r14|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B43" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B35 -> B43 falseDestination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction rsi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  494  <|@ instruction rdi|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  496  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  498  <|@ instruction rdi|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  502  <|@ instruction CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  504  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B58" "B55" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction CMP (x: rbp|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  510  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B58 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction r10|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  322  <|@ instruction r10|QWORD = ADD (x: r10|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr  324  <|@ instruction CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B33" "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602678845589819761
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction CMP (x: rbp|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B33 falseDestination: B26 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4600523780335271091
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction rdi|DWORD = ADD (x: r8|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  248  <|@ instruction stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:64|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B19 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" "B107" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572019251726359622
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction stack:64|DWORD = MOVE r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:68|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572019251726359622
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction MOV [rbx|DWORD[.] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  268  <|@ instruction CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction BRANCH trueDestinationProbability: 0.6178512370566368 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568781192793351174
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction rdi|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565850200655571212
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction rsi|DWORD = ADD (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  286  <|@ instruction rdi|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B67" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4537632238400317159
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  626  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction rdi|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction rcx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ st <@st|@reference-map: [stack:12, stack:16, stack:40, stack:64]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:84|DWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - stack:56|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 17, 57, 41] <|@ <|@
      nr  638  <|@ st <@st|@reference-map: [rax:0, stack:12, stack:16, stack:40, stack:64]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: rax|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:84|DWORD[.] stack:56|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - stack:56|QWORD[.] - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:146, 17, 57, 41] <|@ <|@
      nr  640  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  642  <|@ instruction BRANCH trueDestinationProbability: 0.9999941683736323 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4459418990120258528
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  668  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  670  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4459418990120258528
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  674  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141]
locals: stack:32|QWORD[.] - - - stack:56|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:141] <|@ <|@
      nr  678  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction JUMP ~[] destination: B71 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B71" 
    successors "B14" "B110" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182445217190257
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction rdx|DWORD[.] = MOV [r9|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, stack:40, stack:64]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - r9|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:22] <|@ <|@
      nr  158  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  160  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:64]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - r9|QWORD[.] - 
>@ <|@ instruction r11|DWORD[.] = MOV [r10|DWORD[.] * 8 + 44] size: DWORD state [bci:22] <|@ <|@
      nr  162  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r10:0, r11:0, stack:40, stack:64]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: rsi|QWORD[.] - - - r9|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:22] <|@ <|@
      nr  164  <|@ instruction rcx|DWORD = MOV [r9|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  166  <|@ instruction r8|DWORD = MOV [r9|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  168  <|@ instruction CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B91" "B92" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  864  <|@ instruction r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  866  <|@ instruction stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  870  <|@ instruction CMP (x: rsi|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr  888  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  890  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  892  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  910  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction CMP (x: rsi|DWORD, y: [rbx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  914  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  930  <|@ instruction rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  932  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  934  <|@ instruction rdi|DWORD = SUB (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  936  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  938  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B96 -> B97 falseDestination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  954  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  956  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B103" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  972  <|@ instruction rcx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction CMP (x: rdi|DWORD, y: [rcx|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  976  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B104" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1000  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction MOV (x: [rcx|DWORD[.] * 8 + 24], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1004  <|@ instruction rsi|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1010  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rbx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1012  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1014  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors 
    xhandlers
    flags 
    probability 4607182257675218039
    begin_IR
      LIR
      nr 1024  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1026  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   90  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [r13:0, stack:64]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0]
locals: stack:32|QWORD[.] r13|QWORD[.] r14|DWORD stack:44|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   96  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4537632197514707335
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction r10|DWORD = MOV [rbx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  650  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: [rbx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  652  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr  654  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4537632197514707335
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B25" "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction r10|DWORD = MOVE input: int[-249371|0xfffffffffffc31e5] <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B31 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B31" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  362  <|@ instruction r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1860143242] <|@ <|@
      nr  434  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction MOV (x: [r15|QWORD + 680], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  438  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r11:0, stack:12, stack:16, stack:64]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
stack: r13|DWORD r8|DWORD 
locals: stack:84|DWORD[.] rbx|QWORD[.] stack:80|QWORD[.] rdx|QWORD[.] rcx|DWORD rax|DWORD r11|DWORD[.] r13|DWORD r9|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:84|DWORD[.] rbx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:70, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction rcx|DWORD = MOVE input: int[-270875|0xfffffffffffbdde5] <|@ <|@
      nr  814  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction JUMP ~[] destination: B85 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B65" "B76" "B89" "B80" "B87" "B85" "B91" "B93" "B95" "B97" "B99" "B101" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  616  <|@ instruction rbp|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  994  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  996  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rbp:0, rsi:0, rdi:0, r11:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: rdi|DWORD[.] rbx|QWORD[.] rsi|QWORD[.] rdx|QWORD[.] r10|DWORD rax|DWORD r11|DWORD[.] r8|DWORD r9|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: rdi|DWORD[.] rbx|QWORD[.] rsi|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: rbp|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:109, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  980  <|@ instruction rcx|DWORD = MOVE input: int[-275987|0xfffffffffffbc9ed] <|@ <|@
      nr  982  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  988  <|@ instruction JUMP ~[] destination: B101 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1018  <|@ instruction MOV [r15|QWORD + 668] y: -276499 size: DWORD <|@ <|@
      nr 1020  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1022  <|@ st <@st|@reference-map: [rbx:0, stack:12, stack:16, stack:64]
live-base-pointers: []
java.nio.Buffer.position(Buffer.java:246) [bci: 25]
locals: stack:80|QWORD[.] rdi|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
locals: - - - - 
sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
locals: - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
locals: - rbx|QWORD[.] stack:80|QWORD[.] - r10|DWORD - - r8|DWORD - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:84|DWORD[.] rbx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:25, 18, 4, 482, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  658  <|@ instruction r10|DWORD = MOVE input: int[-264211|0xfffffffffffbf7ed] <|@ <|@
      nr  660  <|@ instruction JUMP ~[] destination: B68 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B68" "B72" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  694  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  696  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  698  <|@ st <@st|@reference-map: [rax:0, rbx:0, stack:12, stack:16, stack:64]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146]
stack: rax|QWORD[.] 
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:84|DWORD[.] rbx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:146, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  960  <|@ instruction rcx|DWORD = MOVE input: int[-274707|0xfffffffffffbceed] <|@ <|@
      nr  962  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B99 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  942  <|@ instruction rcx|DWORD = MOVE input: int[-274451|0xfffffffffffbcfed] <|@ <|@
      nr  944  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B97 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  918  <|@ instruction rcx|DWORD = MOVE input: int[-274195|0xfffffffffffbd0ed] <|@ <|@
      nr  920  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B95 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  896  <|@ instruction rcx|DWORD = MOVE input: int[-273171|0xfffffffffffbd4ed] <|@ <|@
      nr  898  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction JUMP ~[] destination: B93 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction rcx|DWORD = MOVE input: int[-272915|0xfffffffffffbd5ed] <|@ <|@
      nr  878  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction JUMP ~[] destination: B91 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVE input: int[-242195|0xfffffffffffc4ded] <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B5 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B112" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1076  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1078  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1080  <|@ st <@st|@reference-map: [r13:0, stack:64]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0]
locals: stack:32|QWORD[.] r13|QWORD[.] r14|DWORD r8|DWORD - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  686  <|@ instruction r10|DWORD = MOVE input: int[-263443|0xfffffffffffbfaed] <|@ <|@
      nr  688  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  824  <|@ instruction stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction rcx|DWORD = MOVE input: int[-265755|0xfffffffffffbf1e5] <|@ <|@
      nr  834  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B87 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  750  <|@ instruction rcx|DWORD = MOVE input: int[-264979|0xfffffffffffbf4ed] <|@ <|@
      nr  752  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~[] destination: B80 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B89" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  844  <|@ instruction stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  846  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  852  <|@ instruction rcx|DWORD = MOVE input: int[-264723|0xfffffffffffbf5ed] <|@ <|@
      nr  854  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  860  <|@ instruction JUMP ~[] destination: B89 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B111" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1030  <|@ instruction r10|DWORD = MOVE input: int[-284179|0xfffffffffffba9ed] <|@ <|@
      nr 1032  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~[] destination: B107 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B109" "B108" "B107" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1062  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1064  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1066  <|@ st <@st|@reference-map: [rbx:0, stack:64]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22]
locals: stack:32|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:22] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B111" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1038  <|@ instruction r10|DWORD = MOVE input: int[-305171|0xfffffffffffb57ed] <|@ <|@
      nr 1040  <|@ instruction rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1042  <|@ instruction JUMP ~[] destination: B108 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B111" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1054  <|@ instruction r10|DWORD = MOVE input: int[-245523|0xfffffffffffc40ed] <|@ <|@
      nr 1056  <|@ instruction rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B111" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1046  <|@ instruction r10|DWORD = MOVE input: int[-304659|0xfffffffffffb59ed] <|@ <|@
      nr 1048  <|@ instruction rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r10|DWORD = MOVE input: int[-241683|0xfffffffffffc4fed] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction rcx|DWORD = MOVE input: int[-260123|0xfffffffffffc07e5] <|@ <|@
      nr  612  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B65 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@772285300] <|@ <|@
      nr  540  <|@ instruction MOV [r15|QWORD + 668] y: -257563 size: DWORD <|@ <|@
      nr  542  <|@ instruction MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  544  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r11:0, stack:12, stack:16, stack:64]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:84|DWORD[.] rbx|QWORD[.] stack:80|QWORD[.] rdx|QWORD[.] r10|DWORD rax|DWORD r11|DWORD[.] rcx|DWORD r9|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57]
locals: stack:84|DWORD[.] rbx|QWORD[.] stack:80|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41]
locals: stack:32|QWORD[.] - - - rbx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:109, 17, 57, 41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1070  <|@ instruction r10|DWORD = MOVE input: int[-243731|0xfffffffffffc47ed] <|@ <|@
      nr 1072  <|@ instruction JUMP ~[] destination: B112 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B34" "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction r10|DWORD = MOVE input: int[-255003|0xfffffffffffc1be5] <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r10|DWORD = MOVE input: int[-242451|0xfffffffffffc4ced] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B7 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B113" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction r10|DWORD = MOVE input: int[-241939|0xfffffffffffc4eed] <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B3 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction rcx|DWORD = MOVE input: int[-264467|0xfffffffffffbf6ed] <|@ <|@
      nr  718  <|@ instruction rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B76 -> B102 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #60         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: getfield      #26         // haveLeftoverChar:boolean
    12: ifeq          22
    15: aload_0       
    16: aload         4
    18: iconst_0      
    19: invokespecial #56         // flushLeftoverChar:(java.nio.CharBuffer, boolean)void
    22: aload         4
    24: invokevirtual #51         // java.nio.Buffer.hasRemaining:()boolean
    27: ifeq          155
    30: aload_0       
    31: getfield      #32         // encoder:java.nio.charset.CharsetEncoder
    34: aload         4
    36: aload_0       
    37: getfield      #34         // bb:java.nio.ByteBuffer
    40: iconst_0      
    41: invokevirtual #54         // java.nio.charset.CharsetEncoder.encode:(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)java.nio.charset.CoderResult
    44: astore        5
    46: aload         5
    48: invokevirtual #55         // java.nio.charset.CoderResult.isUnderflow:()boolean
    51: ifeq          108
    54: getstatic     #39         // $assertionsDisabled:boolean
    57: ifne          82
    60: aload         4
    62: invokevirtual #61         // java.nio.Buffer.remaining:()int
    65: iconst_1      
    66: if_icmple     82
    69: new           #47         // java.lang.AssertionError
    72: dup           
    73: aload         4
    75: invokevirtual #61         // java.nio.Buffer.remaining:()int
    78: invokespecial #42         // java.lang.AssertionError.<init>:(int)void
    81: athrow        
    82: aload         4
    84: invokevirtual #61         // java.nio.Buffer.remaining:()int
    87: iconst_1      
    88: if_icmpne     155
    91: aload_0       
    92: iconst_1      
    93: putfield      #26         // haveLeftoverChar:boolean
    96: aload_0       
    97: aload         4
    99: invokevirtual #52         // java.nio.CharBuffer.get:()char
   102: putfield      #49         // leftoverChar:char
   105: goto          155
   108: aload         5
   110: invokevirtual #57         // java.nio.charset.CoderResult.isOverflow:()boolean
   113: ifeq          147
   116: getstatic     #39         // $assertionsDisabled:boolean
   119: ifne          140
   122: aload_0       
   123: getfield      #34         // bb:java.nio.ByteBuffer
   126: invokevirtual #38         // java.nio.Buffer.position:()int
   129: ifgt          140
   132: new           #47         // java.lang.AssertionError
   135: dup           
   136: invokespecial #40         // java.lang.AssertionError.<init>:()void
   139: athrow        
   140: aload_0       
   141: invokespecial #58         // writeBytes:()void
   144: goto          22
   147: aload         5
   149: invokevirtual #59         // java.nio.charset.CoderResult.throwException:()void
   152: goto          22
   155: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c245048897424404c8bea448bf1458b550c458bde4503d8453bda0f8f880600004585db0f8cfb060000453bf30f8fb80500004585f60f8cde0600000fb6561785d20f85b3060000498b5760488d4a30493b4f700f872004000049894f600f1882f00000004c8bca4c894c242848b9addeaddeaddeadde488b89a800000048890ac74208addeaddeb9ffffffff48894a0c448962144489721844895a1c44895220448962244488622849c1ed0344896a2ce90c0300000f1f8000000000660f1f4400008b5e1c418504dc410fb6792885ff0f85c7050000420fb63cd52800000085ff0f85a00500008b3cdd14000000428b04d524000000428b2cd51c000000468b2cd518000000458b7124448bc84403cd4403e8896c2438418be9412bed8944243c418bc04103c64103ce4489442434448bc0442bc183ff010f85ef010000c704dd1400000001000000443bc50f8ec6010000418bf9896c242444897424208b2cd50c000000448bc5448bf7452bf54d63f649ffce418bf248c1e603488974241048c1e203413bfd448954241c0f8f6a010000413bfd0f8f11010000448bd1418bcde927000000660f1f440000660f1f440000420fbf7452106681fe80000f830e000000428874d910ffc141ffc23bf97fe1413bc20f8ffa000000448bc10f1f440000413bc20f8e04020000420fbf745210428b0cdd0c0000000fb7f6418bfaffc7418be8ffc581fe800000000f831f000000453bc80f8e56010000413bc80f868f040000438874d810448bc5448bd7ebb181fe000800000f82f204000081fe00d800000f8303040000458be9452be84183fd030f8cd7030000413bc80f86b2030000458d6802413bcd0f86a60200008bcec1e90c81c9e000000043884cd8108bcec1e90683e13f81c98000000042884cdd1083e63f81ce80000000438874dd10458d4003448bd7e936ffffff468b14dd0c0000004963f54903f6458bf24c3bf60f863f040000453bd50f87ccfeffffe9310400004963f28bf8412bfa4863ff48ffcf4803f74c3bc60f86e1030000413bea0f87e3feffffe9d30300004c63d14d03d64d3bc20f86d80100003be90f877ffeffffe9cb010000418bf84103fd44894424244489742420e931feffff4489742420448954241c85ff0f8529030000c704dd1400000001000000443bc50f8e0c000000418bf9896c2424e9fffdffff418bf54103f08bfe4489442424e9edfdffff488b742410895c240c4c8b4c2428488bfe498bf1418bd2488bcf660f1f440000e800000000908b700c85f60f841701000083fe010f8559020000488b74244090e800000000904c8b4c2428488b742440418b512c418504d4448b5620468b1cd52c000000438504dc418b4918458b411c443bc10f8fd8fcffffe9a3020000448b742420895c240c418bf2412bf63b7424340f8fca01000085f60f8caa010000488b5c24283b730c0f8c890100008b6c24388b4c243c418bf82bf93bfd0f8f6401000085ff0f8c4c0100008b4c241c3b3ccd0c0000000f8cf9000000897318893ccd180000008b7424342b731883fe010f84ef000000488b6c24504883c458850500000000c5f877c344895c243c4489542438448944243448beaddeaddeaddeaddeba08000000b901000000e80000000090488bd0448b5c243c448b542438488b742440e9abfbffff488b5c2428448b531c442b53184183fa010f849d000000488b6c24504883c458850500000000c5f877c3895c240c488b5c242841bae531fcff448b44242448bfaddeaddeaddeadde4589979c0200004989bfa8020000e80000000090895c240c488b5c2428b9e5ddfbff488b7424108b7c240c488b6c244041898f9c0200004d89a7a8020000e80000000090b9edc9fbff488b7424108b7c240cebd741c7879c020000edc7fbff4d89a7a8020000e8000000009041baedf7fbff4589979c0200004d89a7a8020000e80000000090b9edcefbff488b7424108b7c240ceb95b9edcffbff488b7424108b7c240ceb85b9edd0fbff488b7424108b7c240ce972ffffffb9edd4fbff488b7424108b7c240c488b5c2428e95affffffb9edd5fbff488b7424108b7c240c488b5c2428e942ffffff41baed4dfcff4589979c0200004d89a7a8020000e8000000009041baedfafbff488b5c2428e95fffffff895c240c488b5c2428b9e5f1fbff488b7424108b7c240ce9fcfeffff895c240c488b5c2428b9edf4fbff488b7424108b7c240ce9e0feffff895c240c488b5c2428b9edf5fbff488b7424108b7c240ce9c4feffff41baeda9fbff488b5c24284589979c0200004d89a7a8020000e8000000009041baed57fbff498bd9ebe141baed40fcff498bd9ebd641baed59fbff498bd9ebcb41baed4ffcffe93dffffff895c240c488b5c2428b9e507fcff488b7424108b7c240ce95dfeffff895c240c488b5c242849b8addeaddeaddeadde41c7879c020000e511fcff4d8987a8020000e8000000009041baed47fcffe9ebfeffff895c240c488b5c242841bae51bfcffe9d9fdffff41baed4cfcffe9ccfeffff41baed4efcffe9c1feffff895c240c488b5c2428b9edf6fbff488b7424108b7c240ce9e1fdffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1d0825d6 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 59 12 r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 59 [rsi:0, r13:0, stack:64]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]  |r14|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 59 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 63 14 r11|DWORD = ADD (x: r14|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 69 16 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 72 18 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 78 block B2 null  <||@
  Comment 78 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 78 28 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 81 30 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 87 block B4 null  <||@
  Comment 87 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 87 40 CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 90 42 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 96 block B6 null  <||@
  Comment 96 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 96 52 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 99 54 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 105 block B8 null  <||@
  Comment 105 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 64 rdx|DWORD = MOVZXB [rsi|QWORD[.] + 23] size: DWORD  <||@
  Comment 109 66 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 111 68 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B112  <||@
  Comment 117 block B9 null  <||@
  Comment 117 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 117 72 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 121 74 rcx|QWORD = LEA [rdx|QWORD + 48] size: QWORD  <||@
  Comment 125 76 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 129 78 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 135 block B11 null  <||@
  Comment 135 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 108 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 139 110 AMD64PREFETCH ~[rdx|QWORD + 240] instr: 0  <||@
  Comment 146 112 rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 146 114 JUMP ~[] destination: B11 -> B12  <||@
  Comment 146 block B12 null  <||@
  Comment 146 116 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 146 118 r9|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 149 120 stack:56|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 154 122 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}  <||@
  Comment 154 {meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}}  <||@
  Comment 164 124 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 171 126 MOV (x: [rdx|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 174 128 MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}  <||@
  Comment 174 {meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}}  <||@
  Comment 181 130 rcx|QWORD = MOVE input: long[4294967295|0xffffffff]  <||@
  Comment 186 132 MOV (x: [rdx|QWORD[*] + 12], y: rcx|QWORD) size: QWORD  <||@
  Comment 190 134 MOV (x: [rdx|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 194 136 MOV (x: [rdx|QWORD[*] + 24], y: r14|DWORD) size: DWORD  <||@
  Comment 198 138 MOV (x: [rdx|QWORD[*] + 28], y: r11|DWORD) size: DWORD  <||@
  Comment 202 140 MOV (x: [rdx|QWORD[*] + 32], y: r10|DWORD) size: DWORD  <||@
  Comment 206 142 MOV (x: [rdx|QWORD[*] + 36], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 210 144 MOVB (x: [rdx|QWORD[*] + 40], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 214 146 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@61c8dcce encoding: base: 0 shift: 3  <||@
  Comment 218 148 MOV (x: [rdx|QWORD[*] + 44], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 222 150 JUMP ~[] destination: B12 -> B13  <||@
  Comment 227 block B14 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 227 172 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 240 174 rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 243 176 NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:22]  <||@
  Comment 243 [rdx:0, rbx:0, rsi:0, r9:0, r10:0, r11:0, stack:40, stack:64]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4            |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |-   <||@
  Comment 243 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 247 178 rdi|DWORD = MOVZXB [r9|QWORD[.] + 40] size: DWORD  <||@
  Comment 252 180 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 254 182 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B109  <||@
  Comment 260 block B15 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 260 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 260 186 rdi|DWORD = MOVZXB [r10|DWORD[.] * 8 + 40] size: DWORD  <||@
  Comment 269 188 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 271 190 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B108  <||@
  Comment 277 block B16 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 277 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 277 194 rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 284 196 rax|DWORD = MOV [r10|DWORD[.] * 8 + 36] size: DWORD  <||@
  Comment 292 198 rbp|DWORD = MOV [r10|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 300 200 r13|DWORD = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 308 202 r14|DWORD = MOV [r9|QWORD[.] + 36] size: DWORD  <||@
  Comment 312 204 r9|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 318 206 r13|DWORD = ADD (x: r13|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 321 208 stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 325 210 rbp|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 331 212 stack:36|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 335 214 rax|DWORD = ADD (x: r8|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 341 216 rcx|DWORD = ADD (x: rcx|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 344 218 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 349 220 r8|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 355 222 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 358 224 BRANCH trueDestinationProbability: 0.9953429630233886 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B20  <||@
  Comment 364 block B17 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 364 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 364 228 MOV [rbx|DWORD[.] * 8 + 20] y: 1 size: DWORD  <||@
  Comment 375 230 CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 378 232 BRANCH trueDestinationProbability: 0.6178512370566368 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 384 block B18 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 384 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 384 236 rdi|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 387 238 stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 391 240 stack:64|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 396 242 JUMP ~[] destination: B18 -> B24  <||@
  Comment 396 block B24 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 396 294 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 396 296 rbp|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 403 298 r8|QWORD = MOV rbp|DWORD size: DWORD  <||@
  Comment 406 300 r14|DWORD = SUB (x: rdi|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 412 302 r14|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 415 304 r14|QWORD = DEC r14|QWORD size: QWORD  <||@
  Comment 418 306 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@61c8dcce encoding: base: 0 shift: 3  <||@
  Comment 425 308 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 430 310 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@61c8dcce encoding: base: 0 shift: 3  <||@
  Comment 434 312 CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 437 318 stack:68|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 442 314 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B33  <||@
  Comment 448 block B33 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 448 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 448 374 CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 451 376 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B43  <||@
  Comment 457 block B43 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 457 444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 457 446 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 460 448 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 463 450 JUMP ~[] destination: B43 -> B44  <||@
  Comment 468 block B45 loop 1 depth 2 outer 0 header:283|LoopBegin  <||@
  Comment 468 458 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 480 460 rsi|DWORD = MOVSX [rdx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 486 462 CMP rsi|DWORD y: 128 size: WORD  <||@
  Comment 491 464 BRANCH trueDestinationProbability: 0.9998255660785367 condition: |<| trueDestination: B45 -> B46 falseDestination: B45 -> B49  <||@
  Comment 497 block B46 loop 1 depth 2 outer 0 header:283|LoopBegin  <||@
  Comment 497 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 468 MOVB (x: [rcx|DWORD + r11|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 502 470 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 504 472 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 507 474 JUMP ~[] destination: B46 -> B44  <||@
  Comment 507 block B44 loop 1 depth 2 outer 0 header:283|LoopBegin  <||@
  Comment 507 452 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 507 454 CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 509 456 BRANCH trueDestinationProbability: 0.96368033705285 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49  <||@
  Comment 511 block B49 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 511 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 511 486 CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 514 488 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B58  <||@
  Comment 520 block B58 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 520 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 520 552 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 523 554 JUMP ~[] destination: B58 -> B59  <||@
  Comment 523 block B59 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 523 556 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 528 558 CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 531 560 BRANCH trueDestinationProbability: 0.12574763249709253 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B90  <||@
  Comment 537 block B60 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 537 562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 537 564 rsi|DWORD = MOVSX [rdx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 543 566 rcx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 551 568 rsi|DWORD = MOVZX rsi|DWORD size: DWORD  <||@
  Comment 554 570 rdi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 559 572 rbp|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 564 574 CMP rsi|DWORD y: 128 size: DWORD  <||@
  Comment 570 576 BRANCH trueDestinationProbability: 0.9463253509496284 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B74  <||@
  Comment 576 block B61 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 576 578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 576 580 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 579 582 BRANCH trueDestinationProbability: 0.999825479930192 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B66  <||@
  Comment 585 block B62 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 585 584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 585 586 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 588 588 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B64  <||@
  Comment 594 block B63 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 594 590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 594 592 MOVB (x: [r8|DWORD + r11|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 599 594 r8|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 602 596 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 605 598 JUMP ~[] destination: B63 -> B59  <||@
  Comment 607 block B74 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 607 700 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 607 702 CMP rsi|DWORD y: 2048 size: DWORD  <||@
  Comment 613 704 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B74 -> B75 falseDestination: B74 -> B77  <||@
  Comment 619 block B77 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 619 726 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 619 728 CMP rsi|DWORD y: 55296 size: DWORD  <||@
  Comment 625 730 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B77 -> B78 falseDestination: B77 -> B88  <||@
  Comment 631 block B78 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 631 732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 631 734 r13|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 637 736 CMP r13|DWORD y: 3 size: DWORD  <||@
  Comment 641 738 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B81  <||@
  Comment 647 block B81 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 647 760 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 647 762 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 650 764 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B86  <||@
  Comment 656 block B82 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 656 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 656 768 r13|DWORD = LEA [r8|DWORD + 2] size: DWORD  <||@
  Comment 660 770 CMP (x: rcx|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 663 772 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B84  <||@
  Comment 669 block B83 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 669 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 669 776 rcx|DWORD = SHR rsi|DWORD y: 12 size: DWORD  <||@
  Comment 674 778 rcx|DWORD = OR rcx|DWORD y: 224 size: DWORD  <||@
  Comment 680 780 MOVB (x: [r8|DWORD + r11|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 685 782 rcx|DWORD = SHR rsi|DWORD y: 6 size: DWORD  <||@
  Comment 690 784 rcx|DWORD = AND rcx|DWORD y: 63 size: DWORD  <||@
  Comment 693 786 rcx|DWORD = OR rcx|DWORD y: 128 size: DWORD  <||@
  Comment 699 788 MOVB (x: [rbp|DWORD + r11|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 704 790 rsi|DWORD = AND rsi|DWORD y: 63 size: DWORD  <||@
  Comment 707 792 rsi|DWORD = OR rsi|DWORD y: 128 size: DWORD  <||@
  Comment 713 794 MOVB (x: [r13|DWORD + r11|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 718 796 r8|DWORD = LEA [r8|DWORD + 3] size: DWORD  <||@
  Comment 722 798 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 725 800 JUMP ~[] destination: B83 -> B59  <||@
  Comment 730 block B34 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 730 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 730 380 r10|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 738 382 rsi|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 741 384 rsi|QWORD = ADD (x: rsi|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 744 386 r14|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 747 388 CMP (x: r14|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 750 390 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B39  <||@
  Comment 756 block B35 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 756 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 756 394 CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 759 396 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B35 -> B43 falseDestination: B35 -> B39  <||@
  Comment 770 block B50 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 770 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 770 492 rsi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 773 494 rdi|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 778 496 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 781 498 rdi|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 784 500 rsi|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 787 502 CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 790 504 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B55  <||@
  Comment 796 block B51 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 796 506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 796 508 CMP (x: rbp|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 799 510 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B58 falseDestination: B51 -> B55  <||@
  Comment 810 block B25 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 810 316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 810 320 r10|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 813 322 r10|QWORD = ADD (x: r10|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 816 324 CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 819 326 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B30  <||@
  Comment 825 block B26 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 825 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 825 330 CMP (x: rbp|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 827 332 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B33 falseDestination: B26 -> B30  <||@
  Comment 838 block B19 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 838 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 838 246 rdi|DWORD = ADD (x: r8|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 844 248 stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 849 250 stack:64|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 854 252 JUMP ~[] destination: B19 -> B24  <||@
  Comment 859 block B20 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 859 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 859 256 stack:64|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 864 258 stack:68|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 869 260 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 871 262 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B107  <||@
  Comment 877 block B21 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 877 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 877 266 MOV [rbx|DWORD[.] * 8 + 20] y: 1 size: DWORD  <||@
  Comment 888 268 CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 891 270 BRANCH trueDestinationProbability: 0.6178512370566368 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 897 block B22 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 897 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 897 274 rdi|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 900 276 stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 904 280 JUMP ~[] destination: B22 -> B24  <||@
  Comment 909 block B23 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 909 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 909 284 rsi|DWORD = ADD (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 915 286 rdi|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 917 288 stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 922 292 JUMP ~[] destination: B23 -> B24  <||@
  Comment 927 block B66 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 927 620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 927 622 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 932 624 stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 936 626 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 941 628 rdi|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 944 630 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 947 632 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 950 634 rcx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 953 636 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 17, 57, 41]  <||@
  Comment 953 8  <||@
  Comment 959 {HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>}  <||@
  Comment 964 [stack:12, stack:16, stack:40, stack:64]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           |4  |5  |6 
     locals:  |stack:84|DWORD[.]  |stack:56|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4                  |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |stack:56|QWORD[.]  |-   <||@
  Comment 965 638 rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:146, 17, 57, 41]  <||@
  Comment 965 [rax:0, stack:12, stack:16, stack:40, stack:64]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-             |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
     stack:   |rax|QWORD[.]  |   |   |   |   |   |   |   |   |   |    |   
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           |4  |5  |6 
     locals:  |stack:84|DWORD[.]  |stack:56|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4                  |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |stack:56|QWORD[.]  |-   <||@
  Comment 965 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 968 640 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 970 642 BRANCH trueDestinationProbability: 0.9999941683736323 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B70  <||@
  Comment 976 block B70 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 976 666 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 976 668 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 979 670 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72  <||@
  Comment 985 block B71 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 985 672 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 985 674 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 990 676 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:141]  <||@
  Comment 990 9  <||@
  Comment 991 {HotSpotMethod<StreamEncoder.writeBytes()>}  <||@
  Comment 996 [stack:40, stack:64]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4                  |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |stack:56|QWORD[.]  |-   <||@
  Comment 997 678 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1002 680 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1007 682 JUMP ~[] destination: B71 -> B13  <||@
  Comment 1007 block B13 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 1007 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1007 154 rdx|DWORD[.] = MOV [r9|QWORD[.] + 44] size: DWORD  <||@
  Comment 1011 156 NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:22]  <||@
  Comment 1011 [rdx:0, rsi:0, r9:0, stack:40, stack:64]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4            |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |-   <||@
  Comment 1011 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1015 158 r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 1019 160 r11|DWORD[.] = MOV [r10|DWORD[.] * 8 + 44] size: DWORD state [bci:22]  <||@
  Comment 1019 [rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:64]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4            |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |-   <||@
  Comment 1019 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1027 162 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:22]  <||@
  Comment 1027 [rdx:0, rsi:0, r9:0, r10:0, r11:0, stack:40, stack:64]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4            |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |-   <||@
  Comment 1027 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1031 164 rcx|DWORD = MOV [r9|QWORD[.] + 24] size: DWORD  <||@
  Comment 1035 166 r8|DWORD = MOV [r9|QWORD[.] + 28] size: DWORD  <||@
  Comment 1039 168 CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1042 170 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B110  <||@
  Comment 1053 block B90 null  <||@
  Comment 1053 862 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1053 864 r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1058 866 stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1062 868 rsi|DWORD = SUB (x: r10|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 1068 870 CMP (x: rsi|DWORD, y: stack:44|DWORD) size: DWORD  <||@
  Comment 1072 872 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92  <||@
  Comment 1078 block B92 null  <||@
  Comment 1078 888 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1078 890 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1080 892 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B92 -> B93 falseDestination: B92 -> B94  <||@
  Comment 1086 block B94 null  <||@
  Comment 1086 908 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1086 910 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1091 912 CMP (x: rsi|DWORD, y: [rbx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1094 914 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B94 -> B95 falseDestination: B94 -> B96  <||@
  Comment 1100 block B96 null  <||@
  Comment 1100 928 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1100 930 rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1104 932 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1108 934 rdi|DWORD = SUB (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1113 936 CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1115 938 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B96 -> B97 falseDestination: B96 -> B98  <||@
  Comment 1121 block B98 null  <||@
  Comment 1121 952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1121 954 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1123 956 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B98 -> B99 falseDestination: B98 -> B100  <||@
  Comment 1129 block B100 null  <||@
  Comment 1129 970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1129 972 rcx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1133 974 CMP (x: rdi|DWORD, y: [rcx|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 1140 976 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B103  <||@
  Comment 1146 block B103 null  <||@
  Comment 1146 998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1146 1000 MOV (x: [rbx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD  <||@
  Comment 1149 1002 MOV (x: [rcx|DWORD[.] * 8 + 24], y: rdi|DWORD) size: DWORD  <||@
  Comment 1156 1004 rsi|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1160 1006 JUMP ~[] destination: B103 -> B104  <||@
  Comment 1160 block B104 null  <||@
  Comment 1160 1008 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1160 1010 rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rbx|QWORD[.] + 24]) size: DWORD  <||@
  Comment 1163 1012 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 1166 1014 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106  <||@
  Comment 1172 block B106 null  <||@
  Comment 1172 1024 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1172 1026 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1181 12  <||@
  Comment 1191 block B10 null  <||@
  Comment 1191 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1191 82 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1196 84 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1201 86 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1206 88 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1206 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1216 90 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1221 92 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1226 94 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1226 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1231 [r13:0, stack:64]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2          |3               |4  |5 
     locals:  |stack:32|QWORD[.]  |r13|QWORD[.]  |r14|DWORD  |stack:44|DWORD  |-  |-   <||@
  Comment 1232 96 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1235 98 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1240 100 r10|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1245 102 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1250 104 JUMP ~[] destination: B10 -> B12  <||@
  Comment 1255 block B67 null  <||@
  Comment 1255 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1255 646 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1260 648 r10|DWORD = MOV [rbx|QWORD[.] + 28] size: DWORD  <||@
  Comment 1264 650 r10|DWORD = SUB (x: r10|DWORD, ~y: [rbx|QWORD[.] + 24]) size: DWORD  <||@
  Comment 1268 652 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 1272 654 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69  <||@
  Comment 1278 block B69 null  <||@
  Comment 1278 662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1278 664 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1287 12  <||@
  Comment 1297 block B30 null  <||@
  Comment 1297 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1297 348 stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1301 350 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1306 356 JUMP ~[] destination: B30 -> B31  <||@
  Comment 1306 block B31 null  <||@
  Comment 1306 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1306 360 r10|DWORD = MOVE input: int[-249371|0xfffffffffffc31e5]  <||@
  Comment 1312 364 JUMP ~[] destination: B31 -> B41  <||@
  Comment 1312 block B41 null  <||@
  Comment 1312 430 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1312 362 r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1317 432 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1860143242]  <||@
  Comment 1317 {Object[d.a@1860143242]}  <||@
  Comment 1327 434 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1334 436 MOV (x: [r15|QWORD + 680], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 1341 438 DEOPT info [bci:70, 17, 57, 41]  <||@
  Comment 1341 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1346 [rdx:0, rbx:0, r11:0, stack:12, stack:16, stack:64]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3             |4          |5          |6             |7          |8         |9  |10  |11 
     locals:  |stack:84|DWORD[.]  |rbx|QWORD[.]  |stack:80|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |rax|DWORD  |r11|DWORD[.]  |r13|DWORD  |r9|DWORD  |-  |-   |-  
     stack:   |r13|DWORD          |r8|DWORD      |                   |              |           |           |              |           |          |   |    |   
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:84|DWORD[.]  |rbx|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4             |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |-   <||@
  Comment 1347 block B84 null  <||@
  Comment 1347 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1347 804 stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1351 806 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1356 808 JUMP ~[] destination: B84 -> B85  <||@
  Comment 1356 block B85 null  <||@
  Comment 1356 810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1356 812 rcx|DWORD = MOVE input: int[-270875|0xfffffffffffbdde5]  <||@
  Comment 1361 814 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1366 816 rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1370 820 JUMP ~[] destination: B85 -> B102  <||@
  Comment 1370 block B102 null  <||@
  Comment 1370 990 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1370 616 rbp|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1375 992 MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD  <||@
  Comment 1382 994 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1389 996 DEOPT info [bci:109, 17, 57, 41]  <||@
  Comment 1389 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1394 [rdx:0, rbx:0, rbp:0, rsi:0, rdi:0, r11:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0             |1             |2             |3             |4          |5          |6             |7         |8         |9  |10  |11 
     locals:  |rdi|DWORD[.]  |rbx|QWORD[.]  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |rax|DWORD  |r11|DWORD[.]  |r8|DWORD  |r9|DWORD  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0             |1             |2             |3           |4  |5  |6 
     locals:  |rdi|DWORD[.]  |rbx|QWORD[.]  |rsi|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4             |5 
     locals:  |rbp|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |-   <||@
  Comment 1395 block B101 null  <||@
  Comment 1395 978 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1395 980 rcx|DWORD = MOVE input: int[-275987|0xfffffffffffbc9ed]  <||@
  Comment 1400 982 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1405 984 rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1409 988 JUMP ~[] destination: B101 -> B102  <||@
  Comment 1411 block B105 null  <||@
  Comment 1411 1016 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1411 1018 MOV [r15|QWORD + 668] y: -276499 size: DWORD  <||@
  Comment 1422 1020 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1429 1022 DEOPT info [bci:25, 18, 4, 482, 17, 57, 41]  <||@
  Comment 1429 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1434 [rbx:0, stack:12, stack:16, stack:64]at java.nio.Buffer.position(Buffer.java:246) [bci: 25, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:80|QWORD[.]  |rdi|DWORD 
  at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482, duringCall: true, rethrow: false]
              |0  |1             |2                  |3  |4          |5  |6  |7         |8  |9  |10  |11 
     locals:  |-  |rbx|QWORD[.]  |stack:80|QWORD[.]  |-  |r10|DWORD  |-  |-  |r8|DWORD  |-  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:84|DWORD[.]  |rbx|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4             |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |-   <||@
  Comment 1435 block B68 null  <||@
  Comment 1435 656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1435 658 r10|DWORD = MOVE input: int[-264211|0xfffffffffffbf7ed]  <||@
  Comment 1441 660 JUMP ~[] destination: B68 -> B73  <||@
  Comment 1441 block B73 null  <||@
  Comment 1441 692 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1441 694 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1448 696 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1455 698 DEOPT info [bci:146, 17, 57, 41]  <||@
  Comment 1455 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1460 [rax:0, rbx:0, stack:12, stack:16, stack:64]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-             |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
     stack:   |rax|QWORD[.]  |   |   |   |   |   |   |   |   |   |    |   
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:84|DWORD[.]  |rbx|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4             |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |-   <||@
  Comment 1461 block B99 null  <||@
  Comment 1461 958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1461 960 rcx|DWORD = MOVE input: int[-274707|0xfffffffffffbceed]  <||@
  Comment 1466 962 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1471 964 rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1475 968 JUMP ~[] destination: B99 -> B102  <||@
  Comment 1477 block B97 null  <||@
  Comment 1477 940 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1477 942 rcx|DWORD = MOVE input: int[-274451|0xfffffffffffbcfed]  <||@
  Comment 1482 944 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1487 946 rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1491 950 JUMP ~[] destination: B97 -> B102  <||@
  Comment 1493 block B95 null  <||@
  Comment 1493 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1493 918 rcx|DWORD = MOVE input: int[-274195|0xfffffffffffbd0ed]  <||@
  Comment 1498 920 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1503 922 rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1507 926 JUMP ~[] destination: B95 -> B102  <||@
  Comment 1512 block B93 null  <||@
  Comment 1512 894 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1512 896 rcx|DWORD = MOVE input: int[-273171|0xfffffffffffbd4ed]  <||@
  Comment 1517 898 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1522 900 rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1526 902 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1531 906 JUMP ~[] destination: B93 -> B102  <||@
  Comment 1536 block B91 null  <||@
  Comment 1536 874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1536 876 rcx|DWORD = MOVE input: int[-272915|0xfffffffffffbd5ed]  <||@
  Comment 1541 878 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1546 880 rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1550 882 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1555 886 JUMP ~[] destination: B91 -> B102  <||@
  Comment 1560 block B5 null  <||@
  Comment 1560 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1560 46 r10|DWORD = MOVE input: int[-242195|0xfffffffffffc4ded]  <||@
  Comment 1566 48 JUMP ~[] destination: B5 -> B113  <||@
  Comment 1566 block B113 null  <||@
  Comment 1566 1074 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1566 1076 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1573 1078 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1580 1080 DEOPT info [bci:0]  <||@
  Comment 1580 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1585 [r13:0, stack:64]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2          |3         |4  |5 
     locals:  |stack:32|QWORD[.]  |r13|QWORD[.]  |r14|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 1586 block B72 null  <||@
  Comment 1586 684 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1586 686 r10|DWORD = MOVE input: int[-263443|0xfffffffffffbfaed]  <||@
  Comment 1592 688 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1597 690 JUMP ~[] destination: B72 -> B73  <||@
  Comment 1602 block B86 null  <||@
  Comment 1602 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1602 824 stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1606 826 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1611 828 JUMP ~[] destination: B86 -> B87  <||@
  Comment 1611 block B87 null  <||@
  Comment 1611 830 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1611 832 rcx|DWORD = MOVE input: int[-265755|0xfffffffffffbf1e5]  <||@
  Comment 1616 834 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1621 836 rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1625 840 JUMP ~[] destination: B87 -> B102  <||@
  Comment 1630 block B79 null  <||@
  Comment 1630 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1630 742 stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1634 744 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1639 746 JUMP ~[] destination: B79 -> B80  <||@
  Comment 1639 block B80 null  <||@
  Comment 1639 748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1639 750 rcx|DWORD = MOVE input: int[-264979|0xfffffffffffbf4ed]  <||@
  Comment 1644 752 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1649 754 rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1653 758 JUMP ~[] destination: B80 -> B102  <||@
  Comment 1658 block B88 null  <||@
  Comment 1658 842 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1658 844 stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1662 846 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1667 848 JUMP ~[] destination: B88 -> B89  <||@
  Comment 1667 block B89 null  <||@
  Comment 1667 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1667 852 rcx|DWORD = MOVE input: int[-264723|0xfffffffffffbf5ed]  <||@
  Comment 1672 854 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1677 856 rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1681 860 JUMP ~[] destination: B89 -> B102  <||@
  Comment 1686 block B107 null  <||@
  Comment 1686 1028 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1686 1030 r10|DWORD = MOVE input: int[-284179|0xfffffffffffba9ed]  <||@
  Comment 1692 1032 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1697 1034 JUMP ~[] destination: B107 -> B111  <||@
  Comment 1697 block B111 null  <||@
  Comment 1697 1060 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1697 1062 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1704 1064 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1711 1066 DEOPT info [bci:22]  <||@
  Comment 1711 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1716 [rbx:0, stack:64]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4             |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |-   <||@
  Comment 1717 block B108 null  <||@
  Comment 1717 1036 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1717 1038 r10|DWORD = MOVE input: int[-305171|0xfffffffffffb57ed]  <||@
  Comment 1723 1040 rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1726 1042 JUMP ~[] destination: B108 -> B111  <||@
  Comment 1728 block B110 null  <||@
  Comment 1728 1052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1728 1054 r10|DWORD = MOVE input: int[-245523|0xfffffffffffc40ed]  <||@
  Comment 1734 1056 rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1737 1058 JUMP ~[] destination: B110 -> B111  <||@
  Comment 1739 block B109 null  <||@
  Comment 1739 1044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1739 1046 r10|DWORD = MOVE input: int[-304659|0xfffffffffffb59ed]  <||@
  Comment 1745 1048 rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1748 1050 JUMP ~[] destination: B109 -> B111  <||@
  Comment 1750 block B1 null  <||@
  Comment 1750 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1750 22 r10|DWORD = MOVE input: int[-241683|0xfffffffffffc4fed]  <||@
  Comment 1756 24 JUMP ~[] destination: B1 -> B113  <||@
  Comment 1761 block B64 null  <||@
  Comment 1761 600 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1761 602 stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1765 604 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1770 606 JUMP ~[] destination: B64 -> B65  <||@
  Comment 1770 block B65 null  <||@
  Comment 1770 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1770 610 rcx|DWORD = MOVE input: int[-260123|0xfffffffffffc07e5]  <||@
  Comment 1775 612 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1780 614 rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1784 618 JUMP ~[] destination: B65 -> B102  <||@
  Comment 1789 block B55 null  <||@
  Comment 1789 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1789 526 stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1793 528 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1798 534 JUMP ~[] destination: B55 -> B56  <||@
  Comment 1798 block B56 null  <||@
  Comment 1798 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1798 538 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@772285300]  <||@
  Comment 1798 {Object[d.a@772285300]}  <||@
  Comment 1808 540 MOV [r15|QWORD + 668] y: -257563 size: DWORD  <||@
  Comment 1819 542 MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 1826 544 DEOPT info [bci:109, 17, 57, 41]  <||@
  Comment 1826 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1831 [rdx:0, rbx:0, r11:0, stack:12, stack:16, stack:64]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3             |4          |5          |6             |7          |8         |9  |10  |11 
     locals:  |stack:84|DWORD[.]  |rbx|QWORD[.]  |stack:80|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |rax|DWORD  |r11|DWORD[.]  |rcx|DWORD  |r9|DWORD  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:84|DWORD[.]  |rbx|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4             |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |-   <||@
  Comment 1832 block B112 null  <||@
  Comment 1832 1068 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1832 1070 r10|DWORD = MOVE input: int[-243731|0xfffffffffffc47ed]  <||@
  Comment 1838 1072 JUMP ~[] destination: B112 -> B113  <||@
  Comment 1843 block B39 null  <||@
  Comment 1843 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1843 412 stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1847 414 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1852 420 JUMP ~[] destination: B39 -> B40  <||@
  Comment 1852 block B40 null  <||@
  Comment 1852 422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1852 424 r10|DWORD = MOVE input: int[-255003|0xfffffffffffc1be5]  <||@
  Comment 1858 428 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1863 block B7 null  <||@
  Comment 1863 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1863 58 r10|DWORD = MOVE input: int[-242451|0xfffffffffffc4ced]  <||@
  Comment 1869 60 JUMP ~[] destination: B7 -> B113  <||@
  Comment 1874 block B3 null  <||@
  Comment 1874 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1874 34 r10|DWORD = MOVE input: int[-241939|0xfffffffffffc4eed]  <||@
  Comment 1880 36 JUMP ~[] destination: B3 -> B113  <||@
  Comment 1885 block B75 null  <||@
  Comment 1885 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1885 708 stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1889 710 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1894 712 JUMP ~[] destination: B75 -> B76  <||@
  Comment 1894 block B76 null  <||@
  Comment 1894 714 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1894 716 rcx|DWORD = MOVE input: int[-264467|0xfffffffffffbf6ed]  <||@
  Comment 1899 718 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1904 720 rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1908 724 JUMP ~[] destination: B76 -> B102  <||@
  Comment 1913 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1913 4  <||@
  Comment 1919 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 1919 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-3615[sun.nio.cs.StreamEncoder.implWrite(char[], int, int)]"
  method "HotSpotCompilation-3615[sun.nio.cs.StreamEncoder.implWrite(char[], int, int)]"
  date 1526687562492
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1195e0fa0 448b560849c1e203493bc20f85af3e42ff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c245048897424404c8bea448bf1458b550c458bde4503d8453bda0f8f880600004585db0f8cfb060000453bf30f8fb80500004585f60f8cde0600000fb6561785d20f85b3060000498b5760488d4a30493b4f700f872004000049894f600f1882f00000004c8bca4c894c242848b9101e03c007000000488b89a800000048890ac74208c26300f8b9ffffffff48894a0c448962144489721844895a1c44895220448962244488622849c1ed0344896a2ce90c0300000f1f8000000000660f1f4400008b5e1c418504dc410fb6792885ff0f85c7050000420fb63cd52800000085ff0f85a00500008b3cdd14000000428b04d524000000428b2cd51c000000468b2cd518000000458b7124448bc84403cd4403e8896c2438418be9412bed8944243c418bc04103c64103ce4489442434448bc0442bc183ff010f85ef010000c704dd1400000001000000443bc50f8ec6010000418bf9896c242444897424208b2cd50c000000448bc5448bf7452bf54d63f649ffce418bf248c1e603488974241048c1e203413bfd448954241c0f8f6a010000413bfd0f8f11010000448bd1418bcde927000000660f1f440000660f1f440000420fbf7452106681fe80000f830e000000428874d910ffc141ffc23bf97fe1413bc20f8ffa000000448bc10f1f440000413bc20f8e04020000420fbf745210428b0cdd0c0000000fb7f6418bfaffc7418be8ffc581fe800000000f831f000000453bc80f8e56010000413bc80f868f040000438874d810448bc5448bd7ebb181fe000800000f82f204000081fe00d800000f8303040000458be9452be84183fd030f8cd7030000413bc80f86b2030000458d6802413bcd0f86a60200008bcec1e90c81c9e000000043884cd8108bcec1e90683e13f81c98000000042884cdd1083e63f81ce80000000438874dd10458d4003448bd7e936ffffff468b14dd0c0000004963f54903f6458bf24c3bf60f863f040000453bd50f87ccfeffffe9310400004963f28bf8412bfa4863ff48ffcf4803f74c3bc60f86e1030000413bea0f87e3feffffe9d30300004c63d14d03d64d3bc20f86d80100003be90f877ffeffffe9cb010000418bf84103fd44894424244489742420e931feffff4489742420448954241c85ff0f8529030000c704dd1400000001000000443bc50f8e0c000000418bf9896c2424e9fffdffff418bf54103f08bfe4489442424e9edfdffff488b742410895c240c4c8b4c2428488bfe498bf1418bd2488bcf660f1f440000e8bc4142ff908b700c85f60f841701000083fe010f8559020000488b74244090e81c3d42ff904c8b4c2428488b742440418b512c418504d4448b5620468b1cd52c000000438504dc418b4918458b411c443bc10f8fd8fcffffe9a3020000448b742420895c240c418bf2412bf63b7424340f8fca01000085f60f8caa010000488b5c24283b730c0f8c890100008b6c24388b4c243c418bf82bf93bfd0f8f6401000085ff0f8c4c0100008b4c241c3b3ccd0c0000000f8cf9000000897318893ccd180000008b7424342b731883fe010f84ef000000488b6c24504883c4588505c3ab8ff0c5f877c344895c243c4489542438448944243448be680b00c007000000ba08000000b901000000e8312eb8ff90488bd0448b5c243c448b542438488b742440e9abfbffff488b5c2428448b531c442b53184183fa010f849d000000488b6c24504883c458850559ab8ff0c5f877c3895c240c488b5c242841bae531fcff448b44242448bf7878da72070000004589979c0200004989bfa8020000e81c5142ff90895c240c488b5c2428b9e5ddfbff488b7424108b7c240c488b6c244041898f9c0200004d89a7a8020000e8ec5042ff90b9edc9fbff488b7424108b7c240cebd741c7879c020000edc7fbff4d89a7a8020000e8c45042ff9041baedf7fbff4589979c0200004d89a7a8020000e8aa5042ff90b9edcefbff488b7424108b7c240ceb95b9edcffbff488b7424108b7c240ceb85b9edd0fbff488b7424108b7c240ce972ffffffb9edd4fbff488b7424108b7c240c488b5c2428e95affffffb9edd5fbff488b7424108b7c240c488b5c2428e942ffffff41baed4dfcff4589979c0200004d89a7a8020000e82d5042ff9041baedfafbff488b5c2428e95fffffff895c240c488b5c2428b9e5f1fbff488b7424108b7c240ce9fcfeffff895c240c488b5c2428b9edf4fbff488b7424108b7c240ce9e0feffff895c240c488b5c2428b9edf5fbff488b7424108b7c240ce9c4feffff41baeda9fbff488b5c24284589979c0200004d89a7a8020000e8aa4f42ff9041baed57fbff498bd9ebe141baed40fcff498bd9ebd641baed59fbff498bd9ebcb41baed4ffcffe93dffffff895c240c488b5c2428b9e507fcff488b7424108b7c240ce95dfeffff895c240c488b5c242849b848eeda720700000041c7879c020000e511fcff4d8987a8020000e8374f42ff9041baed47fcffe9ebfeffff895c240c488b5c242841bae51bfcffe9d9fdffff41baed4cfcffe9ccfeffff41baed4efcffe9c1feffff895c240c488b5c2428b9edf6fbff488b7424108b7c240ce9e1fdffffe882e081ff90e8dc4d42ff90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1d0825d6 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 59 12 r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 59 [rsi:0, r13:0, stack:64]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5 
     locals:  |rsi|QWORD[.]  |r13|QWORD[.]  |r14|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 59 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 63 14 r11|DWORD = ADD (x: r14|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 69 16 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 72 18 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 78 block B2 null  <||@
  Comment 78 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 78 28 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 81 30 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 87 block B4 null  <||@
  Comment 87 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 87 40 CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 90 42 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 96 block B6 null  <||@
  Comment 96 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 96 52 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 99 54 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 105 block B8 null  <||@
  Comment 105 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 64 rdx|DWORD = MOVZXB [rsi|QWORD[.] + 23] size: DWORD  <||@
  Comment 109 66 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 111 68 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B112  <||@
  Comment 117 block B9 null  <||@
  Comment 117 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 117 72 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 121 74 rcx|QWORD = LEA [rdx|QWORD + 48] size: QWORD  <||@
  Comment 125 76 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 129 78 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 135 block B11 null  <||@
  Comment 135 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 108 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 139 110 AMD64PREFETCH ~[rdx|QWORD + 240] instr: 0  <||@
  Comment 146 112 rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 146 114 JUMP ~[] destination: B11 -> B12  <||@
  Comment 146 block B12 null  <||@
  Comment 146 116 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 146 118 r9|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 149 120 stack:56|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 154 122 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}  <||@
  Comment 154 {meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}}  <||@
  Comment 164 124 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 171 126 MOV (x: [rdx|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 174 128 MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}  <||@
  Comment 174 {meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}}  <||@
  Comment 181 130 rcx|QWORD = MOVE input: long[4294967295|0xffffffff]  <||@
  Comment 186 132 MOV (x: [rdx|QWORD[*] + 12], y: rcx|QWORD) size: QWORD  <||@
  Comment 190 134 MOV (x: [rdx|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 194 136 MOV (x: [rdx|QWORD[*] + 24], y: r14|DWORD) size: DWORD  <||@
  Comment 198 138 MOV (x: [rdx|QWORD[*] + 28], y: r11|DWORD) size: DWORD  <||@
  Comment 202 140 MOV (x: [rdx|QWORD[*] + 32], y: r10|DWORD) size: DWORD  <||@
  Comment 206 142 MOV (x: [rdx|QWORD[*] + 36], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 210 144 MOVB (x: [rdx|QWORD[*] + 40], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 214 146 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@61c8dcce encoding: base: 0 shift: 3  <||@
  Comment 218 148 MOV (x: [rdx|QWORD[*] + 44], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 222 150 JUMP ~[] destination: B12 -> B13  <||@
  Comment 227 block B14 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 227 172 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 240 174 rbx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 243 176 NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:22]  <||@
  Comment 243 [rdx:0, rbx:0, rsi:0, r9:0, r10:0, r11:0, stack:40, stack:64]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4            |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |-   <||@
  Comment 243 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 247 178 rdi|DWORD = MOVZXB [r9|QWORD[.] + 40] size: DWORD  <||@
  Comment 252 180 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 254 182 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B109  <||@
  Comment 260 block B15 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 260 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 260 186 rdi|DWORD = MOVZXB [r10|DWORD[.] * 8 + 40] size: DWORD  <||@
  Comment 269 188 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 271 190 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B108  <||@
  Comment 277 block B16 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 277 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 277 194 rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 284 196 rax|DWORD = MOV [r10|DWORD[.] * 8 + 36] size: DWORD  <||@
  Comment 292 198 rbp|DWORD = MOV [r10|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 300 200 r13|DWORD = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 308 202 r14|DWORD = MOV [r9|QWORD[.] + 36] size: DWORD  <||@
  Comment 312 204 r9|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 318 206 r13|DWORD = ADD (x: r13|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 321 208 stack:40|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 325 210 rbp|DWORD = SUB (x: r9|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 331 212 stack:36|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 335 214 rax|DWORD = ADD (x: r8|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 341 216 rcx|DWORD = ADD (x: rcx|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 344 218 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 349 220 r8|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 355 222 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 358 224 BRANCH trueDestinationProbability: 0.9953429630233886 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B20  <||@
  Comment 364 block B17 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 364 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 364 228 MOV [rbx|DWORD[.] * 8 + 20] y: 1 size: DWORD  <||@
  Comment 375 230 CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 378 232 BRANCH trueDestinationProbability: 0.6178512370566368 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 384 block B18 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 384 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 384 236 rdi|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 387 238 stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 391 240 stack:64|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 396 242 JUMP ~[] destination: B18 -> B24  <||@
  Comment 396 block B24 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 396 294 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 396 296 rbp|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 403 298 r8|QWORD = MOV rbp|DWORD size: DWORD  <||@
  Comment 406 300 r14|DWORD = SUB (x: rdi|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 412 302 r14|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 415 304 r14|QWORD = DEC r14|QWORD size: QWORD  <||@
  Comment 418 306 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@61c8dcce encoding: base: 0 shift: 3  <||@
  Comment 425 308 stack:80|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 430 310 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@61c8dcce encoding: base: 0 shift: 3  <||@
  Comment 434 312 CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 437 318 stack:68|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 442 314 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B33  <||@
  Comment 448 block B33 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 448 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 448 374 CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 451 376 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B43  <||@
  Comment 457 block B43 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 457 444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 457 446 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 460 448 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 463 450 JUMP ~[] destination: B43 -> B44  <||@
  Comment 468 block B45 loop 1 depth 2 outer 0 header:283|LoopBegin  <||@
  Comment 468 458 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 480 460 rsi|DWORD = MOVSX [rdx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 486 462 CMP rsi|DWORD y: 128 size: WORD  <||@
  Comment 491 464 BRANCH trueDestinationProbability: 0.9998255660785367 condition: |<| trueDestination: B45 -> B46 falseDestination: B45 -> B49  <||@
  Comment 497 block B46 loop 1 depth 2 outer 0 header:283|LoopBegin  <||@
  Comment 497 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 497 468 MOVB (x: [rcx|DWORD + r11|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 502 470 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 504 472 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 507 474 JUMP ~[] destination: B46 -> B44  <||@
  Comment 507 block B44 loop 1 depth 2 outer 0 header:283|LoopBegin  <||@
  Comment 507 452 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 507 454 CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 509 456 BRANCH trueDestinationProbability: 0.96368033705285 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B49  <||@
  Comment 511 block B49 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 511 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 511 486 CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 514 488 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B58  <||@
  Comment 520 block B58 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 520 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 520 552 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 523 554 JUMP ~[] destination: B58 -> B59  <||@
  Comment 523 block B59 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 523 556 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 528 558 CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 531 560 BRANCH trueDestinationProbability: 0.12574763249709253 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B90  <||@
  Comment 537 block B60 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 537 562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 537 564 rsi|DWORD = MOVSX [rdx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 543 566 rcx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 551 568 rsi|DWORD = MOVZX rsi|DWORD size: DWORD  <||@
  Comment 554 570 rdi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 559 572 rbp|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 564 574 CMP rsi|DWORD y: 128 size: DWORD  <||@
  Comment 570 576 BRANCH trueDestinationProbability: 0.9463253509496284 condition: |<| trueDestination: B60 -> B61 falseDestination: B60 -> B74  <||@
  Comment 576 block B61 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 576 578 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 576 580 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 579 582 BRANCH trueDestinationProbability: 0.999825479930192 condition: > trueDestination: B61 -> B62 falseDestination: B61 -> B66  <||@
  Comment 585 block B62 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 585 584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 585 586 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 588 588 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B64  <||@
  Comment 594 block B63 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 594 590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 594 592 MOVB (x: [r8|DWORD + r11|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 599 594 r8|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 602 596 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 605 598 JUMP ~[] destination: B63 -> B59  <||@
  Comment 607 block B74 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 607 700 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 607 702 CMP rsi|DWORD y: 2048 size: DWORD  <||@
  Comment 613 704 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B74 -> B75 falseDestination: B74 -> B77  <||@
  Comment 619 block B77 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 619 726 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 619 728 CMP rsi|DWORD y: 55296 size: DWORD  <||@
  Comment 625 730 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B77 -> B78 falseDestination: B77 -> B88  <||@
  Comment 631 block B78 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 631 732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 631 734 r13|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 637 736 CMP r13|DWORD y: 3 size: DWORD  <||@
  Comment 641 738 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B81  <||@
  Comment 647 block B81 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 647 760 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 647 762 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 650 764 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B81 -> B82 falseDestination: B81 -> B86  <||@
  Comment 656 block B82 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 656 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 656 768 r13|DWORD = LEA [r8|DWORD + 2] size: DWORD  <||@
  Comment 660 770 CMP (x: rcx|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 663 772 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B84  <||@
  Comment 669 block B83 loop 2 depth 2 outer 0 header:318|LoopBegin  <||@
  Comment 669 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 669 776 rcx|DWORD = SHR rsi|DWORD y: 12 size: DWORD  <||@
  Comment 674 778 rcx|DWORD = OR rcx|DWORD y: 224 size: DWORD  <||@
  Comment 680 780 MOVB (x: [r8|DWORD + r11|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 685 782 rcx|DWORD = SHR rsi|DWORD y: 6 size: DWORD  <||@
  Comment 690 784 rcx|DWORD = AND rcx|DWORD y: 63 size: DWORD  <||@
  Comment 693 786 rcx|DWORD = OR rcx|DWORD y: 128 size: DWORD  <||@
  Comment 699 788 MOVB (x: [rbp|DWORD + r11|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 704 790 rsi|DWORD = AND rsi|DWORD y: 63 size: DWORD  <||@
  Comment 707 792 rsi|DWORD = OR rsi|DWORD y: 128 size: DWORD  <||@
  Comment 713 794 MOVB (x: [r13|DWORD + r11|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 718 796 r8|DWORD = LEA [r8|DWORD + 3] size: DWORD  <||@
  Comment 722 798 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 725 800 JUMP ~[] destination: B83 -> B59  <||@
  Comment 730 block B34 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 730 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 730 380 r10|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 738 382 rsi|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 741 384 rsi|QWORD = ADD (x: rsi|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 744 386 r14|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 747 388 CMP (x: r14|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 750 390 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B39  <||@
  Comment 756 block B35 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 756 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 756 394 CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 759 396 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B35 -> B43 falseDestination: B35 -> B39  <||@
  Comment 770 block B50 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 770 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 770 492 rsi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 773 494 rdi|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 778 496 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 781 498 rdi|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 784 500 rsi|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 787 502 CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 790 504 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B50 -> B51 falseDestination: B50 -> B55  <||@
  Comment 796 block B51 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 796 506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 796 508 CMP (x: rbp|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 799 510 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B51 -> B58 falseDestination: B51 -> B55  <||@
  Comment 810 block B25 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 810 316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 810 320 r10|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 813 322 r10|QWORD = ADD (x: r10|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 816 324 CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 819 326 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B30  <||@
  Comment 825 block B26 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 825 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 825 330 CMP (x: rbp|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 827 332 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B33 falseDestination: B26 -> B30  <||@
  Comment 838 block B19 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 838 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 838 246 rdi|DWORD = ADD (x: r8|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 844 248 stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 849 250 stack:64|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 854 252 JUMP ~[] destination: B19 -> B24  <||@
  Comment 859 block B20 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 859 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 859 256 stack:64|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 864 258 stack:68|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 869 260 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 871 262 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B107  <||@
  Comment 877 block B21 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 877 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 877 266 MOV [rbx|DWORD[.] * 8 + 20] y: 1 size: DWORD  <||@
  Comment 888 268 CMP (x: r8|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 891 270 BRANCH trueDestinationProbability: 0.6178512370566368 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23  <||@
  Comment 897 block B22 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 897 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 897 274 rdi|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 900 276 stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 904 280 JUMP ~[] destination: B22 -> B24  <||@
  Comment 909 block B23 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 909 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 909 284 rsi|DWORD = ADD (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 915 286 rdi|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 917 288 stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 922 292 JUMP ~[] destination: B23 -> B24  <||@
  Comment 927 block B66 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 927 620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 927 622 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 932 624 stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 936 626 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 941 628 rdi|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 944 630 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 947 632 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 950 634 rcx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 953 636 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 17, 57, 41]  <||@
  Comment 953 8  <||@
  Comment 959 {HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>}  <||@
  Comment 964 [stack:12, stack:16, stack:40, stack:64]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           |4  |5  |6 
     locals:  |stack:84|DWORD[.]  |stack:56|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4                  |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |stack:56|QWORD[.]  |-   <||@
  Comment 965 638 rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:146, 17, 57, 41]  <||@
  Comment 965 [rax:0, stack:12, stack:16, stack:40, stack:64]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-             |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
     stack:   |rax|QWORD[.]  |   |   |   |   |   |   |   |   |   |    |   
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           |4  |5  |6 
     locals:  |stack:84|DWORD[.]  |stack:56|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4                  |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |stack:56|QWORD[.]  |-   <||@
  Comment 965 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 968 640 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 970 642 BRANCH trueDestinationProbability: 0.9999941683736323 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B70  <||@
  Comment 976 block B70 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 976 666 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 976 668 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 979 670 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72  <||@
  Comment 985 block B71 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 985 672 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 985 674 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 990 676 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:141]  <||@
  Comment 990 9  <||@
  Comment 991 {HotSpotMethod<StreamEncoder.writeBytes()>}  <||@
  Comment 996 [stack:40, stack:64]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) [bci: 141, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4                  |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |stack:56|QWORD[.]  |-   <||@
  Comment 997 678 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1002 680 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1007 682 JUMP ~[] destination: B71 -> B13  <||@
  Comment 1007 block B13 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 1007 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1007 154 rdx|DWORD[.] = MOV [r9|QWORD[.] + 44] size: DWORD  <||@
  Comment 1011 156 NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:22]  <||@
  Comment 1011 [rdx:0, rsi:0, r9:0, stack:40, stack:64]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4            |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |-   <||@
  Comment 1011 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1015 158 r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 1019 160 r11|DWORD[.] = MOV [r10|DWORD[.] * 8 + 44] size: DWORD state [bci:22]  <||@
  Comment 1019 [rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:64]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4            |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |-   <||@
  Comment 1019 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1027 162 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:22]  <||@
  Comment 1027 [rdx:0, rsi:0, r9:0, r10:0, r11:0, stack:40, stack:64]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4            |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |r9|QWORD[.]  |-   <||@
  Comment 1027 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1031 164 rcx|DWORD = MOV [r9|QWORD[.] + 24] size: DWORD  <||@
  Comment 1035 166 r8|DWORD = MOV [r9|QWORD[.] + 28] size: DWORD  <||@
  Comment 1039 168 CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1042 170 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B110  <||@
  Comment 1053 block B90 null  <||@
  Comment 1053 862 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1053 864 r14|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1058 866 stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1062 868 rsi|DWORD = SUB (x: r10|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 1068 870 CMP (x: rsi|DWORD, y: stack:44|DWORD) size: DWORD  <||@
  Comment 1072 872 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B90 -> B91 falseDestination: B90 -> B92  <||@
  Comment 1078 block B92 null  <||@
  Comment 1078 888 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1078 890 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1080 892 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B92 -> B93 falseDestination: B92 -> B94  <||@
  Comment 1086 block B94 null  <||@
  Comment 1086 908 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1086 910 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1091 912 CMP (x: rsi|DWORD, y: [rbx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1094 914 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B94 -> B95 falseDestination: B94 -> B96  <||@
  Comment 1100 block B96 null  <||@
  Comment 1100 928 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1100 930 rbp|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1104 932 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1108 934 rdi|DWORD = SUB (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1113 936 CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1115 938 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B96 -> B97 falseDestination: B96 -> B98  <||@
  Comment 1121 block B98 null  <||@
  Comment 1121 952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1121 954 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1123 956 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B98 -> B99 falseDestination: B98 -> B100  <||@
  Comment 1129 block B100 null  <||@
  Comment 1129 970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1129 972 rcx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1133 974 CMP (x: rdi|DWORD, y: [rcx|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 1140 976 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B103  <||@
  Comment 1146 block B103 null  <||@
  Comment 1146 998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1146 1000 MOV (x: [rbx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD  <||@
  Comment 1149 1002 MOV (x: [rcx|DWORD[.] * 8 + 24], y: rdi|DWORD) size: DWORD  <||@
  Comment 1156 1004 rsi|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1160 1006 JUMP ~[] destination: B103 -> B104  <||@
  Comment 1160 block B104 null  <||@
  Comment 1160 1008 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1160 1010 rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rbx|QWORD[.] + 24]) size: DWORD  <||@
  Comment 1163 1012 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 1166 1014 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106  <||@
  Comment 1172 block B106 null  <||@
  Comment 1172 1024 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1172 1026 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1181 12  <||@
  Comment 1191 block B10 null  <||@
  Comment 1191 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1191 82 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1196 84 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1201 86 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1206 88 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1206 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1216 90 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 1221 92 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1226 94 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1226 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1231 [r13:0, stack:64]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2          |3               |4  |5 
     locals:  |stack:32|QWORD[.]  |r13|QWORD[.]  |r14|DWORD  |stack:44|DWORD  |-  |-   <||@
  Comment 1232 96 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1235 98 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1240 100 r10|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1245 102 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1250 104 JUMP ~[] destination: B10 -> B12  <||@
  Comment 1255 block B67 null  <||@
  Comment 1255 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1255 646 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1260 648 r10|DWORD = MOV [rbx|QWORD[.] + 28] size: DWORD  <||@
  Comment 1264 650 r10|DWORD = SUB (x: r10|DWORD, ~y: [rbx|QWORD[.] + 24]) size: DWORD  <||@
  Comment 1268 652 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 1272 654 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69  <||@
  Comment 1278 block B69 null  <||@
  Comment 1278 662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1278 664 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1287 12  <||@
  Comment 1297 block B30 null  <||@
  Comment 1297 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1297 348 stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1301 350 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1306 356 JUMP ~[] destination: B30 -> B31  <||@
  Comment 1306 block B31 null  <||@
  Comment 1306 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1306 360 r10|DWORD = MOVE input: int[-249371|0xfffffffffffc31e5]  <||@
  Comment 1312 364 JUMP ~[] destination: B31 -> B41  <||@
  Comment 1312 block B41 null  <||@
  Comment 1312 430 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1312 362 r8|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1317 432 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1860143242]  <||@
  Comment 1317 {Object[d.a@1860143242]}  <||@
  Comment 1327 434 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1334 436 MOV (x: [r15|QWORD + 680], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 1341 438 DEOPT info [bci:70, 17, 57, 41]  <||@
  Comment 1341 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1346 [rdx:0, rbx:0, r11:0, stack:12, stack:16, stack:64]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3             |4          |5          |6             |7          |8         |9  |10  |11 
     locals:  |stack:84|DWORD[.]  |rbx|QWORD[.]  |stack:80|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |rax|DWORD  |r11|DWORD[.]  |r13|DWORD  |r9|DWORD  |-  |-   |-  
     stack:   |r13|DWORD          |r8|DWORD      |                   |              |           |           |              |           |          |   |    |   
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:84|DWORD[.]  |rbx|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4             |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |-   <||@
  Comment 1347 block B84 null  <||@
  Comment 1347 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1347 804 stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1351 806 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1356 808 JUMP ~[] destination: B84 -> B85  <||@
  Comment 1356 block B85 null  <||@
  Comment 1356 810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1356 812 rcx|DWORD = MOVE input: int[-270875|0xfffffffffffbdde5]  <||@
  Comment 1361 814 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1366 816 rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1370 820 JUMP ~[] destination: B85 -> B102  <||@
  Comment 1370 block B102 null  <||@
  Comment 1370 990 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1370 616 rbp|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1375 992 MOV (x: [r15|QWORD + 668], y: rcx|DWORD) size: DWORD  <||@
  Comment 1382 994 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1389 996 DEOPT info [bci:109, 17, 57, 41]  <||@
  Comment 1389 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1394 [rdx:0, rbx:0, rbp:0, rsi:0, rdi:0, r11:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0             |1             |2             |3             |4          |5          |6             |7         |8         |9  |10  |11 
     locals:  |rdi|DWORD[.]  |rbx|QWORD[.]  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |rax|DWORD  |r11|DWORD[.]  |r8|DWORD  |r9|DWORD  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0             |1             |2             |3           |4  |5  |6 
     locals:  |rdi|DWORD[.]  |rbx|QWORD[.]  |rsi|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0             |1  |2  |3  |4             |5 
     locals:  |rbp|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |-   <||@
  Comment 1395 block B101 null  <||@
  Comment 1395 978 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1395 980 rcx|DWORD = MOVE input: int[-275987|0xfffffffffffbc9ed]  <||@
  Comment 1400 982 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1405 984 rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1409 988 JUMP ~[] destination: B101 -> B102  <||@
  Comment 1411 block B105 null  <||@
  Comment 1411 1016 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1411 1018 MOV [r15|QWORD + 668] y: -276499 size: DWORD  <||@
  Comment 1422 1020 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1429 1022 DEOPT info [bci:25, 18, 4, 482, 17, 57, 41]  <||@
  Comment 1429 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1434 [rbx:0, stack:12, stack:16, stack:64]at java.nio.Buffer.position(Buffer.java:246) [bci: 25, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:80|QWORD[.]  |rdi|DWORD 
  at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482, duringCall: true, rethrow: false]
              |0  |1             |2                  |3  |4          |5  |6  |7         |8  |9  |10  |11 
     locals:  |-  |rbx|QWORD[.]  |stack:80|QWORD[.]  |-  |r10|DWORD  |-  |-  |r8|DWORD  |-  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:84|DWORD[.]  |rbx|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4             |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |-   <||@
  Comment 1435 block B68 null  <||@
  Comment 1435 656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1435 658 r10|DWORD = MOVE input: int[-264211|0xfffffffffffbf7ed]  <||@
  Comment 1441 660 JUMP ~[] destination: B68 -> B73  <||@
  Comment 1441 block B73 null  <||@
  Comment 1441 692 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1441 694 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1448 696 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1455 698 DEOPT info [bci:146, 17, 57, 41]  <||@
  Comment 1455 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1460 [rax:0, rbx:0, stack:12, stack:16, stack:64]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 146, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-             |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
     stack:   |rax|QWORD[.]  |   |   |   |   |   |   |   |   |   |    |   
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:84|DWORD[.]  |rbx|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4             |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |-   <||@
  Comment 1461 block B99 null  <||@
  Comment 1461 958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1461 960 rcx|DWORD = MOVE input: int[-274707|0xfffffffffffbceed]  <||@
  Comment 1466 962 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1471 964 rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1475 968 JUMP ~[] destination: B99 -> B102  <||@
  Comment 1477 block B97 null  <||@
  Comment 1477 940 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1477 942 rcx|DWORD = MOVE input: int[-274451|0xfffffffffffbcfed]  <||@
  Comment 1482 944 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1487 946 rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1491 950 JUMP ~[] destination: B97 -> B102  <||@
  Comment 1493 block B95 null  <||@
  Comment 1493 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1493 918 rcx|DWORD = MOVE input: int[-274195|0xfffffffffffbd0ed]  <||@
  Comment 1498 920 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1503 922 rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1507 926 JUMP ~[] destination: B95 -> B102  <||@
  Comment 1512 block B93 null  <||@
  Comment 1512 894 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1512 896 rcx|DWORD = MOVE input: int[-273171|0xfffffffffffbd4ed]  <||@
  Comment 1517 898 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1522 900 rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1526 902 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1531 906 JUMP ~[] destination: B93 -> B102  <||@
  Comment 1536 block B91 null  <||@
  Comment 1536 874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1536 876 rcx|DWORD = MOVE input: int[-272915|0xfffffffffffbd5ed]  <||@
  Comment 1541 878 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1546 880 rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1550 882 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1555 886 JUMP ~[] destination: B91 -> B102  <||@
  Comment 1560 block B5 null  <||@
  Comment 1560 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1560 46 r10|DWORD = MOVE input: int[-242195|0xfffffffffffc4ded]  <||@
  Comment 1566 48 JUMP ~[] destination: B5 -> B113  <||@
  Comment 1566 block B113 null  <||@
  Comment 1566 1074 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1566 1076 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1573 1078 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1580 1080 DEOPT info [bci:0]  <||@
  Comment 1580 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1585 [r13:0, stack:64]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:265) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2          |3         |4  |5 
     locals:  |stack:32|QWORD[.]  |r13|QWORD[.]  |r14|DWORD  |r8|DWORD  |-  |-   <||@
  Comment 1586 block B72 null  <||@
  Comment 1586 684 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1586 686 r10|DWORD = MOVE input: int[-263443|0xfffffffffffbfaed]  <||@
  Comment 1592 688 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1597 690 JUMP ~[] destination: B72 -> B73  <||@
  Comment 1602 block B86 null  <||@
  Comment 1602 822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1602 824 stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1606 826 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1611 828 JUMP ~[] destination: B86 -> B87  <||@
  Comment 1611 block B87 null  <||@
  Comment 1611 830 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1611 832 rcx|DWORD = MOVE input: int[-265755|0xfffffffffffbf1e5]  <||@
  Comment 1616 834 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1621 836 rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1625 840 JUMP ~[] destination: B87 -> B102  <||@
  Comment 1630 block B79 null  <||@
  Comment 1630 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1630 742 stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1634 744 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1639 746 JUMP ~[] destination: B79 -> B80  <||@
  Comment 1639 block B80 null  <||@
  Comment 1639 748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1639 750 rcx|DWORD = MOVE input: int[-264979|0xfffffffffffbf4ed]  <||@
  Comment 1644 752 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1649 754 rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1653 758 JUMP ~[] destination: B80 -> B102  <||@
  Comment 1658 block B88 null  <||@
  Comment 1658 842 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1658 844 stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1662 846 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1667 848 JUMP ~[] destination: B88 -> B89  <||@
  Comment 1667 block B89 null  <||@
  Comment 1667 850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1667 852 rcx|DWORD = MOVE input: int[-264723|0xfffffffffffbf5ed]  <||@
  Comment 1672 854 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1677 856 rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1681 860 JUMP ~[] destination: B89 -> B102  <||@
  Comment 1686 block B107 null  <||@
  Comment 1686 1028 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1686 1030 r10|DWORD = MOVE input: int[-284179|0xfffffffffffba9ed]  <||@
  Comment 1692 1032 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1697 1034 JUMP ~[] destination: B107 -> B111  <||@
  Comment 1697 block B111 null  <||@
  Comment 1697 1060 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1697 1062 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1704 1064 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1711 1066 DEOPT info [bci:22]  <||@
  Comment 1711 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1716 [rbx:0, stack:64]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:270) [bci: 22, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4             |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |-   <||@
  Comment 1717 block B108 null  <||@
  Comment 1717 1036 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1717 1038 r10|DWORD = MOVE input: int[-305171|0xfffffffffffb57ed]  <||@
  Comment 1723 1040 rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1726 1042 JUMP ~[] destination: B108 -> B111  <||@
  Comment 1728 block B110 null  <||@
  Comment 1728 1052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1728 1054 r10|DWORD = MOVE input: int[-245523|0xfffffffffffc40ed]  <||@
  Comment 1734 1056 rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1737 1058 JUMP ~[] destination: B110 -> B111  <||@
  Comment 1739 block B109 null  <||@
  Comment 1739 1044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1739 1046 r10|DWORD = MOVE input: int[-304659|0xfffffffffffb59ed]  <||@
  Comment 1745 1048 rbx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1748 1050 JUMP ~[] destination: B109 -> B111  <||@
  Comment 1750 block B1 null  <||@
  Comment 1750 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1750 22 r10|DWORD = MOVE input: int[-241683|0xfffffffffffc4fed]  <||@
  Comment 1756 24 JUMP ~[] destination: B1 -> B113  <||@
  Comment 1761 block B64 null  <||@
  Comment 1761 600 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1761 602 stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1765 604 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1770 606 JUMP ~[] destination: B64 -> B65  <||@
  Comment 1770 block B65 null  <||@
  Comment 1770 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1770 610 rcx|DWORD = MOVE input: int[-260123|0xfffffffffffc07e5]  <||@
  Comment 1775 612 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1780 614 rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1784 618 JUMP ~[] destination: B65 -> B102  <||@
  Comment 1789 block B55 null  <||@
  Comment 1789 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1789 526 stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1793 528 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1798 534 JUMP ~[] destination: B55 -> B56  <||@
  Comment 1798 block B56 null  <||@
  Comment 1798 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1798 538 r8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@772285300]  <||@
  Comment 1798 {Object[d.a@772285300]}  <||@
  Comment 1808 540 MOV [r15|QWORD + 668] y: -257563 size: DWORD  <||@
  Comment 1819 542 MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 1826 544 DEOPT info [bci:109, 17, 57, 41]  <||@
  Comment 1826 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1831 [rdx:0, rbx:0, r11:0, stack:12, stack:16, stack:64]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3             |4          |5          |6             |7          |8         |9  |10  |11 
     locals:  |stack:84|DWORD[.]  |rbx|QWORD[.]  |stack:80|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |rax|DWORD  |r11|DWORD[.]  |rcx|DWORD  |r9|DWORD  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:579) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:84|DWORD[.]  |rbx|QWORD[.]  |stack:80|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:271) [bci: 41, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4             |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |rbx|QWORD[.]  |-   <||@
  Comment 1832 block B112 null  <||@
  Comment 1832 1068 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1832 1070 r10|DWORD = MOVE input: int[-243731|0xfffffffffffc47ed]  <||@
  Comment 1838 1072 JUMP ~[] destination: B112 -> B113  <||@
  Comment 1843 block B39 null  <||@
  Comment 1843 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1843 412 stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1847 414 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1852 420 JUMP ~[] destination: B39 -> B40  <||@
  Comment 1852 block B40 null  <||@
  Comment 1852 422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1852 424 r10|DWORD = MOVE input: int[-255003|0xfffffffffffc1be5]  <||@
  Comment 1858 428 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1863 block B7 null  <||@
  Comment 1863 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1863 58 r10|DWORD = MOVE input: int[-242451|0xfffffffffffc4ced]  <||@
  Comment 1869 60 JUMP ~[] destination: B7 -> B113  <||@
  Comment 1874 block B3 null  <||@
  Comment 1874 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1874 34 r10|DWORD = MOVE input: int[-241939|0xfffffffffffc4eed]  <||@
  Comment 1880 36 JUMP ~[] destination: B3 -> B113  <||@
  Comment 1885 block B75 null  <||@
  Comment 1885 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1885 708 stack:84|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1889 710 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1894 712 JUMP ~[] destination: B75 -> B76  <||@
  Comment 1894 block B76 null  <||@
  Comment 1894 714 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1894 716 rcx|DWORD = MOVE input: int[-264467|0xfffffffffffbf6ed]  <||@
  Comment 1899 718 rsi|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1904 720 rdi|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1908 724 JUMP ~[] destination: B76 -> B102  <||@
  Comment 1913 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1913 4  <||@
  Comment 1919 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 1919 5  <||@
  HexCodeFile>>> <|@
end_nmethod
