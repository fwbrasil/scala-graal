begin_compilation
  name " HotSpotCompilation-8225[java.util.LinkedList.addAll(int, Collection)]"
  method "HotSpotCompilation-8225[java.util.LinkedList.addAll(int, Collection)]"
  date 1526687596101
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B100" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1414 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1414  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/LinkedList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?45 v1437 v1450 ?203 v1441 v1443 ?39 ?569 ?603 ?645 j1075 j1103 v1534 v1535 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v121 v124 v169 v16 v155 v166 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a -
uncheckedStamp: a Ljava/util/Collection;
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v1439 v1459 v1438 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<LinkedList.addAll(int, Collection)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 406
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v681 a835 a747 v1414 v1533 a1427 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 - - - - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1459 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v1414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1459 
=== Succesors ===
next: v415 
=== Usages ===
v1111 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1459 #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1111 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1414 
y: v1110 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1414 y: v1110  <|@  <|@
f <@~|@floating>@ <|@
tid a20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:415) [bci: 31]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a226 v681 ?45 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=toArray target_method_class=Ljava/util/ArrayList; position=at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1111 
=== Succesors ===
trueSuccessor: v412 
falseSuccessor: v414 
=== Usages ===
=== Predecessor ===
v1414 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1111 #trueSuccessor: v412 #falseSuccessor: v414  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=toArray target_method_class=Ljava/util/ArrayList; position=at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:410) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 v121 v506 v1065 a747 v1014 v812 v867 v911 v963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 1]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i12 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 1]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v418 
falseSuccessor: v416 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v418 #falseSuccessor: v416  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 1]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v682 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v682  <|@  <|@
f <@~|@floating>@ <|@
tid i683 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -69651
stableDimension: 0
stamp: i32 [-69651] ⇊00000000fffeefed ⇈00000000fffeefed
stampKind: i32
value: int[-69651|0xfffffffffffeefed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v418 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 1]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1415 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1415  <|@  <|@
f <@~|@floating>@ <|@
tid v1437 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1415 v349 v355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 6]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1437 
=== Succesors ===
next: v423 
=== Usages ===
v124 v16 i154 i165 i88 i1406 
=== Predecessor ===
v416 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1437 #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1415 
y: i2 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1415 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v124 
=== Succesors ===
trueSuccessor: v422 
falseSuccessor: v420 
=== Usages ===
=== Predecessor ===
i1415 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v124 #trueSuccessor: v422 #falseSuccessor: v420  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v686  <|@  <|@
f <@~|@floating>@ <|@
tid i687 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -70675
stableDimension: 0
stamp: i32 [-70675] ⇊00000000fffeebed ⇈00000000fffeebed
stampKind: i32
value: int[-70675|0xfffffffffffeebed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v422 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1416 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1416  <|@  <|@
f <@~|@floating>@ <|@
tid v1438 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a1416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1416 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1438 
=== Succesors ===
next: v1533 
=== Usages ===
v1460 v1533 v1440 v1451 
=== Predecessor ===
v420 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1438 #next: v1533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a1416 
=== Succesors ===
next: i1417 
=== Usages ===
=== Predecessor ===
a1416 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a1416 #next: i1417  <|@  <|@
f <@~|@floating>@ <|@
tid v1439 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1417 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1439 
=== Succesors ===
next: v431 
=== Usages ===
j1146 v13 i731 i548 ?39 ?45 ?203 ?39 v401 v213 i1406 v405 i642 ?203 i88 i387 v506 v522 v775 ?569 ?569 v604 ?603 ?603 v640 ?645 ?645 i674 a747 i1407 
=== Predecessor ===
v1533 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1439 #next: v431  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:410) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1417 
y: i12 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1417 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:410) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v430 
falseSuccessor: v428 
=== Usages ===
=== Predecessor ===
i1417 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v430 #falseSuccessor: v428  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:410) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v690 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v690  <|@  <|@
f <@~|@floating>@ <|@
tid i691 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -75027
stableDimension: 0
stamp: i32 [-75027] ⇊00000000fffedaed ⇈00000000fffedaed
stampKind: i32
value: int[-75027|0xfffffffffffedaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:410) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v512 
=== Usages ===
a1428 
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v512  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1417 
y: i12 
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1417 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v506 
=== Succesors ===
trueSuccessor: v511 
falseSuccessor: v507 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v506 #trueSuccessor: v511 #falseSuccessor: v507  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v696  <|@  <|@
f <@~|@floating>@ <|@
tid i697 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -132705
stableDimension: 0
stamp: i32 [-132705] ⇊00000000fffdf99f ⇈00000000fffdf99f
stampKind: i32
value: int[-132705|0xfffffffffffdf99f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v511 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: j734 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j734  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j734 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j772 
=== Usages ===
v1461 v1462 
=== Predecessor ===
v507 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j772  <|@  <|@
f <@~|@floating>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j734 
index: - 
=== Succesors ===
=== Usages ===
j772 v774 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j734 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j772 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1461 
=== Succesors ===
next: j773 
=== Usages ===
j738 v1463 v1464 a746 v1469 v1465 v1466 v1467 v1468 
=== Predecessor ===
j734 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1461 #next: j773  <|@  <|@
f <@~|@floating>@ <|@
tid v1462 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j734 
index: - 
=== Succesors ===
=== Usages ===
j773 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j734 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j773 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1462 
=== Succesors ===
next: v1418 
=== Usages ===
v739 
=== Predecessor ===
j772 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1462 #next: v1418  <|@  <|@
f <@~|@floating>@ <|@
tid v1460 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1416 
=== Succesors ===
=== Usages ===
v1418 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1416  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1418 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1460 
=== Succesors ===
next: v742 
=== Usages ===
v716 v779 
=== Predecessor ===
j773 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1460 #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid i314 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a933 a984 v405 a881 a1035 i642 a835 i672 i731 i796 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i731 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i1417 
y: i314 
=== Succesors ===
=== Usages ===
i755 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1417 y: i314  <|@  <|@
f <@~|@floating>@ <|@
tid i754 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i755 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i755 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i731 
y: i754 
=== Succesors ===
=== Usages ===
i733 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i731 y: i754  <|@  <|@
f <@~|@floating>@ <|@
tid i732 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i733 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i733 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i755 
y: i732 
=== Succesors ===
=== Usages ===
j737 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i755 y: i732  <|@  <|@
f <@~|@floating>@ <|@
tid j737 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i733 
=== Succesors ===
=== Usages ===
j738 v1465 v1466 v1467 v1468 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i733  <|@  <|@
f <@~|@floating>@ <|@
tid j738 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
=== Inputs ===
x: j737 
y: j772 
=== Succesors ===
=== Usages ===
v739 v774 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j737 y: j772  <|@  <|@
f <@~|@floating>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j773 
y: j738 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j773 y: j738  <|@  <|@
f <@~|@floating>@ <|@
tid j718 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v776 j801 v807 v1157 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v739 
=== Succesors ===
trueSuccessor: v740 
falseSuccessor: v741 
=== Usages ===
=== Predecessor ===
v1418 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v739 #trueSuccessor: v740 #falseSuccessor: v741  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a747 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a747  <|@  <|@
f <@~|@floating>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1418 
=== Succesors ===
=== Usages ===
a747 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1418  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a747 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
arguments: v716 i1417 i12 
=== Succesors ===
next: v750 
=== Usages ===
a751 
=== Predecessor ===
v740 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 arguments: v716 i1417 i12 #next: v750  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
a747 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v774 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v774  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1461 
value: j738 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v759 
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1461 value: j738 stateAfter: - lastLocationAccess: - #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j737 
index: j772 
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
address: v1465 
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v774 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1465 #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid v1466 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j737 
index: j772 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
address: v1466 
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1466 #next: v765  <|@  <|@
f <@~|@floating>@ <|@
tid v1467 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j737 
index: j772 
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
address: v1467 
=== Succesors ===
next: v768 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1467 #next: v768  <|@  <|@
f <@~|@floating>@ <|@
tid v1468 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j737 
index: j772 
=== Succesors ===
=== Usages ===
v768 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
address: v1468 
=== Succesors ===
next: v775 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1468 #next: v775  <|@  <|@
f <@~|@floating>@ <|@
tid v1463 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1463 
value: i1417 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v776 
=== Usages ===
=== Predecessor ===
v768 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1463 value: i1417 stateAfter: - lastLocationAccess: - #next: v776  <|@  <|@
f <@~|@floating>@ <|@
tid v1464 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v776 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1464 
value: j718 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1464 value: j718 stateAfter: - lastLocationAccess: - #next: v779  <|@  <|@
f <@~|@floating>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v779 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1469 
value: v1418 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v776 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1469 value: v1418 stateAfter: - lastLocationAccess: - #next: v745  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a746 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j772 
=== Succesors ===
next: v748 
=== Usages ===
a751 
=== Predecessor ===
v745 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j772 #next: v748  <|@  <|@
f <@*|@fixed>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
a746 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v749 
values: a746 a747 
=== Succesors ===
=== Usages ===
v1520 a554 v1452 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v749 values: a746 a747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v748 v750 
=== Succesors ===
next: v1268 
=== Usages ===
a751 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v748 v750 #next: v1268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: i1419 
=== Usages ===
j1269 j1271 
=== Predecessor ===
v749 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: i1419  <|@  <|@
f <@~|@floating>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1416 
=== Succesors ===
=== Usages ===
i1419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1416  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1419 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1440 
=== Succesors ===
next: v1160 
=== Usages ===
i548 v522 
=== Predecessor ===
v1268 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1440 #next: v1160  <|@  <|@
f <@~|@floating>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:174) [bci: 19]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1419 
y: i1417 
=== Succesors ===
=== Usages ===
i548 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1419 y: i1417  <|@  <|@
f <@~|@floating>@ <|@
tid i548 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v522 
trueValue: i1419 
falseValue: i1417 
=== Succesors ===
=== Usages ===
j1147 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v522 trueValue: i1419 falseValue: i1417  <|@  <|@
f <@~|@floating>@ <|@
tid j1147 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i548 
=== Succesors ===
=== Usages ===
j1320 v1520 j1151 v1157 v1265 j1307 j1313 j1317 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i548  <|@  <|@
f <@~|@floating>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1147 
y: j718 
=== Succesors ===
=== Usages ===
v1160 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1147 y: j718  <|@  <|@
f <@~|@floating>@ <|@
tid v1452 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a751 
index: - 
=== Succesors ===
=== Usages ===
j1271 j794 j792 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a751 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j805 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j806 j1320 j1362 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1288 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1289 j1338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1316 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1317 j1359 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1274 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1297 j1344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1312 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1313 j1356 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j710 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1350 j1305 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1306 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1307 j1351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j471 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1290 v1352 j1298 j1345 v1308 j1339 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1157 
=== Succesors ===
trueSuccessor: v1158 
falseSuccessor: v1159 
=== Usages ===
=== Predecessor ===
i1419 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1157 #trueSuccessor: v1158 #falseSuccessor: v1159  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1177 
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1177  <|@  <|@
f <@*|@fixed>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1178 
=== Predecessor ===
v1158 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1163 
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1163  <|@  <|@
f <@~|@floating>@ <|@
tid j1307 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1147 
y: j1306 
=== Succesors ===
=== Usages ===
v1308 v1310 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1147 y: j1306  <|@  <|@
f <@~|@floating>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1307 
y: j471 
=== Succesors ===
=== Usages ===
v1163 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1307 y: j471  <|@  <|@
f <@~|@floating>@ <|@
tid j1271 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1268 
address: v1452 
=== Succesors ===
=== Usages ===
v1521 v1523 v1525 v1527 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1268 address: v1452  <|@  <|@
f <@~|@floating>@ <|@
tid v1451 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1416 
=== Succesors ===
=== Usages ===
j1269 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1416  <|@  <|@
f <@~|@floating>@ <|@
tid j1269 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1268 
address: v1451 
=== Succesors ===
=== Usages ===
v1522 v1524 v1526 v1528 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1268 address: v1451  <|@  <|@
f <@*|@fixed>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1308 
=== Succesors ===
trueSuccessor: v1161 
falseSuccessor: v1162 
=== Usages ===
=== Predecessor ===
v1159 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1308 #trueSuccessor: v1161 #falseSuccessor: v1162  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1173 
=== Usages ===
=== Predecessor ===
v1163 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1173  <|@  <|@
f <@*|@fixed>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1174 
=== Predecessor ===
v1161 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1162 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1164 
=== Usages ===
=== Predecessor ===
v1163 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1164  <|@  <|@
f <@*|@fixed>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1165 
=== Predecessor ===
v1162 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B99" 
    successors "B18" "B99" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1298 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1165 
values: j471 j1305 
=== Succesors ===
=== Usages ===
v1528 j1305 v1527 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1165 values: j471 j1305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1164 
=== Succesors ===
next: v1420 
=== Usages ===
v1420 v1169 v1170 j1298 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1164 #next: v1420  <|@  <|@
f <@~|@floating>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1269 
index: j1298 
=== Succesors ===
=== Usages ===
v1420 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1269 index: j1298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v1165 
address: v1528 
=== Succesors ===
next: v1377 
=== Usages ===
v1377 
=== Predecessor ===
v1165 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1165 address: v1528 #next: v1377  <|@  <|@
f <@~|@floating>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1271 
index: j1298 
=== Succesors ===
=== Usages ===
v1377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1271 index: j1298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1377 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1527 
value: v1420 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1172 
=== Usages ===
=== Predecessor ===
v1420 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1527 value: v1420 stateAfter: - lastLocationAccess: - #next: v1172  <|@  <|@
f <@~|@floating>@ <|@
tid j1305 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1298 
y: j710 
=== Succesors ===
=== Usages ===
j1290 j1298 v1310 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1298 y: j710  <|@  <|@
f <@~|@floating>@ <|@
tid v1310 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1307 
y: j1305 
=== Succesors ===
=== Usages ===
v1172 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1307 y: j1305  <|@  <|@
f <@*|@fixed>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1310 
=== Succesors ===
trueSuccessor: v1169 
falseSuccessor: v1171 
=== Usages ===
=== Predecessor ===
v1377 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1310 #trueSuccessor: v1169 #falseSuccessor: v1171  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1165 
=== Succesors ===
next: v1175 
=== Usages ===
=== Predecessor ===
v1172 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1165 #next: v1175  <|@  <|@
f <@*|@fixed>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1174 
=== Predecessor ===
v1169 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1290 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1174 
values: j471 j1305 
=== Succesors ===
=== Usages ===
v1526 j1297 j1281 v1314 v1525 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1174 values: j471 j1305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1173 v1175 
=== Succesors ===
next: v1193 
=== Usages ===
j1290 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1173 v1175 #next: v1193  <|@  <|@
f <@~|@floating>@ <|@
tid j1313 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1147 
y: j1312 
=== Succesors ===
=== Usages ===
v1314 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1147 y: j1312  <|@  <|@
f <@~|@floating>@ <|@
tid v1314 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1313 
y: j1290 
=== Succesors ===
=== Usages ===
v1193 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1313 y: j1290  <|@  <|@
f <@*|@fixed>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1314 
=== Succesors ===
trueSuccessor: v1192 
falseSuccessor: v1191 
=== Usages ===
=== Predecessor ===
v1174 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1314 #trueSuccessor: v1192 #falseSuccessor: v1191  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1196 
=== Usages ===
=== Predecessor ===
v1193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1196  <|@  <|@
f <@*|@fixed>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1185 
=== Predecessor ===
v1192 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1191 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1421 
=== Usages ===
v1421 
=== Predecessor ===
v1193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1421  <|@  <|@
f <@~|@floating>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1269 
index: j1290 
=== Succesors ===
=== Usages ===
v1421 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1269 index: j1290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1421 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v1191 
address: v1526 
=== Succesors ===
next: v1375 
=== Usages ===
v1375 
=== Predecessor ===
v1191 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1191 address: v1526 #next: v1375  <|@  <|@
f <@~|@floating>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1271 
index: j1290 
=== Succesors ===
=== Usages ===
v1375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1271 index: j1290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1525 
value: v1421 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1184 
=== Usages ===
=== Predecessor ===
v1421 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1525 value: v1421 stateAfter: - lastLocationAccess: - #next: v1184  <|@  <|@
f <@~|@floating>@ <|@
tid j1297 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1290 
y: j1274 
=== Succesors ===
=== Usages ===
j1281 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1290 y: j1274  <|@  <|@
f <@*|@fixed>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1185 
=== Predecessor ===
v1375 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1281 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1185 
values: j1297 j1290 
=== Succesors ===
=== Usages ===
v1524 j1289 j1272 v1318 v1523 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1185 values: j1297 j1290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1184 v1196 
=== Succesors ===
next: v1199 
=== Usages ===
j1281 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1184 v1196 #next: v1199  <|@  <|@
f <@~|@floating>@ <|@
tid j1317 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1147 
y: j1316 
=== Succesors ===
=== Usages ===
v1318 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1147 y: j1316  <|@  <|@
f <@~|@floating>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1317 
y: j1281 
=== Succesors ===
=== Usages ===
v1199 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1317 y: j1281  <|@  <|@
f <@*|@fixed>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1318 
=== Succesors ===
trueSuccessor: v1198 
falseSuccessor: v1197 
=== Usages ===
=== Predecessor ===
v1185 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1318 #trueSuccessor: v1198 #falseSuccessor: v1197  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1202 
=== Usages ===
=== Predecessor ===
v1199 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1202  <|@  <|@
f <@*|@fixed>@ <|@
tid v1202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1188 
=== Predecessor ===
v1198 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1422 
=== Usages ===
v1422 
=== Predecessor ===
v1199 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1422  <|@  <|@
f <@~|@floating>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1269 
index: j1281 
=== Succesors ===
=== Usages ===
v1422 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1269 index: j1281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1422 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v1197 
address: v1524 
=== Succesors ===
next: v1373 
=== Usages ===
v1373 
=== Predecessor ===
v1197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1197 address: v1524 #next: v1373  <|@  <|@
f <@~|@floating>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1271 
index: j1281 
=== Succesors ===
=== Usages ===
v1373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1271 index: j1281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1523 
value: v1422 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1187 
=== Usages ===
=== Predecessor ===
v1422 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1523 value: v1422 stateAfter: - lastLocationAccess: - #next: v1187  <|@  <|@
f <@~|@floating>@ <|@
tid j1289 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1281 
y: j1288 
=== Succesors ===
=== Usages ===
j1272 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1281 y: j1288  <|@  <|@
f <@*|@fixed>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1188 
=== Predecessor ===
v1373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1272 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1188 
values: j1289 j1281 
=== Succesors ===
=== Usages ===
v1522 v1321 v1521 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1188 values: j1289 j1281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1187 v1202 
=== Succesors ===
next: v1205 
=== Usages ===
j1272 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1187 v1202 #next: v1205  <|@  <|@
f <@~|@floating>@ <|@
tid j1320 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1147 
y: j805 
=== Succesors ===
=== Usages ===
v1321 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1147 y: j805  <|@  <|@
f <@~|@floating>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1320 
y: j1272 
=== Succesors ===
=== Usages ===
v1205 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1320 y: j1272  <|@  <|@
f <@*|@fixed>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1321 
=== Succesors ===
trueSuccessor: v1204 
falseSuccessor: v1203 
=== Usages ===
=== Predecessor ===
v1188 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1321 #trueSuccessor: v1204 #falseSuccessor: v1203  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1208 
=== Usages ===
=== Predecessor ===
v1205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1208  <|@  <|@
f <@*|@fixed>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1178 
=== Predecessor ===
v1204 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1423 
=== Usages ===
a1423 
=== Predecessor ===
v1205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1423  <|@  <|@
f <@~|@floating>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1269 
index: j1272 
=== Succesors ===
=== Usages ===
a1423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1269 index: j1272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1423 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1203 
address: v1522 
=== Succesors ===
next: v1371 
=== Usages ===
v1371 
=== Predecessor ===
v1203 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1203 address: v1522 #next: v1371  <|@  <|@
f <@~|@floating>@ <|@
tid v1521 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1271 
index: j1272 
=== Succesors ===
=== Usages ===
v1371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1271 index: j1272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1521 
value: a1423 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1190 
=== Usages ===
=== Predecessor ===
a1423 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1521 value: a1423 stateAfter: - lastLocationAccess: - #next: v1190  <|@  <|@
f <@*|@fixed>@ <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1178 
=== Predecessor ===
v1371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B13" "B27" "B26" 
    successors "B29" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1178 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1177 v1190 v1208 
=== Succesors ===
next: v1324 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1177 v1190 v1208 #next: v1324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1215 
=== Usages ===
j1326 
=== Predecessor ===
v1178 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1215  <|@  <|@
f <@~|@floating>@ <|@
tid j1146 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1417 
=== Succesors ===
=== Usages ===
j1151 v1265 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1417  <|@  <|@
f <@~|@floating>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1147 
y: j1146 
=== Succesors ===
=== Usages ===
v1215 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1147 y: j1146  <|@  <|@
f <@*|@fixed>@ <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1265 
=== Succesors ===
trueSuccessor: v1214 
falseSuccessor: v1213 
=== Usages ===
=== Predecessor ===
v1324 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1265 #trueSuccessor: v1214 #falseSuccessor: v1213  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1214 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1218 
=== Usages ===
=== Predecessor ===
v1215 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1218  <|@  <|@
f <@~|@floating>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a751 
index: j1147 
=== Succesors ===
=== Usages ===
j1326 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a751 index: j1147  <|@  <|@
f <@~|@floating>@ <|@
tid j1326 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1324 
address: v1520 
=== Succesors ===
=== Usages ===
v1529 v1530 v1531 v1532 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1324 address: v1520  <|@  <|@
f <@~|@floating>@ <|@
tid j1151 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1146 
y: j1147 
=== Succesors ===
=== Usages ===
j1362 j1351 j1356 j1359 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1146 y: j1147  <|@  <|@
f <@~|@floating>@ <|@
tid j1351 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j1151 
y: j1306 
=== Succesors ===
=== Usages ===
v1352 v1354 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1151 y: j1306  <|@  <|@
f <@~|@floating>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1351 
y: j471 
=== Succesors ===
=== Usages ===
v1218 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1351 y: j471  <|@  <|@
f <@*|@fixed>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1352 
=== Succesors ===
trueSuccessor: v1216 
falseSuccessor: v1217 
=== Usages ===
=== Predecessor ===
v1214 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1352 #trueSuccessor: v1216 #falseSuccessor: v1217  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1216 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1227 
=== Usages ===
=== Predecessor ===
v1218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1227  <|@  <|@
f <@*|@fixed>@ <|@
tid v1227 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1228 
=== Predecessor ===
v1216 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1219 
=== Usages ===
=== Predecessor ===
v1218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1219  <|@  <|@
f <@~|@floating>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1385 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1220 
=== Predecessor ===
v1217 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B43" 
    successors "B33" "B43" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1345 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1220 
values: j471 j1350 
=== Succesors ===
=== Usages ===
v1532 j1350 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1220 values: j471 j1350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1219 
=== Succesors ===
next: v1385 
=== Usages ===
j1345 v1223 v1224 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1219 #next: v1385  <|@  <|@
f <@~|@floating>@ <|@
tid v1532 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1326 
index: j1345 
=== Succesors ===
=== Usages ===
v1385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1326 index: j1345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1532 
value: v1386 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1226 
=== Usages ===
=== Predecessor ===
v1220 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1532 value: v1386 stateAfter: - lastLocationAccess: - #next: v1226  <|@  <|@
f <@~|@floating>@ <|@
tid j1350 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1345 
y: j710 
=== Succesors ===
=== Usages ===
j1339 j1345 v1354 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1345 y: j710  <|@  <|@
f <@~|@floating>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1351 
y: j1350 
=== Succesors ===
=== Usages ===
v1226 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1351 y: j1350  <|@  <|@
f <@*|@fixed>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1354 
=== Succesors ===
trueSuccessor: v1223 
falseSuccessor: v1225 
=== Usages ===
=== Predecessor ===
v1385 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1354 #trueSuccessor: v1223 #falseSuccessor: v1225  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1220 
=== Succesors ===
next: v1229 
=== Usages ===
=== Predecessor ===
v1226 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1220 #next: v1229  <|@  <|@
f <@*|@fixed>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1228 
=== Predecessor ===
v1223 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1339 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1228 
values: j471 j1350 
=== Succesors ===
=== Usages ===
v1531 j1344 j1333 v1357 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1228 values: j471 j1350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1227 v1229 
=== Succesors ===
next: v1247 
=== Usages ===
j1339 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1227 v1229 #next: v1247  <|@  <|@
f <@~|@floating>@ <|@
tid j1356 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j1151 
y: j1312 
=== Succesors ===
=== Usages ===
v1357 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1151 y: j1312  <|@  <|@
f <@~|@floating>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1356 
y: j1339 
=== Succesors ===
=== Usages ===
v1247 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1356 y: j1339  <|@  <|@
f <@*|@fixed>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1357 
=== Succesors ===
trueSuccessor: v1246 
falseSuccessor: v1245 
=== Usages ===
=== Predecessor ===
v1228 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1357 #trueSuccessor: v1246 #falseSuccessor: v1245  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1250 
=== Usages ===
=== Predecessor ===
v1247 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1250  <|@  <|@
f <@*|@fixed>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1239 
=== Predecessor ===
v1246 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1384 
=== Usages ===
=== Predecessor ===
v1247 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1384  <|@  <|@
f <@~|@floating>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1326 
index: j1339 
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1326 index: j1339  <|@  <|@
f <@~|@floating>@ <|@
tid v1389 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1531 
value: v1389 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1238 
=== Usages ===
=== Predecessor ===
v1245 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1531 value: v1389 stateAfter: - lastLocationAccess: - #next: v1238  <|@  <|@
f <@~|@floating>@ <|@
tid j1344 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1339 
y: j1274 
=== Succesors ===
=== Usages ===
j1333 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1339 y: j1274  <|@  <|@
f <@*|@fixed>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1239 
=== Predecessor ===
v1384 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1333 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1239 
values: j1344 j1339 
=== Succesors ===
=== Usages ===
v1530 j1338 j1327 v1360 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1239 values: j1344 j1339  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1238 v1250 
=== Succesors ===
next: v1253 
=== Usages ===
j1333 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1238 v1250 #next: v1253  <|@  <|@
f <@~|@floating>@ <|@
tid j1359 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1151 
y: j1316 
=== Succesors ===
=== Usages ===
v1360 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1151 y: j1316  <|@  <|@
f <@~|@floating>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1359 
y: j1333 
=== Succesors ===
=== Usages ===
v1253 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1359 y: j1333  <|@  <|@
f <@*|@fixed>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1360 
=== Succesors ===
trueSuccessor: v1252 
falseSuccessor: v1251 
=== Usages ===
=== Predecessor ===
v1239 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1360 #trueSuccessor: v1252 #falseSuccessor: v1251  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1252 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1256 
=== Usages ===
=== Predecessor ===
v1253 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1256  <|@  <|@
f <@*|@fixed>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1242 
=== Predecessor ===
v1252 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1382 
=== Usages ===
=== Predecessor ===
v1253 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1382  <|@  <|@
f <@~|@floating>@ <|@
tid v1530 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1326 
index: j1333 
=== Succesors ===
=== Usages ===
v1382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1326 index: j1333  <|@  <|@
f <@~|@floating>@ <|@
tid v1388 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1382 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1382 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1530 
value: v1388 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1241 
=== Usages ===
=== Predecessor ===
v1251 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1530 value: v1388 stateAfter: - lastLocationAccess: - #next: v1241  <|@  <|@
f <@~|@floating>@ <|@
tid j1338 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1333 
y: j1288 
=== Succesors ===
=== Usages ===
j1327 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1333 y: j1288  <|@  <|@
f <@*|@fixed>@ <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1242 
=== Predecessor ===
v1382 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1327 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1242 
values: j1338 j1333 
=== Succesors ===
=== Usages ===
v1529 v1363 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1242 values: j1338 j1333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1241 v1256 
=== Succesors ===
next: v1259 
=== Usages ===
j1327 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1241 v1256 #next: v1259  <|@  <|@
f <@~|@floating>@ <|@
tid j1362 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j1151 
y: j805 
=== Succesors ===
=== Usages ===
v1363 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1151 y: j805  <|@  <|@
f <@~|@floating>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1362 
y: j1327 
=== Succesors ===
=== Usages ===
v1259 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1362 y: j1327  <|@  <|@
f <@*|@fixed>@ <|@
tid v1259 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1363 
=== Succesors ===
trueSuccessor: v1258 
falseSuccessor: v1257 
=== Usages ===
=== Predecessor ===
v1242 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1363 #trueSuccessor: v1258 #falseSuccessor: v1257  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1262 
=== Usages ===
=== Predecessor ===
v1259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1262  <|@  <|@
f <@*|@fixed>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1232 
=== Predecessor ===
v1258 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1380 
=== Usages ===
=== Predecessor ===
v1259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1380  <|@  <|@
f <@~|@floating>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1326 
index: j1327 
=== Succesors ===
=== Usages ===
v1380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1326 index: j1327  <|@  <|@
f <@~|@floating>@ <|@
tid a1387 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1380 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1529 
value: a1387 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1244 
=== Usages ===
=== Predecessor ===
v1257 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1529 value: a1387 stateAfter: - lastLocationAccess: - #next: v1244  <|@  <|@
f <@*|@fixed>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1232 
=== Predecessor ===
v1380 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B32" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1225 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1224 
=== Usages ===
=== Predecessor ===
v1226 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1224  <|@  <|@
f <@*|@fixed>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1220 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1225 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1220  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1231 
=== Usages ===
=== Predecessor ===
v1215 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1231  <|@  <|@
f <@*|@fixed>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1232 
=== Predecessor ===
v1213 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B42" "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1231 v1244 v1262 
=== Succesors ===
next: j792 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1231 v1244 v1262 #next: j792  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1452 
=== Succesors ===
next: j794 
=== Usages ===
j793 
=== Predecessor ===
v1232 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1452 #next: j794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j794 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1452 
=== Succesors ===
next: v802 
=== Usages ===
j798 
=== Predecessor ===
j792 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1452 #next: v802  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i165 i387 i1407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1407 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i32
=== Inputs ===
x: i1417 
y: i164 
=== Succesors ===
=== Usages ===
i796 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1417 y: i164  <|@  <|@
f <@~|@floating>@ <|@
tid i796 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i1407 
y: i314 
=== Succesors ===
=== Usages ===
j797 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1407 y: i314  <|@  <|@
f <@~|@floating>@ <|@
tid j797 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i796 
=== Succesors ===
=== Usages ===
j798 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i796  <|@  <|@
f <@~|@floating>@ <|@
tid j798 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
=== Inputs ===
x: j794 
y: j797 
=== Succesors ===
=== Usages ===
j799 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j794 y: j797  <|@  <|@
f <@~|@floating>@ <|@
tid i791 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 8]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j793 j799 j915 j967 j1018 j1069 j1076 j1083 j1090 j1097 j1104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j799 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j798 
y: i791 
=== Succesors ===
=== Usages ===
j800 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j798 y: i791  <|@  <|@
f <@~|@floating>@ <|@
tid j793 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j792 
y: i791 
=== Succesors ===
=== Usages ===
j800 j815 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j792 y: i791  <|@  <|@
f <@~|@floating>@ <|@
tid j800 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j799 
y: j793 
=== Succesors ===
=== Usages ===
j801 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j799 y: j793  <|@  <|@
f <@~|@floating>@ <|@
tid j801 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j800 
y: j718 
=== Succesors ===
=== Usages ===
j804 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j800 y: j718  <|@  <|@
f <@~|@floating>@ <|@
tid j814 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:158) [bci: 12]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j815 v1478 v1483 v1488 v1494 v1495 v1496 v1497 v1498 v1499 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v803 
=== Predecessor ===
j794 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B98" 
    successors "B47" "B98" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611686018427387904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j804 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v803 
values: j801 j806 
=== Succesors ===
=== Usages ===
j806 v807 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v803 values: j801 j806  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v802 
=== Succesors ===
next: v810 
=== Usages ===
j804 v808 v813 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v802 #next: v810  <|@  <|@
f <@~|@floating>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j804 
y: j718 
=== Succesors ===
=== Usages ===
v810 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j804 y: j718  <|@  <|@
f <@*|@fixed>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v807 
=== Succesors ===
trueSuccessor: v808 
falseSuccessor: v809 
=== Usages ===
=== Predecessor ===
v803 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v807 #trueSuccessor: v808 #falseSuccessor: v809  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v803 
=== Succesors ===
next: a554 
=== Usages ===
=== Predecessor ===
v810 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v803 #next: a554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a751 
=== Succesors ===
next: v19 
=== Usages ===
?203 ?39 v1444 v1445 ?569 v1453 ?603 v1455 ?645 v1457 
=== Predecessor ===
v808 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a751 #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 125]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i70 i92 v95 i154 v169 ?203 v213 i212 v242 i574 i608 a835 a881 a933 a984 a1035 i1408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1417 
y: i69 
=== Succesors ===
=== Usages ===
v185 v235 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1417 y: i69  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:414) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i1415 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i1415  <|@  <|@
f <@~|@floating>@ <|@
tid i919 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v918 v970 v1021 v1072 v1079 v1086 v1093 v1100 v1107 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1441 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1426 v354 a1424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:414) [bci: 28]
stamp: void
trueSuccessorProbability: 0.8950010038144951
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
a554 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v17 #falseSuccessor: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4606236671919826776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:415) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1424 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1424 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:416) [bci: 35]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1441 
=== Succesors ===
next: v235 
=== Usages ===
a498 a1412 a499 
=== Predecessor ===
v17 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1441 #next: v235  <|@  <|@
f <@*|@fixed>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
stamp: void
trueSuccessorProbability: 0.1646513595885204
=== Inputs ===
condition: v213 
=== Succesors ===
trueSuccessor: v234 
falseSuccessor: v233 
=== Usages ===
=== Predecessor ===
a1424 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v213 #trueSuccessor: v234 #falseSuccessor: v233  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B95" 
    xhandlers
    flags 
    probability 4594477336665446716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v257  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v254 
=== Predecessor ===
v234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B61" 
    xhandlers
    flags 
    probability 4604909342826098953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid a1412 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a1424 
=== Succesors ===
=== Usages ===
a224 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1424  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
v233 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B55" 
    xhandlers
    flags 
    probability 4592230395704689984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$116/2011436689@f852abe
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 6]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i1415 
y: i69 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i1415 y: i69  <|@  <|@
f <@~|@floating>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i154 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i154  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
trueSuccessorProbability: 0.7154629099120353
=== Inputs ===
condition: v155 
=== Succesors ===
trueSuccessor: v156 
falseSuccessor: v157 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v155 #trueSuccessor: v156 #falseSuccessor: v157  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4590077595182696277
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 10]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v435  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i69 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i69  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v169 
=== Succesors ===
trueSuccessor: v432 
falseSuccessor: v434 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v169 #trueSuccessor: v432 #falseSuccessor: v434  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590077595182696277
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1425 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1425  <|@  <|@
f <@~|@floating>@ <|@
tid v1443 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1425 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.first
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1443 
=== Succesors ===
next: v171 
=== Usages ===
a306 
=== Predecessor ===
v432 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1443 #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid a306 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a1425 
=== Succesors ===
=== Usages ===
a172 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1425  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
a1425 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid i695 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -78611
stableDimension: 0
stamp: i32 [-78611] ⇊00000000fffecced ⇈00000000fffecced
stampKind: i32
value: int[-78611|0xfffffffffffecced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v434 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4584268423496398765
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 35]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: i32
=== Inputs ===
x: i1415 
y: i164 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1415 y: i164  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i165 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i165  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v166 
=== Succesors ===
trueSuccessor: v438 
falseSuccessor: v436 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v166 #trueSuccessor: v438 #falseSuccessor: v436  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v692 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v692  <|@  <|@
f <@~|@floating>@ <|@
tid i693 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -79379
stableDimension: 0
stamp: i32 [-79379] ⇊00000000fffec9ed ⇈00000000fffec9ed
stampKind: i32
value: int[-79379|0xfffffffffffec9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v438 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4584268423496398765
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1426 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1426  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1426 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:416) [bci: 35]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1441 
=== Succesors ===
next: v173 
=== Usages ===
a309 
=== Predecessor ===
v436 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1441 #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid a309 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a1426 
=== Succesors ===
=== Usages ===
a172 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1426  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
a1426 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4592230395704689984
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a172 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v170 
values: a306 a309 
=== Succesors ===
=== Usages ===
a227 v1442 a226 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v170 values: a306 a309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v171 v173 
=== Succesors ===
next: a1427 
=== Usages ===
a172 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v171 v173 #next: a1427  <|@  <|@
f <@~|@floating>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a172 
index: - 
=== Succesors ===
=== Usages ===
a1427 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1427 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList$Node.prev
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:419) [bci: 52]
nullCheck: true
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1442 
=== Succesors ===
next: v185 
=== Usages ===
a303 a498 a501 
=== Predecessor ===
v170 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1442 #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid a303 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:419) [bci: 52]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a1427 
=== Succesors ===
=== Usages ===
a224 a210 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1427  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
stamp: void
trueSuccessorProbability: 0.1646513595885204
=== Inputs ===
condition: v213 
=== Succesors ===
trueSuccessor: v184 
falseSuccessor: v183 
=== Usages ===
=== Predecessor ===
a1427 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v213 #trueSuccessor: v184 #falseSuccessor: v183  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B93" 
    xhandlers
    flags 
    probability 4580640213717223586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v208  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
v184 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4590984647627490071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v220  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
v183 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B50" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4605699371196639596
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a224 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v219 
values: a303 a1412 
=== Succesors ===
=== Usages ===
v187 j1082 v1447 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v219 values: a303 a1412  <|@  <|@
f <@~|@floating>@ <|@
tid a226 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v219 
values: a172 a20 
=== Succesors ===
=== Usages ===
?39 a227 ?203 ?569 ?603 ?645 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v219 values: a172 a20  <|@  <|@
f <@~|@floating>@ <|@
tid a498 <|@
d <@d|@=== Debug Properties ===
stamp: n# Ljava/util/LinkedList$Node;
valueDescription: n -
=== Inputs ===
merge: v219 
values: a1427 a1424 
=== Succesors ===
=== Usages ===
v869 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v219 values: a1427 a1424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v220 v222 
=== Succesors ===
next: j823 
=== Usages ===
a224 a226 a498 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v220 v222 #next: j823  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j823 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j839 
=== Usages ===
v1470 v1471 
=== Predecessor ===
v219 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j839  <|@  <|@
f <@~|@floating>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j823 
index: - 
=== Succesors ===
=== Usages ===
j839 v841 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j823 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1470 
=== Succesors ===
next: j840 
=== Usages ===
j1112 j845 v1500 
=== Predecessor ===
j823 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1470 #next: j840  <|@  <|@
f <@~|@floating>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j823 
index: - 
=== Succesors ===
=== Usages ===
j840 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j823 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j840 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1471 
=== Succesors ===
next: v831 
=== Usages ===
v828 
=== Predecessor ===
j839 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1471 #next: v831  <|@  <|@
f <@~|@floating>@ <|@
tid j294 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:416) [bci: 35]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1132 j1112 j1138 j1120 j1126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1112 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j839 
y: j294 
=== Succesors ===
=== Usages ===
v828 v841 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j839 y: j294  <|@  <|@
f <@~|@floating>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j840 
y: j1112 
=== Succesors ===
=== Usages ===
v831 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j840 y: j1112  <|@  <|@
f <@~|@floating>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a835 a881 a933 a984 a1035 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v828 
=== Succesors ===
trueSuccessor: v829 
falseSuccessor: v830 
=== Usages ===
=== Predecessor ===
j840 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v828 #trueSuccessor: v829 #falseSuccessor: v830  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4575969078837925879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a835 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a835  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a835 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
arguments: v821 i314 i69 
=== Succesors ===
next: j836 
=== Usages ===
j836 
=== Predecessor ===
v829 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 arguments: v821 i314 i69 #next: j836  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j836 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a835 
=== Succesors ===
next: v846 
=== Usages ===
j845 
=== Predecessor ===
a835 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a835 #next: v846  <|@  <|@
f <@*|@fixed>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
j836 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4605624129680125964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v841 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v841  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1470 
value: j1112 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v838 
=== Usages ===
=== Predecessor ===
v830 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1470 value: j1112 stateAfter: - lastLocationAccess: - #next: v838  <|@  <|@
f <@~|@floating>@ <|@
tid v1500 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j839 
index: - 
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j839 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1500 
=== Succesors ===
next: v844 
=== Usages ===
=== Predecessor ===
v841 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1500 #next: v844  <|@  <|@
f <@*|@fixed>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
v838 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4605699371196639596
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j845 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v843 
values: j839 j836 
=== Succesors ===
=== Usages ===
v1473 v1472 a473 v1501 v1502 v1503 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v843 values: j839 j836  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v844 v846 
=== Succesors ===
next: a473 
=== Usages ===
j845 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v844 v846 #next: a473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a473 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j845 
=== Succesors ===
next: j857 
=== Usages ===
a481 
=== Predecessor ===
v843 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j845 #next: j857  <|@  <|@
f <@~|@floating>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1051 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1051 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v851 
=== Succesors ===
=== Usages ===
v1491 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v851  <|@  <|@
f <@~|@floating>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1051 
index: - 
=== Succesors ===
=== Usages ===
j1055 j901 j857 j953 j1004 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1051 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j857 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1491 
=== Succesors ===
next: v858 
=== Usages ===
v858 
=== Predecessor ===
a473 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1491 #next: v858  <|@  <|@
f <@~|@floating>@ <|@
tid v1472 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j845 
index: - 
=== Succesors ===
=== Usages ===
v858 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j845 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1472 
value: j857 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v861 
=== Usages ===
=== Predecessor ===
j857 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1472 value: j857 stateAfter: - lastLocationAccess: - #next: v861  <|@  <|@
f <@~|@floating>@ <|@
tid v1473 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j845 
index: - 
=== Succesors ===
=== Usages ===
v861 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j845 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v861 v905 v957 v1008 v1059 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1473 
value: v1116 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1428 
=== Usages ===
=== Predecessor ===
v858 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1473 value: v1116 stateAfter: - lastLocationAccess: - #next: a1428  <|@  <|@
f <@~|@floating>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a554 
index: - 
=== Succesors ===
=== Usages ===
a1428 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a554 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1428 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v428 
address: v1444 
=== Succesors ===
next: v865 
=== Usages ===
v865 
=== Predecessor ===
v861 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v428 address: v1444 #next: v865  <|@  <|@
f <@~|@floating>@ <|@
tid v1501 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j845 
index: - 
=== Succesors ===
=== Usages ===
v865 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j845 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1501 
value: a1428 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v867 
=== Usages ===
=== Predecessor ===
a1428 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1501 value: a1428 stateAfter: - lastLocationAccess: - #next: v867  <|@  <|@
f <@~|@floating>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j845 
index: - 
=== Succesors ===
=== Usages ===
v867 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j845 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1502 
value: i12 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v869 
=== Usages ===
=== Predecessor ===
v865 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1502 value: i12 stateAfter: - lastLocationAccess: - #next: v869  <|@  <|@
f <@~|@floating>@ <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j845 
index: - 
=== Succesors ===
=== Usages ===
v869 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j845 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1503 
value: a498 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a481 
=== Usages ===
=== Predecessor ===
v867 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1503 value: a498 stateAfter: - lastLocationAccess: - #next: a481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a481 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a473 
=== Succesors ===
next: v482 
=== Usages ===
a332 ?248 a211 
=== Predecessor ===
v869 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a473 #next: v482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
a481 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid a332 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:426) [bci: 108]
op: Compress
stamp: n -
=== Inputs ===
value: a481 
=== Succesors ===
=== Usages ===
v333 v337 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a481  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:425) [bci: 102]
stamp: void
=== Inputs ===
value: a224 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a224  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:425) [bci: 102]
stamp: void
trueSuccessorProbability: 0.19710495908321068
=== Inputs ===
condition: v187 
=== Succesors ===
trueSuccessor: v188 
falseSuccessor: v189 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v187 #trueSuccessor: v188 #falseSuccessor: v189  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4595100210704046671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:426) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList.first
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:426) [bci: 108]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1535 
value: a332 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1075 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1535 value: a332 stateAfter: - lastLocationAccess: - #next: j1075  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1075 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:426) [bci: 108]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v1079 
=== Usages ===
j1076 
=== Predecessor ===
v333 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v1079  <|@  <|@
f <@~|@floating>@ <|@
tid j1076 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:426) [bci: 108]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1075 
y: i791 
=== Succesors ===
=== Usages ===
v1495 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1075 y: i791  <|@  <|@
f <@~|@floating>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1076 
index: j814 
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1076 index: j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:426) [bci: 108]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1495 
value: i919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
j1075 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1495 value: i919 stateAfter: - lastLocationAccess: - #next: v196  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v1079 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4604216323593261784
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid v1447 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a224 
index: - 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a224 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$Node.next
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1447 
value: a332 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1082 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1447 value: a332 stateAfter: - lastLocationAccess: - #next: j1082  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a224 
=== Succesors ===
next: v1086 
=== Usages ===
j1083 
=== Predecessor ===
v337 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a224 #next: v1086  <|@  <|@
f <@~|@floating>@ <|@
tid j1083 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1082 
y: i791 
=== Succesors ===
=== Usages ===
v1496 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1082 y: i791  <|@  <|@
f <@~|@floating>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1083 
index: j814 
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1083 index: j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1496 
value: i919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
j1082 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1496 value: i919 stateAfter: - lastLocationAccess: - #next: v197  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:429) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v1086 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605699371196639596
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v196 v197 
=== Succesors ===
next: v1397 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v196 v197 #next: v1397  <|@  <|@
f <@~|@floating>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1417 
y: i314 
=== Succesors ===
=== Usages ===
v1397 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1417 y: i314  <|@  <|@
f <@*|@fixed>@ <|@
tid v1397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v405 
=== Succesors ===
trueSuccessor: v1393 
falseSuccessor: v1396 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v405 #trueSuccessor: v1393 #falseSuccessor: v1396  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 4601195771569269100
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1391 
=== Usages ===
=== Predecessor ===
v1397 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1391  <|@  <|@
f <@*|@fixed>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1390 
=== Predecessor ===
v1393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B97" 
    xhandlers
    flags 
    probability 4601195771569269100
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1405 
=== Usages ===
=== Predecessor ===
v1397 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1405  <|@  <|@
f <@~|@floating>@ <|@
tid i387 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i32
=== Inputs ===
x: i1417 
y: i164 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1417 y: i164  <|@  <|@
f <@~|@floating>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i387 
y: i1417 
=== Succesors ===
=== Usages ===
v1405 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i387 y: i1417  <|@  <|@
f <@*|@fixed>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v401 
=== Succesors ===
trueSuccessor: v1404 
falseSuccessor: v1401 
=== Usages ===
=== Predecessor ===
v1396 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v401 #trueSuccessor: v1404 #falseSuccessor: v1401  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" 
    xhandlers
    flags 
    probability 4601195771569269100
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1392 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1392  <|@  <|@
f <@*|@fixed>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1390 
=== Predecessor ===
v1404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B68" "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605699371196639596
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1391 v1392 
=== Succesors ===
next: v35 
=== Usages ===
v399 v588 v622 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1391 v1392 #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
v1390 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B76" 
    successors "B73" "B77" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605699371196639596
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i212 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v36 
values: i69 i70 
=== Succesors ===
=== Usages ===
?39 v40 v1445 i70 i577 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v36 values: i69 i70  <|@  <|@
f <@~|@floating>@ <|@
tid a211 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v36 
values: a481 a492 
=== Succesors ===
=== Usages ===
?39 a576 a489 v1446 j914 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v36 values: a481 a492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0
loopOrigFrequency: 5.073439068460147
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
splits: 2
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v35 
=== Succesors ===
next: v46 
=== Usages ===
i212 a211 v43 v96 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v35 #next: v46  <|@  <|@
f <@~|@floating>@ <|@
tid i639 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1417 
y: i639 
=== Succesors ===
=== Usages ===
i642 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1417 y: i639  <|@  <|@
f <@~|@floating>@ <|@
tid i642 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v640 
trueValue: i1417 
falseValue: i314 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v640 trueValue: i1417 falseValue: i314  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i212 
y: i642 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i212 y: i642  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
stamp: void
trueSuccessorProbability: 0.8353486404114796
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v41 
falseSuccessor: v43 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v41 #falseSuccessor: v43  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4604460509397492437
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: j870 
=== Usages ===
v399 
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j870  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j870 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j885 
=== Usages ===
v1474 v1475 
=== Predecessor ===
v41 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j885  <|@  <|@
f <@~|@floating>@ <|@
tid v1474 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j870 
index: - 
=== Succesors ===
=== Usages ===
j885 v887 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j870 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j885 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1474 
=== Succesors ===
next: j886 
=== Usages ===
j1120 j891 v1504 
=== Predecessor ===
j870 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1474 #next: j886  <|@  <|@
f <@~|@floating>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j870 
index: - 
=== Succesors ===
=== Usages ===
j886 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j870 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j886 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1475 
=== Succesors ===
next: v878 
=== Usages ===
v875 
=== Predecessor ===
j885 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1475 #next: v878  <|@  <|@
f <@~|@floating>@ <|@
tid j1120 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j885 
y: j294 
=== Succesors ===
=== Usages ===
v875 v887 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j885 y: j294  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j886 
y: j1120 
=== Succesors ===
=== Usages ===
v878 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j886 y: j1120  <|@  <|@
f <@*|@fixed>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v875 
=== Succesors ===
trueSuccessor: v876 
falseSuccessor: v877 
=== Usages ===
=== Predecessor ===
j886 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v875 #trueSuccessor: v876 #falseSuccessor: v877  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4574695193164519458
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a881 
=== Usages ===
=== Predecessor ===
v878 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a881  <|@  <|@
tid ?39 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<LinkedList.addAll(int, Collection)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 422
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - i1417 a211 a226 a554 i1417 i212 - - - 
=== Succesors ===
=== Usages ===
a881 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - i1417 a211 a226 a554 i1417 i212 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a881 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?39 
arguments: v821 i314 i69 
=== Succesors ===
next: j882 
=== Usages ===
j882 
=== Predecessor ===
v876 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?39 arguments: v821 i314 i69 #next: j882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j882 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a881 
=== Succesors ===
next: v892 
=== Usages ===
j891 
=== Predecessor ===
a881 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a881 #next: v892  <|@  <|@
f <@*|@fixed>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v889 
=== Predecessor ===
j882 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4604397656498970277
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v887 
=== Usages ===
=== Predecessor ===
v878 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1474 
value: j1120 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v884 
=== Usages ===
=== Predecessor ===
v877 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1474 value: j1120 stateAfter: - lastLocationAccess: - #next: v884  <|@  <|@
f <@~|@floating>@ <|@
tid v1504 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j885 
index: - 
=== Succesors ===
=== Usages ===
v884 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j885 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1504 
=== Succesors ===
next: v890 
=== Usages ===
=== Predecessor ===
v887 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1504 #next: v890  <|@  <|@
f <@*|@fixed>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v889 
=== Predecessor ===
v884 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B74" 
    successors "B72" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4604460509397492437
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j891 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v889 
values: j885 j882 
=== Succesors ===
=== Usages ===
v1477 v1476 a485 v1505 v1506 v1507 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v889 values: j885 j882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v890 v892 
=== Succesors ===
next: a485 
=== Usages ===
j891 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v890 v892 #next: a485  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a485 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j891 
=== Succesors ===
next: j901 
=== Usages ===
a492 
=== Predecessor ===
v889 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j891 #next: j901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j901 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1491 
=== Succesors ===
next: v902 
=== Usages ===
v902 
=== Predecessor ===
a485 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1491 #next: v902  <|@  <|@
f <@~|@floating>@ <|@
tid v1476 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j891 
index: - 
=== Succesors ===
=== Usages ===
v902 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j891 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1476 
value: j901 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v905 
=== Usages ===
=== Predecessor ===
j901 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1476 value: j901 stateAfter: - lastLocationAccess: - #next: v905  <|@  <|@
f <@~|@floating>@ <|@
tid v1477 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j891 
index: - 
=== Succesors ===
=== Usages ===
v905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j891 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1477 
value: v1116 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1429 
=== Usages ===
=== Predecessor ===
v902 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1477 value: v1116 stateAfter: - lastLocationAccess: - #next: a1429  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1390 v41 
=== Succesors ===
=== Usages ===
a1429 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1390 v41  <|@  <|@
f <@~|@floating>@ <|@
tid v1445 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a554 
index: i212 
=== Succesors ===
=== Usages ===
a1429 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a554 index: i212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1429 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v399 
address: v1445 
=== Succesors ===
next: v909 
=== Usages ===
v909 
=== Predecessor ===
v905 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v399 address: v1445 #next: v909  <|@  <|@
f <@~|@floating>@ <|@
tid v1505 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j891 
index: - 
=== Succesors ===
=== Usages ===
v909 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j891 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1505 
value: a1429 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v911 
=== Usages ===
=== Predecessor ===
a1429 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1505 value: a1429 stateAfter: - lastLocationAccess: - #next: v911  <|@  <|@
f <@~|@floating>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j891 
index: - 
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j891 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1506 
value: i12 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v913 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1506 value: i12 stateAfter: - lastLocationAccess: - #next: v913  <|@  <|@
f <@~|@floating>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j891 
index: - 
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j891 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a489 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a211 
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1507 
value: a489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a492 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1507 value: a489 stateAfter: - lastLocationAccess: - #next: a492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a492 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a485 
=== Succesors ===
next: v493 
=== Usages ===
a329 a211 
=== Predecessor ===
v913 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a485 #next: v493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
a492 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid v1446 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a211 
index: - 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a211 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a329 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
op: Compress
stamp: n -
=== Inputs ===
value: a492 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$Node.next
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1446 
value: a329 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j914 
=== Usages ===
=== Predecessor ===
v493 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1446 value: a329 stateAfter: - lastLocationAccess: - #next: j914  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j914 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a211 
=== Succesors ===
next: v918 
=== Usages ===
j915 
=== Predecessor ===
v331 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a211 #next: v918  <|@  <|@
f <@~|@floating>@ <|@
tid j915 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j914 
y: i791 
=== Succesors ===
=== Usages ===
v1478 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j914 y: i791  <|@  <|@
f <@~|@floating>@ <|@
tid v1478 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j915 
index: j814 
=== Succesors ===
=== Usages ===
v918 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j915 index: j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1478 
value: i919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
j914 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1478 value: i919 stateAfter: - lastLocationAccess: - #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 125]
stamp: i32
=== Inputs ===
x: i212 
y: i69 
=== Succesors ===
=== Usages ===
i212 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i212 y: i69  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:429) [bci: 121]
stamp: void
=== Inputs ===
loopBegin: v36 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v918 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v36  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B78" 
    xhandlers
    flags 
    probability 4594123467487124058
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v36 
=== Succesors ===
next: v598 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v36 #next: v598  <|@  <|@
f <@~|@floating>@ <|@
tid i673 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i674 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i674 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i32
=== Inputs ===
x: i1417 
y: i673 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1417 y: i673  <|@  <|@
f <@*|@fixed>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v43 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B85" 
    successors "B79" "B86" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4596783152798378834
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a576 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v568 
values: a211 a669 
=== Succesors ===
=== Usages ===
?569 v1454 a593 a610 j966 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v568 values: a211 a669  <|@  <|@
f <@~|@floating>@ <|@
tid i577 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v568 
values: i212 i672 
=== Succesors ===
=== Usages ===
?569 v570 i574 v1453 i611 i672 j1435 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v568 values: i212 i672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.5367195342300737
loopOrigFrequency: 3.0734390684601474
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
splits: 0
stamp: void
unrollFactor: 2
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v598 
=== Succesors ===
next: v573 
=== Usages ===
v572 v575 a576 i577 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v598 #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i577 
y: i674 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i577 y: i674  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
stamp: void
trueSuccessorProbability: 0.8353486404114796
=== Inputs ===
condition: v570 
=== Succesors ===
trueSuccessor: v571 
falseSuccessor: v572 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v570 #trueSuccessor: v571 #falseSuccessor: v572  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4595529310877515678
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: j922 
=== Usages ===
v588 
=== Predecessor ===
v573 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j922  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j922 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j937 
=== Usages ===
v1479 v1480 
=== Predecessor ===
v571 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j937  <|@  <|@
f <@~|@floating>@ <|@
tid v1479 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j922 
index: - 
=== Succesors ===
=== Usages ===
j937 v939 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j922 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j937 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1479 
=== Succesors ===
next: j938 
=== Usages ===
j1126 j943 v1508 
=== Predecessor ===
j922 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1479 #next: j938  <|@  <|@
f <@~|@floating>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j922 
index: - 
=== Succesors ===
=== Usages ===
j938 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j922 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j938 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1480 
=== Succesors ===
next: v930 
=== Usages ===
v927 
=== Predecessor ===
j937 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1480 #next: v930  <|@  <|@
f <@~|@floating>@ <|@
tid j1126 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j937 
y: j294 
=== Succesors ===
=== Usages ===
v927 v939 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j937 y: j294  <|@  <|@
f <@~|@floating>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j938 
y: j1126 
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j938 y: j1126  <|@  <|@
f <@*|@fixed>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v927 
=== Succesors ===
trueSuccessor: v928 
falseSuccessor: v929 
=== Usages ===
=== Predecessor ===
j938 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v927 #trueSuccessor: v928 #falseSuccessor: v929  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4565785274850276684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a933 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a933  <|@  <|@
tid ?569 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<LinkedList.addAll(int, Collection)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 422
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - i1417 a576 a226 a554 i1417 i577 - - - 
=== Succesors ===
=== Usages ===
a933 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - i1417 a576 a226 a554 i1417 i577 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a933 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?569 
arguments: v821 i314 i69 
=== Succesors ===
next: j934 
=== Usages ===
j934 
=== Predecessor ===
v928 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?569 arguments: v821 i314 i69 #next: j934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j934 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a933 
=== Succesors ===
next: v944 
=== Usages ===
j943 
=== Predecessor ===
a933 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a933 #next: v944  <|@  <|@
f <@*|@fixed>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v941 
=== Predecessor ===
j934 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4595465697971645875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v939 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v939  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1479 
value: j1126 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v936 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1479 value: j1126 stateAfter: - lastLocationAccess: - #next: v936  <|@  <|@
f <@~|@floating>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j937 
index: - 
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j937 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1508 
=== Succesors ===
next: v942 
=== Usages ===
=== Predecessor ===
v939 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1508 #next: v942  <|@  <|@
f <@*|@fixed>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v941 
=== Predecessor ===
v936 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4595529310877515678
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j943 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v941 
values: j937 j934 
=== Succesors ===
=== Usages ===
v1481 a590 v1482 v1509 v1510 v1511 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v941 values: j937 j934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v942 v944 
=== Succesors ===
next: a590 
=== Usages ===
j943 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v942 v944 #next: a590  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a590 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j943 
=== Succesors ===
next: j953 
=== Usages ===
a596 
=== Predecessor ===
v941 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j943 #next: j953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j953 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1491 
=== Succesors ===
next: v954 
=== Usages ===
v954 
=== Predecessor ===
a590 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1491 #next: v954  <|@  <|@
f <@~|@floating>@ <|@
tid v1481 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j943 
index: - 
=== Succesors ===
=== Usages ===
v954 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j943 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1481 
value: j953 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v957 
=== Usages ===
=== Predecessor ===
j953 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1481 value: j953 stateAfter: - lastLocationAccess: - #next: v957  <|@  <|@
f <@~|@floating>@ <|@
tid v1482 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j943 
index: - 
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j943 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1482 
value: v1116 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1430 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1482 value: v1116 stateAfter: - lastLocationAccess: - #next: a1430  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1390 v571 
=== Succesors ===
=== Usages ===
a1431 a1430 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1390 v571  <|@  <|@
f <@~|@floating>@ <|@
tid v1453 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a554 
index: i577 
=== Succesors ===
=== Usages ===
a1430 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a554 index: i577  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1430 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v588 
address: v1453 
=== Succesors ===
next: v961 
=== Usages ===
v961 
=== Predecessor ===
v957 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v588 address: v1453 #next: v961  <|@  <|@
f <@~|@floating>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j943 
index: - 
=== Succesors ===
=== Usages ===
v961 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j943 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1509 
value: a1430 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v963 
=== Usages ===
=== Predecessor ===
a1430 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1509 value: a1430 stateAfter: - lastLocationAccess: - #next: v963  <|@  <|@
f <@~|@floating>@ <|@
tid v1510 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j943 
index: - 
=== Succesors ===
=== Usages ===
v963 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j943 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1510 
value: i12 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v965 
=== Usages ===
=== Predecessor ===
v961 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1510 value: i12 stateAfter: - lastLocationAccess: - #next: v965  <|@  <|@
f <@~|@floating>@ <|@
tid v1511 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j943 
index: - 
=== Succesors ===
=== Usages ===
v965 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j943 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a593 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a576 
=== Succesors ===
=== Usages ===
v965 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1511 
value: a593 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a596 
=== Usages ===
=== Predecessor ===
v963 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1511 value: a593 stateAfter: - lastLocationAccess: - #next: a596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a596 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a590 
=== Succesors ===
next: v597 
=== Usages ===
v1458 a582 ?645 j1017 
=== Predecessor ===
v965 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a590 #next: v597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
a596 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v584  <|@  <|@
f <@~|@floating>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a576 
index: - 
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a576 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a582 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
op: Compress
stamp: n -
=== Inputs ===
value: a596 
=== Succesors ===
=== Usages ===
v584 v1016 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$Node.next
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1454 
value: a582 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j966 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1454 value: a582 stateAfter: - lastLocationAccess: - #next: j966  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j966 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a576 
=== Succesors ===
next: v970 
=== Usages ===
j967 
=== Predecessor ===
v584 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a576 #next: v970  <|@  <|@
f <@~|@floating>@ <|@
tid j967 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j966 
y: i791 
=== Succesors ===
=== Usages ===
v1483 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j966 y: i791  <|@  <|@
f <@~|@floating>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j967 
index: j814 
=== Succesors ===
=== Usages ===
v970 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j967 index: j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1483 
value: i919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j973 
=== Usages ===
=== Predecessor ===
j966 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1483 value: i919 stateAfter: - lastLocationAccess: - #next: j973  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j973 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j988 
=== Usages ===
v1484 v1485 
=== Predecessor ===
v970 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j988  <|@  <|@
f <@~|@floating>@ <|@
tid v1484 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j973 
index: - 
=== Succesors ===
=== Usages ===
j988 v990 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j973 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j988 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1484 
=== Succesors ===
next: j989 
=== Usages ===
j1132 j994 v1512 
=== Predecessor ===
j973 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1484 #next: j989  <|@  <|@
f <@~|@floating>@ <|@
tid v1485 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j973 
index: - 
=== Succesors ===
=== Usages ===
j989 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j973 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j989 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1485 
=== Succesors ===
next: v981 
=== Usages ===
v978 
=== Predecessor ===
j988 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1485 #next: v981  <|@  <|@
f <@~|@floating>@ <|@
tid j1132 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j988 
y: j294 
=== Succesors ===
=== Usages ===
v978 v990 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j988 y: j294  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j989 
y: j1132 
=== Succesors ===
=== Usages ===
v981 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j989 y: j1132  <|@  <|@
f <@*|@fixed>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v978 
=== Succesors ===
trueSuccessor: v979 
falseSuccessor: v980 
=== Usages ===
=== Predecessor ===
j989 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v978 #trueSuccessor: v979 #falseSuccessor: v980  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4565785274850276684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a984 
=== Usages ===
=== Predecessor ===
v981 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a984  <|@  <|@
f <@~|@floating>@ <|@
tid i574 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 125]
stamp: i32
=== Inputs ===
x: i577 
y: i69 
=== Succesors ===
=== Usages ===
?645 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i577 y: i69  <|@  <|@
tid ?645 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<LinkedList.addAll(int, Collection)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 422
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - i1417 a596 a226 a554 i1417 i574 - - - 
=== Succesors ===
=== Usages ===
a984 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - i1417 a596 a226 a554 i1417 i574 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a984 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?645 
arguments: v821 i314 i69 
=== Succesors ===
next: j985 
=== Usages ===
j985 
=== Predecessor ===
v979 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?645 arguments: v821 i314 i69 #next: j985  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j985 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a984 
=== Succesors ===
next: v995 
=== Usages ===
j994 
=== Predecessor ===
a984 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a984 #next: v995  <|@  <|@
f <@*|@fixed>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v992 
=== Predecessor ===
j985 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4595465697971645875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v990 
=== Usages ===
=== Predecessor ===
v981 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v990  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1484 
value: j1132 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v987 
=== Usages ===
=== Predecessor ===
v980 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1484 value: j1132 stateAfter: - lastLocationAccess: - #next: v987  <|@  <|@
f <@~|@floating>@ <|@
tid v1512 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j988 
index: - 
=== Succesors ===
=== Usages ===
v987 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j988 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1512 
=== Succesors ===
next: v993 
=== Usages ===
=== Predecessor ===
v990 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1512 #next: v993  <|@  <|@
f <@*|@fixed>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v992 
=== Predecessor ===
v987 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors "B78" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4595529310877515678
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j994 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v992 
values: j988 j985 
=== Succesors ===
=== Usages ===
v1486 a663 v1487 v1513 v1514 v1515 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v992 values: j988 j985  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v993 v995 
=== Succesors ===
next: a663 
=== Usages ===
j994 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v993 v995 #next: a663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a663 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j994 
=== Succesors ===
next: j1004 
=== Usages ===
a669 
=== Predecessor ===
v992 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j994 #next: j1004  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1004 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1491 
=== Succesors ===
next: v1005 
=== Usages ===
v1005 
=== Predecessor ===
a663 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1491 #next: v1005  <|@  <|@
f <@~|@floating>@ <|@
tid v1486 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j994 
index: - 
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j994 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1486 
value: j1004 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1008 
=== Usages ===
=== Predecessor ===
j1004 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1486 value: j1004 stateAfter: - lastLocationAccess: - #next: v1008  <|@  <|@
f <@~|@floating>@ <|@
tid v1487 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j994 
index: - 
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j994 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1487 
value: v1116 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1431 
=== Usages ===
=== Predecessor ===
v1005 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1487 value: v1116 stateAfter: - lastLocationAccess: - #next: a1431  <|@  <|@
f <@~|@floating>@ <|@
tid j1435 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i577 
=== Succesors ===
=== Usages ===
v1457 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i577  <|@  <|@
f <@~|@floating>@ <|@
tid v1457 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times4
stamp: void*
=== Inputs ===
base: a554 
index: j1435 
=== Succesors ===
=== Usages ===
a1431 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a554 index: j1435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1431 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v588 
address: v1457 
=== Succesors ===
next: v1012 
=== Usages ===
v1012 
=== Predecessor ===
v1008 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v588 address: v1457 #next: v1012  <|@  <|@
f <@~|@floating>@ <|@
tid v1513 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j994 
index: - 
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j994 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1513 
value: a1431 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1014 
=== Usages ===
=== Predecessor ===
a1431 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1513 value: a1431 stateAfter: - lastLocationAccess: - #next: v1014  <|@  <|@
f <@~|@floating>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j994 
index: - 
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j994 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1514 
value: i12 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1016 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1514 value: i12 stateAfter: - lastLocationAccess: - #next: v1016  <|@  <|@
f <@~|@floating>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j994 
index: - 
=== Succesors ===
=== Usages ===
v1016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j994 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1515 
value: a582 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a669 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1515 value: a582 stateAfter: - lastLocationAccess: - #next: a669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a669 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a663 
=== Succesors ===
next: v670 
=== Usages ===
a656 a576 
=== Predecessor ===
v1016 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a663 #next: v670  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v658 
=== Usages ===
=== Predecessor ===
a669 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v658  <|@  <|@
f <@~|@floating>@ <|@
tid v1458 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a596 
index: - 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a596 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a656 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
op: Compress
stamp: n -
=== Inputs ===
value: a669 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$Node.next
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1458 
value: a656 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1017 
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1458 value: a656 stateAfter: - lastLocationAccess: - #next: j1017  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1017 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a596 
=== Succesors ===
next: v1021 
=== Usages ===
j1018 
=== Predecessor ===
v658 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a596 #next: v1021  <|@  <|@
f <@~|@floating>@ <|@
tid j1018 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1017 
y: i791 
=== Succesors ===
=== Usages ===
v1488 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1017 y: i791  <|@  <|@
f <@~|@floating>@ <|@
tid v1488 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1018 
index: j814 
=== Succesors ===
=== Usages ===
v1021 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1018 index: j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1488 
value: i919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v575 
=== Usages ===
=== Predecessor ===
j1017 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1488 value: i919 stateAfter: - lastLocationAccess: - #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid i672 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 125]
stamp: i32
=== Inputs ===
x: i577 
y: i314 
=== Succesors ===
=== Usages ===
i577 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i577 y: i314  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:429) [bci: 121]
stamp: void
=== Inputs ===
loopBegin: v568 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v568  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    probability 4585176188719247058
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v568 
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v568 #next: v632  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v602 
=== Predecessor ===
v572 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B91" 
    successors "B88" "B92" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4594275468956652522
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a610 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v602 
values: a576 a630 
=== Succesors ===
=== Usages ===
?603 v1456 a500 a210 j1068 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v602 values: a576 a630  <|@  <|@
f <@~|@floating>@ <|@
tid i611 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v602 
values: i577 i608 
=== Succesors ===
=== Usages ===
?603 v604 i608 v1455 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v602 values: i577 i608  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.073439068460147
loopOrigFrequency: 5.073439068460147
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v632 
=== Succesors ===
next: v607 
=== Usages ===
v606 v609 a610 i611 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v632 #next: v607  <|@  <|@
f <@~|@floating>@ <|@
tid a500 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:436) [bci: 156]
op: Compress
stamp: n!# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a610 
=== Succesors ===
=== Usages ===
a501 v1067 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a610  <|@  <|@
f <@~|@floating>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i611 
y: i1417 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i611 y: i1417  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
stamp: void
trueSuccessorProbability: 0.8353486404114796
=== Inputs ===
condition: v604 
=== Succesors ===
trueSuccessor: v605 
falseSuccessor: v606 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v604 #trueSuccessor: v605 #falseSuccessor: v606  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4593197421261589614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1024 
=== Usages ===
v622 
=== Predecessor ===
v607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1024  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1024 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1039 
=== Usages ===
v1489 v1490 
=== Predecessor ===
v605 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1039  <|@  <|@
f <@~|@floating>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1024 
index: - 
=== Succesors ===
=== Usages ===
j1039 v1041 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1024 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1039 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1489 
=== Succesors ===
next: j1040 
=== Usages ===
j1138 j1045 v1516 
=== Predecessor ===
j1024 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1489 #next: j1040  <|@  <|@
f <@~|@floating>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1024 
index: - 
=== Succesors ===
=== Usages ===
j1040 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1024 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1040 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1490 
=== Succesors ===
next: v1032 
=== Usages ===
v1029 
=== Predecessor ===
j1039 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1490 #next: v1032  <|@  <|@
f <@~|@floating>@ <|@
tid j1138 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1039 
y: j294 
=== Succesors ===
=== Usages ===
v1029 v1041 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1039 y: j294  <|@  <|@
f <@~|@floating>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1040 
y: j1138 
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1040 y: j1138  <|@  <|@
f <@*|@fixed>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1029 
=== Succesors ===
trueSuccessor: v1030 
falseSuccessor: v1031 
=== Usages ===
=== Predecessor ===
j1040 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1029 #trueSuccessor: v1030 #falseSuccessor: v1031  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4563103943281933756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1035 
=== Usages ===
=== Predecessor ===
v1032 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1035  <|@  <|@
tid ?603 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<LinkedList.addAll(int, Collection)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 422
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - i1417 a610 a226 a554 i1417 i611 - - - 
=== Succesors ===
=== Usages ===
a1035 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - i1417 a610 a226 a554 i1417 i611 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1035 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?603 
arguments: v821 i314 i69 
=== Succesors ===
next: j1036 
=== Usages ===
j1036 
=== Predecessor ===
v1030 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?603 arguments: v821 i314 i69 #next: j1036  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1036 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1035 
=== Succesors ===
next: v1046 
=== Usages ===
j1045 
=== Predecessor ===
a1035 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1035 #next: v1046  <|@  <|@
f <@*|@fixed>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1043 
=== Predecessor ===
j1036 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4593112091255605367
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1041 
=== Usages ===
=== Predecessor ===
v1032 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1041  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1489 
value: j1138 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1038 
=== Usages ===
=== Predecessor ===
v1031 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1489 value: j1138 stateAfter: - lastLocationAccess: - #next: v1038  <|@  <|@
f <@~|@floating>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1039 
index: - 
=== Succesors ===
=== Usages ===
v1038 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1039 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1516 
=== Succesors ===
next: v1044 
=== Usages ===
=== Predecessor ===
v1041 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1516 #next: v1044  <|@  <|@
f <@*|@fixed>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1043 
=== Predecessor ===
v1038 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B87" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4593197421261589614
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1045 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1043 
values: j1039 j1036 
=== Succesors ===
=== Usages ===
v1492 a624 v1493 v1517 v1518 v1519 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1043 values: j1039 j1036  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1044 v1046 
=== Succesors ===
next: a624 
=== Usages ===
j1045 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1044 v1046 #next: a624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a624 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1045 
=== Succesors ===
next: j1055 
=== Usages ===
a630 
=== Predecessor ===
v1043 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1045 #next: j1055  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1055 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1491 
=== Succesors ===
next: v1056 
=== Usages ===
v1056 
=== Predecessor ===
a624 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1491 #next: v1056  <|@  <|@
f <@~|@floating>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1045 
index: - 
=== Succesors ===
=== Usages ===
v1056 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1045 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1492 
value: j1055 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1059 
=== Usages ===
=== Predecessor ===
j1055 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1492 value: j1055 stateAfter: - lastLocationAccess: - #next: v1059  <|@  <|@
f <@~|@floating>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1045 
index: - 
=== Succesors ===
=== Usages ===
v1059 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1045 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1493 
value: v1116 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1432 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1493 value: v1116 stateAfter: - lastLocationAccess: - #next: a1432  <|@  <|@
f <@~|@floating>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1390 v605 
=== Succesors ===
=== Usages ===
a1432 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1390 v605  <|@  <|@
f <@~|@floating>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a554 
index: i611 
=== Succesors ===
=== Usages ===
a1432 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a554 index: i611  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1432 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v622 
address: v1455 
=== Succesors ===
next: v1063 
=== Usages ===
v1063 
=== Predecessor ===
v1059 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v622 address: v1455 #next: v1063  <|@  <|@
f <@~|@floating>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1045 
index: - 
=== Succesors ===
=== Usages ===
v1063 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1045 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1517 
value: a1432 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1065 
=== Usages ===
=== Predecessor ===
a1432 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1517 value: a1432 stateAfter: - lastLocationAccess: - #next: v1065  <|@  <|@
f <@~|@floating>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1045 
index: - 
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1045 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1518 
value: i12 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1067 
=== Usages ===
=== Predecessor ===
v1063 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1518 value: i12 stateAfter: - lastLocationAccess: - #next: v1067  <|@  <|@
f <@~|@floating>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j1045 
index: - 
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1045 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1519 
value: a500 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a630 
=== Usages ===
=== Predecessor ===
v1065 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1519 value: a500 stateAfter: - lastLocationAccess: - #next: a630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a630 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a624 
=== Succesors ===
next: v631 
=== Usages ===
a610 a616 
=== Predecessor ===
v1067 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a624 #next: v631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
a630 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v618  <|@  <|@
f <@~|@floating>@ <|@
tid v1456 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a610 
index: - 
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a610 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a616 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
op: Compress
stamp: n -
=== Inputs ===
value: a630 
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$Node.next
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1456 
value: a616 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1068 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1456 value: a616 stateAfter: - lastLocationAccess: - #next: j1068  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1068 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a610 
=== Succesors ===
next: v1072 
=== Usages ===
j1069 
=== Predecessor ===
v618 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a610 #next: v1072  <|@  <|@
f <@~|@floating>@ <|@
tid j1069 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1068 
y: i791 
=== Succesors ===
=== Usages ===
v1494 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1068 y: i791  <|@  <|@
f <@~|@floating>@ <|@
tid v1494 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1069 
index: j814 
=== Succesors ===
=== Usages ===
v1072 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1069 index: j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1494 
value: i919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
j1068 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1494 value: i919 stateAfter: - lastLocationAccess: - #next: v609  <|@  <|@
f <@~|@floating>@ <|@
tid i608 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 125]
stamp: i32
=== Inputs ===
x: i611 
y: i69 
=== Succesors ===
=== Usages ===
i611 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i611 y: i69  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:429) [bci: 121]
stamp: void
=== Inputs ===
loopBegin: v602 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1072 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v602  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B93" 
    xhandlers
    flags 
    probability 4582384808343661977
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v602 
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v602 #next: v207  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
v606 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B59" 
    successors "B94" "B96" 
    xhandlers
    flags 
    probability 4586016110657813278
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a210 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v206 
values: a610 a303 
=== Succesors ===
=== Usages ===
v1448 j1089 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v206 values: a610 a303  <|@  <|@
f <@~|@floating>@ <|@
tid a227 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v206 
values: a226 a172 
=== Succesors ===
=== Usages ===
?45 a341 j1096 v72 v1449 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v206 values: a226 a172  <|@  <|@
f <@~|@floating>@ <|@
tid a501 <|@
d <@d|@=== Debug Properties ===
stamp: n# Ljava/util/LinkedList$Node;
valueDescription: n -
=== Inputs ===
merge: v206 
values: a500 a1427 
=== Succesors ===
=== Usages ===
v348 a499 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v206 values: a500 a1427  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v207 v208 
=== Succesors ===
next: v75 
=== Usages ===
a210 a227 a501 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v207 v208 #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 133]
stamp: void
=== Inputs ===
value: a227 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a227  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 133]
stamp: void
trueSuccessorProbability: 0.8950010038144951
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v73 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v73 #falseSuccessor: v74  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" 
    xhandlers
    flags 
    probability 4585401311125125895
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:433) [bci: 136]
stamp: void
=== Inputs ===
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v255  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v254 
=== Predecessor ===
v73 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B49" 
    successors 
    xhandlers
    flags 
    probability 4595787459187779582
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a499 <|@
d <@d|@=== Debug Properties ===
stamp: n# Ljava/util/LinkedList$Node;
valueDescription: n -
=== Inputs ===
merge: v254 
values: a501 a1424 
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v254 values: a501 a1424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v255 v257 
=== Succesors ===
next: v354 
=== Usages ===
a499 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v255 v257 #next: v354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:433) [bci: 139]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1441 
value: a499 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1103 
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1441 value: a499 stateAfter: - lastLocationAccess: - #next: j1103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:433) [bci: 139]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v1107 
=== Usages ===
j1104 
=== Predecessor ===
v354 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v1107  <|@  <|@
f <@~|@floating>@ <|@
tid j1104 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:433) [bci: 139]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1103 
y: i791 
=== Succesors ===
=== Usages ===
v1499 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1103 y: i791  <|@  <|@
f <@~|@floating>@ <|@
tid v1499 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1104 
index: j814 
=== Succesors ===
=== Usages ===
v1107 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1104 index: j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1107 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:433) [bci: 139]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1499 
value: i919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
j1103 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1499 value: i919 stateAfter: - lastLocationAccess: - #next: v355  <|@  <|@
f <@~|@floating>@ <|@
tid i1406 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:439) [bci: 166]
stamp: i32
=== Inputs ===
x: i1415 
y: i1417 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1415 y: i1417  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:439) [bci: 167]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1437 
value: i1406 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1433 
=== Usages ===
=== Predecessor ===
v1107 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1437 value: i1406 stateAfter: - lastLocationAccess: - #next: i1433  <|@  <|@
f <@~|@floating>@ <|@
tid v1450 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v357 i1433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1433 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:440) [bci: 172]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1450 
=== Succesors ===
next: v357 
=== Usages ===
i1408 
=== Predecessor ===
v355 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1450 #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid i1408 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:440) [bci: 176]
stamp: i32
=== Inputs ===
x: i1433 
y: i69 
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1433 y: i69  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:440) [bci: 177]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1450 
value: i1408 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v242 
=== Usages ===
=== Predecessor ===
i1433 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1450 value: i1408 stateAfter: - lastLocationAccess: - #next: v242  <|@  <|@
f <@*|@fixed>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:441) [bci: 181]
stamp: void
=== Inputs ===
result: i69 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i69 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors 
    xhandlers
    flags 
    probability 4571568418415182010
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:435) [bci: 145]
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
tid ?45 <|@
d <@d|@=== Debug Properties ===
bci: 131
code: ResolvedJavaMethodBytecode<LinkedList.addAll(int, Collection)>
duringCall: false
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 432
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - i1417 a20 a227 - - - - - - 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - i1417 a20 a227 - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1448 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a210 
index: - 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a210 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a341 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:435) [bci: 149]
op: Compress
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a227 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$Node.next
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:435) [bci: 149]
nullCheck: true
stamp: void
=== Inputs ===
stateBefore: ?45 
guard: - 
address: v1448 
value: a341 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1089 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: ?45 guard: - address: v1448 value: a341 stateAfter: - lastLocationAccess: - #next: j1089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1089 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:435) [bci: 149]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a210 
=== Succesors ===
next: v1093 
=== Usages ===
j1090 
=== Predecessor ===
v343 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a210 #next: v1093  <|@  <|@
f <@~|@floating>@ <|@
tid j1090 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:435) [bci: 149]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1089 
y: i791 
=== Succesors ===
=== Usages ===
v1497 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1089 y: i791  <|@  <|@
f <@~|@floating>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1090 
index: j814 
=== Succesors ===
=== Usages ===
v1093 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1090 index: j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:435) [bci: 149]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1497 
value: i919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
j1089 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1497 value: i919 stateAfter: - lastLocationAccess: - #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid v1449 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a227 
index: - 
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a227 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$Node.prev
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:436) [bci: 156]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1449 
value: a501 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1096 
=== Usages ===
=== Predecessor ===
v1093 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1449 value: a501 stateAfter: - lastLocationAccess: - #next: j1096  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1096 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:436) [bci: 156]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a227 
=== Succesors ===
next: v1100 
=== Usages ===
j1097 
=== Predecessor ===
v348 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a227 #next: v1100  <|@  <|@
f <@~|@floating>@ <|@
tid j1097 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:436) [bci: 156]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1096 
y: i791 
=== Succesors ===
=== Usages ===
v1498 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1096 y: i791  <|@  <|@
f <@~|@floating>@ <|@
tid v1498 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1097 
index: j814 
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1097 index: j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:436) [bci: 156]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1498 
value: i919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
j1096 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1498 value: i919 stateAfter: - lastLocationAccess: - #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:439) [bci: 166]
stamp: i32
=== Inputs ===
x: i1415 
y: i1417 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1415 y: i1417  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:439) [bci: 167]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1437 
value: i88 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1434 
=== Usages ===
=== Predecessor ===
v1100 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1437 value: i88 stateAfter: - lastLocationAccess: - #next: i1434  <|@  <|@
f <@~|@floating>@ <|@
tid v1534 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v352 i1434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1434 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:440) [bci: 172]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1534 
=== Succesors ===
next: v352 
=== Usages ===
i92 
=== Predecessor ===
v349 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1534 #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:440) [bci: 176]
stamp: i32
=== Inputs ===
x: i1434 
y: i69 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1434 y: i69  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:440) [bci: 177]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1534 
value: i92 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
i1434 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1534 value: i92 stateAfter: - lastLocationAccess: - #next: v95  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:441) [bci: 181]
stamp: void
=== Inputs ===
result: i69 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i69 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v445  <|@  <|@
tid a198 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@5c0bbe7a
hasIdentity: true
objectId: 0
stamp: a!# Ljava/util/LinkedList$Node;
type: HotSpotType<Ljava/util/LinkedList$Node;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?248 ?203 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?248 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a198 
materializedValue: a481 
=== Succesors ===
=== Usages ===
?203 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a198 materializedValue: a481  <|@  <|@
tid ?203 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<LinkedList.addAll(int, Collection)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 422
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - i1417 a198 a226 a554 i1417 i69 - - - 
virtualObjectMappings: ?248 
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - i1417 a198 a226 a554 i1417 i69 - - - virtualObjectMappings: ?248  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 321
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
reason: BoundsCheckException
speculation: Object[d.a@1129090812]
stamp: void
=== Inputs ===
stateBefore: ?203 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1401 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?203  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v812 
=== Usages ===
=== Predecessor ===
v810 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v812  <|@  <|@
f <@~|@floating>@ <|@
tid j806 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
=== Inputs ===
x: j804 
y: j805 
=== Succesors ===
=== Usages ===
j804 j811 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j804 y: j805  <|@  <|@
f <@~|@floating>@ <|@
tid j815 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64 [4431593472 - 36028801450557439] ⇈00ffffffffffffff
=== Inputs ===
x: j793 
y: j814 
=== Succesors ===
=== Usages ===
j811 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j793 y: j814  <|@  <|@
f <@~|@floating>@ <|@
tid j811 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
=== Inputs ===
x: j806 
y: j815 
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j806 y: j815  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
address: j811 
value: i12 
=== Succesors ===
next: v813 
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j811 value: i12 #next: v813  <|@  <|@
f <@*|@fixed>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
loopBegin: v803 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v803  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1170 
=== Usages ===
=== Predecessor ===
v1172 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1170  <|@  <|@
f <@*|@fixed>@ <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1165 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1171 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1165  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=toArray target_method_class=Ljava/util/ArrayList; position=at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v684  <|@  <|@
f <@~|@floating>@ <|@
tid i685 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -71219
stableDimension: 0
stamp: i32 [-71219] ⇊00000000fffee9cd ⇈00000000fffee9cd
stampKind: i32
value: int[-71219|0xfffffffffffee9cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v414 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B2" "B100" "B4" "B6" "B56" "B54" "B8" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i679 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-132705 - -69651] ⇊00000000fffcc085
valueDescription: i32
=== Inputs ===
merge: v676 
values: i683 i685 i687 i691 i693 i695 i697 
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v676 values: i683 i685 i687 i691 i693 i695 i697  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v682 v684 v686 v690 v692 v694 v696 
=== Succesors ===
next: v681 
=== Usages ===
i679 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v682 v684 v686 v690 v692 v694 v696 #next: v681  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i679 
speculation: a20 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i679 speculation: a20  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B100" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1414 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1414  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/LinkedList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?45 v1437 v1450 ?203 v1441 v1443 ?39 ?569 ?603 ?645 j1075 j1103 v1534 v1535 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v121 v124 v169 v16 v155 v166 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a -
uncheckedStamp: a Ljava/util/Collection;
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v1439 v1459 v1438 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<LinkedList.addAll(int, Collection)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 406
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v681 a835 a747 v1414 v1533 a1427 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 - - - - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1459 <|@
result [v2|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v1414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1414 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1459 
=== Succesors ===
next: v415 
=== Usages ===
v1111 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1459 #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v1110 <|@
result meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1111 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1111 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1414 
y: v1110 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1414 y: v1110  <|@  <|@
f <@~|@floating>@ <|@
tid a20 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:415) [bci: 31]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a226 v681 ?45 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=toArray target_method_class=Ljava/util/ArrayList; position=at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1111 
=== Succesors ===
trueSuccessor: v412 
falseSuccessor: v414 
=== Usages ===
=== Predecessor ===
v1414 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1111 #trueSuccessor: v412 #falseSuccessor: v414  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1f4b6c53 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction CMP [v2|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=toArray target_method_class=Ljava/util/ArrayList; position=at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:410) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 v121 v506 v1065 a747 v1014 v812 v867 v911 v963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 1]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i12 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 1]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v418 
falseSuccessor: v416 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v418 #falseSuccessor: v416  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 1]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v682 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v682  <|@  <|@
f <@~|@floating>@ <|@
tid i683 <|@
result int[-69651|0xfffffffffffeefed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -69651
stableDimension: 0
stamp: i32 [-69651] ⇊00000000fffeefed ⇈00000000fffeefed
stampKind: i32
value: int[-69651|0xfffffffffffeefed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v418 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-69651|0xfffffffffffeefed]] destination: B2 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 1]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1415 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1415  <|@  <|@
f <@~|@floating>@ <|@
tid v1437 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1415 v349 v355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1415 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 6]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1437 
=== Succesors ===
next: v423 
=== Usages ===
v124 v16 i154 i165 i88 i1406 
=== Predecessor ===
v416 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1437 #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1415 
y: i2 
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1415 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v124 
=== Succesors ===
trueSuccessor: v422 
falseSuccessor: v420 
=== Usages ===
=== Predecessor ===
i1415 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v124 #trueSuccessor: v422 #falseSuccessor: v420  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v686  <|@  <|@
f <@~|@floating>@ <|@
tid i687 <|@
result int[-70675|0xfffffffffffeebed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -70675
stableDimension: 0
stamp: i32 [-70675] ⇊00000000fffeebed ⇈00000000fffeebed
stampKind: i32
value: int[-70675|0xfffffffffffeebed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v422 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-70675|0xfffffffffffeebed]] destination: B4 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1416 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1416  <|@  <|@
f <@~|@floating>@ <|@
tid v1438 <|@
result [v2|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a1416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1416 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1438 
=== Succesors ===
next: v1533 
=== Usages ===
v1460 v1533 v1440 v1451 
=== Predecessor ===
v420 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1438 #next: v1533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a1416 
=== Succesors ===
next: i1417 
=== Usages ===
=== Predecessor ===
a1416 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a1416 #next: i1417  <|@  <|@
f <@~|@floating>@ <|@
tid v1439 <|@
result [v2|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1417 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1439 
=== Succesors ===
next: v431 
=== Usages ===
j1146 v13 i731 i548 ?39 ?45 ?203 ?39 v401 v213 i1406 v405 i642 ?203 i88 i387 v506 v522 v775 ?569 ?569 v604 ?603 ?603 v640 ?645 ?645 i674 a747 i1407 
=== Predecessor ===
v1533 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1439 #next: v431  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:410) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1417 
y: i12 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1417 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:410) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v430 
falseSuccessor: v428 
=== Usages ===
=== Predecessor ===
i1417 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v430 #falseSuccessor: v428  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v4|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:410) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v690 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v690  <|@  <|@
f <@~|@floating>@ <|@
tid i691 <|@
result int[-75027|0xfffffffffffedaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -75027
stableDimension: 0
stamp: i32 [-75027] ⇊00000000fffedaed ⇈00000000fffedaed
stampKind: i32
value: int[-75027|0xfffffffffffedaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-75027|0xfffffffffffedaed]] destination: B6 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:410) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v512 
=== Usages ===
a1428 
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v512  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1417 
y: i12 
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1417 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v506 
=== Succesors ===
trueSuccessor: v511 
falseSuccessor: v507 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v506 #trueSuccessor: v511 #falseSuccessor: v507  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v696  <|@  <|@
f <@~|@floating>@ <|@
tid i697 <|@
result int[-132705|0xfffffffffffdf99f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -132705
stableDimension: 0
stamp: i32 [-132705] ⇊00000000fffdf99f ⇈00000000fffdf99f
stampKind: i32
value: int[-132705|0xfffffffffffdf99f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v511 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-132705|0xfffffffffffdf99f]] destination: B8 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: j734 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j734  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j734 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j772 
=== Usages ===
v1461 v1462 
=== Predecessor ===
v507 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j772  <|@  <|@
f <@~|@floating>@ <|@
tid v1461 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j734 
index: - 
=== Succesors ===
=== Usages ===
j772 v774 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j734 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j772 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1461 
=== Succesors ===
next: j773 
=== Usages ===
j738 v1463 v1464 a746 v1469 v1465 v1466 v1467 v1468 
=== Predecessor ===
j734 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1461 #next: j773  <|@  <|@
f <@~|@floating>@ <|@
tid v1462 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j734 
index: - 
=== Succesors ===
=== Usages ===
j773 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j734 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j773 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1462 
=== Succesors ===
next: v1418 
=== Usages ===
v739 
=== Predecessor ===
j772 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1462 #next: v1418  <|@  <|@
f <@~|@floating>@ <|@
tid v1460 <|@
result [v4|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1416 
=== Succesors ===
=== Usages ===
v1418 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1416  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1418 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1460 
=== Succesors ===
next: v742 
=== Usages ===
v716 v779 
=== Predecessor ===
j773 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1460 #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid i314 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a933 a984 v405 a881 a1035 i642 a835 i672 i731 i796 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i731 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i1417 
y: i314 
=== Succesors ===
=== Usages ===
i755 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1417 y: i314  <|@  <|@
f <@~|@floating>@ <|@
tid i754 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i755 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i755 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i731 
y: i754 
=== Succesors ===
=== Usages ===
i733 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i731 y: i754  <|@  <|@
f <@~|@floating>@ <|@
tid i732 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i733 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i733 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i755 
y: i732 
=== Succesors ===
=== Usages ===
j737 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i755 y: i732  <|@  <|@
f <@~|@floating>@ <|@
tid j737 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i733 
=== Succesors ===
=== Usages ===
j738 v1465 v1466 v1467 v1468 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i733  <|@  <|@
f <@~|@floating>@ <|@
tid j738 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
=== Inputs ===
x: j737 
y: j772 
=== Succesors ===
=== Usages ===
v739 v774 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j737 y: j772  <|@  <|@
f <@~|@floating>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j773 
y: j738 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j773 y: j738  <|@  <|@
f <@~|@floating>@ <|@
tid j718 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v776 j801 v807 v1157 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v739 
=== Succesors ===
trueSuccessor: v740 
falseSuccessor: v741 
=== Usages ===
=== Predecessor ===
v1418 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v739 #trueSuccessor: v740 #falseSuccessor: v741  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v4|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHL v5|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v9|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = AND v10|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a747 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a747  <|@  <|@
f <@~|@floating>@ <|@
tid v716 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1418 
=== Succesors ===
=== Usages ===
a747 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1418  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a747 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
arguments: v716 i1417 i12 
=== Succesors ===
next: v750 
=== Usages ===
a751 
=== Predecessor ===
v740 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 arguments: v716 i1417 i12 #next: v750  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
a747 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v774 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v774  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1461 
value: j738 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v759 
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1461 value: j738 stateAfter: - lastLocationAccess: - #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid v1465 <|@
result [v12|QWORD + v6|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j737 
index: j772 
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
address: v1465 
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v774 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1465 #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid v1466 <|@
result [v12|QWORD + v6|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j737 
index: j772 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
address: v1466 
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1466 #next: v765  <|@  <|@
f <@~|@floating>@ <|@
tid v1467 <|@
result [v12|QWORD + v6|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j737 
index: j772 
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
address: v1467 
=== Succesors ===
next: v768 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1467 #next: v768  <|@  <|@
f <@~|@floating>@ <|@
tid v1468 <|@
result [v12|QWORD + v6|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j737 
index: j772 
=== Succesors ===
=== Usages ===
v768 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j737 index: j772  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
address: v1468 
=== Succesors ===
next: v775 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1468 #next: v775  <|@  <|@
f <@~|@floating>@ <|@
tid v1463 <|@
result [v6|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1463 
value: i1417 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v776 
=== Usages ===
=== Predecessor ===
v768 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1463 value: i1417 stateAfter: - lastLocationAccess: - #next: v776  <|@  <|@
f <@~|@floating>@ <|@
tid v1464 <|@
result [v6|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v776 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1464 
value: j718 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v779 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1464 value: j718 stateAfter: - lastLocationAccess: - #next: v779  <|@  <|@
f <@~|@floating>@ <|@
tid v1469 <|@
result [v6|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j772 
index: - 
=== Succesors ===
=== Usages ===
v779 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j772 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1469 
value: v1418 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v776 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1469 value: v1418 stateAfter: - lastLocationAccess: - #next: v745  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a746 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a746 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j772 
=== Succesors ===
next: v748 
=== Usages ===
a751 
=== Predecessor ===
v745 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j772 #next: v748  <|@  <|@
f <@*|@fixed>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
a746 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v12|QWORD + v6|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v12|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v12|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v12|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 8], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a751 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v749 
values: a746 a747 
=== Succesors ===
=== Usages ===
v1520 a554 v1452 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v749 values: a746 a747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v748 v750 
=== Succesors ===
next: v1268 
=== Usages ===
a751 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v748 v750 #next: v1268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: i1419 
=== Usages ===
j1269 j1271 
=== Predecessor ===
v749 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: i1419  <|@  <|@
f <@~|@floating>@ <|@
tid v1440 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1416 
=== Succesors ===
=== Usages ===
i1419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1416  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1419 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1440 
=== Succesors ===
next: v1160 
=== Usages ===
i548 v522 
=== Predecessor ===
v1268 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1440 #next: v1160  <|@  <|@
f <@~|@floating>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:174) [bci: 19]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1419 
y: i1417 
=== Succesors ===
=== Usages ===
i548 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1419 y: i1417  <|@  <|@
f <@~|@floating>@ <|@
tid i548 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v522 
trueValue: i1419 
falseValue: i1417 
=== Succesors ===
=== Usages ===
j1147 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v522 trueValue: i1419 falseValue: i1417  <|@  <|@
f <@~|@floating>@ <|@
tid j1147 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i548 
=== Succesors ===
=== Usages ===
j1320 v1520 j1151 v1157 v1265 j1307 j1313 j1317 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i548  <|@  <|@
f <@~|@floating>@ <|@
tid v1157 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1147 
y: j718 
=== Succesors ===
=== Usages ===
v1160 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1147 y: j718  <|@  <|@
f <@~|@floating>@ <|@
tid v1452 <|@
result [v17|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a751 
index: - 
=== Succesors ===
=== Usages ===
j1271 j794 j792 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a751 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j805 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j806 j1320 j1362 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1288 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1289 j1338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1316 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1317 j1359 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1274 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1297 j1344 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1312 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1313 j1356 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j710 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1350 j1305 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1306 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1307 j1351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j471 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1290 v1352 j1298 j1345 v1308 j1339 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1157 
=== Succesors ===
trueSuccessor: v1158 
falseSuccessor: v1159 
=== Usages ===
=== Predecessor ===
i1419 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1157 #trueSuccessor: v1158 #falseSuccessor: v1159  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v18|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD v19|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v20|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1177 
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1177  <|@  <|@
f <@*|@fixed>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1178 
=== Predecessor ===
v1158 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1163 
=== Usages ===
=== Predecessor ===
v1160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1163  <|@  <|@
f <@~|@floating>@ <|@
tid j1307 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1147 
y: j1306 
=== Succesors ===
=== Usages ===
v1308 v1310 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1147 y: j1306  <|@  <|@
f <@~|@floating>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1307 
y: j471 
=== Succesors ===
=== Usages ===
v1163 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1307 y: j471  <|@  <|@
f <@~|@floating>@ <|@
tid j1271 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1268 
address: v1452 
=== Succesors ===
=== Usages ===
v1521 v1523 v1525 v1527 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1268 address: v1452  <|@  <|@
f <@~|@floating>@ <|@
tid v1451 <|@
result [v4|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1416 
=== Succesors ===
=== Usages ===
j1269 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1416  <|@  <|@
f <@~|@floating>@ <|@
tid j1269 <|@
result v23|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1268 
address: v1451 
=== Succesors ===
=== Usages ===
v1522 v1524 v1526 v1528 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1268 address: v1451  <|@  <|@
f <@*|@fixed>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1308 
=== Succesors ===
trueSuccessor: v1161 
falseSuccessor: v1162 
=== Usages ===
=== Predecessor ===
v1159 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1308 #trueSuccessor: v1161 #falseSuccessor: v1162  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = LEA [v20|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = LEA [v17|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = LEA [v4|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|QWORD, y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1173 
=== Usages ===
=== Predecessor ===
v1163 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1173  <|@  <|@
f <@*|@fixed>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1174 
=== Predecessor ===
v1161 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1162 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1164 
=== Usages ===
=== Predecessor ===
v1163 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1164  <|@  <|@
f <@*|@fixed>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1165 
=== Predecessor ===
v1162 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B99" 
    successors "B18" "B99" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1298 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1165 
values: j471 j1305 
=== Succesors ===
=== Usages ===
v1528 j1305 v1527 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1165 values: j471 j1305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1164 
=== Succesors ===
next: v1420 
=== Usages ===
v1420 v1169 v1170 j1298 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1164 #next: v1420  <|@  <|@
f <@~|@floating>@ <|@
tid v1528 <|@
result [v23|QWORD[*] + v24|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1269 
index: j1298 
=== Succesors ===
=== Usages ===
v1420 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1269 index: j1298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1420 <|@
result v25|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v1165 
address: v1528 
=== Succesors ===
next: v1377 
=== Usages ===
v1377 
=== Predecessor ===
v1165 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1165 address: v1528 #next: v1377  <|@  <|@
f <@~|@floating>@ <|@
tid v1527 <|@
result [v22|QWORD[.] + v24|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1271 
index: j1298 
=== Succesors ===
=== Usages ===
v1377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1271 index: j1298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1377 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1527 
value: v1420 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1172 
=== Usages ===
=== Predecessor ===
v1420 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1527 value: v1420 stateAfter: - lastLocationAccess: - #next: v1172  <|@  <|@
f <@~|@floating>@ <|@
tid j1305 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1298 
y: j710 
=== Succesors ===
=== Usages ===
j1290 j1298 v1310 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1298 y: j710  <|@  <|@
f <@~|@floating>@ <|@
tid v1310 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1307 
y: j1305 
=== Succesors ===
=== Usages ===
v1172 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1307 y: j1305  <|@  <|@
f <@*|@fixed>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1310 
=== Succesors ===
trueSuccessor: v1169 
falseSuccessor: v1171 
=== Usages ===
=== Predecessor ===
v1377 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1310 #trueSuccessor: v1169 #falseSuccessor: v1171  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|V256_DWORD[........] = H [v23|QWORD[*] + v24|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v24|QWORD * 4], input: v25|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v24|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|QWORD, y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1165 
=== Succesors ===
next: v1175 
=== Usages ===
=== Predecessor ===
v1172 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1165 #next: v1175  <|@  <|@
f <@*|@fixed>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1174 
=== Predecessor ===
v1169 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1290 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1174 
values: j471 j1305 
=== Succesors ===
=== Usages ===
v1526 j1297 j1281 v1314 v1525 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1174 values: j471 j1305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1173 v1175 
=== Succesors ===
next: v1193 
=== Usages ===
j1290 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1173 v1175 #next: v1193  <|@  <|@
f <@~|@floating>@ <|@
tid j1313 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1147 
y: j1312 
=== Succesors ===
=== Usages ===
v1314 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1147 y: j1312  <|@  <|@
f <@~|@floating>@ <|@
tid v1314 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1313 
y: j1290 
=== Succesors ===
=== Usages ===
v1193 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1313 y: j1290  <|@  <|@
f <@*|@fixed>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1314 
=== Succesors ===
trueSuccessor: v1192 
falseSuccessor: v1191 
=== Usages ===
=== Predecessor ===
v1174 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1314 #trueSuccessor: v1192 #falseSuccessor: v1191  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v20|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1196 
=== Usages ===
=== Predecessor ===
v1193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1196  <|@  <|@
f <@*|@fixed>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1185 
=== Predecessor ===
v1192 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1191 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1421 
=== Usages ===
v1421 
=== Predecessor ===
v1193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1421  <|@  <|@
f <@~|@floating>@ <|@
tid v1526 <|@
result [v23|QWORD[*] + v27|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1269 
index: j1290 
=== Succesors ===
=== Usages ===
v1421 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1269 index: j1290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1421 <|@
result v29|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v1191 
address: v1526 
=== Succesors ===
next: v1375 
=== Usages ===
v1375 
=== Predecessor ===
v1191 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1191 address: v1526 #next: v1375  <|@  <|@
f <@~|@floating>@ <|@
tid v1525 <|@
result [v22|QWORD[.] + v27|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1271 
index: j1290 
=== Succesors ===
=== Usages ===
v1375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1271 index: j1290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1525 
value: v1421 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1184 
=== Usages ===
=== Predecessor ===
v1421 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1525 value: v1421 stateAfter: - lastLocationAccess: - #next: v1184  <|@  <|@
f <@~|@floating>@ <|@
tid j1297 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1290 
y: j1274 
=== Succesors ===
=== Usages ===
j1281 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1290 y: j1274  <|@  <|@
f <@*|@fixed>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1185 
=== Predecessor ===
v1375 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|V128_DWORD[....] = H [v23|QWORD[*] + v27|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v27|QWORD * 4], input: v29|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v27|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1281 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1185 
values: j1297 j1290 
=== Succesors ===
=== Usages ===
v1524 j1289 j1272 v1318 v1523 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1185 values: j1297 j1290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1184 v1196 
=== Succesors ===
next: v1199 
=== Usages ===
j1281 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1184 v1196 #next: v1199  <|@  <|@
f <@~|@floating>@ <|@
tid j1317 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1147 
y: j1316 
=== Succesors ===
=== Usages ===
v1318 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1147 y: j1316  <|@  <|@
f <@~|@floating>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1317 
y: j1281 
=== Succesors ===
=== Usages ===
v1199 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1317 y: j1281  <|@  <|@
f <@*|@fixed>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1318 
=== Succesors ===
trueSuccessor: v1198 
falseSuccessor: v1197 
=== Usages ===
=== Predecessor ===
v1185 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1318 #trueSuccessor: v1198 #falseSuccessor: v1197  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v20|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1202 
=== Usages ===
=== Predecessor ===
v1199 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1202  <|@  <|@
f <@*|@fixed>@ <|@
tid v1202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1188 
=== Predecessor ===
v1198 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1422 
=== Usages ===
v1422 
=== Predecessor ===
v1199 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1422  <|@  <|@
f <@~|@floating>@ <|@
tid v1524 <|@
result [v23|QWORD[*] + v31|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1269 
index: j1281 
=== Succesors ===
=== Usages ===
v1422 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1269 index: j1281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1422 <|@
result v33|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v1197 
address: v1524 
=== Succesors ===
next: v1373 
=== Usages ===
v1373 
=== Predecessor ===
v1197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1197 address: v1524 #next: v1373  <|@  <|@
f <@~|@floating>@ <|@
tid v1523 <|@
result [v22|QWORD[.] + v31|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1271 
index: j1281 
=== Succesors ===
=== Usages ===
v1373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1271 index: j1281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1523 
value: v1422 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1187 
=== Usages ===
=== Predecessor ===
v1422 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1523 value: v1422 stateAfter: - lastLocationAccess: - #next: v1187  <|@  <|@
f <@~|@floating>@ <|@
tid j1289 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1281 
y: j1288 
=== Succesors ===
=== Usages ===
j1272 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1281 y: j1288  <|@  <|@
f <@*|@fixed>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1188 
=== Predecessor ===
v1373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|V64_DWORD[..] = H [v23|QWORD[*] + v31|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v31|QWORD * 4], input: v33|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v31|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1272 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1188 
values: j1289 j1281 
=== Succesors ===
=== Usages ===
v1522 v1321 v1521 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1188 values: j1289 j1281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1187 v1202 
=== Succesors ===
next: v1205 
=== Usages ===
j1272 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1187 v1202 #next: v1205  <|@  <|@
f <@~|@floating>@ <|@
tid j1320 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1147 
y: j805 
=== Succesors ===
=== Usages ===
v1321 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1147 y: j805  <|@  <|@
f <@~|@floating>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1320 
y: j1272 
=== Succesors ===
=== Usages ===
v1205 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1320 y: j1272  <|@  <|@
f <@*|@fixed>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1321 
=== Succesors ===
trueSuccessor: v1204 
falseSuccessor: v1203 
=== Usages ===
=== Predecessor ===
v1188 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1321 #trueSuccessor: v1204 #falseSuccessor: v1203  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = DEC v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|QWORD, y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1208 
=== Usages ===
=== Predecessor ===
v1205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1208  <|@  <|@
f <@*|@fixed>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1178 
=== Predecessor ===
v1204 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1423 
=== Usages ===
a1423 
=== Predecessor ===
v1205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1423  <|@  <|@
f <@~|@floating>@ <|@
tid v1522 <|@
result [v23|QWORD[*] + v35|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1269 
index: j1272 
=== Succesors ===
=== Usages ===
a1423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1269 index: j1272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1423 <|@
result v37|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1203 
address: v1522 
=== Succesors ===
next: v1371 
=== Usages ===
v1371 
=== Predecessor ===
v1203 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1203 address: v1522 #next: v1371  <|@  <|@
f <@~|@floating>@ <|@
tid v1521 <|@
result [v22|QWORD[.] + v35|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1271 
index: j1272 
=== Succesors ===
=== Usages ===
v1371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1271 index: j1272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1521 
value: a1423 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1190 
=== Usages ===
=== Predecessor ===
a1423 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1521 value: a1423 stateAfter: - lastLocationAccess: - #next: v1190  <|@  <|@
f <@*|@fixed>@ <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1178 
=== Predecessor ===
v1371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v23|QWORD[*] + v35|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[.] + v35|QWORD * 4], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B13" "B27" "B26" 
    successors "B29" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1178 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1177 v1190 v1208 
=== Succesors ===
next: v1324 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1177 v1190 v1208 #next: v1324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1215 
=== Usages ===
j1326 
=== Predecessor ===
v1178 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1215  <|@  <|@
f <@~|@floating>@ <|@
tid j1146 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1417 
=== Succesors ===
=== Usages ===
j1151 v1265 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1417  <|@  <|@
f <@~|@floating>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1147 
y: j1146 
=== Succesors ===
=== Usages ===
v1215 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1147 y: j1146  <|@  <|@
f <@*|@fixed>@ <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1265 
=== Succesors ===
trueSuccessor: v1214 
falseSuccessor: v1213 
=== Usages ===
=== Predecessor ===
v1324 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1265 #trueSuccessor: v1214 #falseSuccessor: v1213  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v5|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1214 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1218 
=== Usages ===
=== Predecessor ===
v1215 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1218  <|@  <|@
f <@~|@floating>@ <|@
tid v1520 <|@
result [v17|QWORD[.] + v20|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a751 
index: j1147 
=== Succesors ===
=== Usages ===
j1326 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a751 index: j1147  <|@  <|@
f <@~|@floating>@ <|@
tid j1326 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1324 
address: v1520 
=== Succesors ===
=== Usages ===
v1529 v1530 v1531 v1532 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1324 address: v1520  <|@  <|@
f <@~|@floating>@ <|@
tid j1151 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1146 
y: j1147 
=== Succesors ===
=== Usages ===
j1362 j1351 j1356 j1359 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1146 y: j1147  <|@  <|@
f <@~|@floating>@ <|@
tid j1351 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j1151 
y: j1306 
=== Succesors ===
=== Usages ===
v1352 v1354 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1151 y: j1306  <|@  <|@
f <@~|@floating>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1351 
y: j471 
=== Succesors ===
=== Usages ===
v1218 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1351 y: j471  <|@  <|@
f <@*|@fixed>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1352 
=== Succesors ===
trueSuccessor: v1216 
falseSuccessor: v1217 
=== Usages ===
=== Predecessor ===
v1214 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1352 #trueSuccessor: v1216 #falseSuccessor: v1217  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = LEA [v17|QWORD[.] + v20|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = SUB (x: v38|QWORD, ~y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v40|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1216 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1227 
=== Usages ===
=== Predecessor ===
v1218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1227  <|@  <|@
f <@*|@fixed>@ <|@
tid v1227 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1228 
=== Predecessor ===
v1216 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1219 
=== Usages ===
=== Predecessor ===
v1218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1219  <|@  <|@
f <@~|@floating>@ <|@
tid v1386 <|@
result v42|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1385 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1220 
=== Predecessor ===
v1217 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B43" 
    successors "B33" "B43" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1345 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1220 
values: j471 j1350 
=== Succesors ===
=== Usages ===
v1532 j1350 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1220 values: j471 j1350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1219 
=== Succesors ===
next: v1385 
=== Usages ===
j1345 v1223 v1224 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1219 #next: v1385  <|@  <|@
f <@~|@floating>@ <|@
tid v1532 <|@
result [v39|QWORD[.] + v43|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1326 
index: j1345 
=== Succesors ===
=== Usages ===
v1385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1326 index: j1345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1532 
value: v1386 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1226 
=== Usages ===
=== Predecessor ===
v1220 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1532 value: v1386 stateAfter: - lastLocationAccess: - #next: v1226  <|@  <|@
f <@~|@floating>@ <|@
tid j1350 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1345 
y: j710 
=== Succesors ===
=== Usages ===
j1339 j1345 v1354 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1345 y: j710  <|@  <|@
f <@~|@floating>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1351 
y: j1350 
=== Succesors ===
=== Usages ===
v1226 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1351 y: j1350  <|@  <|@
f <@*|@fixed>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1354 
=== Succesors ===
trueSuccessor: v1223 
falseSuccessor: v1225 
=== Usages ===
=== Predecessor ===
v1385 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1354 #trueSuccessor: v1223 #falseSuccessor: v1225  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v43|QWORD * 4], input: v42|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v43|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1220 
=== Succesors ===
next: v1229 
=== Usages ===
=== Predecessor ===
v1226 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1220 #next: v1229  <|@  <|@
f <@*|@fixed>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1228 
=== Predecessor ===
v1223 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1339 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1228 
values: j471 j1350 
=== Succesors ===
=== Usages ===
v1531 j1344 j1333 v1357 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1228 values: j471 j1350  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1227 v1229 
=== Succesors ===
next: v1247 
=== Usages ===
j1339 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1227 v1229 #next: v1247  <|@  <|@
f <@~|@floating>@ <|@
tid j1356 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j1151 
y: j1312 
=== Succesors ===
=== Usages ===
v1357 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1151 y: j1312  <|@  <|@
f <@~|@floating>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1356 
y: j1339 
=== Succesors ===
=== Usages ===
v1247 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1356 y: j1339  <|@  <|@
f <@*|@fixed>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1357 
=== Succesors ===
trueSuccessor: v1246 
falseSuccessor: v1245 
=== Usages ===
=== Predecessor ===
v1228 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1357 #trueSuccessor: v1246 #falseSuccessor: v1245  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v40|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1250 
=== Usages ===
=== Predecessor ===
v1247 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1250  <|@  <|@
f <@*|@fixed>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1239 
=== Predecessor ===
v1246 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1384 
=== Usages ===
=== Predecessor ===
v1247 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1384  <|@  <|@
f <@~|@floating>@ <|@
tid v1531 <|@
result [v39|QWORD[.] + v45|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1326 
index: j1339 
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1326 index: j1339  <|@  <|@
f <@~|@floating>@ <|@
tid v1389 <|@
result v47|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1384 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1531 
value: v1389 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1238 
=== Usages ===
=== Predecessor ===
v1245 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1531 value: v1389 stateAfter: - lastLocationAccess: - #next: v1238  <|@  <|@
f <@~|@floating>@ <|@
tid j1344 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1339 
y: j1274 
=== Succesors ===
=== Usages ===
j1333 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1339 y: j1274  <|@  <|@
f <@*|@fixed>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1239 
=== Predecessor ===
v1384 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v45|QWORD * 4], input: v47|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v45|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1333 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1239 
values: j1344 j1339 
=== Succesors ===
=== Usages ===
v1530 j1338 j1327 v1360 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1239 values: j1344 j1339  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1238 v1250 
=== Succesors ===
next: v1253 
=== Usages ===
j1333 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1238 v1250 #next: v1253  <|@  <|@
f <@~|@floating>@ <|@
tid j1359 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1151 
y: j1316 
=== Succesors ===
=== Usages ===
v1360 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1151 y: j1316  <|@  <|@
f <@~|@floating>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1359 
y: j1333 
=== Succesors ===
=== Usages ===
v1253 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1359 y: j1333  <|@  <|@
f <@*|@fixed>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1360 
=== Succesors ===
trueSuccessor: v1252 
falseSuccessor: v1251 
=== Usages ===
=== Predecessor ===
v1239 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1360 #trueSuccessor: v1252 #falseSuccessor: v1251  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v40|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1252 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1256 
=== Usages ===
=== Predecessor ===
v1253 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1256  <|@  <|@
f <@*|@fixed>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1242 
=== Predecessor ===
v1252 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1382 
=== Usages ===
=== Predecessor ===
v1253 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1382  <|@  <|@
f <@~|@floating>@ <|@
tid v1530 <|@
result [v39|QWORD[.] + v49|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1326 
index: j1333 
=== Succesors ===
=== Usages ===
v1382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1326 index: j1333  <|@  <|@
f <@~|@floating>@ <|@
tid v1388 <|@
result v51|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1382 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1382 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1530 
value: v1388 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1241 
=== Usages ===
=== Predecessor ===
v1251 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1530 value: v1388 stateAfter: - lastLocationAccess: - #next: v1241  <|@  <|@
f <@~|@floating>@ <|@
tid j1338 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1333 
y: j1288 
=== Succesors ===
=== Usages ===
j1327 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1333 y: j1288  <|@  <|@
f <@*|@fixed>@ <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1242 
=== Predecessor ===
v1382 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v49|QWORD * 4], input: v51|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA [v49|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1327 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1242 
values: j1338 j1333 
=== Succesors ===
=== Usages ===
v1529 v1363 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1242 values: j1338 j1333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1241 v1256 
=== Succesors ===
next: v1259 
=== Usages ===
j1327 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1241 v1256 #next: v1259  <|@  <|@
f <@~|@floating>@ <|@
tid j1362 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j1151 
y: j805 
=== Succesors ===
=== Usages ===
v1363 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1151 y: j805  <|@  <|@
f <@~|@floating>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1362 
y: j1327 
=== Succesors ===
=== Usages ===
v1259 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1362 y: j1327  <|@  <|@
f <@*|@fixed>@ <|@
tid v1259 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1363 
=== Succesors ===
trueSuccessor: v1258 
falseSuccessor: v1257 
=== Usages ===
=== Predecessor ===
v1242 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1363 #trueSuccessor: v1258 #falseSuccessor: v1257  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = DEC v40|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1262 
=== Usages ===
=== Predecessor ===
v1259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1262  <|@  <|@
f <@*|@fixed>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1232 
=== Predecessor ===
v1258 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1380 
=== Usages ===
=== Predecessor ===
v1259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1380  <|@  <|@
f <@~|@floating>@ <|@
tid v1529 <|@
result [v39|QWORD[.] + v53|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j1326 
index: j1327 
=== Succesors ===
=== Usages ===
v1380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1326 index: j1327  <|@  <|@
f <@~|@floating>@ <|@
tid a1387 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1380 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1529 
value: a1387 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1244 
=== Usages ===
=== Predecessor ===
v1257 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1529 value: a1387 stateAfter: - lastLocationAccess: - #next: v1244  <|@  <|@
f <@*|@fixed>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1232 
=== Predecessor ===
v1380 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + v53|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B32" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1225 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1224 
=== Usages ===
=== Predecessor ===
v1226 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1224  <|@  <|@
f <@*|@fixed>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1220 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1225 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1220  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B43 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1213 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1231 
=== Usages ===
=== Predecessor ===
v1215 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1231  <|@  <|@
f <@*|@fixed>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1232 
=== Predecessor ===
v1213 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B42" "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1231 v1244 v1262 
=== Succesors ===
next: j792 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1231 v1244 v1262 #next: j792  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j792 <|@
result [v17|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1452 
=== Succesors ===
next: j794 
=== Usages ===
j793 
=== Predecessor ===
v1232 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1452 #next: j794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j794 <|@
result [v17|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1452 
=== Succesors ===
next: v802 
=== Usages ===
j798 
=== Predecessor ===
j792 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v1452 #next: v802  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i165 i387 i1407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1407 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i32
=== Inputs ===
x: i1417 
y: i164 
=== Succesors ===
=== Usages ===
i796 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1417 y: i164  <|@  <|@
f <@~|@floating>@ <|@
tid i796 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$13/123652749@27181eaa
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i1407 
y: i314 
=== Succesors ===
=== Usages ===
j797 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1407 y: i314  <|@  <|@
f <@~|@floating>@ <|@
tid j797 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i796 
=== Succesors ===
=== Usages ===
j798 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i796  <|@  <|@
f <@~|@floating>@ <|@
tid j798 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
=== Inputs ===
x: j794 
y: j797 
=== Succesors ===
=== Usages ===
j799 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j794 y: j797  <|@  <|@
f <@~|@floating>@ <|@
tid i791 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 8]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j793 j799 j915 j967 j1018 j1069 j1076 j1083 j1090 j1097 j1104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j799 <|@
result v60|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j798 
y: i791 
=== Succesors ===
=== Usages ===
j800 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j798 y: i791  <|@  <|@
f <@~|@floating>@ <|@
tid j793 <|@
result v61|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j792 
y: i791 
=== Succesors ===
=== Usages ===
j800 j815 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j792 y: i791  <|@  <|@
f <@~|@floating>@ <|@
tid j800 <|@
result v63|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j799 
y: j793 
=== Succesors ===
=== Usages ===
j801 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j799 y: j793  <|@  <|@
f <@~|@floating>@ <|@
tid j801 <|@
result v64|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j800 
y: j718 
=== Succesors ===
=== Usages ===
j804 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j800 y: j718  <|@  <|@
f <@~|@floating>@ <|@
tid j814 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:158) [bci: 12]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
rawvalue: 4431593472
stableDimension: 0
stamp: i64 [4431593472] ⇊000000010824c000 ⇈000000010824c000
stampKind: i64
value: long[4431593472|0x10824c000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j815 v1478 v1483 v1488 v1494 v1495 v1496 v1497 v1498 v1499 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v803 
=== Predecessor ===
j794 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHL v55|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVSXD v56|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = LEA [v17|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = ADD (x: v58|QWORD[.], y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[*] = SHR v59|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = LEA [v17|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = SHR v62|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[*] = SUB (x: v60|QWORD[*], ~y: v61|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[*] = INC v63|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD[*]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B98" 
    successors "B47" "B98" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611686018427387904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j804 <|@
result v66|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v803 
values: j801 j806 
=== Succesors ===
=== Usages ===
j806 v807 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v803 values: j801 j806  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v802 
=== Succesors ===
next: v810 
=== Usages ===
j804 v808 v813 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v802 #next: v810  <|@  <|@
f <@~|@floating>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j804 
y: j718 
=== Succesors ===
=== Usages ===
v810 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j804 y: j718  <|@  <|@
f <@*|@fixed>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v807 
=== Succesors ===
trueSuccessor: v808 
falseSuccessor: v809 
=== Usages ===
=== Predecessor ===
v803 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v807 #trueSuccessor: v808 #falseSuccessor: v809  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v66|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B46 -> B47 falseDestination: B46 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v803 
=== Succesors ===
next: a554 
=== Usages ===
=== Predecessor ===
v810 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v803 #next: a554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a554 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a751 
=== Succesors ===
next: v19 
=== Usages ===
?203 ?39 v1444 v1445 ?569 v1453 ?603 v1455 ?645 v1457 
=== Predecessor ===
v808 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a751 #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 125]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i70 i92 v95 i154 v169 ?203 v213 i212 v242 i574 i608 a835 a881 a933 a984 a1035 i1408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1417 
y: i69 
=== Succesors ===
=== Usages ===
v185 v235 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1417 y: i69  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:414) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i1415 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i1415  <|@  <|@
f <@~|@floating>@ <|@
tid i919 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v918 v970 v1021 v1072 v1079 v1086 v1093 v1100 v1107 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1441 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1426 v354 a1424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:414) [bci: 28]
stamp: void
trueSuccessorProbability: 0.8950010038144951
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
a554 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v17 #falseSuccessor: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8950010038144951 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4606236671919826776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:415) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1424 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1424 <|@
result v67|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:416) [bci: 35]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1441 
=== Succesors ===
next: v235 
=== Usages ===
a498 a1412 a499 
=== Predecessor ===
v17 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1441 #next: v235  <|@  <|@
f <@*|@fixed>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
stamp: void
trueSuccessorProbability: 0.1646513595885204
=== Inputs ===
condition: v213 
=== Succesors ===
trueSuccessor: v234 
falseSuccessor: v233 
=== Usages ===
=== Predecessor ===
a1424 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v213 #trueSuccessor: v234 #falseSuccessor: v233  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1646513595885204 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B95" 
    xhandlers
    flags 
    probability 4594477336665446716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v257  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v254 
=== Predecessor ===
v234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|DWORD[.]] destination: B49 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B61" 
    xhandlers
    flags 
    probability 4604909342826098953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid a1412 <|@
result v68|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a1424 
=== Succesors ===
=== Usages ===
a224 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1424  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
v233 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = UNCOMPRESSPOINTER (input: v67|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD[.], Object[null], v67|DWORD[.]] destination: B50 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B55" 
    xhandlers
    flags 
    probability 4592230395704689984
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$116/2011436689@f852abe
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 6]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i1415 
y: i69 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i1415 y: i69  <|@  <|@
f <@~|@floating>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i154 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i154  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
trueSuccessorProbability: 0.7154629099120353
=== Inputs ===
condition: v155 
=== Succesors ===
trueSuccessor: v156 
falseSuccessor: v157 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v155 #trueSuccessor: v156 #falseSuccessor: v157  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = SAR v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7154629099120353 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4590077595182696277
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 10]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v435  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i69 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i69  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v169 
=== Succesors ===
trueSuccessor: v432 
falseSuccessor: v434 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v169 #trueSuccessor: v432 #falseSuccessor: v434  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590077595182696277
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1425 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1425  <|@  <|@
f <@~|@floating>@ <|@
tid v1443 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1425 <|@
result v70|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.first
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1443 
=== Succesors ===
next: v171 
=== Usages ===
a306 
=== Predecessor ===
v432 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1443 #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid a306 <|@
result v71|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a1425 
=== Succesors ===
=== Usages ===
a172 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1425  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
a1425 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD[.]] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid i695 <|@
result int[-78611|0xfffffffffffecced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -78611
stableDimension: 0
stamp: i32 [-78611] ⇊00000000fffecced ⇈00000000fffecced
stampKind: i32
value: int[-78611|0xfffffffffffecced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v434 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-78611|0xfffffffffffecced]] destination: B54 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4584268423496398765
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 35]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: i32
=== Inputs ===
x: i1415 
y: i164 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1415 y: i164  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i165 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i165  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v166 
=== Succesors ===
trueSuccessor: v438 
falseSuccessor: v436 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v166 #trueSuccessor: v438 #falseSuccessor: v436  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v692 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v692  <|@  <|@
f <@~|@floating>@ <|@
tid i693 <|@
result int[-79379|0xfffffffffffec9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -79379
stableDimension: 0
stamp: i32 [-79379] ⇊00000000fffec9ed ⇈00000000fffec9ed
stampKind: i32
value: int[-79379|0xfffffffffffec9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v438 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-79379|0xfffffffffffec9ed]] destination: B56 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4584268423496398765
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1426 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1426  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1426 <|@
result v73|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:416) [bci: 35]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1441 
=== Succesors ===
next: v173 
=== Usages ===
a309 
=== Predecessor ===
v436 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1441 #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid a309 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList.addAll(LinkedList.java:418) [bci: 45]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a1426 
=== Succesors ===
=== Usages ===
a172 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1426  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
a1426 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD[.]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4592230395704689984
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a172 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v170 
values: a306 a309 
=== Succesors ===
=== Usages ===
a227 v1442 a226 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v170 values: a306 a309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v171 v173 
=== Succesors ===
next: a1427 
=== Usages ===
a172 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v171 v173 #next: a1427  <|@  <|@
f <@~|@floating>@ <|@
tid v1442 <|@
result [v75|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a172 
index: - 
=== Succesors ===
=== Usages ===
a1427 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1427 <|@
result v76|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList$Node.prev
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:419) [bci: 52]
nullCheck: true
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1442 
=== Succesors ===
next: v185 
=== Usages ===
a303 a498 a501 
=== Predecessor ===
v170 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1442 #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid a303 <|@
result v77|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:419) [bci: 52]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a1427 
=== Succesors ===
=== Usages ===
a224 a210 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1427  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
stamp: void
trueSuccessorProbability: 0.1646513595885204
=== Inputs ===
condition: v213 
=== Succesors ===
trueSuccessor: v184 
falseSuccessor: v183 
=== Usages ===
=== Predecessor ===
a1427 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v213 #trueSuccessor: v184 #falseSuccessor: v183  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction v76|DWORD[.] = MOV [v75|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1646513595885204 condition: < trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B93" 
    xhandlers
    flags 
    probability 4580640213717223586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v208  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
v184 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.], v75|QWORD[.], v76|DWORD[.]] destination: B59 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4590984647627490071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v220  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
v183 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.], v75|QWORD[.], v76|DWORD[.]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B50" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4605699371196639596
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a224 <|@
result v78|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v219 
values: a303 a1412 
=== Succesors ===
=== Usages ===
v187 j1082 v1447 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v219 values: a303 a1412  <|@  <|@
f <@~|@floating>@ <|@
tid a226 <|@
result v79|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v219 
values: a172 a20 
=== Succesors ===
=== Usages ===
?39 a227 ?203 ?569 ?603 ?645 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v219 values: a172 a20  <|@  <|@
f <@~|@floating>@ <|@
tid a498 <|@
result v80|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n# Ljava/util/LinkedList$Node;
valueDescription: n -
=== Inputs ===
merge: v219 
values: a1427 a1424 
=== Succesors ===
=== Usages ===
v869 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v219 values: a1427 a1424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v220 v222 
=== Succesors ===
next: j823 
=== Usages ===
a224 a226 a498 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v220 v222 #next: j823  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j823 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j839 
=== Usages ===
v1470 v1471 
=== Predecessor ===
v219 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j839  <|@  <|@
f <@~|@floating>@ <|@
tid v1470 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j823 
index: - 
=== Succesors ===
=== Usages ===
j839 v841 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j823 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j839 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1470 
=== Succesors ===
next: j840 
=== Usages ===
j1112 j845 v1500 
=== Predecessor ===
j823 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1470 #next: j840  <|@  <|@
f <@~|@floating>@ <|@
tid v1471 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j823 
index: - 
=== Succesors ===
=== Usages ===
j840 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j823 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j840 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1471 
=== Succesors ===
next: v831 
=== Usages ===
v828 
=== Predecessor ===
j839 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1471 #next: v831  <|@  <|@
f <@~|@floating>@ <|@
tid j294 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:416) [bci: 35]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1132 j1112 j1138 j1120 j1126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1112 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j839 
y: j294 
=== Succesors ===
=== Usages ===
v828 v841 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j839 y: j294  <|@  <|@
f <@~|@floating>@ <|@
tid v828 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j840 
y: j1112 
=== Succesors ===
=== Usages ===
v831 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j840 y: j1112  <|@  <|@
f <@~|@floating>@ <|@
tid v821 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a835 a881 a933 a984 a1035 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v831 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v828 
=== Succesors ===
trueSuccessor: v829 
falseSuccessor: v830 
=== Usages ===
=== Predecessor ===
j840 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v828 #trueSuccessor: v829 #falseSuccessor: v830  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD[.], v79|QWORD[.], v80|DWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA [v81|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4575969078837925879
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a835 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a835  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a835 <|@
result v84|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
arguments: v821 i314 i69 
=== Succesors ===
next: j836 
=== Usages ===
j836 
=== Predecessor ===
v829 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 arguments: v821 i314 i69 #next: j836  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j836 <|@
result v84|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a835 
=== Succesors ===
next: v846 
=== Usages ===
j845 
=== Predecessor ===
a835 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a835 #next: v846  <|@  <|@
f <@*|@fixed>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
j836 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v83|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD[.]] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4605624129680125964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v841 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v841  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1470 
value: j1112 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v838 
=== Usages ===
=== Predecessor ===
v830 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1470 value: j1112 stateAfter: - lastLocationAccess: - #next: v838  <|@  <|@
f <@~|@floating>@ <|@
tid v1500 <|@
result [v81|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j839 
index: - 
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j839 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1500 
=== Succesors ===
next: v844 
=== Usages ===
=== Predecessor ===
v841 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1500 #next: v844  <|@  <|@
f <@*|@fixed>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
v838 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v81|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4605699371196639596
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j845 <|@
result v85|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v843 
values: j839 j836 
=== Succesors ===
=== Usages ===
v1473 v1472 a473 v1501 v1502 v1503 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v843 values: j839 j836  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v844 v846 
=== Succesors ===
next: a473 
=== Usages ===
j845 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v844 v846 #next: a473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a473 <|@
result v86|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j845 
=== Succesors ===
next: j857 
=== Usages ===
a481 
=== Predecessor ===
v843 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j845 #next: j857  <|@  <|@
f <@~|@floating>@ <|@
tid v851 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1051 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1051 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v851 
=== Succesors ===
=== Usages ===
v1491 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v851  <|@  <|@
f <@~|@floating>@ <|@
tid v1491 <|@
result [v87|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1051 
index: - 
=== Succesors ===
=== Usages ===
j1055 j901 j857 j953 j1004 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1051 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j857 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1491 
=== Succesors ===
next: v858 
=== Usages ===
v858 
=== Predecessor ===
a473 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1491 #next: v858  <|@  <|@
f <@~|@floating>@ <|@
tid v1472 <|@
result [v85|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j845 
index: - 
=== Succesors ===
=== Usages ===
v858 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j845 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1472 
value: j857 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v861 
=== Usages ===
=== Predecessor ===
j857 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1472 value: j857 stateAfter: - lastLocationAccess: - #next: v861  <|@  <|@
f <@~|@floating>@ <|@
tid v1473 <|@
result [v85|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j845 
index: - 
=== Succesors ===
=== Usages ===
v861 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j845 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1116 <|@
result meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v861 v905 v957 v1008 v1059 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1473 
value: v1116 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1428 
=== Usages ===
=== Predecessor ===
v858 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1473 value: v1116 stateAfter: - lastLocationAccess: - #next: a1428  <|@  <|@
f <@~|@floating>@ <|@
tid v1444 <|@
result [v17|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a554 
index: - 
=== Succesors ===
=== Usages ===
a1428 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a554 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1428 <|@
result v89|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v428 
address: v1444 
=== Succesors ===
next: v865 
=== Usages ===
v865 
=== Predecessor ===
v861 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v428 address: v1444 #next: v865  <|@  <|@
f <@~|@floating>@ <|@
tid v1501 <|@
result [v85|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j845 
index: - 
=== Succesors ===
=== Usages ===
v865 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j845 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1501 
value: a1428 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v867 
=== Usages ===
=== Predecessor ===
a1428 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1501 value: a1428 stateAfter: - lastLocationAccess: - #next: v867  <|@  <|@
f <@~|@floating>@ <|@
tid v1502 <|@
result [v85|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j845 
index: - 
=== Succesors ===
=== Usages ===
v867 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j845 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1502 
value: i12 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v869 
=== Usages ===
=== Predecessor ===
v865 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1502 value: i12 stateAfter: - lastLocationAccess: - #next: v869  <|@  <|@
f <@~|@floating>@ <|@
tid v1503 <|@
result [v85|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j845 
index: - 
=== Succesors ===
=== Usages ===
v869 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j845 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1503 
value: a498 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a481 
=== Usages ===
=== Predecessor ===
v867 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1503 value: a498 stateAfter: - lastLocationAccess: - #next: a481  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a481 <|@
result v86|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a473 
=== Succesors ===
next: v482 
=== Usages ===
a332 ?248 a211 
=== Predecessor ===
v869 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a473 #next: v482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
a481 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid a332 <|@
result v90|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:426) [bci: 108]
op: Compress
stamp: n -
=== Inputs ===
value: a481 
=== Succesors ===
=== Usages ===
v333 v337 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a481  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:425) [bci: 102]
stamp: void
=== Inputs ===
value: a224 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a224  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:425) [bci: 102]
stamp: void
trueSuccessorProbability: 0.19710495908321068
=== Inputs ===
condition: v187 
=== Succesors ===
trueSuccessor: v188 
falseSuccessor: v189 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v187 #trueSuccessor: v188 #falseSuccessor: v189  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE v85|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOV [v87|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[*]], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v85|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[.] = MOV [v17|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[*] + 12], y: v89|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[*] + 20], y: v80|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD[.] = COMPRESSPOINTER (input: v86|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v78|QWORD[.], y: v78|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.19710495908321068 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4595100210704046671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:426) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid v1535 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList.first
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:426) [bci: 108]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1535 
value: a332 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1075 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1535 value: a332 stateAfter: - lastLocationAccess: - #next: j1075  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1075 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:426) [bci: 108]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v1079 
=== Usages ===
j1076 
=== Predecessor ===
v333 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v1079  <|@  <|@
f <@~|@floating>@ <|@
tid j1076 <|@
result v91|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:426) [bci: 108]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1075 
y: i791 
=== Succesors ===
=== Usages ===
v1495 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1075 y: i791  <|@  <|@
f <@~|@floating>@ <|@
tid v1495 <|@
result [v91|QWORD[*] + v65|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1076 
index: j814 
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1076 index: j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:426) [bci: 108]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1495 
value: i919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
j1075 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1495 value: i919 stateAfter: - lastLocationAccess: - #next: v196  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v1079 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v90|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v91|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4604216323593261784
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid v1447 <|@
result [v78|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a224 
index: - 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a224 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$Node.next
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1447 
value: a332 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1082 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1447 value: a332 stateAfter: - lastLocationAccess: - #next: j1082  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1082 <|@
result v78|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a224 
=== Succesors ===
next: v1086 
=== Usages ===
j1083 
=== Predecessor ===
v337 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a224 #next: v1086  <|@  <|@
f <@~|@floating>@ <|@
tid j1083 <|@
result v92|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1082 
y: i791 
=== Succesors ===
=== Usages ===
v1496 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1082 y: i791  <|@  <|@
f <@~|@floating>@ <|@
tid v1496 <|@
result [v92|QWORD[*] + v65|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1083 
index: j814 
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1083 index: j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1496 
value: i919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
j1082 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1496 value: i919 stateAfter: - lastLocationAccess: - #next: v197  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:429) [bci: 121]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v1086 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v78|QWORD[.] + 16], y: v90|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[*] = SHR v78|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v92|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605699371196639596
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v196 v197 
=== Succesors ===
next: v1397 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v196 v197 #next: v1397  <|@  <|@
f <@~|@floating>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1417 
y: i314 
=== Succesors ===
=== Usages ===
v1397 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1417 y: i314  <|@  <|@
f <@*|@fixed>@ <|@
tid v1397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v405 
=== Succesors ===
trueSuccessor: v1393 
falseSuccessor: v1396 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v405 #trueSuccessor: v1393 #falseSuccessor: v1396  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 4601195771569269100
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1391 
=== Usages ===
=== Predecessor ===
v1397 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1391  <|@  <|@
f <@*|@fixed>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1390 
=== Predecessor ===
v1393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B97" 
    xhandlers
    flags 
    probability 4601195771569269100
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1405 
=== Usages ===
=== Predecessor ===
v1397 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1405  <|@  <|@
f <@~|@floating>@ <|@
tid i387 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i32
=== Inputs ===
x: i1417 
y: i164 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1417 y: i164  <|@  <|@
f <@~|@floating>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i387 
y: i1417 
=== Succesors ===
=== Usages ===
v1405 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i387 y: i1417  <|@  <|@
f <@*|@fixed>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v401 
=== Succesors ===
trueSuccessor: v1404 
falseSuccessor: v1401 
=== Usages ===
=== Predecessor ===
v1396 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v401 #trueSuccessor: v1404 #falseSuccessor: v1401  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" 
    xhandlers
    flags 
    probability 4601195771569269100
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1392 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1392  <|@  <|@
f <@*|@fixed>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1390 
=== Predecessor ===
v1404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B68" "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605699371196639596
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1391 v1392 
=== Succesors ===
next: v35 
=== Usages ===
v399 v588 v622 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1391 v1392 #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
v1390 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v86|QWORD[.]] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B76" 
    successors "B73" "B77" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605699371196639596
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i212 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v36 
values: i69 i70 
=== Succesors ===
=== Usages ===
?39 v40 v1445 i70 i577 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v36 values: i69 i70  <|@  <|@
f <@~|@floating>@ <|@
tid a211 <|@
result v95|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v36 
values: a481 a492 
=== Succesors ===
=== Usages ===
?39 a576 a489 v1446 j914 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v36 values: a481 a492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0
loopOrigFrequency: 5.073439068460147
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
splits: 2
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v35 
=== Succesors ===
next: v46 
=== Usages ===
i212 a211 v43 v96 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v35 #next: v46  <|@  <|@
f <@~|@floating>@ <|@
tid i639 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v640 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1417 
y: i639 
=== Succesors ===
=== Usages ===
i642 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1417 y: i639  <|@  <|@
f <@~|@floating>@ <|@
tid i642 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v640 
trueValue: i1417 
falseValue: i314 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v640 trueValue: i1417 falseValue: i314  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i212 
y: i642 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i212 y: i642  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
stamp: void
trueSuccessorProbability: 0.8353486404114796
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v41 
falseSuccessor: v43 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v41 #falseSuccessor: v43  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD, v95|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v5|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|DWORD, y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8353486404114796 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4604460509397492437
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: j870 
=== Usages ===
v399 
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j870  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j870 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j885 
=== Usages ===
v1474 v1475 
=== Predecessor ===
v41 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j885  <|@  <|@
f <@~|@floating>@ <|@
tid v1474 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j870 
index: - 
=== Succesors ===
=== Usages ===
j885 v887 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j870 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j885 <|@
result v97|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1474 
=== Succesors ===
next: j886 
=== Usages ===
j1120 j891 v1504 
=== Predecessor ===
j870 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1474 #next: j886  <|@  <|@
f <@~|@floating>@ <|@
tid v1475 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j870 
index: - 
=== Succesors ===
=== Usages ===
j886 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j870 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j886 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1475 
=== Succesors ===
next: v878 
=== Usages ===
v875 
=== Predecessor ===
j885 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1475 #next: v878  <|@  <|@
f <@~|@floating>@ <|@
tid j1120 <|@
result v98|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j885 
y: j294 
=== Succesors ===
=== Usages ===
v875 v887 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j885 y: j294  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j886 
y: j1120 
=== Succesors ===
=== Usages ===
v878 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j886 y: j1120  <|@  <|@
f <@*|@fixed>@ <|@
tid v878 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v875 
=== Succesors ===
trueSuccessor: v876 
falseSuccessor: v877 
=== Usages ===
=== Predecessor ===
j886 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v875 #trueSuccessor: v876 #falseSuccessor: v877  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = LEA [v97|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v98|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4574695193164519458
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a881 
=== Usages ===
=== Predecessor ===
v878 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a881  <|@  <|@
tid ?39 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<LinkedList.addAll(int, Collection)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 422
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - i1417 a211 a226 a554 i1417 i212 - - - 
=== Succesors ===
=== Usages ===
a881 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - i1417 a211 a226 a554 i1417 i212 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a881 <|@
result v99|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?39 
arguments: v821 i314 i69 
=== Succesors ===
next: j882 
=== Usages ===
j882 
=== Predecessor ===
v876 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?39 arguments: v821 i314 i69 #next: j882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j882 <|@
result v99|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a881 
=== Succesors ===
next: v892 
=== Usages ===
j891 
=== Predecessor ===
a881 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a881 #next: v892  <|@  <|@
f <@*|@fixed>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v889 
=== Predecessor ===
j882 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v83|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: v0|QWORD[.] - - - v5|DWORD v95|QWORD[.] v79|QWORD[.] v17|QWORD[.] v5|DWORD v94|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v99|QWORD[.]] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4604397656498970277
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v887 
=== Usages ===
=== Predecessor ===
v878 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v887  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1474 
value: j1120 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v884 
=== Usages ===
=== Predecessor ===
v877 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1474 value: j1120 stateAfter: - lastLocationAccess: - #next: v884  <|@  <|@
f <@~|@floating>@ <|@
tid v1504 <|@
result [v97|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j885 
index: - 
=== Succesors ===
=== Usages ===
v884 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j885 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1504 
=== Succesors ===
next: v890 
=== Usages ===
=== Predecessor ===
v887 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1504 #next: v890  <|@  <|@
f <@*|@fixed>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v889 
=== Predecessor ===
v884 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v97|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v97|QWORD] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B74" 
    successors "B72" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4604460509397492437
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j891 <|@
result v100|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v889 
values: j885 j882 
=== Succesors ===
=== Usages ===
v1477 v1476 a485 v1505 v1506 v1507 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v889 values: j885 j882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v890 v892 
=== Succesors ===
next: a485 
=== Usages ===
j891 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v890 v892 #next: a485  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a485 <|@
result v101|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j891 
=== Succesors ===
next: j901 
=== Usages ===
a492 
=== Predecessor ===
v889 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j891 #next: j901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j901 <|@
result v102|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1491 
=== Succesors ===
next: v902 
=== Usages ===
v902 
=== Predecessor ===
a485 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1491 #next: v902  <|@  <|@
f <@~|@floating>@ <|@
tid v1476 <|@
result [v100|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j891 
index: - 
=== Succesors ===
=== Usages ===
v902 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j891 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1476 
value: j901 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v905 
=== Usages ===
=== Predecessor ===
j901 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1476 value: j901 stateAfter: - lastLocationAccess: - #next: v905  <|@  <|@
f <@~|@floating>@ <|@
tid v1477 <|@
result [v100|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j891 
index: - 
=== Succesors ===
=== Usages ===
v905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j891 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1477 
value: v1116 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1429 
=== Usages ===
=== Predecessor ===
v902 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1477 value: v1116 stateAfter: - lastLocationAccess: - #next: a1429  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1390 v41 
=== Succesors ===
=== Usages ===
a1429 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1390 v41  <|@  <|@
f <@~|@floating>@ <|@
tid v1445 <|@
result [v17|QWORD[.] + v94|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a554 
index: i212 
=== Succesors ===
=== Usages ===
a1429 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a554 index: i212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1429 <|@
result v103|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v399 
address: v1445 
=== Succesors ===
next: v909 
=== Usages ===
v909 
=== Predecessor ===
v905 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v399 address: v1445 #next: v909  <|@  <|@
f <@~|@floating>@ <|@
tid v1505 <|@
result [v100|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j891 
index: - 
=== Succesors ===
=== Usages ===
v909 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j891 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1505 
value: a1429 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v911 
=== Usages ===
=== Predecessor ===
a1429 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1505 value: a1429 stateAfter: - lastLocationAccess: - #next: v911  <|@  <|@
f <@~|@floating>@ <|@
tid v1506 <|@
result [v100|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j891 
index: - 
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j891 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1506 
value: i12 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v913 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1506 value: i12 stateAfter: - lastLocationAccess: - #next: v913  <|@  <|@
f <@~|@floating>@ <|@
tid v1507 <|@
result [v100|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j891 
index: - 
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j891 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a489 <|@
result v104|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a211 
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1507 
value: a489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a492 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1507 value: a489 stateAfter: - lastLocationAccess: - #next: a492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a492 <|@
result v101|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a485 
=== Succesors ===
next: v493 
=== Usages ===
a329 a211 
=== Predecessor ===
v913 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a485 #next: v493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
a492 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid v1446 <|@
result [v95|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a211 
index: - 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a211 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a329 <|@
result v105|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
op: Compress
stamp: n -
=== Inputs ===
value: a492 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$Node.next
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1446 
value: a329 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j914 
=== Usages ===
=== Predecessor ===
v493 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1446 value: a329 stateAfter: - lastLocationAccess: - #next: j914  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j914 <|@
result v95|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a211 
=== Succesors ===
next: v918 
=== Usages ===
j915 
=== Predecessor ===
v331 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a211 #next: v918  <|@  <|@
f <@~|@floating>@ <|@
tid j915 <|@
result v106|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j914 
y: i791 
=== Succesors ===
=== Usages ===
v1478 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j914 y: i791  <|@  <|@
f <@~|@floating>@ <|@
tid v1478 <|@
result [v106|QWORD[*] + v65|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j915 
index: j814 
=== Succesors ===
=== Usages ===
v918 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j915 index: j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1478 
value: i919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
j914 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1478 value: i919 stateAfter: - lastLocationAccess: - #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 125]
stamp: i32
=== Inputs ===
x: i212 
y: i69 
=== Succesors ===
=== Usages ===
i212 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i212 y: i69  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:429) [bci: 121]
stamp: void
=== Inputs ===
loopBegin: v36 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v918 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v36  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE v100|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOV [v87|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v100|QWORD[*]], y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v100|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[.] = MOV [v17|QWORD[.] + v94|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v100|QWORD[*] + 12], y: v103|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v100|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[.] = COMPRESSPOINTER (input: v95|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v100|QWORD[*] + 20], y: v104|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[.] = COMPRESSPOINTER (input: v101|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v95|QWORD[.] + 16], y: v105|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[*] = SHR v95|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v106|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = INC v94|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v107|DWORD, v101|QWORD[.]] destination: B76 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B78" 
    xhandlers
    flags 
    probability 4594123467487124058
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v36 
=== Succesors ===
next: v598 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v36 #next: v598  <|@  <|@
f <@~|@floating>@ <|@
tid i673 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i674 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i674 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i32
=== Inputs ===
x: i1417 
y: i673 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1417 y: i673  <|@  <|@
f <@*|@fixed>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
v43 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = LEA [v5|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|QWORD[.], v94|DWORD] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B85" 
    successors "B79" "B86" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4596783152798378834
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a576 <|@
result v109|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v568 
values: a211 a669 
=== Succesors ===
=== Usages ===
?569 v1454 a593 a610 j966 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v568 values: a211 a669  <|@  <|@
f <@~|@floating>@ <|@
tid i577 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v568 
values: i212 i672 
=== Succesors ===
=== Usages ===
?569 v570 i574 v1453 i611 i672 j1435 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v568 values: i212 i672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.5367195342300737
loopOrigFrequency: 3.0734390684601474
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
splits: 0
stamp: void
unrollFactor: 2
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v598 
=== Succesors ===
next: v573 
=== Usages ===
v572 v575 a576 i577 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v598 #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i577 
y: i674 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i577 y: i674  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
stamp: void
trueSuccessorProbability: 0.8353486404114796
=== Inputs ===
condition: v570 
=== Succesors ===
trueSuccessor: v571 
falseSuccessor: v572 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v570 #trueSuccessor: v571 #falseSuccessor: v572  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|QWORD[.], v110|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v108|DWORD, y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8353486404114796 condition: > trueDestination: B78 -> B79 falseDestination: B78 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4595529310877515678
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: j922 
=== Usages ===
v588 
=== Predecessor ===
v573 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j922  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j922 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j937 
=== Usages ===
v1479 v1480 
=== Predecessor ===
v571 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j937  <|@  <|@
f <@~|@floating>@ <|@
tid v1479 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j922 
index: - 
=== Succesors ===
=== Usages ===
j937 v939 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j922 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j937 <|@
result v111|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1479 
=== Succesors ===
next: j938 
=== Usages ===
j1126 j943 v1508 
=== Predecessor ===
j922 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1479 #next: j938  <|@  <|@
f <@~|@floating>@ <|@
tid v1480 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j922 
index: - 
=== Succesors ===
=== Usages ===
j938 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j922 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j938 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1480 
=== Succesors ===
next: v930 
=== Usages ===
v927 
=== Predecessor ===
j937 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1480 #next: v930  <|@  <|@
f <@~|@floating>@ <|@
tid j1126 <|@
result v112|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j937 
y: j294 
=== Succesors ===
=== Usages ===
v927 v939 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j937 y: j294  <|@  <|@
f <@~|@floating>@ <|@
tid v927 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j938 
y: j1126 
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j938 y: j1126  <|@  <|@
f <@*|@fixed>@ <|@
tid v930 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v927 
=== Succesors ===
trueSuccessor: v928 
falseSuccessor: v929 
=== Usages ===
=== Predecessor ===
j938 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v927 #trueSuccessor: v928 #falseSuccessor: v929  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = LEA [v111|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v112|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4565785274850276684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a933 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a933  <|@  <|@
tid ?569 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<LinkedList.addAll(int, Collection)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 422
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - i1417 a576 a226 a554 i1417 i577 - - - 
=== Succesors ===
=== Usages ===
a933 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - i1417 a576 a226 a554 i1417 i577 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a933 <|@
result v113|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?569 
arguments: v821 i314 i69 
=== Succesors ===
next: j934 
=== Usages ===
j934 
=== Predecessor ===
v928 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?569 arguments: v821 i314 i69 #next: j934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j934 <|@
result v113|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a933 
=== Succesors ===
next: v944 
=== Usages ===
j943 
=== Predecessor ===
a933 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a933 #next: v944  <|@  <|@
f <@*|@fixed>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v941 
=== Predecessor ===
j934 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v83|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: v0|QWORD[.] - - - v5|DWORD v109|QWORD[.] v79|QWORD[.] v17|QWORD[.] v5|DWORD v110|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|QWORD[.]] destination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4595465697971645875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v939 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v939  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1479 
value: j1126 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v936 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1479 value: j1126 stateAfter: - lastLocationAccess: - #next: v936  <|@  <|@
f <@~|@floating>@ <|@
tid v1508 <|@
result [v111|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j937 
index: - 
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j937 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1508 
=== Succesors ===
next: v942 
=== Usages ===
=== Predecessor ===
v939 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1508 #next: v942  <|@  <|@
f <@*|@fixed>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v941 
=== Predecessor ===
v936 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v112|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v111|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v111|QWORD] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4595529310877515678
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j943 <|@
result v114|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v941 
values: j937 j934 
=== Succesors ===
=== Usages ===
v1481 a590 v1482 v1509 v1510 v1511 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v941 values: j937 j934  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v942 v944 
=== Succesors ===
next: a590 
=== Usages ===
j943 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v942 v944 #next: a590  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a590 <|@
result v115|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j943 
=== Succesors ===
next: j953 
=== Usages ===
a596 
=== Predecessor ===
v941 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j943 #next: j953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j953 <|@
result v116|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1491 
=== Succesors ===
next: v954 
=== Usages ===
v954 
=== Predecessor ===
a590 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1491 #next: v954  <|@  <|@
f <@~|@floating>@ <|@
tid v1481 <|@
result [v114|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j943 
index: - 
=== Succesors ===
=== Usages ===
v954 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j943 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1481 
value: j953 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v957 
=== Usages ===
=== Predecessor ===
j953 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1481 value: j953 stateAfter: - lastLocationAccess: - #next: v957  <|@  <|@
f <@~|@floating>@ <|@
tid v1482 <|@
result [v114|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j943 
index: - 
=== Succesors ===
=== Usages ===
v957 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j943 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1482 
value: v1116 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1430 
=== Usages ===
=== Predecessor ===
v954 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1482 value: v1116 stateAfter: - lastLocationAccess: - #next: a1430  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1390 v571 
=== Succesors ===
=== Usages ===
a1431 a1430 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1390 v571  <|@  <|@
f <@~|@floating>@ <|@
tid v1453 <|@
result [v17|QWORD[.] + v110|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a554 
index: i577 
=== Succesors ===
=== Usages ===
a1430 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a554 index: i577  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1430 <|@
result v117|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v588 
address: v1453 
=== Succesors ===
next: v961 
=== Usages ===
v961 
=== Predecessor ===
v957 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v588 address: v1453 #next: v961  <|@  <|@
f <@~|@floating>@ <|@
tid v1509 <|@
result [v114|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j943 
index: - 
=== Succesors ===
=== Usages ===
v961 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j943 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1509 
value: a1430 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v963 
=== Usages ===
=== Predecessor ===
a1430 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1509 value: a1430 stateAfter: - lastLocationAccess: - #next: v963  <|@  <|@
f <@~|@floating>@ <|@
tid v1510 <|@
result [v114|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j943 
index: - 
=== Succesors ===
=== Usages ===
v963 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j943 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1510 
value: i12 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v965 
=== Usages ===
=== Predecessor ===
v961 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1510 value: i12 stateAfter: - lastLocationAccess: - #next: v965  <|@  <|@
f <@~|@floating>@ <|@
tid v1511 <|@
result [v114|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j943 
index: - 
=== Succesors ===
=== Usages ===
v965 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j943 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a593 <|@
result v118|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a576 
=== Succesors ===
=== Usages ===
v965 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1511 
value: a593 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a596 
=== Usages ===
=== Predecessor ===
v963 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1511 value: a593 stateAfter: - lastLocationAccess: - #next: a596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a596 <|@
result v115|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a590 
=== Succesors ===
next: v597 
=== Usages ===
v1458 a582 ?645 j1017 
=== Predecessor ===
v965 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a590 #next: v597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
a596 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v584  <|@  <|@
f <@~|@floating>@ <|@
tid v1454 <|@
result [v109|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a576 
index: - 
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a576 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a582 <|@
result v119|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
op: Compress
stamp: n -
=== Inputs ===
value: a596 
=== Succesors ===
=== Usages ===
v584 v1016 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$Node.next
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1454 
value: a582 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j966 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1454 value: a582 stateAfter: - lastLocationAccess: - #next: j966  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j966 <|@
result v109|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a576 
=== Succesors ===
next: v970 
=== Usages ===
j967 
=== Predecessor ===
v584 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a576 #next: v970  <|@  <|@
f <@~|@floating>@ <|@
tid j967 <|@
result v120|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j966 
y: i791 
=== Succesors ===
=== Usages ===
v1483 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j966 y: i791  <|@  <|@
f <@~|@floating>@ <|@
tid v1483 <|@
result [v120|QWORD[*] + v65|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j967 
index: j814 
=== Succesors ===
=== Usages ===
v970 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j967 index: j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1483 
value: i919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j973 
=== Usages ===
=== Predecessor ===
j966 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1483 value: i919 stateAfter: - lastLocationAccess: - #next: j973  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j973 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j988 
=== Usages ===
v1484 v1485 
=== Predecessor ===
v970 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j988  <|@  <|@
f <@~|@floating>@ <|@
tid v1484 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j973 
index: - 
=== Succesors ===
=== Usages ===
j988 v990 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j973 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j988 <|@
result v121|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1484 
=== Succesors ===
next: j989 
=== Usages ===
j1132 j994 v1512 
=== Predecessor ===
j973 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1484 #next: j989  <|@  <|@
f <@~|@floating>@ <|@
tid v1485 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j973 
index: - 
=== Succesors ===
=== Usages ===
j989 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j973 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j989 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1485 
=== Succesors ===
next: v981 
=== Usages ===
v978 
=== Predecessor ===
j988 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1485 #next: v981  <|@  <|@
f <@~|@floating>@ <|@
tid j1132 <|@
result v122|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j988 
y: j294 
=== Succesors ===
=== Usages ===
v978 v990 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j988 y: j294  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j989 
y: j1132 
=== Succesors ===
=== Usages ===
v981 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j989 y: j1132  <|@  <|@
f <@*|@fixed>@ <|@
tid v981 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v978 
=== Succesors ===
trueSuccessor: v979 
falseSuccessor: v980 
=== Usages ===
=== Predecessor ===
j989 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v978 #trueSuccessor: v979 #falseSuccessor: v980  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v114|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = MOVE v114|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOV [v87|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|QWORD[*]], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v114|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v117|DWORD[.] = MOV [v17|QWORD[.] + v110|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|QWORD[*] + 12], y: v117|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD[.] = COMPRESSPOINTER (input: v109|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|QWORD[*] + 20], y: v118|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD[.] = COMPRESSPOINTER (input: v115|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD[.] + 16], y: v119|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[*] = SHR v109|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v120|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = LEA [v121|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4565785274850276684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a984 
=== Usages ===
=== Predecessor ===
v981 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a984  <|@  <|@
f <@~|@floating>@ <|@
tid i574 <|@
result v123|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 125]
stamp: i32
=== Inputs ===
x: i577 
y: i69 
=== Succesors ===
=== Usages ===
?645 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i577 y: i69  <|@  <|@
tid ?645 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<LinkedList.addAll(int, Collection)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 422
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - i1417 a596 a226 a554 i1417 i574 - - - 
=== Succesors ===
=== Usages ===
a984 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - i1417 a596 a226 a554 i1417 i574 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a984 <|@
result v124|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?645 
arguments: v821 i314 i69 
=== Succesors ===
next: j985 
=== Usages ===
j985 
=== Predecessor ===
v979 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?645 arguments: v821 i314 i69 #next: j985  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j985 <|@
result v124|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a984 
=== Succesors ===
next: v995 
=== Usages ===
j994 
=== Predecessor ===
a984 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a984 #next: v995  <|@  <|@
f <@*|@fixed>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v992 
=== Predecessor ===
j985 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = INC v110|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v83|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: v0|QWORD[.] - - - v5|DWORD v115|QWORD[.] v79|QWORD[.] v17|QWORD[.] v5|DWORD v123|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v124|QWORD[.]] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4595465697971645875
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v990 
=== Usages ===
=== Predecessor ===
v981 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v990  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1484 
value: j1132 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v987 
=== Usages ===
=== Predecessor ===
v980 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1484 value: j1132 stateAfter: - lastLocationAccess: - #next: v987  <|@  <|@
f <@~|@floating>@ <|@
tid v1512 <|@
result [v121|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j988 
index: - 
=== Succesors ===
=== Usages ===
v987 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j988 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1512 
=== Succesors ===
next: v993 
=== Usages ===
=== Predecessor ===
v990 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1512 #next: v993  <|@  <|@
f <@*|@fixed>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v992 
=== Predecessor ===
v987 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v121|QWORD] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors "B78" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4595529310877515678
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j994 <|@
result v125|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v992 
values: j988 j985 
=== Succesors ===
=== Usages ===
v1486 a663 v1487 v1513 v1514 v1515 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v992 values: j988 j985  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v993 v995 
=== Succesors ===
next: a663 
=== Usages ===
j994 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v993 v995 #next: a663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a663 <|@
result v126|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j994 
=== Succesors ===
next: j1004 
=== Usages ===
a669 
=== Predecessor ===
v992 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j994 #next: j1004  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1004 <|@
result v127|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1491 
=== Succesors ===
next: v1005 
=== Usages ===
v1005 
=== Predecessor ===
a663 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1491 #next: v1005  <|@  <|@
f <@~|@floating>@ <|@
tid v1486 <|@
result [v125|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j994 
index: - 
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j994 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1486 
value: j1004 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1008 
=== Usages ===
=== Predecessor ===
j1004 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1486 value: j1004 stateAfter: - lastLocationAccess: - #next: v1008  <|@  <|@
f <@~|@floating>@ <|@
tid v1487 <|@
result [v125|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j994 
index: - 
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j994 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1487 
value: v1116 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1431 
=== Usages ===
=== Predecessor ===
v1005 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1487 value: v1116 stateAfter: - lastLocationAccess: - #next: a1431  <|@  <|@
f <@~|@floating>@ <|@
tid j1435 <|@
result v128|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i577 
=== Succesors ===
=== Usages ===
v1457 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i577  <|@  <|@
f <@~|@floating>@ <|@
tid v1457 <|@
result [v17|QWORD[.] + v128|QWORD * 4 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times4
stamp: void*
=== Inputs ===
base: a554 
index: j1435 
=== Succesors ===
=== Usages ===
a1431 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a554 index: j1435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1431 <|@
result v129|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v588 
address: v1457 
=== Succesors ===
next: v1012 
=== Usages ===
v1012 
=== Predecessor ===
v1008 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v588 address: v1457 #next: v1012  <|@  <|@
f <@~|@floating>@ <|@
tid v1513 <|@
result [v125|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j994 
index: - 
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j994 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1513 
value: a1431 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1014 
=== Usages ===
=== Predecessor ===
a1431 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1513 value: a1431 stateAfter: - lastLocationAccess: - #next: v1014  <|@  <|@
f <@~|@floating>@ <|@
tid v1514 <|@
result [v125|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j994 
index: - 
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j994 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1514 
value: i12 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1016 
=== Usages ===
=== Predecessor ===
v1012 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1514 value: i12 stateAfter: - lastLocationAccess: - #next: v1016  <|@  <|@
f <@~|@floating>@ <|@
tid v1515 <|@
result [v125|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j994 
index: - 
=== Succesors ===
=== Usages ===
v1016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j994 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1515 
value: a582 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a669 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1515 value: a582 stateAfter: - lastLocationAccess: - #next: a669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a669 <|@
result v126|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a663 
=== Succesors ===
next: v670 
=== Usages ===
a656 a576 
=== Predecessor ===
v1016 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a663 #next: v670  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v658 
=== Usages ===
=== Predecessor ===
a669 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v658  <|@  <|@
f <@~|@floating>@ <|@
tid v1458 <|@
result [v115|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a596 
index: - 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a596 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a656 <|@
result v130|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
op: Compress
stamp: n -
=== Inputs ===
value: a669 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$Node.next
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1458 
value: a656 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1017 
=== Usages ===
=== Predecessor ===
v670 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1458 value: a656 stateAfter: - lastLocationAccess: - #next: j1017  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1017 <|@
result v115|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a596 
=== Succesors ===
next: v1021 
=== Usages ===
j1018 
=== Predecessor ===
v658 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a596 #next: v1021  <|@  <|@
f <@~|@floating>@ <|@
tid j1018 <|@
result v131|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1017 
y: i791 
=== Succesors ===
=== Usages ===
v1488 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1017 y: i791  <|@  <|@
f <@~|@floating>@ <|@
tid v1488 <|@
result [v131|QWORD[*] + v65|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1018 
index: j814 
=== Succesors ===
=== Usages ===
v1021 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1018 index: j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1488 
value: i919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v575 
=== Usages ===
=== Predecessor ===
j1017 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1488 value: i919 stateAfter: - lastLocationAccess: - #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid i672 <|@
result v132|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 125]
stamp: i32
=== Inputs ===
x: i577 
y: i314 
=== Succesors ===
=== Usages ===
i577 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i577 y: i314  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:429) [bci: 121]
stamp: void
=== Inputs ===
loopBegin: v568 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v568  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v125|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE v125|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [v87|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v125|QWORD[*]], y: v127|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v125|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = MOVSXD v110|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD[.] = MOV [v17|QWORD[.] + v128|QWORD * 4 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v125|QWORD[*] + 12], y: v129|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v125|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v125|QWORD[*] + 20], y: v119|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v130|DWORD[.] = COMPRESSPOINTER (input: v126|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD[.] + 16], y: v130|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[*] = SHR v115|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v131|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = LEA [v110|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v126|QWORD[.], v132|DWORD] destination: B85 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    probability 4585176188719247058
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v568 
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v568 #next: v632  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v602 
=== Predecessor ===
v572 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|QWORD[.], v110|DWORD] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B91" 
    successors "B88" "B92" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4594275468956652522
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a610 <|@
result v133|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v602 
values: a576 a630 
=== Succesors ===
=== Usages ===
?603 v1456 a500 a210 j1068 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v602 values: a576 a630  <|@  <|@
f <@~|@floating>@ <|@
tid i611 <|@
result v134|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v602 
values: i577 i608 
=== Succesors ===
=== Usages ===
?603 v604 i608 v1455 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v602 values: i577 i608  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.073439068460147
loopOrigFrequency: 5.073439068460147
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v632 
=== Succesors ===
next: v607 
=== Usages ===
v606 v609 a610 i611 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v632 #next: v607  <|@  <|@
f <@~|@floating>@ <|@
tid a500 <|@
result v135|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:436) [bci: 156]
op: Compress
stamp: n!# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a610 
=== Succesors ===
=== Usages ===
a501 v1067 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a610  <|@  <|@
f <@~|@floating>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i611 
y: i1417 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i611 y: i1417  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 72]
stamp: void
trueSuccessorProbability: 0.8353486404114796
=== Inputs ===
condition: v604 
=== Succesors ===
trueSuccessor: v605 
falseSuccessor: v606 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v604 #trueSuccessor: v605 #falseSuccessor: v606  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v133|QWORD[.], v134|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v135|DWORD[.] = COMPRESSPOINTER (input: v133|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v134|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8353486404114796 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4593197421261589614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 75]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1024 
=== Usages ===
v622 
=== Predecessor ===
v607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1024  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1024 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1039 
=== Usages ===
v1489 v1490 
=== Predecessor ===
v605 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1039  <|@  <|@
f <@~|@floating>@ <|@
tid v1489 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1024 
index: - 
=== Succesors ===
=== Usages ===
j1039 v1041 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1024 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1039 <|@
result v136|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1489 
=== Succesors ===
next: j1040 
=== Usages ===
j1138 j1045 v1516 
=== Predecessor ===
j1024 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1489 #next: j1040  <|@  <|@
f <@~|@floating>@ <|@
tid v1490 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1024 
index: - 
=== Succesors ===
=== Usages ===
j1040 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1024 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1040 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1490 
=== Succesors ===
next: v1032 
=== Usages ===
v1029 
=== Predecessor ===
j1039 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1490 #next: v1032  <|@  <|@
f <@~|@floating>@ <|@
tid j1138 <|@
result v137|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64
=== Inputs ===
x: j1039 
y: j294 
=== Succesors ===
=== Usages ===
v1029 v1041 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1039 y: j294  <|@  <|@
f <@~|@floating>@ <|@
tid v1029 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1040 
y: j1138 
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1040 y: j1138  <|@  <|@
f <@*|@fixed>@ <|@
tid v1032 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1029 
=== Succesors ===
trueSuccessor: v1030 
falseSuccessor: v1031 
=== Usages ===
=== Predecessor ===
j1040 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1029 #trueSuccessor: v1030 #falseSuccessor: v1031  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD = LEA [v136|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v137|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4563103943281933756
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1035 
=== Usages ===
=== Predecessor ===
v1032 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1035  <|@  <|@
tid ?603 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<LinkedList.addAll(int, Collection)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 422
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - i1417 a610 a226 a554 i1417 i611 - - - 
=== Succesors ===
=== Usages ===
a1035 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - i1417 a610 a226 a554 i1417 i611 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1035 <|@
result v138|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@5b6a7cd5
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?603 
arguments: v821 i314 i69 
=== Succesors ===
next: j1036 
=== Usages ===
j1036 
=== Predecessor ===
v1030 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?603 arguments: v821 i314 i69 #next: j1036  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1036 <|@
result v138|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1035 
=== Succesors ===
next: v1046 
=== Usages ===
j1045 
=== Predecessor ===
a1035 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1035 #next: v1046  <|@  <|@
f <@*|@fixed>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1043 
=== Predecessor ===
j1036 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v83|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: v0|QWORD[.] - - - v5|DWORD v133|QWORD[.] v79|QWORD[.] v17|QWORD[.] v5|DWORD v134|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v138|QWORD[.]] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4593112091255605367
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1041 
=== Usages ===
=== Predecessor ===
v1032 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1041  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1489 
value: j1138 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1038 
=== Usages ===
=== Predecessor ===
v1031 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1489 value: j1138 stateAfter: - lastLocationAccess: - #next: v1038  <|@  <|@
f <@~|@floating>@ <|@
tid v1516 <|@
result [v136|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1039 
index: - 
=== Succesors ===
=== Usages ===
v1038 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1039 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1516 
=== Succesors ===
next: v1044 
=== Usages ===
=== Predecessor ===
v1041 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1516 #next: v1044  <|@  <|@
f <@*|@fixed>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1043 
=== Predecessor ===
v1038 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v137|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v136|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v136|QWORD] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B87" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4593197421261589614
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1045 <|@
result v139|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1043 
values: j1039 j1036 
=== Succesors ===
=== Usages ===
v1492 a624 v1493 v1517 v1518 v1519 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1043 values: j1039 j1036  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1044 v1046 
=== Succesors ===
next: a624 
=== Usages ===
j1045 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1044 v1046 #next: a624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a624 <|@
result v140|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1045 
=== Succesors ===
next: j1055 
=== Usages ===
a630 
=== Predecessor ===
v1043 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1045 #next: j1055  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1055 <|@
result v141|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1491 
=== Succesors ===
next: v1056 
=== Usages ===
v1056 
=== Predecessor ===
a624 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1491 #next: v1056  <|@  <|@
f <@~|@floating>@ <|@
tid v1492 <|@
result [v139|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1045 
index: - 
=== Succesors ===
=== Usages ===
v1056 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1045 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1492 
value: j1055 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1059 
=== Usages ===
=== Predecessor ===
j1055 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1492 value: j1055 stateAfter: - lastLocationAccess: - #next: v1059  <|@  <|@
f <@~|@floating>@ <|@
tid v1493 <|@
result [v139|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1045 
index: - 
=== Succesors ===
=== Usages ===
v1059 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1045 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1493 
value: v1116 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1432 
=== Usages ===
=== Predecessor ===
v1056 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1493 value: v1116 stateAfter: - lastLocationAccess: - #next: a1432  <|@  <|@
f <@~|@floating>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v1390 v605 
=== Succesors ===
=== Usages ===
a1432 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v1390 v605  <|@  <|@
f <@~|@floating>@ <|@
tid v1455 <|@
result [v17|QWORD[.] + v134|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a554 
index: i611 
=== Succesors ===
=== Usages ===
a1432 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a554 index: i611  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1432 <|@
result v142|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v622 
address: v1455 
=== Succesors ===
next: v1063 
=== Usages ===
v1063 
=== Predecessor ===
v1059 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v622 address: v1455 #next: v1063  <|@  <|@
f <@~|@floating>@ <|@
tid v1517 <|@
result [v139|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1045 
index: - 
=== Succesors ===
=== Usages ===
v1063 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1045 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1517 
value: a1432 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1065 
=== Usages ===
=== Predecessor ===
a1432 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1517 value: a1432 stateAfter: - lastLocationAccess: - #next: v1065  <|@  <|@
f <@~|@floating>@ <|@
tid v1518 <|@
result [v139|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1045 
index: - 
=== Succesors ===
=== Usages ===
v1065 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1045 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1518 
value: i12 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1067 
=== Usages ===
=== Predecessor ===
v1063 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1518 value: i12 stateAfter: - lastLocationAccess: - #next: v1067  <|@  <|@
f <@~|@floating>@ <|@
tid v1519 <|@
result [v139|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j1045 
index: - 
=== Succesors ===
=== Usages ===
v1067 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1045 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1519 
value: a500 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a630 
=== Usages ===
=== Predecessor ===
v1065 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1519 value: a500 stateAfter: - lastLocationAccess: - #next: a630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a630 <|@
result v140|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a624 
=== Succesors ===
next: v631 
=== Usages ===
a610 a616 
=== Predecessor ===
v1067 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a624 #next: v631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
a630 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v618  <|@  <|@
f <@~|@floating>@ <|@
tid v1456 <|@
result [v133|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a610 
index: - 
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a610 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a616 <|@
result v143|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
op: Compress
stamp: n -
=== Inputs ===
value: a630 
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$Node.next
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1456 
value: a616 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1068 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1456 value: a616 stateAfter: - lastLocationAccess: - #next: j1068  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1068 <|@
result v133|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a610 
=== Succesors ===
next: v1072 
=== Usages ===
j1069 
=== Predecessor ===
v618 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a610 #next: v1072  <|@  <|@
f <@~|@floating>@ <|@
tid j1069 <|@
result v144|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1068 
y: i791 
=== Succesors ===
=== Usages ===
v1494 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1068 y: i791  <|@  <|@
f <@~|@floating>@ <|@
tid v1494 <|@
result [v144|QWORD[*] + v65|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1069 
index: j814 
=== Succesors ===
=== Usages ===
v1072 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1069 index: j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:428) [bci: 118]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1494 
value: i919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
j1068 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1494 value: i919 stateAfter: - lastLocationAccess: - #next: v609  <|@  <|@
f <@~|@floating>@ <|@
tid i608 <|@
result v145|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 125]
stamp: i32
=== Inputs ===
x: i611 
y: i69 
=== Succesors ===
=== Usages ===
i611 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i611 y: i69  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:429) [bci: 121]
stamp: void
=== Inputs ===
loopBegin: v602 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1072 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v602  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v139|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE v139|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = MOV [v87|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v139|QWORD[*]], y: v141|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v139|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v142|DWORD[.] = MOV [v17|QWORD[.] + v134|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v139|QWORD[*] + 12], y: v142|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v139|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v139|QWORD[*] + 20], y: v135|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v143|DWORD[.] = COMPRESSPOINTER (input: v140|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v133|QWORD[.] + 16], y: v143|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[*] = SHR v133|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v144|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = INC v134|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v140|QWORD[.], v145|DWORD] destination: B91 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B93" 
    xhandlers
    flags 
    probability 4582384808343661977
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v602 
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v602 #next: v207  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
v606 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v133|QWORD[.], v79|QWORD[.], v135|DWORD[.]] destination: B92 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B59" 
    successors "B94" "B96" 
    xhandlers
    flags 
    probability 4586016110657813278
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a210 <|@
result v146|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v206 
values: a610 a303 
=== Succesors ===
=== Usages ===
v1448 j1089 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v206 values: a610 a303  <|@  <|@
f <@~|@floating>@ <|@
tid a227 <|@
result v147|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v206 
values: a226 a172 
=== Succesors ===
=== Usages ===
?45 a341 j1096 v72 v1449 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v206 values: a226 a172  <|@  <|@
f <@~|@floating>@ <|@
tid a501 <|@
result v148|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n# Ljava/util/LinkedList$Node;
valueDescription: n -
=== Inputs ===
merge: v206 
values: a500 a1427 
=== Succesors ===
=== Usages ===
v348 a499 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v206 values: a500 a1427  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v207 v208 
=== Succesors ===
next: v75 
=== Usages ===
a210 a227 a501 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v207 v208 #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 133]
stamp: void
=== Inputs ===
value: a227 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a227  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 133]
stamp: void
trueSuccessorProbability: 0.8950010038144951
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v73 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v73 #falseSuccessor: v74  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v146|QWORD[.], v147|QWORD[.], v148|DWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v147|QWORD[.], y: v147|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8950010038144951 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" 
    xhandlers
    flags 
    probability 4585401311125125895
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:433) [bci: 136]
stamp: void
=== Inputs ===
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v255  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v254 
=== Predecessor ===
v73 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v148|DWORD[.]] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B49" 
    successors 
    xhandlers
    flags 
    probability 4595787459187779582
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a499 <|@
result v149|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n# Ljava/util/LinkedList$Node;
valueDescription: n -
=== Inputs ===
merge: v254 
values: a501 a1424 
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v254 values: a501 a1424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v255 v257 
=== Succesors ===
next: v354 
=== Usages ===
a499 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v255 v257 #next: v354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:433) [bci: 139]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1441 
value: a499 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1103 
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1441 value: a499 stateAfter: - lastLocationAccess: - #next: j1103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1103 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:433) [bci: 139]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v1107 
=== Usages ===
j1104 
=== Predecessor ===
v354 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v1107  <|@  <|@
f <@~|@floating>@ <|@
tid j1104 <|@
result v150|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:433) [bci: 139]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1103 
y: i791 
=== Succesors ===
=== Usages ===
v1499 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1103 y: i791  <|@  <|@
f <@~|@floating>@ <|@
tid v1499 <|@
result [v150|QWORD[*] + v65|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1104 
index: j814 
=== Succesors ===
=== Usages ===
v1107 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1104 index: j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1107 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:433) [bci: 139]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1499 
value: i919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
j1103 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1499 value: i919 stateAfter: - lastLocationAccess: - #next: v355  <|@  <|@
f <@~|@floating>@ <|@
tid i1406 <|@
result v151|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:439) [bci: 166]
stamp: i32
=== Inputs ===
x: i1415 
y: i1417 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1415 y: i1417  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:439) [bci: 167]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1437 
value: i1406 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1433 
=== Usages ===
=== Predecessor ===
v1107 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1437 value: i1406 stateAfter: - lastLocationAccess: - #next: i1433  <|@  <|@
f <@~|@floating>@ <|@
tid v1450 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v357 i1433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1433 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:440) [bci: 172]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1450 
=== Succesors ===
next: v357 
=== Usages ===
i1408 
=== Predecessor ===
v355 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1450 #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid i1408 <|@
result v153|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:440) [bci: 176]
stamp: i32
=== Inputs ===
x: i1433 
y: i69 
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1433 y: i69  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:440) [bci: 177]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1450 
value: i1408 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v242 
=== Usages ===
=== Predecessor ===
i1433 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1450 value: i1408 stateAfter: - lastLocationAccess: - #next: v242  <|@  <|@
f <@*|@fixed>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:441) [bci: 181]
stamp: void
=== Inputs ===
result: i69 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i69 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v149|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v149|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v150|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = ADD (x: v3|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v151|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = ADD (x: v152|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v153|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors 
    xhandlers
    flags 
    probability 4571568418415182010
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:435) [bci: 145]
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
tid ?45 <|@
d <@d|@=== Debug Properties ===
bci: 131
code: ResolvedJavaMethodBytecode<LinkedList.addAll(int, Collection)>
duringCall: false
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 432
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - i1417 a20 a227 - - - - - - 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - i1417 a20 a227 - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1448 <|@
result [v146|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a210 
index: - 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a210 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a341 <|@
result v154|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:435) [bci: 149]
op: Compress
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a227 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$Node.next
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:435) [bci: 149]
nullCheck: true
stamp: void
=== Inputs ===
stateBefore: ?45 
guard: - 
address: v1448 
value: a341 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1089 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: ?45 guard: - address: v1448 value: a341 stateAfter: - lastLocationAccess: - #next: j1089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1089 <|@
result v146|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:435) [bci: 149]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a210 
=== Succesors ===
next: v1093 
=== Usages ===
j1090 
=== Predecessor ===
v343 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a210 #next: v1093  <|@  <|@
f <@~|@floating>@ <|@
tid j1090 <|@
result v155|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:435) [bci: 149]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1089 
y: i791 
=== Succesors ===
=== Usages ===
v1497 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1089 y: i791  <|@  <|@
f <@~|@floating>@ <|@
tid v1497 <|@
result [v155|QWORD[*] + v65|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1090 
index: j814 
=== Succesors ===
=== Usages ===
v1093 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1090 index: j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:435) [bci: 149]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1497 
value: i919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
j1089 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1497 value: i919 stateAfter: - lastLocationAccess: - #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid v1449 <|@
result [v147|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a227 
index: - 
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a227 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$Node.prev
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:436) [bci: 156]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1449 
value: a501 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1096 
=== Usages ===
=== Predecessor ===
v1093 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1449 value: a501 stateAfter: - lastLocationAccess: - #next: j1096  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1096 <|@
result v147|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList.addAll(LinkedList.java:436) [bci: 156]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a227 
=== Succesors ===
next: v1100 
=== Usages ===
j1097 
=== Predecessor ===
v348 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a227 #next: v1100  <|@  <|@
f <@~|@floating>@ <|@
tid j1097 <|@
result v156|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:436) [bci: 156]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1096 
y: i791 
=== Succesors ===
=== Usages ===
v1498 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1096 y: i791  <|@  <|@
f <@~|@floating>@ <|@
tid v1498 <|@
result [v156|QWORD[*] + v65|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1097 
index: j814 
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1097 index: j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList.addAll(LinkedList.java:436) [bci: 156]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1498 
value: i919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
j1096 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1498 value: i919 stateAfter: - lastLocationAccess: - #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
result v157|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:439) [bci: 166]
stamp: i32
=== Inputs ===
x: i1415 
y: i1417 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1415 y: i1417  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:439) [bci: 167]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1437 
value: i88 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1434 
=== Usages ===
=== Predecessor ===
v1100 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1437 value: i88 stateAfter: - lastLocationAccess: - #next: i1434  <|@  <|@
f <@~|@floating>@ <|@
tid v1534 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v352 i1434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1434 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:440) [bci: 172]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1534 
=== Succesors ===
next: v352 
=== Usages ===
i92 
=== Predecessor ===
v349 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1534 #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
result v159|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:440) [bci: 176]
stamp: i32
=== Inputs ===
x: i1434 
y: i69 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1434 y: i69  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:440) [bci: 177]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1534 
value: i92 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
i1434 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1534 value: i92 stateAfter: - lastLocationAccess: - #next: v95  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:441) [bci: 181]
stamp: void
=== Inputs ===
result: i69 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i69 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v154|DWORD[.] = COMPRESSPOINTER (input: v147|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
locals: v0|QWORD[.] - - - v5|DWORD Object[null] v147|QWORD[.] - - - - - - 
>@ <|@ instruction MOV (x: [v146|QWORD[.] + 16], y: v154|DWORD[.]) size: DWORD state [bci:131] <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[*] = SHR v146|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v155|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v147|QWORD[.] + 20], y: v148|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[*] = SHR v147|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v156|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v157|DWORD = ADD (x: v3|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v157|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = ADD (x: v158|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
stamp: void
=== Inputs ===
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v445  <|@  <|@
tid a198 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@5c0bbe7a
hasIdentity: true
objectId: 0
stamp: a!# Ljava/util/LinkedList$Node;
type: HotSpotType<Ljava/util/LinkedList$Node;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?248 ?203 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?248 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a198 
materializedValue: a481 
=== Succesors ===
=== Usages ===
?203 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a198 materializedValue: a481  <|@  <|@
tid ?203 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<LinkedList.addAll(int, Collection)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 422
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - i1417 a198 a226 a554 i1417 i69 - - - 
virtualObjectMappings: ?248 
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - i1417 a198 a226 a554 i1417 i69 - - - virtualObjectMappings: ?248  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 321
nodeSourcePosition: at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 79]
reason: BoundsCheckException
speculation: Object[d.a@1129090812]
stamp: void
=== Inputs ===
stateBefore: ?203 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1401 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?203  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1129090812] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -82203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v160|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: v0|QWORD[.] - - - v5|DWORD v86|QWORD[.] v79|QWORD[.] v17|QWORD[.] v5|DWORD int[1|0x1] - - - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v812 
=== Usages ===
=== Predecessor ===
v810 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v812  <|@  <|@
f <@~|@floating>@ <|@
tid j806 <|@
result v161|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
=== Inputs ===
x: j804 
y: j805 
=== Succesors ===
=== Usages ===
j804 j811 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j804 y: j805  <|@  <|@
f <@~|@floating>@ <|@
tid j815 <|@
result v162|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64 [4431593472 - 36028801450557439] ⇈00ffffffffffffff
=== Inputs ===
x: j793 
y: j814 
=== Succesors ===
=== Usages ===
j811 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j793 y: j814  <|@  <|@
f <@~|@floating>@ <|@
tid j811 <|@
result v163|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: i64
=== Inputs ===
x: j806 
y: j815 
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j806 y: j815  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
address: j811 
value: i12 
=== Succesors ===
next: v813 
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j811 value: i12 #next: v813  <|@  <|@
f <@*|@fixed>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:380) [bci: 8]
at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
loopBegin: v803 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v803  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[*] = DEC v66|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[*] = ADD (x: v61|QWORD[*], y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[*] = ADD (x: v162|QWORD[*], y: v161|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v163|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v161|QWORD[*]] destination: B98 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1170 
=== Usages ===
=== Predecessor ===
v1172 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1170  <|@  <|@
f <@*|@fixed>@ <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1165 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1171 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1165  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD] destination: B99 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList; target_method=toArray target_method_class=Ljava/util/ArrayList; position=at java.util.LinkedList.addAll(LinkedList.java:408) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v684  <|@  <|@
f <@~|@floating>@ <|@
tid i685 <|@
result int[-71219|0xfffffffffffee9cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -71219
stableDimension: 0
stamp: i32 [-71219] ⇊00000000fffee9cd ⇈00000000fffee9cd
stampKind: i32
value: int[-71219|0xfffffffffffee9cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
v414 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-71219|0xfffffffffffee9cd]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B2" "B100" "B4" "B6" "B56" "B54" "B8" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i679 <|@
result v164|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-132705 - -69651] ⇊00000000fffcc085
valueDescription: i32
=== Inputs ===
merge: v676 
values: i683 i685 i687 i691 i693 i695 i697 
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v676 values: i683 i685 i687 i691 i693 i695 i697  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v682 v684 v686 v690 v692 v694 v696 
=== Succesors ===
next: v681 
=== Usages ===
i679 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v682 v684 v686 v690 v692 v694 v696 #next: v681  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i679 
speculation: a20 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v676 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i679 speculation: a20  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v164|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v164|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B100" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1f4b6c53 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction CMP [v2|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v4|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v4|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHL v5|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v9|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = AND v10|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVSXD v11|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v12|QWORD + v6|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v12|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v12|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v12|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 8], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = CMOVE (falseValue: v5|DWORD, ~trueValue: v18|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD v19|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v20|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = LEA [v20|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = LEA [v17|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = LEA [v4|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|QWORD, y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v20|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|V128_DWORD[....] = H [v23|QWORD[*] + v27|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v27|QWORD * 4], input: v29|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v27|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v20|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|V64_DWORD[..] = H [v23|QWORD[*] + v31|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v31|QWORD * 4], input: v33|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v31|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = DEC v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|QWORD, y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v23|QWORD[*] + v35|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD[.] + v35|QWORD * 4], y: v37|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B13" "B27" "B26" 
    successors "B29" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v5|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B42" "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHL v55|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVSXD v56|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = LEA [v17|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = ADD (x: v58|QWORD[.], y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[*] = SHR v59|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = LEA [v17|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = SHR v62|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[*] = SUB (x: v60|QWORD[*], ~y: v61|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[*] = INC v63|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD[*]] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[*] = DEC v66|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[*] = ADD (x: v61|QWORD[*], y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[*] = ADD (x: v162|QWORD[*], y: v161|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v163|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v161|QWORD[*]] destination: B98 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B98" 
    successors "B47" "B98" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611686018427387904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v66|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B46 -> B47 falseDestination: B46 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8950010038144951 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4606236671919826776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1646513595885204 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B61" 
    xhandlers
    flags 
    probability 4604909342826098953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = UNCOMPRESSPOINTER (input: v67|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v68|QWORD[.], Object[null], v67|DWORD[.]] destination: B50 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B50" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4605699371196639596
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD[.], v79|QWORD[.], v80|DWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA [v81|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4605624129680125964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v81|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4605699371196639596
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE v85|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOV [v87|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[*]], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v85|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[.] = MOV [v17|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[*] + 12], y: v89|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v85|QWORD[*] + 20], y: v80|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD[.] = COMPRESSPOINTER (input: v86|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v78|QWORD[.], y: v78|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.19710495908321068 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4604216323593261784
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v78|QWORD[.] + 16], y: v90|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[*] = SHR v78|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v92|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605699371196639596
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B97" 
    xhandlers
    flags 
    probability 4601195771569269100
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" 
    xhandlers
    flags 
    probability 4601195771569269100
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B68" "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605699371196639596
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v86|QWORD[.]] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4604460509397492437
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = LEA [v97|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v98|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4604397656498970277
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v98|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v97|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v97|QWORD] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B74" 
    successors "B72" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4604460509397492437
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE v100|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD = MOV [v87|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v100|QWORD[*]], y: v102|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v100|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v103|DWORD[.] = MOV [v17|QWORD[.] + v94|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v100|QWORD[*] + 12], y: v103|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v100|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[.] = COMPRESSPOINTER (input: v95|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v100|QWORD[*] + 20], y: v104|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[.] = COMPRESSPOINTER (input: v101|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v95|QWORD[.] + 16], y: v105|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[*] = SHR v95|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v106|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = INC v94|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v107|DWORD, v101|QWORD[.]] destination: B76 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B76" 
    successors "B73" "B77" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605699371196639596
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|DWORD, v95|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v5|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|DWORD, y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8353486404114796 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4574695193164519458
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v168|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v168|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: v0|QWORD[.] - - - v5|DWORD v95|QWORD[.] v79|QWORD[.] v17|QWORD[.] v5|DWORD v94|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v99|QWORD[.]] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = LEA [v17|QWORD[.] + v20|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = SUB (x: v38|QWORD, ~y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v40|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v40|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v45|QWORD * 4], input: v47|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v45|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v40|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v49|QWORD * 4], input: v51|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA [v49|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = DEC v40|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + v53|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 4601195771569269100
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4595100210704046671
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v90|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v91|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B95" 
    xhandlers
    flags 
    probability 4594477336665446716
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|DWORD[.]] destination: B49 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B49" 
    successors 
    xhandlers
    flags 
    probability 4595787459187779582
    begin_IR
      LIR
      nr   -1  <|@ instruction [v149|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v149|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v150|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = ADD (x: v3|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v151|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = ADD (x: v152|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v153|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B78" 
    xhandlers
    flags 
    probability 4594123467487124058
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = LEA [v5|DWORD - 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|QWORD[.], v94|DWORD] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4595529310877515678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = LEA [v111|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v112|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4595465697971645875
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v112|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v111|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v111|QWORD] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4595529310877515678
    begin_IR
      LIR
      nr   -1  <|@ instruction [v114|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = MOVE v114|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = MOV [v87|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|QWORD[*]], y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v114|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v117|DWORD[.] = MOV [v17|QWORD[.] + v110|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|QWORD[*] + 12], y: v117|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD[.] = COMPRESSPOINTER (input: v109|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v114|QWORD[*] + 20], y: v118|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD[.] = COMPRESSPOINTER (input: v115|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD[.] + 16], y: v119|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[*] = SHR v109|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v120|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = LEA [v121|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4595465697971645875
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v121|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v121|QWORD] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors "B78" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4595529310877515678
    begin_IR
      LIR
      nr   -1  <|@ instruction [v125|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE v125|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [v87|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v125|QWORD[*]], y: v127|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v125|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = MOVSXD v110|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD[.] = MOV [v17|QWORD[.] + v128|QWORD * 4 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v125|QWORD[*] + 12], y: v129|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v125|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v125|QWORD[*] + 20], y: v119|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v130|DWORD[.] = COMPRESSPOINTER (input: v126|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD[.] + 16], y: v130|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[*] = SHR v115|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v131|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = LEA [v110|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v126|QWORD[.], v132|DWORD] destination: B85 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B85" 
    successors "B79" "B86" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4596783152798378834
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|QWORD[.], v110|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v108|DWORD, y: v110|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8353486404114796 condition: > trueDestination: B78 -> B79 falseDestination: B78 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4565785274850276684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v167|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v167|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: v0|QWORD[.] - - - v5|DWORD v109|QWORD[.] v79|QWORD[.] v17|QWORD[.] v5|DWORD v110|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|QWORD[.]] destination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4565785274850276684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v166|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = INC v110|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v166|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: v0|QWORD[.] - - - v5|DWORD v115|QWORD[.] v79|QWORD[.] v17|QWORD[.] v5|DWORD v123|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v124|QWORD[.]] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B32" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B43 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B43" 
    successors "B33" "B43" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v39|QWORD[.] + v43|QWORD * 4], input: v42|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v43|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD] destination: B99 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B99" 
    successors "B18" "B99" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|V256_DWORD[........] = H [v23|QWORD[*] + v24|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v22|QWORD[.] + v24|QWORD * 4], input: v25|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v24|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|QWORD, y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B55" 
    xhandlers
    flags 
    probability 4592230395704689984
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = SAR v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7154629099120353 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4590077595182696277
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590077595182696277
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD[.]] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4592230395704689984
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction v76|DWORD[.] = MOV [v75|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1646513595885204 condition: < trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4590984647627490071
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.], v75|QWORD[.], v76|DWORD[.]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    probability 4585176188719247058
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|QWORD[.], v110|DWORD] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4593197421261589614
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD = LEA [v136|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v137|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4593112091255605367
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v137|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v136|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v136|QWORD] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B87" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4593197421261589614
    begin_IR
      LIR
      nr   -1  <|@ instruction [v139|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE v139|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = MOV [v87|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v139|QWORD[*]], y: v141|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v139|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v142|DWORD[.] = MOV [v17|QWORD[.] + v134|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v139|QWORD[*] + 12], y: v142|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v139|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v139|QWORD[*] + 20], y: v135|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v143|DWORD[.] = COMPRESSPOINTER (input: v140|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v133|QWORD[.] + 16], y: v143|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[*] = SHR v133|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v144|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = INC v134|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v140|QWORD[.], v145|DWORD] destination: B91 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B91" 
    successors "B88" "B92" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4594275468956652522
    begin_IR
      LIR
      nr   -1  <|@ instruction [v133|QWORD[.], v134|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v135|DWORD[.] = COMPRESSPOINTER (input: v133|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v134|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8353486404114796 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4563103943281933756
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v165|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: v0|QWORD[.] - - - v5|DWORD v133|QWORD[.] v79|QWORD[.] v17|QWORD[.] v5|DWORD v134|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v138|QWORD[.]] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4584268423496398765
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4584268423496398765
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v73|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD[.]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B93" 
    xhandlers
    flags 
    probability 4582384808343661977
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v133|QWORD[.], v79|QWORD[.], v135|DWORD[.]] destination: B92 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B59" 
    successors "B94" "B96" 
    xhandlers
    flags 
    probability 4586016110657813278
    begin_IR
      LIR
      nr   -1  <|@ instruction [v146|QWORD[.], v147|QWORD[.], v148|DWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v147|QWORD[.], y: v147|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8950010038144951 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" 
    xhandlers
    flags 
    probability 4585401311125125895
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v148|DWORD[.]] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B93" 
    xhandlers
    flags 
    probability 4580640213717223586
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.], v75|QWORD[.], v76|DWORD[.]] destination: B59 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = UNCOMPRESSPOINTER (input: v8|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4575969078837925879
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v169|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v169|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD[.]] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors 
    xhandlers
    flags 
    probability 4571568418415182010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v154|DWORD[.] = COMPRESSPOINTER (input: v147|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
locals: v0|QWORD[.] - - - v5|DWORD Object[null] v147|QWORD[.] - - - - - - 
>@ <|@ instruction MOV (x: [v146|QWORD[.] + 16], y: v154|DWORD[.]) size: DWORD state [bci:131] <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[*] = SHR v146|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v155|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v147|QWORD[.] + 20], y: v148|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[*] = SHR v147|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v156|QWORD[*] + v65|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v157|DWORD = ADD (x: v3|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v157|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = ADD (x: v158|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-79379|0xfffffffffffec9ed]] destination: B56 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B2" "B100" "B4" "B6" "B56" "B54" "B8" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr   -1  <|@ instruction [v164|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v164|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-75027|0xfffffffffffedaed]] destination: B6 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1129090812] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -82203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v160|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: v0|QWORD[.] - - - v5|DWORD v86|QWORD[.] v79|QWORD[.] v17|QWORD[.] v5|DWORD int[1|0x1] - - - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-70675|0xfffffffffffeebed]] destination: B4 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-71219|0xfffffffffffee9cd]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-78611|0xfffffffffffecced]] destination: B54 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-69651|0xfffffffffffeefed]] destination: B2 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-132705|0xfffffffffffdf99f]] destination: B8 -> B101 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #20         // checkPositionIndex:(int)void
     5: aload_2       
     6: invokeinterface#21, 1      // java.util.Collection.toArray:()java.lang.Object[]
    11: astore_3      
    12: aload_3       
    13: arraylength   
    14: istore        4
    16: iload         4
    18: ifne          23
    21: iconst_0      
    22: ireturn       
    23: iload_1       
    24: aload_0       
    25: getfield      #1          // size:int
    28: if_icmpne     43
    31: aconst_null   
    32: astore        6
    34: aload_0       
    35: getfield      #6          // last:java.util.LinkedList$Node
    38: astore        5
    40: goto          57
    43: aload_0       
    44: iload_1       
    45: invokevirtual #22         // node:(int)java.util.LinkedList$Node
    48: astore        6
    50: aload         6
    52: getfield      #7          // java.util.LinkedList$Node.prev:java.util.LinkedList$Node
    55: astore        5
    57: aload_3       
    58: astore        7
    60: aload         7
    62: arraylength   
    63: istore        8
    65: iconst_0      
    66: istore        9
    68: iload         9
    70: iload         8
    72: if_icmpge     131
    75: aload         7
    77: iload         9
    79: aaload        
    80: astore        10
    82: aload         10
    84: astore        11
    86: new           #6          // java.util.LinkedList$Node
    89: dup           
    90: aload         5
    92: aload         11
    94: aconst_null   
    95: invokespecial #5          // java.util.LinkedList$Node.<init>:(java.util.LinkedList$Node, java.lang.Object, java.util.LinkedList$Node)void
    98: astore        12
   100: aload         5
   102: ifnonnull     114
   105: aload_0       
   106: aload         12
   108: putfield      #4          // first:java.util.LinkedList$Node
   111: goto          121
   114: aload         5
   116: aload         12
   118: putfield      #9          // java.util.LinkedList$Node.next:java.util.LinkedList$Node
   121: aload         12
   123: astore        5
   125: iinc          
   128: goto          68
   131: aload         6
   133: ifnonnull     145
   136: aload_0       
   137: aload         5
   139: putfield      #6          // last:java.util.LinkedList$Node
   142: goto          159
   145: aload         5
   147: aload         6
   149: putfield      #9          // java.util.LinkedList$Node.next:java.util.LinkedList$Node
   152: aload         6
   154: aload         5
   156: putfield      #7          // java.util.LinkedList$Node.prev:java.util.LinkedList$Node
   159: aload_0       
   160: dup           
   161: getfield      #1          // size:int
   164: iload         4
   166: iadd          
   167: putfield      #1          // size:int
   170: aload_0       
   171: dup           
   172: getfield      #8          // java.util.AbstractList.modCount:int
   175: iconst_1      
   176: iadd          
   177: putfield      #8          // java.util.AbstractList.modCount:int
   180: iconst_1      
   181: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B100" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1f4b6c53 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rcx:0, r13:0, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: r13|QWORD[.] r14|DWORD rcx|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction CMP [rcx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   32  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction r11|DWORD[.] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rcx:0, r11:0, r13:0, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: r13|QWORD[.] r14|DWORD rcx|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   50  <|@ instruction r8|DWORD = MOV [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   80  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   82  <|@ instruction r9|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   84  <|@ instruction rbx|DWORD = SHL r8|DWORD y: 2 size: DWORD <|@ <|@
      nr   86  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD <|@ <|@
      nr   90  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr   92  <|@ instruction rdi|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  136  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  138  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [rsi|QWORD + 8], y: r9|DWORD) size: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rsi|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  154  <|@ instruction CMP (x: r8|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction rdx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr  158  <|@ instruction rsi|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  160  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  172  <|@ instruction rbx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  174  <|@ instruction r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  176  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  212  <|@ instruction CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  214  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction xmm0|V128_DWORD[....] = H [r11|QWORD[*] + rdi|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  224  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  226  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4] size: QWORD <|@ <|@
      nr  228  <|@ instruction rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  234  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  236  <|@ instruction CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction xmm0|V64_DWORD[..] = H [r11|QWORD[*] + rdi|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  248  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  250  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 2] size: QWORD <|@ <|@
      nr  252  <|@ instruction rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  258  <|@ instruction rdx|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  260  <|@ instruction CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdx|DWORD[.] = MOV [r11|QWORD[*] + rdi|QWORD * 4] size: DWORD <|@ <|@
      nr  272  <|@ instruction MOV (x: [rbx|QWORD[.] + rdi|QWORD * 4], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B13" "B27" "B26" 
    successors "B29" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  280  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B45" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B42" "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rsi|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  402  <|@ instruction rsi|DWORD = SHL rsi|DWORD y: 2 size: DWORD <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD[.] = ADD (x: rdx|QWORD[.], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[*] = SUB (x: rdx|QWORD[*], ~y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD[*] = INC rdx|QWORD[*] size: QWORD <|@ <|@
      nr  420  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  422  <|@ instruction stack:64|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1156  <|@ instruction rdx|QWORD[*] = DEC rdx|QWORD[*] size: QWORD <|@ <|@
      nr 1158  <|@ instruction rbx|QWORD[*] = ADD (x: rsi|QWORD[*], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1160  <|@ instruction rbx|QWORD[*] = ADD (x: rbx|QWORD[*], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr 1162  <|@ instruction MOVB (x: [rbx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1164  <|@ instruction JUMP ~[] destination: B98 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B98" 
    successors "B47" "B98" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611686018427387904
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  428  <|@ instruction CMP rdx|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B46 -> B47 falseDestination: B46 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction BRANCH trueDestinationProbability: 0.8950010038144951 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4606236671919826776
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  442  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  444  <|@ instruction BRANCH trueDestinationProbability: 0.1646513595885204 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B61" 
    xhandlers
    flags 
    probability 4604909342826098953
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr  454  <|@ instruction rbx|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction stack:72|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B50 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B50" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4605699371196639596
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  534  <|@ instruction stack:80|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  538  <|@ instruction rax|QWORD = LEA [rdi|QWORD + 24] size: QWORD <|@ <|@
      nr  540  <|@ instruction CMP (x: rax|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  542  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4605624129680125964
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction MOV (x: [r15|QWORD + 96], y: rax|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + 216] instr: 0 <|@ <|@
      nr  586  <|@ instruction rcx|QWORD[*] = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4605699371196639596
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  592  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>} <|@ <|@
      nr  596  <|@ instruction rax|QWORD = MOV [r14|QWORD + 168] size: QWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [rcx|QWORD[*]], y: rax|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV [rcx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr  602  <|@ instruction rax|DWORD[.] = MOV [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  604  <|@ instruction MOV (x: [rcx|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV (x: [rcx|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [rcx|QWORD[*] + 20], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  610  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr  612  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  614  <|@ instruction BRANCH trueDestinationProbability: 0.19710495908321068 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4604216323593261784
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  632  <|@ instruction MOVB (x: [rdx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4605699371196639596
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction CMP r8|DWORD y: 2 size: DWORD <|@ <|@
      nr  640  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" "B97" 
    xhandlers
    flags 
    probability 4601195771569269100
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction rdx|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  650  <|@ instruction CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" 
    xhandlers
    flags 
    probability 4601195771569269100
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B68" "B70" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605699371196639596
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction rbx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4604460509397492437
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  678  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  680  <|@ instruction rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  682  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4604397656498970277
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  724  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0 <|@ <|@
      nr  726  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B74" 
    successors "B72" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4604460509397492437
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  732  <|@ instruction rcx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rax|QWORD = MOV [r14|QWORD + 168] size: QWORD <|@ <|@
      nr  736  <|@ instruction MOV (x: [rdx|QWORD[*]], y: rax|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr  740  <|@ instruction rax|DWORD[.] = MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  742  <|@ instruction MOV (x: [rdx|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [rdx|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  746  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction MOV (x: [rdx|QWORD[*] + 20], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  750  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  754  <|@ instruction rbx|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  756  <|@ instruction MOVB (x: [rbx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  758  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B76 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B76" 
    successors "B73" "B77" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605699371196639596
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  668  <|@ instruction CMP r8|DWORD y: 3 size: DWORD <|@ <|@
      nr  670  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr  672  <|@ instruction CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  674  <|@ instruction BRANCH trueDestinationProbability: 0.8353486404114796 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4574695193164519458
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction stack:88|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  696  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  698  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: stack:32|QWORD[.] - - - r13|DWORD stack:88|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] r13|DWORD r14|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68] <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rbx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction r10|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>} <|@ <|@
      nr  712  <|@ instruction r11|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction r8|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction r11|QWORD[.] = LEA [r9|QWORD[.] + rsi|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  288  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  292  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  328  <|@ instruction CMP (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  340  <|@ instruction J (address: [r11|QWORD[.] + rbx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = LEA [rbx|QWORD + 4] size: QWORD <|@ <|@
      nr  344  <|@ instruction rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  352  <|@ instruction CMP (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  354  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  364  <|@ instruction J (address: [r11|QWORD[.] + rbx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  366  <|@ instruction rsi|QWORD = LEA [rbx|QWORD + 2] size: QWORD <|@ <|@
      nr  368  <|@ instruction rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  374  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  376  <|@ instruction CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction MOV (x: [r11|QWORD[.] + rbx|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B28" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B13 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 4601195771569269100
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4595100210704046671
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  622  <|@ instruction MOVB (x: [rdx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B95" 
    xhandlers
    flags 
    probability 4594477336665446716
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B49 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B49" 
    successors 
    xhandlers
    flags 
    probability 4595787459187779582
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1086  <|@ instruction MOV (x: [r13|QWORD[.] + 24], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1088  <|@ instruction rax|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1090  <|@ instruction MOVB (x: [rax|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1092  <|@ instruction r10|DWORD = ADD (x: stack:36|DWORD, y: stack:40|DWORD) size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1098  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1102  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1104  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B78" 
    xhandlers
    flags 
    probability 4594123467487124058
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  766  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction r10|DWORD = LEA [r13|DWORD - 2] size: DWORD <|@ <|@
      nr  772  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction r8|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction r11|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>} <|@ <|@
      nr  780  <|@ instruction rbx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4595529310877515678
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  794  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  796  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  798  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  800  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4595465697971645875
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  834  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  836  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4595529310877515678
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  844  <|@ instruction rdi|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = MOV [r14|QWORD + 168] size: QWORD <|@ <|@
      nr  848  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  850  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr  852  <|@ instruction rdx|DWORD[.] = MOV [r9|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  854  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  856  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  858  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr  860  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  862  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr  864  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  866  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  868  <|@ instruction MOVB (x: [r11|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  872  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  874  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  876  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4595465697971645875
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  918  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  922  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors "B78" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4595529310877515678
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  928  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  930  <|@ instruction rcx|QWORD = MOV [r14|QWORD + 168] size: QWORD <|@ <|@
      nr  932  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr  936  <|@ instruction rcx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  938  <|@ instruction rcx|DWORD[.] = MOV [r9|QWORD[.] + rcx|QWORD * 4 + 20] size: DWORD <|@ <|@
      nr  940  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  942  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  944  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  946  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr  948  <|@ instruction MOV (x: [rdi|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  950  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  952  <|@ instruction MOVB (x: [rdi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  954  <|@ instruction r8|DWORD = LEA [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  956  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction JUMP ~[] destination: B85 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B85" 
    successors "B79" "B86" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4596783152798378834
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  788  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  790  <|@ instruction BRANCH trueDestinationProbability: 0.8353486404114796 condition: > trueDestination: B78 -> B79 falseDestination: B78 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4565785274850276684
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  806  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  810  <|@ instruction r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ st <@st|@reference-map: [r13:0, stack:16, stack:24, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: stack:32|QWORD[.] - - - stack:40|DWORD r13|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:40|DWORD r14|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68] <|@ <|@
      nr  816  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction r8|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction r11|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>} <|@ <|@
      nr  826  <|@ instruction rbx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~[] destination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4565785274850276684
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  880  <|@ instruction r13|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction stack:88|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  884  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  888  <|@ instruction r8|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  890  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  892  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  894  <|@ instruction stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ st <@st|@reference-map: [r13:0, stack:8, stack:16, stack:24, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: stack:32|QWORD[.] - - - stack:40|DWORD stack:88|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:40|DWORD stack:92|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68] <|@ <|@
      nr  898  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rax|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction r8|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>} <|@ <|@
      nr  910  <|@ instruction rbx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  306  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B32" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B43 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B43" 
    successors "B33" "B43" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  312  <|@ instruction J (address: [r11|QWORD[.] + rbx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = LEA [rbx|QWORD + 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction CMP (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1168  <|@ instruction JUMP ~[] destination: B99 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B99" 
    successors "B18" "B99" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  194  <|@ instruction xmm0|V256_DWORD[........] = H [r11|QWORD[*] + rdi|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  196  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  198  <|@ instruction rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD <|@ <|@
      nr  200  <|@ instruction CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B55" 
    xhandlers
    flags 
    probability 4592230395704689984
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rsi|DWORD = SAR r10|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction CMP (x: rsi|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.7154629099120353 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4590077595182696277
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  472  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590077595182696277
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  478  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4592230395704689984
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  512  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r9:0, r13:0, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: r13|QWORD[.] r14|DWORD rcx|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr  514  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr  516  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  518  <|@ instruction BRANCH trueDestinationProbability: 0.1646513595885204 condition: < trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4590984647627490071
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction rdx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    probability 4585176188719247058
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  962  <|@ instruction r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction r10|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction r11|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4593197421261589614
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  984  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  986  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  988  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  990  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4593112091255605367
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1020  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1022  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B87" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4593197421261589614
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1030  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr 1034  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr 1038  <|@ instruction rcx|DWORD[.] = MOV [r9|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1040  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr 1042  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1044  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr 1046  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1050  <|@ instruction r13|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1052  <|@ instruction MOVB (x: [r13|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1054  <|@ instruction r14|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr 1056  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B91 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B91" 
    successors "B88" "B92" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4594275468956652522
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  976  <|@ instruction rbx|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr  978  <|@ instruction CMP (x: r8|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  980  <|@ instruction BRANCH trueDestinationProbability: 0.8353486404114796 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4563103943281933756
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  994  <|@ instruction stack:44|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  998  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1000  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1002  <|@ st <@st|@reference-map: [r13:0, stack:16, stack:24, stack:52, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: stack:32|QWORD[.] - - - stack:40|DWORD r13|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:40|DWORD r14|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68] <|@ <|@
      nr 1004  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>} <|@ <|@
      nr 1010  <|@ instruction r11|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4584268423496398765
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rsi|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr  492  <|@ instruction CMP (x: rsi|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4584268423496398765
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  506  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B93" 
    xhandlers
    flags 
    probability 4582384808343661977
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1062  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction rdi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B92 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B59" 
    successors "B94" "B96" 
    xhandlers
    flags 
    probability 4586016110657813278
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 1070  <|@ instruction TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1072  <|@ instruction BRANCH trueDestinationProbability: 0.8950010038144951 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" 
    xhandlers
    flags 
    probability 4585401311125125895
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1076  <|@ instruction rsi|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction r11|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B93" 
    xhandlers
    flags 
    probability 4580640213717223586
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B59 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction stack:44|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction rsi|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [r13:0, stack:40, stack:52, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: r13|QWORD[.] r14|DWORD stack:56|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  114  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4575969078837925879
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction stack:44|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction stack:92|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  556  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  558  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  560  <|@ instruction r14|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ st <@st|@reference-map: [r13:0, stack:8, stack:16, stack:24, stack:40, stack:52, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: r13|QWORD[.] stack:92|DWORD stack:56|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  564  <|@ instruction rcx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction r11|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors 
    xhandlers
    flags 
    probability 4571568418415182010
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1108  <|@ instruction r14|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1112  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1114  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr 1116  <|@ st <@st|@reference-map: [rbx:0, rsi:0, rdi:0, r13:0]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
locals: r13|QWORD[.] - - - stack:40|DWORD Object[null] rsi|QWORD[.] - - - - - - 
>@ <|@ instruction MOV (x: [rdi|QWORD[.] + 16], y: rax|DWORD[.]) size: DWORD state [bci:131] <|@ <|@
      nr 1118  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1120  <|@ instruction MOVB (x: [rdi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1122  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr 1124  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1126  <|@ instruction MOVB (x: [rsi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1128  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: stack:40|DWORD) size: DWORD <|@ <|@
      nr 1130  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1134  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1136  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1138  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1140  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction r10|DWORD = MOVE input: int[-79379|0xfffffffffffec9ed] <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B56 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B2" "B100" "B4" "B6" "B56" "B54" "B8" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1178  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1180  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@reference-map: [rcx:0, r13:0]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: r13|QWORD[.] r14|DWORD rcx|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOVE input: int[-75027|0xfffffffffffedaed] <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B6 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1144  <|@ instruction r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1146  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1129090812] <|@ <|@
      nr 1148  <|@ instruction MOV [r15|QWORD + 668] y: -82203 size: DWORD <|@ <|@
      nr 1150  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1152  <|@ st <@st|@reference-map: [rdi:0, r9:0, r10:0, r13:0]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: r13|QWORD[.] - - - r8|DWORD rdi|QWORD[.] r10|QWORD[.] r9|QWORD[.] r8|DWORD int[1|0x1] - - - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|DWORD = MOVE input: int[-70675|0xfffffffffffeebed] <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1172  <|@ instruction r10|DWORD = MOVE input: int[-71219|0xfffffffffffee9cd] <|@ <|@
      nr 1174  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction r10|DWORD = MOVE input: int[-78611|0xfffffffffffecced] <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B54 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction r10|DWORD = MOVE input: int[-69651|0xfffffffffffeefed] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction r10|DWORD = MOVE input: int[-132705|0xfffffffffffdf99f] <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B8 -> B101 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #20         // checkPositionIndex:(int)void
     5: aload_2       
     6: invokeinterface#21, 1      // java.util.Collection.toArray:()java.lang.Object[]
    11: astore_3      
    12: aload_3       
    13: arraylength   
    14: istore        4
    16: iload         4
    18: ifne          23
    21: iconst_0      
    22: ireturn       
    23: iload_1       
    24: aload_0       
    25: getfield      #1          // size:int
    28: if_icmpne     43
    31: aconst_null   
    32: astore        6
    34: aload_0       
    35: getfield      #6          // last:java.util.LinkedList$Node
    38: astore        5
    40: goto          57
    43: aload_0       
    44: iload_1       
    45: invokevirtual #22         // node:(int)java.util.LinkedList$Node
    48: astore        6
    50: aload         6
    52: getfield      #7          // java.util.LinkedList$Node.prev:java.util.LinkedList$Node
    55: astore        5
    57: aload_3       
    58: astore        7
    60: aload         7
    62: arraylength   
    63: istore        8
    65: iconst_0      
    66: istore        9
    68: iload         9
    70: iload         8
    72: if_icmpge     131
    75: aload         7
    77: iload         9
    79: aaload        
    80: astore        10
    82: aload         10
    84: astore        11
    86: new           #6          // java.util.LinkedList$Node
    89: dup           
    90: aload         5
    92: aload         11
    94: aconst_null   
    95: invokespecial #5          // java.util.LinkedList$Node.<init>:(java.util.LinkedList$Node, java.lang.Object, java.util.LinkedList$Node)void
    98: astore        12
   100: aload         5
   102: ifnonnull     114
   105: aload_0       
   106: aload         12
   108: putfield      #4          // first:java.util.LinkedList$Node
   111: goto          121
   114: aload         5
   116: aload         12
   118: putfield      #9          // java.util.LinkedList$Node.next:java.util.LinkedList$Node
   121: aload         12
   123: astore        5
   125: iinc          
   128: goto          68
   131: aload         6
   133: ifnonnull     145
   136: aload_0       
   137: aload         5
   139: putfield      #6          // last:java.util.LinkedList$Node
   142: goto          159
   145: aload         5
   147: aload         6
   149: putfield      #9          // java.util.LinkedList$Node.next:java.util.LinkedList$Node
   152: aload         6
   154: aload         5
   156: putfield      #7          // java.util.LinkedList$Node.prev:java.util.LinkedList$Node
   159: aload_0       
   160: dup           
   161: getfield      #1          // size:int
   164: iload         4
   166: iadd          
   167: putfield      #1          // size:int
   170: aload_0       
   171: dup           
   172: getfield      #8          // java.util.AbstractList.modCount:int
   175: iconst_1      
   176: iadd          
   177: putfield      #8          // java.util.AbstractList.modCount:int
   180: iconst_1      
   181: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B100" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1f4b6c53 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rcx:0, r13:0, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: r13|QWORD[.] r14|DWORD rcx|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction CMP [rcx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   32  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction r11|DWORD[.] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rcx:0, r11:0, r13:0, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: r13|QWORD[.] r14|DWORD rcx|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   50  <|@ instruction r8|DWORD = MOV [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   80  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   82  <|@ instruction r9|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   84  <|@ instruction rbx|DWORD = SHL r8|DWORD y: 2 size: DWORD <|@ <|@
      nr   86  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD <|@ <|@
      nr   88  <|@ instruction rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD <|@ <|@
      nr   90  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr   92  <|@ instruction rdi|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  136  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  138  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  142  <|@ instruction MOV (x: [rsi|QWORD + 8], y: r9|DWORD) size: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B28" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rsi|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  154  <|@ instruction CMP (x: r8|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction rdx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr  158  <|@ instruction rsi|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  160  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B28 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B19" "B17" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  172  <|@ instruction rbx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  174  <|@ instruction r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  176  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  182  <|@ instruction rdi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B14 -> B19 falseDestination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B22" "B21" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  212  <|@ instruction CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  214  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B22 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction xmm0|V128_DWORD[....] = H [r11|QWORD[*] + rdi|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  224  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  226  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4] size: QWORD <|@ <|@
      nr  228  <|@ instruction rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B19" 
    successors "B25" "B24" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  234  <|@ instruction rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  236  <|@ instruction CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B25 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction xmm0|V64_DWORD[..] = H [r11|QWORD[*] + rdi|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  248  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  250  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 2] size: QWORD <|@ <|@
      nr  252  <|@ instruction rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B22" 
    successors "B28" "B27" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  258  <|@ instruction rdx|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  260  <|@ instruction CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B28 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdx|DWORD[.] = MOV [r11|QWORD[*] + rdi|QWORD * 4] size: DWORD <|@ <|@
      nr  272  <|@ instruction MOV (x: [rbx|QWORD[.] + rdi|QWORD * 4], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B12" "B27" "B25" 
    successors "B29" "B45" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction rdx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  280  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B28" "B42" "B40" 
    successors "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rsi|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  402  <|@ instruction rsi|DWORD = SHL rsi|DWORD y: 2 size: DWORD <|@ <|@
      nr  404  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD[.] = ADD (x: rdx|QWORD[.], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[*] = SUB (x: rdx|QWORD[*], ~y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD[*] = INC rdx|QWORD[*] size: QWORD <|@ <|@
      nr  420  <|@ instruction r11|QWORD = MOVE input: long[4431593472|0x10824c000] <|@ <|@
      nr  422  <|@ instruction stack:64|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B46" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1156  <|@ instruction rdx|QWORD[*] = DEC rdx|QWORD[*] size: QWORD <|@ <|@
      nr 1158  <|@ instruction rbx|QWORD[*] = ADD (x: rsi|QWORD[*], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1160  <|@ instruction rbx|QWORD[*] = ADD (x: rbx|QWORD[*], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr 1162  <|@ instruction MOVB (x: [rbx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1164  <|@ instruction JUMP ~[] destination: B98 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B98" 
    successors "B47" "B98" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611686018427387904
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  428  <|@ instruction CMP rdx|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B46 -> B47 falseDestination: B46 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction BRANCH trueDestinationProbability: 0.8950010038144951 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B95" "B50" 
    xhandlers
    flags 
    probability 4606236671919826776
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  442  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  444  <|@ instruction BRANCH trueDestinationProbability: 0.1646513595885204 condition: < trueDestination: B48 -> B95 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B61" 
    xhandlers
    flags 
    probability 4604909342826098953
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr  454  <|@ instruction rbx|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction stack:72|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B50 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B50" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4605699371196639596
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  534  <|@ instruction stack:80|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  538  <|@ instruction rax|QWORD = LEA [rdi|QWORD + 24] size: QWORD <|@ <|@
      nr  540  <|@ instruction CMP (x: rax|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  542  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4605624129680125964
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction MOV (x: [r15|QWORD + 96], y: rax|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + 216] instr: 0 <|@ <|@
      nr  586  <|@ instruction rcx|QWORD[*] = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B62" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4605699371196639596
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  592  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>} <|@ <|@
      nr  596  <|@ instruction rax|QWORD = MOV [r14|QWORD + 168] size: QWORD <|@ <|@
      nr  598  <|@ instruction MOV (x: [rcx|QWORD[*]], y: rax|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV [rcx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr  602  <|@ instruction rax|DWORD[.] = MOV [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  604  <|@ instruction MOV (x: [rcx|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  606  <|@ instruction MOV (x: [rcx|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  608  <|@ instruction MOV (x: [rcx|QWORD[*] + 20], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  610  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr  612  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  614  <|@ instruction BRANCH trueDestinationProbability: 0.19710495908321068 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4604216323593261784
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  630  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  632  <|@ instruction MOVB (x: [rdx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" "B66" 
    successors "B71" "B69" 
    xhandlers
    flags 
    probability 4605699371196639596
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction CMP r8|DWORD y: 2 size: DWORD <|@ <|@
      nr  640  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B71 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" "B97" 
    xhandlers
    flags 
    probability 4601195771569269100
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction rdx|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  650  <|@ instruction CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B71 falseDestination: B69 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" 
    successors "B72" 
    xhandlers
    flags 
    probability 4605699371196639596
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction rbx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  664  <|@ instruction JUMP ~[] destination: B71 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4604460509397492437
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  678  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  680  <|@ instruction rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  682  <|@ instruction CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4604397656498970277
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  724  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0 <|@ <|@
      nr  726  <|@ instruction rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" "B74" 
    successors "B72" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4604460509397492437
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  732  <|@ instruction rcx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rax|QWORD = MOV [r14|QWORD + 168] size: QWORD <|@ <|@
      nr  736  <|@ instruction MOV (x: [rdx|QWORD[*]], y: rax|QWORD) size: QWORD <|@ <|@
      nr  738  <|@ instruction MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr  740  <|@ instruction rax|DWORD[.] = MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  742  <|@ instruction MOV (x: [rdx|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  744  <|@ instruction MOV (x: [rdx|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  746  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction MOV (x: [rdx|QWORD[*] + 20], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  750  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr  752  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  754  <|@ instruction rbx|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  756  <|@ instruction MOVB (x: [rbx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  758  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  760  <|@ instruction rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B76 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" "B76" 
    successors "B73" "B77" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605699371196639596
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  668  <|@ instruction CMP r8|DWORD y: 3 size: DWORD <|@ <|@
      nr  670  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r8|DWORD) condition: < <|@ <|@
      nr  672  <|@ instruction CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  674  <|@ instruction BRANCH trueDestinationProbability: 0.8353486404114796 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4574695193164519458
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction stack:88|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  696  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  698  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: stack:32|QWORD[.] - - - r13|DWORD stack:88|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] r13|DWORD r14|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68] <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rbx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction r10|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  710  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>} <|@ <|@
      nr  712  <|@ instruction r11|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction r8|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction r11|QWORD[.] = LEA [r9|QWORD[.] + rsi|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  288  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  292  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  294  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B37" "B36" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  328  <|@ instruction CMP (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  330  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B37 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  340  <|@ instruction J (address: [r11|QWORD[.] + rbx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = LEA [rbx|QWORD + 4] size: QWORD <|@ <|@
      nr  344  <|@ instruction rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B34" 
    successors "B40" "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  352  <|@ instruction CMP (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  354  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B37 -> B40 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  364  <|@ instruction J (address: [r11|QWORD[.] + rbx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  366  <|@ instruction rsi|QWORD = LEA [rbx|QWORD + 2] size: QWORD <|@ <|@
      nr  368  <|@ instruction rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" "B37" 
    successors "B45" "B42" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  374  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  376  <|@ instruction CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B45 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction MOV (x: [r11|QWORD[.] + rbx|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4595100210704046671
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  622  <|@ instruction MOVB (x: [rdx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" "B48" 
    successors 
    xhandlers
    flags 
    probability 4595787459187779582
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1086  <|@ instruction MOV (x: [r13|QWORD[.] + 24], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1088  <|@ instruction rax|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1090  <|@ instruction MOVB (x: [rax|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1092  <|@ instruction r10|DWORD = ADD (x: stack:36|DWORD, y: stack:40|DWORD) size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1098  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1102  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1104  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B78" 
    xhandlers
    flags 
    probability 4594123467487124058
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  766  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  768  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction r10|DWORD = LEA [r13|DWORD - 2] size: DWORD <|@ <|@
      nr  772  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction r8|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction r11|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  778  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>} <|@ <|@
      nr  780  <|@ instruction rbx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  782  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4595529310877515678
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  794  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  796  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  798  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  800  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B79 -> B80 falseDestination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4595465697971645875
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  834  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  836  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4595529310877515678
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  844  <|@ instruction rdi|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = MOV [r14|QWORD + 168] size: QWORD <|@ <|@
      nr  848  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  850  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr  852  <|@ instruction rdx|DWORD[.] = MOV [r9|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  854  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  856  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  858  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr  860  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  862  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr  864  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  866  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  868  <|@ instruction MOVB (x: [r11|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  870  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  872  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  874  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  876  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4595465697971645875
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  918  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  922  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  924  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B83" 
    successors "B78" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4595529310877515678
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  928  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  930  <|@ instruction rcx|QWORD = MOV [r14|QWORD + 168] size: QWORD <|@ <|@
      nr  932  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  934  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr  936  <|@ instruction rcx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  938  <|@ instruction rcx|DWORD[.] = MOV [r9|QWORD[.] + rcx|QWORD * 4 + 20] size: DWORD <|@ <|@
      nr  940  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  942  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  944  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  946  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr  948  <|@ instruction MOV (x: [rdi|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  950  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  952  <|@ instruction MOVB (x: [rdi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  954  <|@ instruction r8|DWORD = LEA [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  956  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ instruction JUMP ~[] destination: B85 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B85" 
    successors "B79" "B86" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4596783152798378834
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  788  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  790  <|@ instruction BRANCH trueDestinationProbability: 0.8353486404114796 condition: > trueDestination: B78 -> B79 falseDestination: B78 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4565785274850276684
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  806  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  810  <|@ instruction r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ st <@st|@reference-map: [r13:0, stack:16, stack:24, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: stack:32|QWORD[.] - - - stack:40|DWORD r13|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:40|DWORD r14|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68] <|@ <|@
      nr  816  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction r8|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction r11|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>} <|@ <|@
      nr  826  <|@ instruction rbx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~[] destination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4565785274850276684
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  880  <|@ instruction r13|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction stack:88|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  884  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  886  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  888  <|@ instruction r8|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr  890  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  892  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  894  <|@ instruction stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ st <@st|@reference-map: [r13:0, stack:8, stack:16, stack:24, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: stack:32|QWORD[.] - - - stack:40|DWORD stack:88|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:40|DWORD stack:92|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68] <|@ <|@
      nr  898  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rax|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  902  <|@ instruction rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction r8|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>} <|@ <|@
      nr  910  <|@ instruction rbx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  306  <|@ instruction rbx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B32" 
    successors "B34" "B32" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  312  <|@ instruction J (address: [r11|QWORD[.] + rbx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  314  <|@ instruction rbx|QWORD = LEA [rbx|QWORD + 8] size: QWORD <|@ <|@
      nr  316  <|@ instruction CMP (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B34 falseDestination: B32 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B17" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  194  <|@ instruction xmm0|V256_DWORD[........] = H [r11|QWORD[*] + rdi|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  196  <|@ instruction J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  198  <|@ instruction rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD <|@ <|@
      nr  200  <|@ instruction CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B19 falseDestination: B17 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B55" 
    xhandlers
    flags 
    probability 4592230395704689984
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rsi|DWORD = SAR r10|DWORD size: DWORD <|@ <|@
      nr  464  <|@ instruction CMP (x: rsi|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction BRANCH trueDestinationProbability: 0.7154629099120353 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4590077595182696277
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  472  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B58" 
    xhandlers
    flags 
    probability 4590077595182696277
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  478  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B53 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B53" "B57" 
    successors "B93" "B60" 
    xhandlers
    flags 
    probability 4592230395704689984
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  512  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r9:0, r13:0, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: r13|QWORD[.] r14|DWORD rcx|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction rbx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr  514  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr  516  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  518  <|@ instruction BRANCH trueDestinationProbability: 0.1646513595885204 condition: < trueDestination: B58 -> B93 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4590984647627490071
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction rdx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B87" 
    xhandlers
    flags 
    probability 4585176188719247058
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  962  <|@ instruction r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction r10|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction r11|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" "B90" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4593197421261589614
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  984  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  986  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  988  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  990  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4593112091255605367
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1020  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1022  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr 1024  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" "B89" 
    successors "B87" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4593197421261589614
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1030  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr 1034  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed} <|@ <|@
      nr 1038  <|@ instruction rcx|DWORD[.] = MOV [r9|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1040  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr 1042  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1044  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr 1046  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1050  <|@ instruction r13|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1052  <|@ instruction MOVB (x: [r13|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1054  <|@ instruction r14|DWORD = INC r14|DWORD size: DWORD <|@ <|@
      nr 1056  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction JUMP ~[] destination: B91 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B91" 
    successors "B88" "B92" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4594275468956652522
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  976  <|@ instruction rbx|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr  978  <|@ instruction CMP (x: r8|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  980  <|@ instruction BRANCH trueDestinationProbability: 0.8353486404114796 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B91" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4563103943281933756
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  994  <|@ instruction stack:44|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  998  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1000  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1002  <|@ st <@st|@reference-map: [r13:0, stack:16, stack:24, stack:52, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: stack:32|QWORD[.] - - - stack:40|DWORD r13|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:40|DWORD r14|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68] <|@ <|@
      nr 1004  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>} <|@ <|@
      nr 1010  <|@ instruction r11|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction JUMP ~[] destination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4584268423496398765
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rsi|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr  492  <|@ instruction CMP (x: rsi|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4584268423496398765
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  506  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B93" 
    xhandlers
    flags 
    probability 4582384808343661977
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1062  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction rdi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B92 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" "B58" 
    successors "B94" "B96" 
    xhandlers
    flags 
    probability 4586016110657813278
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 1070  <|@ instruction TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr 1072  <|@ instruction BRANCH trueDestinationProbability: 0.8950010038144951 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" 
    xhandlers
    flags 
    probability 4585401311125125895
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1076  <|@ instruction rsi|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1080  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1082  <|@ instruction JUMP ~[] destination: B94 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction stack:44|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction r9|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction rsi|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [r13:0, stack:40, stack:52, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: r13|QWORD[.] r14|DWORD stack:56|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  114  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4575969078837925879
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction stack:44|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction stack:92|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  556  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  558  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  560  <|@ instruction r14|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  562  <|@ st <@st|@reference-map: [r13:0, stack:8, stack:16, stack:24, stack:40, stack:52, stack:64]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: r13|QWORD[.] stack:92|DWORD stack:56|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  564  <|@ instruction rcx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  568  <|@ instruction rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction r11|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  572  <|@ instruction r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors 
    xhandlers
    flags 
    probability 4571568418415182010
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1108  <|@ instruction r14|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr 1110  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1112  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1114  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3 <|@ <|@
      nr 1116  <|@ st <@st|@reference-map: [rbx:0, rsi:0, rdi:0, r13:0]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131]
locals: r13|QWORD[.] - - - stack:40|DWORD Object[null] rsi|QWORD[.] - - - - - - 
>@ <|@ instruction MOV (x: [rdi|QWORD[.] + 16], y: rax|DWORD[.]) size: DWORD state [bci:131] <|@ <|@
      nr 1118  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1120  <|@ instruction MOVB (x: [rdi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1122  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr 1124  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1126  <|@ instruction MOVB (x: [rsi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1128  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: stack:40|DWORD) size: DWORD <|@ <|@
      nr 1130  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1134  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1136  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1138  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1140  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction r10|DWORD = MOVE input: int[-79379|0xfffffffffffec9ed] <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B56 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B2" "B100" "B4" "B6" "B56" "B54" "B8" 
    successors 
    xhandlers
    flags 
    probability 2367767504090038272
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1178  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1180  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1182  <|@ st <@st|@reference-map: [rcx:0, r13:0]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0]
locals: r13|QWORD[.] r14|DWORD rcx|QWORD[.] - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOVE input: int[-75027|0xfffffffffffedaed] <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B6 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1144  <|@ instruction r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1146  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1129090812] <|@ <|@
      nr 1148  <|@ instruction MOV [r15|QWORD + 668] y: -82203 size: DWORD <|@ <|@
      nr 1150  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1152  <|@ st <@st|@reference-map: [rdi:0, r9:0, r10:0, r13:0]
live-base-pointers: []
java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68]
locals: r13|QWORD[.] - - - r8|DWORD rdi|QWORD[.] r10|QWORD[.] r9|QWORD[.] r8|DWORD int[1|0x1] - - - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|DWORD = MOVE input: int[-70675|0xfffffffffffeebed] <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1172  <|@ instruction r10|DWORD = MOVE input: int[-71219|0xfffffffffffee9cd] <|@ <|@
      nr 1174  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction r10|DWORD = MOVE input: int[-78611|0xfffffffffffecced] <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B54 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction r10|DWORD = MOVE input: int[-69651|0xfffffffffffeefed] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B101" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction r10|DWORD = MOVE input: int[-132705|0xfffffffffffdf99f] <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B8 -> B101 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokespecial #20         // checkPositionIndex:(int)void
     5: aload_2       
     6: invokeinterface#21, 1      // java.util.Collection.toArray:()java.lang.Object[]
    11: astore_3      
    12: aload_3       
    13: arraylength   
    14: istore        4
    16: iload         4
    18: ifne          23
    21: iconst_0      
    22: ireturn       
    23: iload_1       
    24: aload_0       
    25: getfield      #1          // size:int
    28: if_icmpne     43
    31: aconst_null   
    32: astore        6
    34: aload_0       
    35: getfield      #6          // last:java.util.LinkedList$Node
    38: astore        5
    40: goto          57
    43: aload_0       
    44: iload_1       
    45: invokevirtual #22         // node:(int)java.util.LinkedList$Node
    48: astore        6
    50: aload         6
    52: getfield      #7          // java.util.LinkedList$Node.prev:java.util.LinkedList$Node
    55: astore        5
    57: aload_3       
    58: astore        7
    60: aload         7
    62: arraylength   
    63: istore        8
    65: iconst_0      
    66: istore        9
    68: iload         9
    70: iload         8
    72: if_icmpge     131
    75: aload         7
    77: iload         9
    79: aaload        
    80: astore        10
    82: aload         10
    84: astore        11
    86: new           #6          // java.util.LinkedList$Node
    89: dup           
    90: aload         5
    92: aload         11
    94: aconst_null   
    95: invokespecial #5          // java.util.LinkedList$Node.<init>:(java.util.LinkedList$Node, java.lang.Object, java.util.LinkedList$Node)void
    98: astore        12
   100: aload         5
   102: ifnonnull     114
   105: aload_0       
   106: aload         12
   108: putfield      #4          // first:java.util.LinkedList$Node
   111: goto          121
   114: aload         5
   116: aload         12
   118: putfield      #9          // java.util.LinkedList$Node.next:java.util.LinkedList$Node
   121: aload         12
   123: astore        5
   125: iinc          
   128: goto          68
   131: aload         6
   133: ifnonnull     145
   136: aload_0       
   137: aload         5
   139: putfield      #6          // last:java.util.LinkedList$Node
   142: goto          159
   145: aload         5
   147: aload         6
   149: putfield      #9          // java.util.LinkedList$Node.next:java.util.LinkedList$Node
   152: aload         6
   154: aload         5
   156: putfield      #7          // java.util.LinkedList$Node.prev:java.util.LinkedList$Node
   159: aload_0       
   160: dup           
   161: getfield      #1          // size:int
   164: iload         4
   166: iadd          
   167: putfield      #1          // size:int
   170: aload_0       
   171: dup           
   172: getfield      #8          // java.util.AbstractList.modCount:int
   175: iconst_1      
   176: iadd          
   177: putfield      #8          // java.util.AbstractList.modCount:int
   180: iconst_1      
   181: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c24504c8bee4c896c2440448bf2817908addeadde0f85480800004585f60f8c4f080000458b5510448954243c453bf20f8f25080000448b5914438504dc448b411044894424384585c00f84dc0700004585c00f8c22080000498b7760498b5770468b0cdd08000000418bd8c1e3028d5b1783e3f84863db488bfb4803fe483bfa0f87a206000049897f600f188433c00000000f188433000100000f188433400100000f188433800100004489460c48c7060100000044894e084c8bce428b34dd0c000000443bc6418bd00f4fd64863f24883fe010f8c75000000488d56f8498d59104e8d1cdd100000004885d248c7c7000000000f8dd8040000488d56fc483bfa0f8f12000000c4c17a6f04bbc5fa7f04bb488d5704488bfa488d56fe483bfa0f8f13000000c4c1f96e04bbc4e1f97e04bb488d5702488bfa488bd648ffca483bfa0f8f07000000418b14bb8914bb4963d0483bd60f8fdc010000418bf0ffcec1e6024863f6498d51104803d648c1ea09498d711048c1ee09482bd648ffc249bb00c02408010000004c895c2420e91e0000000f1f8400000000000f1f800000000048ffca488bde4903db4803da4488234883fa017deb453bd60f852b040000418b75184183f8010f8cea0100008bd648c1e2038bde48c7442418000000004c894c2410498b7f60488d4718493b47700f876e050000498947600f1887d8000000488bcf488bf949beaddeaddeaddeadde498b86a8000000488901c74108addeadde418b411089410c44896110895914488bcf48c1e9034885d20f8464010000894a1048c1ea094688241a4183f8020f8c0e000000418bd0ffca443bc20f86d0050000488bdf41ba01000000e96000000090498b5760488d4a18493b4f700f876400000049894f600f1882d8000000488bca498b86a8000000488902c74208addeadde438b44911089420c44896210488bc348c1e803894214488bd148c1ea0389531048c1eb094688241b41ffc2488bd94183f803ba02000000410f4cd0413bd27f8fe91201000048895c240848baaddeaddeaddeadde488bf2ba02000000b901000000458bf2458be8e80000000090488bd0488b5c2408458bd649beaddeaddeaddeadde4c8b5c24204c8b4c2410458bc5e958ffffff4d8d5cb110482bd6488d72f84885f60f8d4d02000048c7c300000000488d72fc483bde0f8f11000000c5f9efc0c4c17a7f049b488d7304488bde488d72fe483bde0f8f11000000c5f9efc0c4c1f97e049b488d7302488bde48ffca483bda0f8fc0fdffff4589249be9b7fdffff41894d14498bd548c1ea094688241ae993feffff41897518498bc548c1e80946882418448b54243c440354243845895510b8010000004103450c4189450cb801000000488b6c24504883c458850500000000c5f877c3458bf2458be8458d55fe4489542434458bc64c8bdb49beaddeaddeaddeadde488b5c24204c8b4c2410e9c000000066660f1f840000000000498b7760488d5618493b57700f87b2000000498957600f1886d8000000488bfe498b96a8000000488916c74608addeadde438b54811089560c44896610498bd348c1ea03895614488bc748c1e8034189431049c1eb094588241b498b7760488d5618493b57700f879f000000498957600f1886d8000000488bd6498b8ea800000048890ec74608addeadde4963c8418b4c8914894e0c44896610894614488bf248c1ee0389771048c1ef094488241f458d40024c8bda453bd00f8f41ffffffe93501000048beaddeaddeaddeaddeba02000000b9010000004d8beb458bf0e80000000090488bf0458bc64d8bdd448b54243449beaddeaddeaddeadde488b5c24204c8b4c2410e912ffffff448be848897c2408458bf048beaddeaddeaddeadde458bc641ffc0ba02000000b9010000004489442404e80000000090488bf0418bc5488b7c2408458bc6448b54243449beaddeaddeaddeadde488b5c24204c8b4c2410e910ffffffc5f9efc048c7c3000000000f1f80000000000f1f8000000000c4c17e7f049b488d5b08483bde7ef1e98dfdffff660f1f440000660f1f440000c4c17e6f04bbc5fe7f04bb488d7f08483bfa7eece90ffbffff418bf2d1fe413bf60f8ef70000004183fe010f8d67020000418b751448c1e6038b5e148bfb48c1e7034183f8010f8cf50000004889742418488bd7e9b4fbffff4d8beb4d8bd64c8bdb458bf0448b442438e95b00000090498b7760488d5618493b57700f8759000000498957600f1886d8000000488bd6498b8aa800000048890ec74608addeadde438b4cb110894e0c44896610895e14488bf248c1ee034189751049c1ed094788641d0041ffc64c8bea498bdd48c1eb03453bc67f9ae95e000000895c243448beaddeaddeaddeaddeba02000000b901000000e80000000090488bf08b5c243449baaddeaddeaddeadde4c8b5c24204c8b4c2410448b442438e96fffffff418bf2ffce413bf60f8f13010000418b751848c1e603e900ffffff488b742418498bfd4885f60f859b0000008bf34c8b6c2440e990fcffff44895c243448894c242849c1e103498bf18b542438b900000000e800000000904c8bc8448b442438448b5c2434448b54243c488b4c2428e958f9ffff895c2434488954240848894c2428448974240448beaddeaddeaddeaddeba02000000b9010000004d8bf3e80000000090488bc88b5c2434488b5424084d8bde4c8b4c2410448b442438448b54243ce94dfaffff4c8b742420448b54243c4c8b6c2440488bc648c1e80389471048c1ef0946882437895e1448c1ee0946882436440354243845895510b8010000004103450c4189450cb801000000488b6c24504883c458850500000000c5f877c341baedc9feff4589979c0200004d89a7a8020000e8000000009041baeddafeffebe44c8b54241849bbaddeaddeaddeadde41c7879c020000e5befeff4d899fa8020000e8000000009041baedebfeffebb541bacde9feffebad41baedccfeffeba541baedeffeffeb9d41ba9ff9fdffeb95e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1f4b6c53 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 59 12 CMP [rcx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} state [bci:0]  <||@
  Comment 59 [rcx:0, r13:0, stack:64]at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |r14|DWORD  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 59 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 {meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}}  <||@
  Comment 66 14 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B100  <||@
  Comment 72 block B1 null  <||@
  Comment 72 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 72 18 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 75 20 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 81 block B3 null  <||@
  Comment 81 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 81 30 r10|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 85 32 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 90 34 CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 93 36 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 99 block B5 null  <||@
  Comment 99 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 99 46 r11|DWORD[.] = MOV [rcx|QWORD[.] + 20] size: DWORD  <||@
  Comment 103 48 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:0]  <||@
  Comment 103 [rcx:0, r11:0, r13:0, stack:64]at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |r14|DWORD  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 103 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 107 50 r8|DWORD = MOV [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 111 52 stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 116 54 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 119 56 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 125 block B7 null  <||@
  Comment 125 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 125 66 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 128 68 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 134 block B9 null  <||@
  Comment 134 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 134 78 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 138 80 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 142 82 r9|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 150 84 rbx|DWORD = SHL r8|DWORD y: 2 size: DWORD  <||@
  Comment 156 86 rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD  <||@
  Comment 159 88 rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD  <||@
  Comment 162 90 rbx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 165 92 rdi|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 171 94 CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 174 96 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 180 block B11 null  <||@
  Comment 180 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 180 128 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 184 130 AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 192 132 AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 200 134 AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 208 136 AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 216 138 MOV (x: [rsi|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 220 140 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 227 142 MOV (x: [rsi|QWORD + 8], y: r9|DWORD) size: DWORD  <||@
  Comment 231 144 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 231 146 r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 234 148 JUMP ~[] destination: B11 -> B12  <||@
  Comment 234 block B12 null  <||@
  Comment 234 150 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 234 152 rsi|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 242 154 CMP (x: r8|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 245 156 rdx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rsi|DWORD) condition: >  <||@
  Comment 251 158 rsi|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 254 160 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 258 162 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B28 falseDestination: B12 -> B14  <||@
  Comment 264 block B14 null  <||@
  Comment 264 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 264 170 rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 268 172 rbx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD  <||@
  Comment 272 174 r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 280 176 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 283 182 rdi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 290 178 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B14 -> B19 falseDestination: B14 -> B17  <||@
  Comment 296 block B19 null  <||@
  Comment 296 208 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 296 210 rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 300 212 CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 303 214 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B22 falseDestination: B19 -> B21  <||@
  Comment 309 block B21 null  <||@
  Comment 309 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 309 222 xmm0|V128_DWORD[....] = H [r11|QWORD[*] + rdi|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 315 224 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 320 226 rdx|QWORD = LEA [rdi|QWORD + 4] size: QWORD  <||@
  Comment 324 228 rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 327 230 JUMP ~[] destination: B21 -> B22  <||@
  Comment 327 block B22 null  <||@
  Comment 327 232 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 327 234 rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 331 236 CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 334 238 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B25 falseDestination: B22 -> B24  <||@
  Comment 340 block B24 null  <||@
  Comment 340 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 340 246 xmm0|V64_DWORD[..] = H [r11|QWORD[*] + rdi|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 346 248 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 352 250 rdx|QWORD = LEA [rdi|QWORD + 2] size: QWORD  <||@
  Comment 356 252 rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 359 254 JUMP ~[] destination: B24 -> B25  <||@
  Comment 359 block B25 null  <||@
  Comment 359 256 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 359 258 rdx|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 365 260 CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 368 262 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B28 falseDestination: B25 -> B27  <||@
  Comment 374 block B27 null  <||@
  Comment 374 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 374 270 rdx|DWORD[.] = MOV [r11|QWORD[*] + rdi|QWORD * 4] size: DWORD  <||@
  Comment 378 272 MOV (x: [rbx|QWORD[.] + rdi|QWORD * 4], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 381 274 JUMP ~[] destination: B27 -> B28  <||@
  Comment 381 block B28 null  <||@
  Comment 381 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 381 278 rdx|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 384 280 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 387 282 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45  <||@
  Comment 393 block B45 null  <||@
  Comment 393 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 393 400 rsi|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 398 402 rsi|DWORD = SHL rsi|DWORD y: 2 size: DWORD  <||@
  Comment 401 404 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 404 406 rdx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD  <||@
  Comment 408 408 rdx|QWORD[.] = ADD (x: rdx|QWORD[.], y: rsi|QWORD) size: QWORD  <||@
  Comment 411 410 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 415 412 rsi|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD  <||@
  Comment 419 414 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 423 416 rdx|QWORD[*] = SUB (x: rdx|QWORD[*], ~y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 426 418 rdx|QWORD[*] = INC rdx|QWORD[*] size: QWORD  <||@
  Comment 429 420 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 439 422 stack:64|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 444 424 JUMP ~[] destination: B45 -> B46  <||@
  Comment 449 block B98 loop 2 depth 1 header:803|LoopBegin  <||@
  Comment 449 1154 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 464 1156 rdx|QWORD[*] = DEC rdx|QWORD[*] size: QWORD  <||@
  Comment 467 1158 rbx|QWORD[*] = ADD (x: rsi|QWORD[*], y: r11|QWORD) size: QWORD  <||@
  Comment 473 1160 rbx|QWORD[*] = ADD (x: rbx|QWORD[*], y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 476 1162 MOVB (x: [rbx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 479 1164 JUMP ~[] destination: B98 -> B46  <||@
  Comment 479 block B46 loop 2 depth 1 header:803|LoopBegin  <||@
  Comment 479 426 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 479 428 CMP rdx|QWORD[*] y: 1 size: QWORD  <||@
  Comment 483 430 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B46 -> B47 falseDestination: B46 -> B98  <||@
  Comment 485 block B47 null  <||@
  Comment 485 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 485 434 CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 488 436 BRANCH trueDestinationProbability: 0.8950010038144951 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51  <||@
  Comment 494 block B48 null  <||@
  Comment 494 438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 494 440 rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 498 442 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 502 444 BRANCH trueDestinationProbability: 0.1646513595885204 condition: < trueDestination: B48 -> B95 falseDestination: B48 -> B50  <||@
  Comment 508 block B50 null  <||@
  Comment 508 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 508 452 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 514 454 rbx|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 516 456 stack:72|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 525 458 JUMP ~[] destination: B50 -> B61  <||@
  Comment 525 block B61 null  <||@
  Comment 525 532 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 525 534 stack:80|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 530 536 rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 534 538 rax|QWORD = LEA [rdi|QWORD + 24] size: QWORD  <||@
  Comment 538 540 CMP (x: rax|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 542 542 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63  <||@
  Comment 548 block B63 null  <||@
  Comment 548 580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 548 582 MOV (x: [r15|QWORD + 96], y: rax|QWORD) size: QWORD  <||@
  Comment 552 584 AMD64PREFETCH ~[rdi|QWORD + 216] instr: 0  <||@
  Comment 559 586 rcx|QWORD[*] = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 562 588 JUMP ~[] destination: B63 -> B64  <||@
  Comment 562 block B64 null  <||@
  Comment 562 590 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 562 592 rdi|QWORD[.] = MOVE rcx|QWORD[*] moveKind: QWORD  <||@
  Comment 565 594 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}  <||@
  Comment 565 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}}  <||@
  Comment 575 596 rax|QWORD = MOV [r14|QWORD + 168] size: QWORD  <||@
  Comment 582 598 MOV (x: [rcx|QWORD[*]], y: rax|QWORD) size: QWORD  <||@
  Comment 585 600 MOV [rcx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}  <||@
  Comment 585 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}}  <||@
  Comment 592 602 rax|DWORD[.] = MOV [r9|QWORD[.] + 16] size: DWORD  <||@
  Comment 596 604 MOV (x: [rcx|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 599 606 MOV (x: [rcx|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 603 608 MOV (x: [rcx|QWORD[*] + 20], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 606 610 rcx|DWORD[.] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 613 612 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 616 614 BRANCH trueDestinationProbability: 0.19710495908321068 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66  <||@
  Comment 622 block B66 null  <||@
  Comment 622 626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 622 628 MOV (x: [rdx|QWORD[.] + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 625 630 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 629 632 MOVB (x: [rdx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 633 634 JUMP ~[] destination: B66 -> B67  <||@
  Comment 633 block B67 null  <||@
  Comment 633 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 633 638 CMP r8|DWORD y: 2 size: DWORD  <||@
  Comment 637 640 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B71 falseDestination: B67 -> B69  <||@
  Comment 643 block B69 null  <||@
  Comment 643 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 643 648 rdx|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 648 650 CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 651 652 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B71 falseDestination: B69 -> B97  <||@
  Comment 657 block B71 null  <||@
  Comment 657 658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 657 660 rbx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 660 662 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 666 664 JUMP ~[] destination: B71 -> B72  <||@
  Comment 671 block B73 loop 3 depth 1 header:36|LoopBegin  <||@
  Comment 671 676 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 672 678 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 676 680 rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD  <||@
  Comment 680 682 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 684 684 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B75  <||@
  Comment 690 block B75 loop 3 depth 1 header:36|LoopBegin  <||@
  Comment 690 720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 690 722 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 694 724 AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0  <||@
  Comment 701 726 rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 701 728 JUMP ~[] destination: B75 -> B76  <||@
  Comment 701 block B76 loop 3 depth 1 header:36|LoopBegin  <||@
  Comment 701 730 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 701 732 rcx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 704 734 rax|QWORD = MOV [r14|QWORD + 168] size: QWORD  <||@
  Comment 711 736 MOV (x: [rdx|QWORD[*]], y: rax|QWORD) size: QWORD  <||@
  Comment 714 738 MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}  <||@
  Comment 714 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}}  <||@
  Comment 721 740 rax|DWORD[.] = MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 726 742 MOV (x: [rdx|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 729 744 MOV (x: [rdx|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 733 746 rax|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 740 748 MOV (x: [rdx|QWORD[*] + 20], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 743 750 rdx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 750 752 MOV (x: [rbx|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 753 754 rbx|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 757 756 MOVB (x: [rbx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 761 758 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 764 760 rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 767 762 JUMP ~[] destination: B76 -> B72  <||@
  Comment 767 block B72 loop 3 depth 1 header:36|LoopBegin  <||@
  Comment 767 666 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 767 668 CMP r8|DWORD y: 3 size: DWORD  <||@
  Comment 771 670 rdx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r8|DWORD) condition: <  <||@
  Comment 780 672 CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 783 674 BRANCH trueDestinationProbability: 0.8353486404114796 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B77  <||@
  Comment 790 block B74 loop 3 depth 1 header:36|LoopBegin  <||@
  Comment 790 686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 790 688 stack:88|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 795 690 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 795 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 805 692 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 808 694 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 813 696 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 818 698 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 821 700 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 824 702 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68]  <||@
  Comment 824 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 829 [stack:8, stack:16, stack:24, stack:64]at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4          |5                  |6                  |7                  |8          |9          |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |r13|DWORD  |stack:88|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |r13|DWORD  |r14|DWORD  |-   |-   |-    <||@
  Comment 830 704 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 833 706 rbx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 838 708 r10|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 841 710 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}  <||@
  Comment 841 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}}  <||@
  Comment 851 712 r11|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 856 714 r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 861 716 r8|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 864 718 JUMP ~[] destination: B74 -> B76  <||@
  Comment 869 block B29 null  <||@
  Comment 869 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 869 286 r11|QWORD[.] = LEA [r9|QWORD[.] + rsi|QWORD * 4 + 16] size: QWORD  <||@
  Comment 874 288 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 877 290 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 881 292 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 884 294 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 890 block B30 null  <||@
  Comment 890 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 890 298 rbx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 897 300 JUMP ~[] destination: B30 -> B34  <||@
  Comment 897 block B34 null  <||@
  Comment 897 324 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 897 326 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 901 328 CMP (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 904 330 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B37 falseDestination: B34 -> B36  <||@
  Comment 910 block B36 null  <||@
  Comment 910 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 910 338 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 914 340 J (address: [r11|QWORD[.] + rbx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 920 342 rsi|QWORD = LEA [rbx|QWORD + 4] size: QWORD  <||@
  Comment 924 344 rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 927 346 JUMP ~[] destination: B36 -> B37  <||@
  Comment 927 block B37 null  <||@
  Comment 927 348 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 927 350 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 931 352 CMP (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 934 354 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B37 -> B40 falseDestination: B37 -> B39  <||@
  Comment 940 block B39 null  <||@
  Comment 940 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 940 362 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 944 364 J (address: [r11|QWORD[.] + rbx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 950 366 rsi|QWORD = LEA [rbx|QWORD + 2] size: QWORD  <||@
  Comment 954 368 rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 957 370 JUMP ~[] destination: B39 -> B40  <||@
  Comment 957 block B40 null  <||@
  Comment 957 372 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 957 374 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 960 376 CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 963 378 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B45 falseDestination: B40 -> B42  <||@
  Comment 969 block B42 null  <||@
  Comment 969 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 969 386 MOV (x: [r11|QWORD[.] + rbx|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 973 388 JUMP ~[] destination: B42 -> B45  <||@
  Comment 978 block B65 null  <||@
  Comment 978 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 978 618 MOV (x: [r13|QWORD[.] + 20], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 982 620 rdx|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 989 622 MOVB (x: [rdx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 993 624 JUMP ~[] destination: B65 -> B67  <||@
  Comment 998 block B95 null  <||@
  Comment 998 1084 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 998 1086 MOV (x: [r13|QWORD[.] + 24], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1002 1088 rax|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1009 1090 MOVB (x: [rax|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1013 1092 r10|DWORD = ADD (x: stack:36|DWORD, y: stack:40|DWORD) size: DWORD  <||@
  Comment 1023 1094 MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 1027 1096 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1032 1098 rax|DWORD = ADD (x: rax|DWORD, ~y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1036 1100 MOV (x: [r13|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 1040 1102 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1045 1104 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1054 12  <||@
  Comment 1064 block B77 null  <||@
  Comment 1064 764 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1064 766 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1067 768 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1070 770 r10|DWORD = LEA [r13|DWORD - 2] size: DWORD  <||@
  Comment 1074 772 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1079 774 r8|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1082 776 r11|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1085 778 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}  <||@
  Comment 1085 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}}  <||@
  Comment 1095 780 rbx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1100 782 r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1105 784 JUMP ~[] destination: B77 -> B78  <||@
  Comment 1110 block B79 loop 4 depth 1 header:568|LoopBegin  <||@
  Comment 1110 792 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1120 794 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1124 796 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1128 798 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1132 800 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B79 -> B80 falseDestination: B79 -> B81  <||@
  Comment 1138 block B81 loop 4 depth 1 header:568|LoopBegin  <||@
  Comment 1138 832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1138 834 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1142 836 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1149 838 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1149 840 JUMP ~[] destination: B81 -> B82  <||@
  Comment 1149 block B82 loop 4 depth 1 header:568|LoopBegin  <||@
  Comment 1149 842 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1149 844 rdi|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1152 846 rdx|QWORD = MOV [r14|QWORD + 168] size: QWORD  <||@
  Comment 1159 848 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1162 850 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}  <||@
  Comment 1162 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}}  <||@
  Comment 1169 852 rdx|DWORD[.] = MOV [r9|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1174 854 MOV (x: [rsi|QWORD[*] + 12], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1177 856 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1181 858 rdx|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 1188 860 MOV (x: [rsi|QWORD[*] + 20], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1191 862 rax|DWORD[.] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 1198 864 MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1202 866 r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1206 868 MOVB (x: [r11|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1210 870 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1214 872 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1218 874 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1222 876 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B84  <||@
  Comment 1228 block B84 loop 4 depth 1 header:568|LoopBegin  <||@
  Comment 1228 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1228 918 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1232 920 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1239 922 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1239 924 JUMP ~[] destination: B84 -> B85  <||@
  Comment 1239 block B85 loop 4 depth 1 header:568|LoopBegin  <||@
  Comment 1239 926 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1239 928 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1242 930 rcx|QWORD = MOV [r14|QWORD + 168] size: QWORD  <||@
  Comment 1249 932 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 1252 934 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}  <||@
  Comment 1252 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}}  <||@
  Comment 1259 936 rcx|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 1262 938 rcx|DWORD[.] = MOV [r9|QWORD[.] + rcx|QWORD * 4 + 20] size: DWORD  <||@
  Comment 1267 940 MOV (x: [rsi|QWORD[*] + 12], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1270 942 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1274 944 MOV (x: [rsi|QWORD[*] + 20], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1277 946 rsi|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 1284 948 MOV (x: [rdi|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1287 950 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1291 952 MOVB (x: [rdi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1295 954 r8|DWORD = LEA [r8|DWORD + 2] size: DWORD  <||@
  Comment 1299 956 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1302 958 JUMP ~[] destination: B85 -> B78  <||@
  Comment 1302 block B78 loop 4 depth 1 header:568|LoopBegin  <||@
  Comment 1302 786 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1302 788 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1305 790 BRANCH trueDestinationProbability: 0.8353486404114796 condition: > trueDestination: B78 -> B79 falseDestination: B78 -> B86  <||@
  Comment 1316 block B80 loop 4 depth 1 header:568|LoopBegin  <||@
  Comment 1316 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1316 804 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1316 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1326 806 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1331 808 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1336 810 r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1339 812 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1342 814 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68]  <||@
  Comment 1342 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1347 [r13:0, stack:16, stack:24, stack:64]at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4               |5             |6                  |7                  |8               |9          |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |stack:40|DWORD  |r13|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |stack:40|DWORD  |r14|DWORD  |-   |-   |-    <||@
  Comment 1348 816 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1351 818 r8|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1354 820 r11|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1357 822 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1362 824 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}  <||@
  Comment 1362 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}}  <||@
  Comment 1372 826 rbx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1377 828 r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1382 830 JUMP ~[] destination: B80 -> B82  <||@
  Comment 1387 block B83 loop 4 depth 1 header:568|LoopBegin  <||@
  Comment 1387 878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1387 880 r13|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 1390 882 stack:88|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1395 884 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1398 886 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1398 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1408 888 r8|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 1414 890 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1419 892 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1424 894 stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1429 896 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68]  <||@
  Comment 1429 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1434 [r13:0, stack:8, stack:16, stack:24, stack:64]at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4               |5                  |6                  |7                  |8               |9               |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |stack:40|DWORD  |stack:88|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |stack:40|DWORD  |stack:92|DWORD  |-   |-   |-    <||@
  Comment 1435 898 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1438 900 rax|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 1441 902 rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1446 904 r8|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1449 906 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1454 908 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}  <||@
  Comment 1454 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}}  <||@
  Comment 1464 910 rbx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1469 912 r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1474 914 JUMP ~[] destination: B83 -> B85  <||@
  Comment 1479 block B31 null  <||@
  Comment 1479 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1479 304 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 1483 306 rbx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1490 308 JUMP ~[] destination: B31 -> B32  <||@
  Comment 1490 block B32 loop 1 depth 1 header:1220|LoopBegin  <||@
  Comment 1490 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1504 312 J (address: [r11|QWORD[.] + rbx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 1510 314 rbx|QWORD = LEA [rbx|QWORD + 8] size: QWORD  <||@
  Comment 1514 316 CMP (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1517 318 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B34 falseDestination: B32 -> B32  <||@
  Comment 1524 block B17 loop 0 depth 1 header:1165|LoopBegin  <||@
  Comment 1524 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1536 194 xmm0|V256_DWORD[........] = H [r11|QWORD[*] + rdi|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 1542 196 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 1547 198 rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD  <||@
  Comment 1551 200 CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1554 202 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B19 falseDestination: B17 -> B17  <||@
  Comment 1561 block B51 null  <||@
  Comment 1561 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1561 462 rsi|DWORD = SAR r10|DWORD size: DWORD  <||@
  Comment 1566 464 CMP (x: rsi|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1569 466 BRANCH trueDestinationProbability: 0.7154629099120353 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B55  <||@
  Comment 1575 block B52 null  <||@
  Comment 1575 468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1575 470 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 1579 472 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 1585 block B53 null  <||@
  Comment 1585 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1585 476 rsi|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 1589 478 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 1593 480 JUMP ~[] destination: B53 -> B58  <||@
  Comment 1593 block B58 null  <||@
  Comment 1593 510 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1593 512 rbx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD state [bci:0]  <||@
  Comment 1593 [rcx:0, rsi:0, r9:0, r13:0, stack:64]at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |r14|DWORD  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1593 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1596 514 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 1602 516 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 1606 518 BRANCH trueDestinationProbability: 0.1646513595885204 condition: < trueDestination: B58 -> B93 falseDestination: B58 -> B60  <||@
  Comment 1612 block B60 null  <||@
  Comment 1612 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1612 526 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1617 528 rdx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1620 530 JUMP ~[] destination: B60 -> B61  <||@
  Comment 1625 block B86 null  <||@
  Comment 1625 960 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1625 962 r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1628 964 r10|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 1631 966 r11|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 1634 968 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1637 970 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1642 972 JUMP ~[] destination: B86 -> B87  <||@
  Comment 1647 block B88 loop 5 depth 1 header:602|LoopBegin  <||@
  Comment 1647 982 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1648 984 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1652 986 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1656 988 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1660 990 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B90  <||@
  Comment 1666 block B90 loop 5 depth 1 header:602|LoopBegin  <||@
  Comment 1666 1018 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1666 1020 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1670 1022 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1677 1024 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1677 1026 JUMP ~[] destination: B90 -> B91  <||@
  Comment 1677 block B91 loop 5 depth 1 header:602|LoopBegin  <||@
  Comment 1677 1028 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1677 1030 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1680 1032 rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 1687 1034 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 1690 1036 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}  <||@
  Comment 1690 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}}  <||@
  Comment 1697 1038 rcx|DWORD[.] = MOV [r9|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1702 1040 MOV (x: [rsi|QWORD[*] + 12], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1705 1042 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1709 1044 MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 1712 1046 rsi|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 1719 1048 MOV (x: [r13|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1723 1050 r13|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1727 1052 MOVB (x: [r13|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1732 1054 r14|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 1735 1056 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1738 1058 JUMP ~[] destination: B91 -> B87  <||@
  Comment 1738 block B87 loop 5 depth 1 header:602|LoopBegin  <||@
  Comment 1738 974 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1738 976 rbx|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 1745 978 CMP (x: r8|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1748 980 BRANCH trueDestinationProbability: 0.8353486404114796 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B92  <||@
  Comment 1755 block B89 loop 5 depth 1 header:602|LoopBegin  <||@
  Comment 1755 992 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1755 994 stack:44|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1759 996 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1759 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1769 998 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1774 1000 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1779 1002 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68]  <||@
  Comment 1779 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1784 [r13:0, stack:16, stack:24, stack:52, stack:64]at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4               |5             |6                  |7                  |8               |9          |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |stack:40|DWORD  |r13|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |stack:40|DWORD  |r14|DWORD  |-   |-   |-    <||@
  Comment 1785 1004 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1788 1006 rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1792 1008 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}  <||@
  Comment 1792 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}}  <||@
  Comment 1802 1010 r11|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1807 1012 r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1812 1014 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1817 1016 JUMP ~[] destination: B89 -> B91  <||@
  Comment 1822 block B55 null  <||@
  Comment 1822 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1822 490 rsi|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 1827 492 CMP (x: rsi|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1830 494 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 1836 block B57 null  <||@
  Comment 1836 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1836 504 rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 1840 506 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 1844 508 JUMP ~[] destination: B57 -> B58  <||@
  Comment 1849 block B92 null  <||@
  Comment 1849 1060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1849 1062 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1854 1064 rdi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1857 1066 JUMP ~[] destination: B92 -> B93  <||@
  Comment 1857 block B93 null  <||@
  Comment 1857 1068 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 1857 1070 TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1860 1072 BRANCH trueDestinationProbability: 0.8950010038144951 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B96  <||@
  Comment 1866 block B94 null  <||@
  Comment 1866 1074 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1866 1076 rsi|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1868 1080 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1873 1082 JUMP ~[] destination: B94 -> B95  <||@
  Comment 1878 block B10 null  <||@
  Comment 1878 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1878 100 stack:44|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1883 102 stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1888 104 r9|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 1892 106 rsi|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1895 108 rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1899 110 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1904 112 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1904 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1909 [r13:0, stack:40, stack:52, stack:64]at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2                  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |r14|DWORD  |stack:56|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1910 114 r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1913 116 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1918 118 r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1923 120 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1928 122 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1933 124 JUMP ~[] destination: B10 -> B12  <||@
  Comment 1938 block B62 null  <||@
  Comment 1938 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1938 546 stack:44|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1942 548 stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1947 550 stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1952 552 stack:92|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1957 554 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1957 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1967 556 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1972 558 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1977 560 r14|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1980 562 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1980 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1985 [r13:0, stack:8, stack:16, stack:24, stack:40, stack:52, stack:64]at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0, duringCall: false, rethrow: false]
              |0             |1               |2                  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |stack:92|DWORD  |stack:56|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1986 564 rcx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1989 566 rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1993 568 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1998 570 r11|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 2001 572 r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2006 574 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2011 576 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2016 578 JUMP ~[] destination: B62 -> B64  <||@
  Comment 2021 block B96 null  <||@
  Comment 2021 1106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2021 1108 r14|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 2026 1110 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2031 1112 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2036 1114 rax|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 2043 1116 MOV (x: [rdi|QWORD[.] + 16], y: rax|DWORD[.]) size: DWORD state [bci:131]  <||@
  Comment 2043 [rbx:0, rsi:0, rdi:0, r13:0]at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4               |5             |6             |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |-  |-  |-  |stack:40|DWORD  |Object[null]  |rsi|QWORD[.]  |-  |-  |-  |-   |-   |-    <||@
  Comment 2043 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2046 1118 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2050 1120 MOVB (x: [rdi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2054 1122 MOV (x: [rsi|QWORD[.] + 20], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 2057 1124 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2061 1126 MOVB (x: [rsi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2065 1128 r10|DWORD = ADD (x: r10|DWORD, y: stack:40|DWORD) size: DWORD  <||@
  Comment 2070 1130 MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 2074 1132 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2079 1134 rax|DWORD = ADD (x: rax|DWORD, ~y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 2083 1136 MOV (x: [r13|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 2087 1138 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2092 1140 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 2101 12  <||@
  Comment 2111 block B56 null  <||@
  Comment 2111 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2111 498 r10|DWORD = MOVE input: int[-79379|0xfffffffffffec9ed]  <||@
  Comment 2117 500 JUMP ~[] destination: B56 -> B101  <||@
  Comment 2117 block B101 null  <||@
  Comment 2117 1176 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2117 1178 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2124 1180 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2131 1182 DEOPT info [bci:0]  <||@
  Comment 2131 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2136 [rcx:0, r13:0]at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |r14|DWORD  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 2137 block B6 null  <||@
  Comment 2137 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2137 60 r10|DWORD = MOVE input: int[-75027|0xfffffffffffedaed]  <||@
  Comment 2143 62 JUMP ~[] destination: B6 -> B101  <||@
  Comment 2145 block B97 null  <||@
  Comment 2145 1142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2145 1144 r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2150 1146 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1129090812]  <||@
  Comment 2150 {Object[d.a@1129090812]}  <||@
  Comment 2160 1148 MOV [r15|QWORD + 668] y: -82203 size: DWORD  <||@
  Comment 2171 1150 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2178 1152 DEOPT info [bci:68]  <||@
  Comment 2178 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2183 [rdi:0, r9:0, r10:0, r13:0]at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4         |5             |6             |7            |8         |9           |10  |11  |12 
     locals:  |r13|QWORD[.]  |-  |-  |-  |r8|DWORD  |rdi|QWORD[.]  |r10|QWORD[.]  |r9|QWORD[.]  |r8|DWORD  |int[1|0x1]  |-   |-   |-    <||@
  Comment 2184 block B4 null  <||@
  Comment 2184 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2184 40 r10|DWORD = MOVE input: int[-70675|0xfffffffffffeebed]  <||@
  Comment 2190 42 JUMP ~[] destination: B4 -> B101  <||@
  Comment 2192 block B100 null  <||@
  Comment 2192 1170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2192 1172 r10|DWORD = MOVE input: int[-71219|0xfffffffffffee9cd]  <||@
  Comment 2198 1174 JUMP ~[] destination: B100 -> B101  <||@
  Comment 2200 block B54 null  <||@
  Comment 2200 482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2200 484 r10|DWORD = MOVE input: int[-78611|0xfffffffffffecced]  <||@
  Comment 2206 486 JUMP ~[] destination: B54 -> B101  <||@
  Comment 2208 block B2 null  <||@
  Comment 2208 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2208 24 r10|DWORD = MOVE input: int[-69651|0xfffffffffffeefed]  <||@
  Comment 2214 26 JUMP ~[] destination: B2 -> B101  <||@
  Comment 2216 block B8 null  <||@
  Comment 2216 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2216 72 r10|DWORD = MOVE input: int[-132705|0xfffffffffffdf99f]  <||@
  Comment 2222 74 JUMP ~[] destination: B8 -> B101  <||@
  Comment 2224 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2224 4  <||@
  Comment 2230 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 2230 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8225[java.util.LinkedList.addAll(int, Collection)]"
  method "HotSpotCompilation-8225[java.util.LinkedList.addAll(int, Collection)]"
  date 1526687596706
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1199ca540 448b560849c1e203493bc20f850fa903ff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c24504c8bee4c896c2440448bf2817908222f00f80f85480800004585f60f8c4f080000458b5510448954243c453bf20f8f25080000448b5914438504dc448b411044894424384585c00f84dc0700004585c00f8c22080000498b7760498b5770468b0cdd08000000418bd8c1e3028d5b1783e3f84863db488bfb4803fe483bfa0f87a206000049897f600f188433c00000000f188433000100000f188433400100000f188433800100004489460c48c7060100000044894e084c8bce428b34dd0c000000443bc6418bd00f4fd64863f24883fe010f8c75000000488d56f8498d59104e8d1cdd100000004885d248c7c7000000000f8dd8040000488d56fc483bfa0f8f12000000c4c17a6f04bbc5fa7f04bb488d5704488bfa488d56fe483bfa0f8f13000000c4c1f96e04bbc4e1f97e04bb488d5702488bfa488bd648ffca483bfa0f8f07000000418b14bb8914bb4963d0483bd60f8fdc010000418bf0ffcec1e6024863f6498d51104803d648c1ea09498d711048c1ee09482bd648ffc249bb00c02408010000004c895c2420e91e0000000f1f8400000000000f1f800000000048ffca488bde4903db4803da4488234883fa017deb453bd60f852b040000418b75184183f8010f8cea0100008bd648c1e2038bde48c7442418000000004c894c2410498b7f60488d4718493b47700f876e050000498947600f1887d8000000488bcf488bf949bea03704c007000000498b86a8000000488901c74108f48600f8418b411089410c44896110895914488bcf48c1e9034885d20f8464010000894a1048c1ea094688241a4183f8020f8c0e000000418bd0ffca443bc20f86d0050000488bdf41ba01000000e96000000090498b5760488d4a18493b4f700f876400000049894f600f1882d8000000488bca498b86a8000000488902c74208f48600f8438b44911089420c44896210488bc348c1e803894214488bd148c1ea0389531048c1eb094688241b41ffc2488bd94183f803ba02000000410f4cd0413bd27f8fe91201000048895c240848ba680b00c007000000488bf2ba02000000b901000000458bf2458be8e8239a79ff90488bd0488b5c2408458bd649bea03704c0070000004c8b5c24204c8b4c2410458bc5e958ffffff4d8d5cb110482bd6488d72f84885f60f8d4d02000048c7c300000000488d72fc483bde0f8f11000000c5f9efc0c4c17a7f049b488d7304488bde488d72fe483bde0f8f11000000c5f9efc0c4c1f97e049b488d7302488bde48ffca483bda0f8fc0fdffff4589249be9b7fdffff41894d14498bd548c1ea094688241ae993feffff41897518498bc548c1e80946882418448b54243c440354243845895510b8010000004103450c4189450cb801000000488b6c24504883c4588505a21651f0c5f877c3458bf2458be8458d55fe4489542434458bc64c8bdb49bea03704c007000000488b5c24204c8b4c2410e9c000000066660f1f840000000000498b7760488d5618493b57700f87b2000000498957600f1886d8000000488bfe498b96a8000000488916c74608f48600f8438b54811089560c44896610498bd348c1ea03895614488bc748c1e8034189431049c1eb094588241b498b7760488d5618493b57700f879f000000498957600f1886d8000000488bd6498b8ea800000048890ec74608f48600f84963c8418b4c8914894e0c44896610894614488bf248c1ee0389771048c1ef094488241f458d40024c8bda453bd00f8f41ffffffe93501000048be680b00c007000000ba02000000b9010000004d8beb458bf0e81d9879ff90488bf0458bc64d8bdd448b54243449bea03704c007000000488b5c24204c8b4c2410e912ffffff448be848897c2408458bf048be680b00c007000000458bc641ffc0ba02000000b9010000004489442404e8c69779ff90488bf0418bc5488b7c2408458bc6448b54243449bea03704c007000000488b5c24204c8b4c2410e910ffffffc5f9efc048c7c3000000000f1f80000000000f1f8000000000c4c17e7f049b488d5b08483bde7ef1e98dfdffff660f1f440000660f1f440000c4c17e6f04bbc5fe7f04bb488d7f08483bfa7eece90ffbffff418bf2d1fe413bf60f8ef70000004183fe010f8d67020000418b751448c1e6038b5e148bfb48c1e7034183f8010f8cf50000004889742418488bd7e9b4fbffff4d8beb4d8bd64c8bdb458bf0448b442438e95b00000090498b7760488d5618493b57700f8759000000498957600f1886d8000000488bd6498b8aa800000048890ec74608f48600f8438b4cb110894e0c44896610895e14488bf248c1ee034189751049c1ed094788641d0041ffc64c8bea498bdd48c1eb03453bc67f9ae95e000000895c243448be680b00c007000000ba02000000b901000000e8689679ff90488bf08b5c243449baa03704c0070000004c8b5c24204c8b4c2410448b442438e96fffffff418bf2ffce413bf60f8f13010000418b751848c1e603e900ffffff488b742418498bfd4885f60f859b0000008bf34c8b6c2440e990fcffff44895c243448894c242849c1e103498bf18b542438b900000000e8eb9579ff904c8bc8448b442438448b5c2434448b54243c488b4c2428e958f9ffff895c2434488954240848894c2428448974240448be680b00c007000000ba02000000b9010000004d8bf3e89f9579ff90488bc88b5c2434488b5424084d8bde4c8b4c2410448b442438448b54243ce94dfaffff4c8b742420448b54243c4c8b6c2440488bc648c1e80389471048c1ef0946882437895e1448c1ee0946882436440354243845895510b8010000004103450c4189450cb801000000488b6c24504883c45885058b1251f0c5f877c341baedc9feff4589979c0200004d89a7a8020000e866b803ff9041baeddafeffebe44c8b54241849bb384c56710700000041c7879c020000e5befeff4d899fa8020000e837b803ff9041baedebfeffebb541bacde9feffebad41baedccfeffeba541baedeffeffeb9d41ba9ff9fdffeb95e8ab4943ff90e805b703ff90f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1f4b6c53 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 59 12 CMP [rcx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed} state [bci:0]  <||@
  Comment 59 [rcx:0, r13:0, stack:64]at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |r14|DWORD  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 59 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 {meta{HotSpotType<Ljava/util/ArrayList;, resolved>;compressed}}  <||@
  Comment 66 14 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B100  <||@
  Comment 72 block B1 null  <||@
  Comment 72 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 72 18 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 75 20 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 81 block B3 null  <||@
  Comment 81 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 81 30 r10|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 85 32 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 90 34 CMP (x: r14|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 93 36 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 99 block B5 null  <||@
  Comment 99 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 99 46 r11|DWORD[.] = MOV [rcx|QWORD[.] + 20] size: DWORD  <||@
  Comment 103 48 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:0]  <||@
  Comment 103 [rcx:0, r11:0, r13:0, stack:64]at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |r14|DWORD  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 103 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 107 50 r8|DWORD = MOV [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 111 52 stack:40|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 116 54 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 119 56 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 125 block B7 null  <||@
  Comment 125 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 125 66 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 128 68 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 134 block B9 null  <||@
  Comment 134 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 134 78 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 138 80 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 142 82 r9|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 150 84 rbx|DWORD = SHL r8|DWORD y: 2 size: DWORD  <||@
  Comment 156 86 rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD  <||@
  Comment 159 88 rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD  <||@
  Comment 162 90 rbx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 165 92 rdi|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 171 94 CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 174 96 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 180 block B11 null  <||@
  Comment 180 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 180 128 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 184 130 AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 192 132 AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 200 134 AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 208 136 AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 216 138 MOV (x: [rsi|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 220 140 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 227 142 MOV (x: [rsi|QWORD + 8], y: r9|DWORD) size: DWORD  <||@
  Comment 231 144 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 231 146 r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 234 148 JUMP ~[] destination: B11 -> B12  <||@
  Comment 234 block B12 null  <||@
  Comment 234 150 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 234 152 rsi|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 242 154 CMP (x: r8|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 245 156 rdx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rsi|DWORD) condition: >  <||@
  Comment 251 158 rsi|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 254 160 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 258 162 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B12 -> B28 falseDestination: B12 -> B14  <||@
  Comment 264 block B14 null  <||@
  Comment 264 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 264 170 rdx|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 268 172 rbx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD  <||@
  Comment 272 174 r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 280 176 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 283 182 rdi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 290 178 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B14 -> B19 falseDestination: B14 -> B17  <||@
  Comment 296 block B19 null  <||@
  Comment 296 208 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 296 210 rdx|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 300 212 CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 303 214 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B22 falseDestination: B19 -> B21  <||@
  Comment 309 block B21 null  <||@
  Comment 309 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 309 222 xmm0|V128_DWORD[....] = H [r11|QWORD[*] + rdi|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 315 224 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 320 226 rdx|QWORD = LEA [rdi|QWORD + 4] size: QWORD  <||@
  Comment 324 228 rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 327 230 JUMP ~[] destination: B21 -> B22  <||@
  Comment 327 block B22 null  <||@
  Comment 327 232 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 327 234 rdx|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 331 236 CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 334 238 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B22 -> B25 falseDestination: B22 -> B24  <||@
  Comment 340 block B24 null  <||@
  Comment 340 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 340 246 xmm0|V64_DWORD[..] = H [r11|QWORD[*] + rdi|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 346 248 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 352 250 rdx|QWORD = LEA [rdi|QWORD + 2] size: QWORD  <||@
  Comment 356 252 rdi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 359 254 JUMP ~[] destination: B24 -> B25  <||@
  Comment 359 block B25 null  <||@
  Comment 359 256 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 359 258 rdx|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 365 260 CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 368 262 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B25 -> B28 falseDestination: B25 -> B27  <||@
  Comment 374 block B27 null  <||@
  Comment 374 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 374 270 rdx|DWORD[.] = MOV [r11|QWORD[*] + rdi|QWORD * 4] size: DWORD  <||@
  Comment 378 272 MOV (x: [rbx|QWORD[.] + rdi|QWORD * 4], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 381 274 JUMP ~[] destination: B27 -> B28  <||@
  Comment 381 block B28 null  <||@
  Comment 381 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 381 278 rdx|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 384 280 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 387 282 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B28 -> B29 falseDestination: B28 -> B45  <||@
  Comment 393 block B45 null  <||@
  Comment 393 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 393 400 rsi|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 398 402 rsi|DWORD = SHL rsi|DWORD y: 2 size: DWORD  <||@
  Comment 401 404 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 404 406 rdx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD  <||@
  Comment 408 408 rdx|QWORD[.] = ADD (x: rdx|QWORD[.], y: rsi|QWORD) size: QWORD  <||@
  Comment 411 410 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 415 412 rsi|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD  <||@
  Comment 419 414 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 423 416 rdx|QWORD[*] = SUB (x: rdx|QWORD[*], ~y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 426 418 rdx|QWORD[*] = INC rdx|QWORD[*] size: QWORD  <||@
  Comment 429 420 r11|QWORD = MOVE input: long[4431593472|0x10824c000]  <||@
  Comment 439 422 stack:64|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 444 424 JUMP ~[] destination: B45 -> B46  <||@
  Comment 449 block B98 loop 2 depth 1 header:803|LoopBegin  <||@
  Comment 449 1154 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 464 1156 rdx|QWORD[*] = DEC rdx|QWORD[*] size: QWORD  <||@
  Comment 467 1158 rbx|QWORD[*] = ADD (x: rsi|QWORD[*], y: r11|QWORD) size: QWORD  <||@
  Comment 473 1160 rbx|QWORD[*] = ADD (x: rbx|QWORD[*], y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 476 1162 MOVB (x: [rbx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 479 1164 JUMP ~[] destination: B98 -> B46  <||@
  Comment 479 block B46 loop 2 depth 1 header:803|LoopBegin  <||@
  Comment 479 426 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 479 428 CMP rdx|QWORD[*] y: 1 size: QWORD  <||@
  Comment 483 430 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B46 -> B47 falseDestination: B46 -> B98  <||@
  Comment 485 block B47 null  <||@
  Comment 485 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 485 434 CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 488 436 BRANCH trueDestinationProbability: 0.8950010038144951 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51  <||@
  Comment 494 block B48 null  <||@
  Comment 494 438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 494 440 rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 498 442 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 502 444 BRANCH trueDestinationProbability: 0.1646513595885204 condition: < trueDestination: B48 -> B95 falseDestination: B48 -> B50  <||@
  Comment 508 block B50 null  <||@
  Comment 508 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 508 452 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 514 454 rbx|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 516 456 stack:72|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 525 458 JUMP ~[] destination: B50 -> B61  <||@
  Comment 525 block B61 null  <||@
  Comment 525 532 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 525 534 stack:80|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 530 536 rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 534 538 rax|QWORD = LEA [rdi|QWORD + 24] size: QWORD  <||@
  Comment 538 540 CMP (x: rax|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 542 542 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B63  <||@
  Comment 548 block B63 null  <||@
  Comment 548 580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 548 582 MOV (x: [r15|QWORD + 96], y: rax|QWORD) size: QWORD  <||@
  Comment 552 584 AMD64PREFETCH ~[rdi|QWORD + 216] instr: 0  <||@
  Comment 559 586 rcx|QWORD[*] = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 562 588 JUMP ~[] destination: B63 -> B64  <||@
  Comment 562 block B64 null  <||@
  Comment 562 590 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 562 592 rdi|QWORD[.] = MOVE rcx|QWORD[*] moveKind: QWORD  <||@
  Comment 565 594 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}  <||@
  Comment 565 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}}  <||@
  Comment 575 596 rax|QWORD = MOV [r14|QWORD + 168] size: QWORD  <||@
  Comment 582 598 MOV (x: [rcx|QWORD[*]], y: rax|QWORD) size: QWORD  <||@
  Comment 585 600 MOV [rcx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}  <||@
  Comment 585 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}}  <||@
  Comment 592 602 rax|DWORD[.] = MOV [r9|QWORD[.] + 16] size: DWORD  <||@
  Comment 596 604 MOV (x: [rcx|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 599 606 MOV (x: [rcx|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 603 608 MOV (x: [rcx|QWORD[*] + 20], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 606 610 rcx|DWORD[.] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 613 612 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 616 614 BRANCH trueDestinationProbability: 0.19710495908321068 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66  <||@
  Comment 622 block B66 null  <||@
  Comment 622 626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 622 628 MOV (x: [rdx|QWORD[.] + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 625 630 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 629 632 MOVB (x: [rdx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 633 634 JUMP ~[] destination: B66 -> B67  <||@
  Comment 633 block B67 null  <||@
  Comment 633 636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 633 638 CMP r8|DWORD y: 2 size: DWORD  <||@
  Comment 637 640 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B71 falseDestination: B67 -> B69  <||@
  Comment 643 block B69 null  <||@
  Comment 643 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 643 648 rdx|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 648 650 CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 651 652 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B71 falseDestination: B69 -> B97  <||@
  Comment 657 block B71 null  <||@
  Comment 657 658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 657 660 rbx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 660 662 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 666 664 JUMP ~[] destination: B71 -> B72  <||@
  Comment 671 block B73 loop 3 depth 1 header:36|LoopBegin  <||@
  Comment 671 676 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 672 678 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 676 680 rcx|QWORD = LEA [rdx|QWORD + 24] size: QWORD  <||@
  Comment 680 682 CMP (x: rcx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 684 684 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B75  <||@
  Comment 690 block B75 loop 3 depth 1 header:36|LoopBegin  <||@
  Comment 690 720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 690 722 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 694 724 AMD64PREFETCH ~[rdx|QWORD + 216] instr: 0  <||@
  Comment 701 726 rdx|QWORD[*] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 701 728 JUMP ~[] destination: B75 -> B76  <||@
  Comment 701 block B76 loop 3 depth 1 header:36|LoopBegin  <||@
  Comment 701 730 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 701 732 rcx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 704 734 rax|QWORD = MOV [r14|QWORD + 168] size: QWORD  <||@
  Comment 711 736 MOV (x: [rdx|QWORD[*]], y: rax|QWORD) size: QWORD  <||@
  Comment 714 738 MOV [rdx|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}  <||@
  Comment 714 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}}  <||@
  Comment 721 740 rax|DWORD[.] = MOV [r9|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 726 742 MOV (x: [rdx|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 729 744 MOV (x: [rdx|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 733 746 rax|DWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 740 748 MOV (x: [rdx|QWORD[*] + 20], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 743 750 rdx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 750 752 MOV (x: [rbx|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 753 754 rbx|QWORD[*] = SHR rbx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 757 756 MOVB (x: [rbx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 761 758 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 764 760 rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 767 762 JUMP ~[] destination: B76 -> B72  <||@
  Comment 767 block B72 loop 3 depth 1 header:36|LoopBegin  <||@
  Comment 767 666 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 767 668 CMP r8|DWORD y: 3 size: DWORD  <||@
  Comment 771 670 rdx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r8|DWORD) condition: <  <||@
  Comment 780 672 CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 783 674 BRANCH trueDestinationProbability: 0.8353486404114796 condition: > trueDestination: B72 -> B73 falseDestination: B72 -> B77  <||@
  Comment 790 block B74 loop 3 depth 1 header:36|LoopBegin  <||@
  Comment 790 686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 790 688 stack:88|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 795 690 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 795 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 805 692 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 808 694 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 813 696 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 818 698 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 821 700 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 824 702 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68]  <||@
  Comment 824 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 829 [stack:8, stack:16, stack:24, stack:64]at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4          |5                  |6                  |7                  |8          |9          |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |r13|DWORD  |stack:88|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |r13|DWORD  |r14|DWORD  |-   |-   |-    <||@
  Comment 830 704 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 833 706 rbx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 838 708 r10|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 841 710 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}  <||@
  Comment 841 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}}  <||@
  Comment 851 712 r11|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 856 714 r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 861 716 r8|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 864 718 JUMP ~[] destination: B74 -> B76  <||@
  Comment 869 block B29 null  <||@
  Comment 869 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 869 286 r11|QWORD[.] = LEA [r9|QWORD[.] + rsi|QWORD * 4 + 16] size: QWORD  <||@
  Comment 874 288 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 877 290 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 881 292 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 884 294 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 890 block B30 null  <||@
  Comment 890 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 890 298 rbx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 897 300 JUMP ~[] destination: B30 -> B34  <||@
  Comment 897 block B34 null  <||@
  Comment 897 324 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 897 326 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 901 328 CMP (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 904 330 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B34 -> B37 falseDestination: B34 -> B36  <||@
  Comment 910 block B36 null  <||@
  Comment 910 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 910 338 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 914 340 J (address: [r11|QWORD[.] + rbx|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 920 342 rsi|QWORD = LEA [rbx|QWORD + 4] size: QWORD  <||@
  Comment 924 344 rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 927 346 JUMP ~[] destination: B36 -> B37  <||@
  Comment 927 block B37 null  <||@
  Comment 927 348 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 927 350 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 931 352 CMP (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 934 354 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B37 -> B40 falseDestination: B37 -> B39  <||@
  Comment 940 block B39 null  <||@
  Comment 940 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 940 362 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 944 364 J (address: [r11|QWORD[.] + rbx|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 950 366 rsi|QWORD = LEA [rbx|QWORD + 2] size: QWORD  <||@
  Comment 954 368 rbx|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 957 370 JUMP ~[] destination: B39 -> B40  <||@
  Comment 957 block B40 null  <||@
  Comment 957 372 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 957 374 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 960 376 CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 963 378 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B40 -> B45 falseDestination: B40 -> B42  <||@
  Comment 969 block B42 null  <||@
  Comment 969 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 969 386 MOV (x: [r11|QWORD[.] + rbx|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 973 388 JUMP ~[] destination: B42 -> B45  <||@
  Comment 978 block B65 null  <||@
  Comment 978 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 978 618 MOV (x: [r13|QWORD[.] + 20], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 982 620 rdx|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 989 622 MOVB (x: [rdx|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 993 624 JUMP ~[] destination: B65 -> B67  <||@
  Comment 998 block B95 null  <||@
  Comment 998 1084 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 998 1086 MOV (x: [r13|QWORD[.] + 24], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1002 1088 rax|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1009 1090 MOVB (x: [rax|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1013 1092 r10|DWORD = ADD (x: stack:36|DWORD, y: stack:40|DWORD) size: DWORD  <||@
  Comment 1023 1094 MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 1027 1096 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1032 1098 rax|DWORD = ADD (x: rax|DWORD, ~y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1036 1100 MOV (x: [r13|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 1040 1102 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1045 1104 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1054 12  <||@
  Comment 1064 block B77 null  <||@
  Comment 1064 764 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1064 766 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1067 768 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1070 770 r10|DWORD = LEA [r13|DWORD - 2] size: DWORD  <||@
  Comment 1074 772 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1079 774 r8|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1082 776 r11|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1085 778 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}  <||@
  Comment 1085 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}}  <||@
  Comment 1095 780 rbx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1100 782 r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1105 784 JUMP ~[] destination: B77 -> B78  <||@
  Comment 1110 block B79 loop 4 depth 1 header:568|LoopBegin  <||@
  Comment 1110 792 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1120 794 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1124 796 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1128 798 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1132 800 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B79 -> B80 falseDestination: B79 -> B81  <||@
  Comment 1138 block B81 loop 4 depth 1 header:568|LoopBegin  <||@
  Comment 1138 832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1138 834 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1142 836 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1149 838 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1149 840 JUMP ~[] destination: B81 -> B82  <||@
  Comment 1149 block B82 loop 4 depth 1 header:568|LoopBegin  <||@
  Comment 1149 842 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1149 844 rdi|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1152 846 rdx|QWORD = MOV [r14|QWORD + 168] size: QWORD  <||@
  Comment 1159 848 MOV (x: [rsi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1162 850 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}  <||@
  Comment 1162 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}}  <||@
  Comment 1169 852 rdx|DWORD[.] = MOV [r9|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1174 854 MOV (x: [rsi|QWORD[*] + 12], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1177 856 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1181 858 rdx|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 1188 860 MOV (x: [rsi|QWORD[*] + 20], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1191 862 rax|DWORD[.] = COMPRESSPOINTER (input: rdi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 1198 864 MOV (x: [r11|QWORD[.] + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1202 866 r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1206 868 MOVB (x: [r11|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1210 870 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1214 872 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1218 874 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1222 876 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B84  <||@
  Comment 1228 block B84 loop 4 depth 1 header:568|LoopBegin  <||@
  Comment 1228 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1228 918 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1232 920 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1239 922 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1239 924 JUMP ~[] destination: B84 -> B85  <||@
  Comment 1239 block B85 loop 4 depth 1 header:568|LoopBegin  <||@
  Comment 1239 926 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1239 928 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1242 930 rcx|QWORD = MOV [r14|QWORD + 168] size: QWORD  <||@
  Comment 1249 932 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 1252 934 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}  <||@
  Comment 1252 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}}  <||@
  Comment 1259 936 rcx|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 1262 938 rcx|DWORD[.] = MOV [r9|QWORD[.] + rcx|QWORD * 4 + 20] size: DWORD  <||@
  Comment 1267 940 MOV (x: [rsi|QWORD[*] + 12], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1270 942 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1274 944 MOV (x: [rsi|QWORD[*] + 20], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1277 946 rsi|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 1284 948 MOV (x: [rdi|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1287 950 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1291 952 MOVB (x: [rdi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1295 954 r8|DWORD = LEA [r8|DWORD + 2] size: DWORD  <||@
  Comment 1299 956 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1302 958 JUMP ~[] destination: B85 -> B78  <||@
  Comment 1302 block B78 loop 4 depth 1 header:568|LoopBegin  <||@
  Comment 1302 786 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1302 788 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1305 790 BRANCH trueDestinationProbability: 0.8353486404114796 condition: > trueDestination: B78 -> B79 falseDestination: B78 -> B86  <||@
  Comment 1316 block B80 loop 4 depth 1 header:568|LoopBegin  <||@
  Comment 1316 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1316 804 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1316 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1326 806 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1331 808 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1336 810 r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1339 812 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1342 814 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68]  <||@
  Comment 1342 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1347 [r13:0, stack:16, stack:24, stack:64]at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4               |5             |6                  |7                  |8               |9          |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |stack:40|DWORD  |r13|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |stack:40|DWORD  |r14|DWORD  |-   |-   |-    <||@
  Comment 1348 816 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1351 818 r8|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1354 820 r11|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1357 822 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1362 824 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}  <||@
  Comment 1362 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}}  <||@
  Comment 1372 826 rbx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1377 828 r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1382 830 JUMP ~[] destination: B80 -> B82  <||@
  Comment 1387 block B83 loop 4 depth 1 header:568|LoopBegin  <||@
  Comment 1387 878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1387 880 r13|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 1390 882 stack:88|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1395 884 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1398 886 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1398 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1408 888 r8|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 1414 890 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1419 892 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1424 894 stack:92|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1429 896 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68]  <||@
  Comment 1429 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1434 [r13:0, stack:8, stack:16, stack:24, stack:64]at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4               |5                  |6                  |7                  |8               |9               |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |stack:40|DWORD  |stack:88|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |stack:40|DWORD  |stack:92|DWORD  |-   |-   |-    <||@
  Comment 1435 898 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1438 900 rax|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 1441 902 rdi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1446 904 r8|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1449 906 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1454 908 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}  <||@
  Comment 1454 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}}  <||@
  Comment 1464 910 rbx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1469 912 r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1474 914 JUMP ~[] destination: B83 -> B85  <||@
  Comment 1479 block B31 null  <||@
  Comment 1479 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1479 304 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 1483 306 rbx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1490 308 JUMP ~[] destination: B31 -> B32  <||@
  Comment 1490 block B32 loop 1 depth 1 header:1220|LoopBegin  <||@
  Comment 1490 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1504 312 J (address: [r11|QWORD[.] + rbx|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 1510 314 rbx|QWORD = LEA [rbx|QWORD + 8] size: QWORD  <||@
  Comment 1514 316 CMP (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1517 318 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B34 falseDestination: B32 -> B32  <||@
  Comment 1524 block B17 loop 0 depth 1 header:1165|LoopBegin  <||@
  Comment 1524 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1536 194 xmm0|V256_DWORD[........] = H [r11|QWORD[*] + rdi|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 1542 196 J (address: [rbx|QWORD[.] + rdi|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 1547 198 rdi|QWORD = LEA [rdi|QWORD + 8] size: QWORD  <||@
  Comment 1551 200 CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1554 202 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B19 falseDestination: B17 -> B17  <||@
  Comment 1561 block B51 null  <||@
  Comment 1561 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1561 462 rsi|DWORD = SAR r10|DWORD size: DWORD  <||@
  Comment 1566 464 CMP (x: rsi|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1569 466 BRANCH trueDestinationProbability: 0.7154629099120353 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B55  <||@
  Comment 1575 block B52 null  <||@
  Comment 1575 468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1575 470 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 1579 472 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 1585 block B53 null  <||@
  Comment 1585 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1585 476 rsi|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 1589 478 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 1593 480 JUMP ~[] destination: B53 -> B58  <||@
  Comment 1593 block B58 null  <||@
  Comment 1593 510 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1593 512 rbx|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD state [bci:0]  <||@
  Comment 1593 [rcx:0, rsi:0, r9:0, r13:0, stack:64]at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |r14|DWORD  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1593 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1596 514 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 1602 516 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 1606 518 BRANCH trueDestinationProbability: 0.1646513595885204 condition: < trueDestination: B58 -> B93 falseDestination: B58 -> B60  <||@
  Comment 1612 block B60 null  <||@
  Comment 1612 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1612 526 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1617 528 rdx|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1620 530 JUMP ~[] destination: B60 -> B61  <||@
  Comment 1625 block B86 null  <||@
  Comment 1625 960 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1625 962 r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1628 964 r10|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 1631 966 r11|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 1634 968 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1637 970 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1642 972 JUMP ~[] destination: B86 -> B87  <||@
  Comment 1647 block B88 loop 5 depth 1 header:602|LoopBegin  <||@
  Comment 1647 982 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1648 984 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1652 986 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1656 988 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1660 990 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B90  <||@
  Comment 1666 block B90 loop 5 depth 1 header:602|LoopBegin  <||@
  Comment 1666 1018 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1666 1020 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1670 1022 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1677 1024 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1677 1026 JUMP ~[] destination: B90 -> B91  <||@
  Comment 1677 block B91 loop 5 depth 1 header:602|LoopBegin  <||@
  Comment 1677 1028 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1677 1030 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1680 1032 rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 1687 1034 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 1690 1036 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}  <||@
  Comment 1690 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>;compressed}}  <||@
  Comment 1697 1038 rcx|DWORD[.] = MOV [r9|QWORD[.] + r14|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1702 1040 MOV (x: [rsi|QWORD[*] + 12], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 1705 1042 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1709 1044 MOV (x: [rsi|QWORD[*] + 20], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 1712 1046 rsi|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 1719 1048 MOV (x: [r13|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1723 1050 r13|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1727 1052 MOVB (x: [r13|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1732 1054 r14|DWORD = INC r14|DWORD size: DWORD  <||@
  Comment 1735 1056 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1738 1058 JUMP ~[] destination: B91 -> B87  <||@
  Comment 1738 block B87 loop 5 depth 1 header:602|LoopBegin  <||@
  Comment 1738 974 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1738 976 rbx|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 1745 978 CMP (x: r8|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1748 980 BRANCH trueDestinationProbability: 0.8353486404114796 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B92  <||@
  Comment 1755 block B89 loop 5 depth 1 header:602|LoopBegin  <||@
  Comment 1755 992 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1755 994 stack:44|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1759 996 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1759 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1769 998 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1774 1000 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1779 1002 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:68]  <||@
  Comment 1779 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1784 [r13:0, stack:16, stack:24, stack:52, stack:64]at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4               |5             |6                  |7                  |8               |9          |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |stack:40|DWORD  |r13|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |stack:40|DWORD  |r14|DWORD  |-   |-   |-    <||@
  Comment 1785 1004 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1788 1006 rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1792 1008 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}  <||@
  Comment 1792 {meta{HotSpotType<Ljava/util/LinkedList$Node;, resolved>}}  <||@
  Comment 1802 1010 r11|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 1807 1012 r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1812 1014 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1817 1016 JUMP ~[] destination: B89 -> B91  <||@
  Comment 1822 block B55 null  <||@
  Comment 1822 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1822 490 rsi|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 1827 492 CMP (x: rsi|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1830 494 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 1836 block B57 null  <||@
  Comment 1836 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1836 504 rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 1840 506 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 1844 508 JUMP ~[] destination: B57 -> B58  <||@
  Comment 1849 block B92 null  <||@
  Comment 1849 1060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1849 1062 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1854 1064 rdi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1857 1066 JUMP ~[] destination: B92 -> B93  <||@
  Comment 1857 block B93 null  <||@
  Comment 1857 1068 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 1857 1070 TEST (x: rsi|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1860 1072 BRANCH trueDestinationProbability: 0.8950010038144951 condition: = trueDestination: B93 -> B94 falseDestination: B93 -> B96  <||@
  Comment 1866 block B94 null  <||@
  Comment 1866 1074 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1866 1076 rsi|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1868 1080 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1873 1082 JUMP ~[] destination: B94 -> B95  <||@
  Comment 1878 block B10 null  <||@
  Comment 1878 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1878 100 stack:44|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1883 102 stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1888 104 r9|QWORD = UNCOMPRESSPOINTER (input: r9|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 1892 106 rsi|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 1895 108 rdx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1899 110 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1904 112 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1904 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1909 [r13:0, stack:40, stack:52, stack:64]at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2                  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |r14|DWORD  |stack:56|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1910 114 r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1913 116 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1918 118 r11|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1923 120 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1928 122 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1933 124 JUMP ~[] destination: B10 -> B12  <||@
  Comment 1938 block B62 null  <||@
  Comment 1938 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1938 546 stack:44|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1942 548 stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1947 550 stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1952 552 stack:92|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1957 554 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1957 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1967 556 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1972 558 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1977 560 r14|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1980 562 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1980 {Stub<NewArrayStub.newArray>@0x1191642a0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1985 [r13:0, stack:8, stack:16, stack:24, stack:40, stack:52, stack:64]at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0, duringCall: false, rethrow: false]
              |0             |1               |2                  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |stack:92|DWORD  |stack:56|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1986 564 rcx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1989 566 rbx|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1993 568 rdx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1998 570 r11|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 2001 572 r9|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 2006 574 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2011 576 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2016 578 JUMP ~[] destination: B62 -> B64  <||@
  Comment 2021 block B96 null  <||@
  Comment 2021 1106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2021 1108 r14|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 2026 1110 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2031 1112 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2036 1114 rax|DWORD[.] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5021d368 encoding: base: 0 shift: 3  <||@
  Comment 2043 1116 MOV (x: [rdi|QWORD[.] + 16], y: rax|DWORD[.]) size: DWORD state [bci:131]  <||@
  Comment 2043 [rbx:0, rsi:0, rdi:0, r13:0]at java.util.LinkedList.addAll(LinkedList.java:432) [bci: 131, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4               |5             |6             |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |-  |-  |-  |stack:40|DWORD  |Object[null]  |rsi|QWORD[.]  |-  |-  |-  |-   |-   |-    <||@
  Comment 2043 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2046 1118 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2050 1120 MOVB (x: [rdi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2054 1122 MOV (x: [rsi|QWORD[.] + 20], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 2057 1124 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2061 1126 MOVB (x: [rsi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2065 1128 r10|DWORD = ADD (x: r10|DWORD, y: stack:40|DWORD) size: DWORD  <||@
  Comment 2070 1130 MOV (x: [r13|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 2074 1132 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2079 1134 rax|DWORD = ADD (x: rax|DWORD, ~y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 2083 1136 MOV (x: [r13|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 2087 1138 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2092 1140 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 2101 12  <||@
  Comment 2111 block B56 null  <||@
  Comment 2111 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2111 498 r10|DWORD = MOVE input: int[-79379|0xfffffffffffec9ed]  <||@
  Comment 2117 500 JUMP ~[] destination: B56 -> B101  <||@
  Comment 2117 block B101 null  <||@
  Comment 2117 1176 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2117 1178 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2124 1180 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2131 1182 DEOPT info [bci:0]  <||@
  Comment 2131 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2136 [rcx:0, r13:0]at java.util.LinkedList.addAll(LinkedList.java:406) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2             |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |r13|QWORD[.]  |r14|DWORD  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 2137 block B6 null  <||@
  Comment 2137 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2137 60 r10|DWORD = MOVE input: int[-75027|0xfffffffffffedaed]  <||@
  Comment 2143 62 JUMP ~[] destination: B6 -> B101  <||@
  Comment 2145 block B97 null  <||@
  Comment 2145 1142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2145 1144 r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2150 1146 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1129090812]  <||@
  Comment 2150 {Object[d.a@1129090812]}  <||@
  Comment 2160 1148 MOV [r15|QWORD + 668] y: -82203 size: DWORD  <||@
  Comment 2171 1150 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2178 1152 DEOPT info [bci:68]  <||@
  Comment 2178 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2183 [rdi:0, r9:0, r10:0, r13:0]at java.util.LinkedList.addAll(LinkedList.java:422) [bci: 68, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4         |5             |6             |7            |8         |9           |10  |11  |12 
     locals:  |r13|QWORD[.]  |-  |-  |-  |r8|DWORD  |rdi|QWORD[.]  |r10|QWORD[.]  |r9|QWORD[.]  |r8|DWORD  |int[1|0x1]  |-   |-   |-    <||@
  Comment 2184 block B4 null  <||@
  Comment 2184 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2184 40 r10|DWORD = MOVE input: int[-70675|0xfffffffffffeebed]  <||@
  Comment 2190 42 JUMP ~[] destination: B4 -> B101  <||@
  Comment 2192 block B100 null  <||@
  Comment 2192 1170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2192 1172 r10|DWORD = MOVE input: int[-71219|0xfffffffffffee9cd]  <||@
  Comment 2198 1174 JUMP ~[] destination: B100 -> B101  <||@
  Comment 2200 block B54 null  <||@
  Comment 2200 482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2200 484 r10|DWORD = MOVE input: int[-78611|0xfffffffffffecced]  <||@
  Comment 2206 486 JUMP ~[] destination: B54 -> B101  <||@
  Comment 2208 block B2 null  <||@
  Comment 2208 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2208 24 r10|DWORD = MOVE input: int[-69651|0xfffffffffffeefed]  <||@
  Comment 2214 26 JUMP ~[] destination: B2 -> B101  <||@
  Comment 2216 block B8 null  <||@
  Comment 2216 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2216 72 r10|DWORD = MOVE input: int[-132705|0xfffffffffffdf99f]  <||@
  Comment 2222 74 JUMP ~[] destination: B8 -> B101  <||@
  Comment 2224 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2224 4  <||@
  Comment 2230 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 2230 5  <||@
  HexCodeFile>>> <|@
end_nmethod
