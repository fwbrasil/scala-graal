begin_compilation
  name " HotSpotCompilation-4609[java.util.regex.Pattern$Curly.match0(Matcher, int, int, CharSequence)]"
  method "HotSpotCompilation-4609[java.util.regex.Pattern$Curly.match0(Matcher, int, int, CharSequence)]"
  date 1526687555465
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i1799 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i1799  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/regex/Pattern$Curly;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v1853 v1854 ?493 ?31 ?576 ?166 ?466 ?611 ?58 ?585 ?1615 v1858 ?579 ?249 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1853 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1799 i1836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1799 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.cmax
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1853 
=== Succesors ===
next: v1170 
=== Usages ===
v8 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1853 #next: v1170  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v8 ?466 ?493 i25 ?31 ?466 ?611 ?58 v59 ?1615 ?579 ?579 ?166 ?249 ?585 ?166 ?576 ?576 ?611 v1163 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i1799 
=== Succesors ===
=== Usages ===
v1170 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i1799  <|@  <|@
f <@~|@floating>@ <|@
tid a1620 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1623 v1743 v1725 v1697 v1665 v1717 v1709 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/regex/Matcher;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 ?466 v799 v1865 ?611 ?31 ?493 v751 ?576 ?191 ?58 v1049 ?1615 v937 ?579 ?166 ?362 v988 ?585 ?249 v1861 v1040 v880 v1880 v1881 v1872 v1873 v1908 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 ?466 ?576 i20 v21 i214 ?579 ?166 v888 v920 v145 ?611 v908 v880 i1795 v547 v869 ?191 v201 v382 v1877 i1794 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 ?466 v799 ?31 ?493 ?191 ?611 ?58 v1049 ?1615 v937 ?579 ?166 v1040 v880 ?585 ?249 v1885 ?576 v1890 v988 v751 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4246
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 a5 - - 
=== Succesors ===
=== Usages ===
v1623 v1898 v1801 i1803 i1804 i1808 v1816 v1811 v1899 v1900 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 a5 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v1167 
falseSuccessor: v1169 
=== Usages ===
=== Predecessor ===
i1799 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v1167 #falseSuccessor: v1169  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1800 
=== Usages ===
=== Predecessor ===
v1170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1800  <|@  <|@
f <@~|@floating>@ <|@
tid v1854 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1800 a1837 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1800 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.atom
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 24]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1854 
=== Succesors ===
next: v1898 
=== Usages ===
v1891 v1898 v1855 v1859 v1907 
=== Predecessor ===
v1167 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1854 #next: v1898  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1898 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
object: a1800 
=== Succesors ===
next: v1801 
=== Usages ===
=== Predecessor ===
a1800 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?6 object: a1800 #next: v1801  <|@  <|@
f <@~|@floating>@ <|@
tid v1890 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: - 
=== Succesors ===
=== Usages ===
v1801 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1801 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v1890 
=== Succesors ===
next: v1182 
=== Usages ===
v1773 
=== Predecessor ===
v1898 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v1890 #next: v1182  <|@  <|@
f <@~|@floating>@ <|@
tid v1772 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1773 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1773 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1801 
y: v1772 
=== Succesors ===
=== Usages ===
v1182 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1801 y: v1772  <|@  <|@
f <@*|@fixed>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1773 
=== Succesors ===
trueSuccessor: v1179 
falseSuccessor: v1181 
=== Usages ===
=== Predecessor ===
v1801 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1773 #trueSuccessor: v1179 #falseSuccessor: v1181  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1802 
=== Usages ===
=== Predecessor ===
v1182 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1802  <|@  <|@
f <@~|@floating>@ <|@
tid v1885 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: - 
=== Succesors ===
=== Usages ===
a1838 a1802 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1802 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1885 
=== Succesors ===
next: i1803 
=== Usages ===
a707 v1876 
=== Predecessor ===
v1179 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1885 #next: i1803  <|@  <|@
f <@~|@floating>@ <|@
tid v1876 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1802 
=== Succesors ===
=== Usages ===
i1803 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1803 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v1876 
=== Succesors ===
next: v1190 
=== Usages ===
v920 v547 v382 
=== Predecessor ===
a1802 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v1876 #next: v1190  <|@  <|@
f <@~|@floating>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1803 
=== Succesors ===
=== Usages ===
v1190 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i1803  <|@  <|@
f <@*|@fixed>@ <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v920 
=== Succesors ===
trueSuccessor: v1187 
falseSuccessor: v1189 
=== Usages ===
=== Predecessor ===
i1803 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v920 #trueSuccessor: v1187 #falseSuccessor: v1189  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B106" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1804 
=== Usages ===
i1805 
=== Predecessor ===
v1190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1804  <|@  <|@
f <@~|@floating>@ <|@
tid v1881 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1840 i1804 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1804 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 2]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v1881 
=== Succesors ===
next: v1198 
=== Usages ===
v145 v201 
=== Predecessor ===
v1187 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v1881 #next: v1198  <|@  <|@
f <@~|@floating>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1804 
=== Succesors ===
=== Usages ===
v1198 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i1804  <|@  <|@
f <@*|@fixed>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v145 
=== Succesors ===
trueSuccessor: v1195 
falseSuccessor: v1197 
=== Usages ===
=== Predecessor ===
i1804 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v145 #trueSuccessor: v1195 #falseSuccessor: v1197  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B105" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1206 
=== Usages ===
=== Predecessor ===
v1198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1206  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1803 
=== Succesors ===
=== Usages ===
v1206 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i1803  <|@  <|@
f <@*|@fixed>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v547 
=== Succesors ===
trueSuccessor: v1203 
falseSuccessor: v1205 
=== Usages ===
=== Predecessor ===
v1195 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v547 #trueSuccessor: v1203 #falseSuccessor: v1205  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1805 
=== Usages ===
=== Predecessor ===
v1206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1805  <|@  <|@
f <@~|@floating>@ <|@
tid a707 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1802 
=== Succesors ===
=== Usages ===
v1877 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1802  <|@  <|@
f <@~|@floating>@ <|@
tid v1877 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a707 
index: i3 
=== Succesors ===
=== Usages ===
i1805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a707 index: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1805 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1187 
address: v1877 
=== Succesors ===
next: v1806 
=== Usages ===
i928 j1056 v1156 v1158 i1793 
=== Predecessor ===
v1203 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1187 address: v1877 #next: v1806  <|@  <|@
f <@~|@floating>@ <|@
tid v1891 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1800 
=== Succesors ===
=== Usages ===
v1806 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1806 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1891 
=== Succesors ===
next: v100 
=== Usages ===
v1777 v1775 
=== Predecessor ===
i1805 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1891 #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v1774 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1775 v1788 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1775 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1806 
y: v1774 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1806 y: v1774  <|@  <|@
f <@~|@floating>@ <|@
tid j1056 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1805 
=== Succesors ===
=== Usages ===
v1860 v1857 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1805  <|@  <|@
f <@~|@floating>@ <|@
tid v1855 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1800 
=== Succesors ===
=== Usages ===
a1807 i1813 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1800  <|@  <|@
f <@~|@floating>@ <|@
tid a406 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 7]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
rawvalue: int[128]{8192, 8192, 8192, 8192, 8192, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1883 v1860 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1157 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1158 v1159 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1776 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1777 v1787 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4259) [bci: 58]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i25 i51 v79 i1794 ?576 v364 i189 v409 i214 v413 i241 v639 i1795 i1789 i1791 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1778 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1779 v1780 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1858 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1815 a1850 a1810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v489 v480 v69 v80 v153 v162 ?579 v174 v637 ?217 v218 v414 ?611 v245 v462 ?585 ?161 ?461 ?360 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1155 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
rawvalue: 256
stableDimension: 0
stamp: i16 [256] ⇊0000000000000100 ⇈0000000000000100
stampKind: i16
value: short[256|0x100]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1156 v1166 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 0.6337742856265922
=== Inputs ===
condition: v1775 
=== Succesors ===
trueSuccessor: v93 
falseSuccessor: v99 
=== Usages ===
=== Predecessor ===
v1806 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1775 #trueSuccessor: v93 #falseSuccessor: v99  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B16" 
    xhandlers
    flags 
    probability 4603883750818446262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1210 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1210  <|@  <|@
f <@~|@floating>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1805 
y: i1155 
=== Succesors ===
=== Usages ===
v1210 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1805 y: i1155  <|@  <|@
f <@*|@fixed>@ <|@
tid v1210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1156 
=== Succesors ===
trueSuccessor: v1207 
falseSuccessor: v1209 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1156 #trueSuccessor: v1207 #falseSuccessor: v1209  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B15" 
    xhandlers
    flags 
    probability 4603883750818446262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1807 
=== Usages ===
=== Predecessor ===
v1210 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1807 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v1855 
=== Succesors ===
next: i1808 
=== Usages ===
v1857 v1856 
=== Predecessor ===
v1207 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1855 #next: i1808  <|@  <|@
f <@~|@floating>@ <|@
tid v1856 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1807 
=== Succesors ===
=== Usages ===
i1808 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1808 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v1856 
=== Succesors ===
next: v1218 
=== Usages ===
v733 
=== Predecessor ===
a1807 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v1856 #next: v1218  <|@  <|@
f <@~|@floating>@ <|@
tid i1793 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1805 
=== Succesors ===
=== Usages ===
v733 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1805  <|@  <|@
f <@~|@floating>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1793 
y: i1808 
=== Succesors ===
=== Usages ===
v1218 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1793 y: i1808  <|@  <|@
f <@*|@fixed>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v733 
=== Succesors ===
trueSuccessor: v1215 
falseSuccessor: v1217 
=== Usages ===
=== Predecessor ===
i1808 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v733 #trueSuccessor: v1215 #falseSuccessor: v1217  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4603883750818446262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1809 
=== Usages ===
i1809 
=== Predecessor ===
v1218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1809  <|@  <|@
f <@~|@floating>@ <|@
tid v1857 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j1056 
index: a1807 
=== Succesors ===
=== Usages ===
i1809 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1056 index: a1807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1809 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: v1215 
address: v1857 
=== Succesors ===
next: v156 
=== Usages ===
i1053 
=== Predecessor ===
v1215 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1215 address: v1857 #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid i1053 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1809 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1809  <|@  <|@
f <@~|@floating>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1053 
y: i14 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1053 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 0.8376470026322493
=== Inputs ===
condition: v153 
=== Succesors ===
trueSuccessor: v154 
falseSuccessor: v155 
=== Usages ===
=== Predecessor ===
i1809 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v153 #trueSuccessor: v154 #falseSuccessor: v155  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602956953655679596
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1810 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1810  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1810 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 163]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1858 
=== Succesors ===
next: v1811 
=== Usages ===
v1892 a1796 
=== Predecessor ===
v154 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1858 #next: v1811  <|@  <|@
f <@~|@floating>@ <|@
tid v1892 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1810 
=== Succesors ===
=== Usages ===
v1811 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1810  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1811 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v1892 
=== Succesors ===
next: v626 
=== Usages ===
v1779 
=== Predecessor ===
a1810 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v1892 #next: v626  <|@  <|@
f <@~|@floating>@ <|@
tid v1779 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1811 
y: v1778 
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1811 y: v1778  <|@  <|@
f <@~|@floating>@ <|@
tid a1796 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 163]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1810 
=== Succesors ===
=== Usages ===
a614 a615 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1810  <|@  <|@
f <@*|@fixed>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 0.836764508942159
=== Inputs ===
condition: v1779 
=== Succesors ===
trueSuccessor: v620 
falseSuccessor: v625 
=== Usages ===
=== Predecessor ===
v1811 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1779 #trueSuccessor: v620 #falseSuccessor: v625  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601673990707472897
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v608 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v608  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v606 
=== Predecessor ===
v620 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B42" 
    xhandlers
    flags 
    probability 4590908810388122459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v612  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v625 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4592078797965298259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1812 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1812  <|@  <|@
f <@~|@floating>@ <|@
tid v1859 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1800 
=== Succesors ===
=== Usages ===
a1812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1812 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1859 
=== Succesors ===
next: v1900 
=== Usages ===
a747 v1900 
=== Predecessor ===
v155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1859 #next: v1900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1900 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
object: a1812 
=== Succesors ===
next: i160 
=== Usages ===
=== Predecessor ===
a1812 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?6 object: a1812 #next: i160  <|@  <|@
f <@~|@floating>@ <|@
tid a747 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1812 
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1812  <|@  <|@
f <@~|@floating>@ <|@
tid i1794 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: i32
=== Inputs ===
x: i3 
y: i24 
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i24  <|@  <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@22901144
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a747 a2 i1794 a5 
=== Succesors ===
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a747 a2 i1794 a5  <|@  <|@
tid ?166 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4252
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 a5 i4 - 
=== Succesors ===
=== Usages ===
?161 ?1611 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 a5 i4 -  <|@  <|@
tid ?1611 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?166 
values: - - - - 
=== Succesors ===
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?166 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v751 
stateDuring: ?1611 
=== Succesors ===
next: v1230 
=== Usages ===
v162 
=== Predecessor ===
v1900 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v751 stateDuring: ?1611 #next: v1230  <|@  <|@
f <@~|@floating>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i160 
y: i14 
=== Succesors ===
=== Usages ===
v1230 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i160 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v162 
=== Succesors ===
trueSuccessor: v1229 
falseSuccessor: v1227 
=== Usages ===
=== Predecessor ===
i160 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v162 #trueSuccessor: v1229 #falseSuccessor: v1227  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1228 
=== Usages ===
=== Predecessor ===
v1230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1228  <|@  <|@
tid ?161 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?166 
values: - - - - i14 
=== Succesors ===
=== Usages ===
v1228 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?166 values: - - - - i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 752
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?161 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1229 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?161  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B57" 
    xhandlers
    flags 
    probability 4592078797965298259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v1230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v94  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
v1227 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1656 
=== Usages ===
=== Predecessor ===
v1218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1656  <|@  <|@
f <@~|@floating>@ <|@
tid i1657 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -187931
stableDimension: 0
stamp: i32 [-187931] ⇊00000000fffd21e5 ⇈00000000fffd21e5
stampKind: i32
value: int[-187931|0xfffffffffffd21e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1617 
=== Predecessor ===
v1217 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1646 
=== Usages ===
=== Predecessor ===
v1210 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1646  <|@  <|@
f <@~|@floating>@ <|@
tid i1647 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -185363
stableDimension: 0
stamp: i32 [-185363] ⇊00000000fffd2bed ⇈00000000fffd2bed
stampKind: i32
value: int[-185363|0xfffffffffffd2bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1617 
=== Predecessor ===
v1209 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B18" "B104" 
    xhandlers
    flags 
    probability 4600268955881048212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1234 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1234  <|@  <|@
f <@~|@floating>@ <|@
tid v1777 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1806 
y: v1776 
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1806 y: v1776  <|@  <|@
f <@*|@fixed>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1777 
=== Succesors ===
trueSuccessor: v1231 
falseSuccessor: v1233 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1777 #trueSuccessor: v1231 #falseSuccessor: v1233  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B103" 
    xhandlers
    flags 
    probability 4600268955881048212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1238 
=== Usages ===
=== Predecessor ===
v1234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1238  <|@  <|@
f <@~|@floating>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1805 
y: i1157 
=== Succesors ===
=== Usages ===
v1238 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1805 y: i1157  <|@  <|@
f <@*|@fixed>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1158 
=== Succesors ===
trueSuccessor: v1235 
falseSuccessor: v1237 
=== Usages ===
=== Predecessor ===
v1231 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1158 #trueSuccessor: v1235 #falseSuccessor: v1237  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B54" 
    xhandlers
    flags 
    probability 4600268955881048212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1813 
=== Usages ===
i1814 
=== Predecessor ===
v1238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1813  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1813 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Ctype.ctype
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1855 
=== Succesors ===
next: i1814 
=== Usages ===
v555 
=== Predecessor ===
v1235 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1855 #next: i1814  <|@  <|@
f <@~|@floating>@ <|@
tid v1860 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a406 
index: j1056 
=== Succesors ===
=== Usages ===
i1814 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a406 index: j1056  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1814 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1235 
address: v1860 
=== Succesors ===
next: v456 
=== Usages ===
v555 
=== Predecessor ===
i1813 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1235 address: v1860 #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 6]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
x: i1813 
y: i1814 
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i1813 y: i1814  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 0.8376470026322493
=== Inputs ===
condition: v555 
=== Succesors ===
trueSuccessor: v454 
falseSuccessor: v455 
=== Usages ===
=== Predecessor ===
i1814 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v555 #trueSuccessor: v454 #falseSuccessor: v455  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B41" 
    xhandlers
    flags 
    probability 4599197858612790005
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1815 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1815  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1815 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 163]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1858 
=== Succesors ===
next: v1816 
=== Usages ===
v1893 a791 
=== Predecessor ===
v454 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1858 #next: v1816  <|@  <|@
f <@~|@floating>@ <|@
tid v1893 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1815 
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1815  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1816 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v1893 
=== Succesors ===
next: v116 
=== Usages ===
v1780 
=== Predecessor ===
a1815 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v1893 #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid v1780 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1816 
y: v1778 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1816 y: v1778  <|@  <|@
f <@~|@floating>@ <|@
tid a791 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 163]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1815 
=== Succesors ===
=== Usages ===
a615 a614 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1815  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 0.836764508942159
=== Inputs ===
condition: v1780 
=== Succesors ===
trueSuccessor: v109 
falseSuccessor: v115 
=== Usages ===
=== Predecessor ===
v1816 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1780 #trueSuccessor: v109 #falseSuccessor: v115  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598295780325727759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v607  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v606 
=== Predecessor ===
v109 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B10" 
    successors "B23" "B39" 
    xhandlers
    flags 
    probability 4604488485143970824
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a615 <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/regex/Pattern$Node;
valueDescription: a -
=== Inputs ===
merge: v606 
values: a791 a1796 
=== Succesors ===
=== Usages ===
?191 v1870 v1862 v1866 ?362 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v606 values: a791 a1796  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v607 v608 
=== Succesors ===
next: a1817 
=== Usages ===
a615 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v607 v608 #next: a1817  <|@  <|@
f <@~|@floating>@ <|@
tid v1861 <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1817 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1817 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1861 
=== Succesors ===
next: i1818 
=== Usages ===
a806 v1863 
=== Predecessor ===
v606 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1861 #next: i1818  <|@  <|@
tid ?579 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4252
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 a5 i4 - i14 
=== Succesors ===
=== Usages ===
v1725 i1818 i1822 v1825 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 a5 i4 - i14  <|@  <|@
f <@~|@floating>@ <|@
tid v1863 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1817 
=== Succesors ===
=== Usages ===
i1818 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1817  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1818 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?579 
guard: - 
address: v1863 
=== Succesors ===
next: i1819 
=== Usages ===
v814 
=== Predecessor ===
a1817 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?579 guard: - address: v1863 #next: i1819  <|@  <|@
f <@~|@floating>@ <|@
tid v1862 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a615 
index: - 
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a615 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1819 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1862 
=== Succesors ===
next: v1250 
=== Usages ===
v1864 v814 
=== Predecessor ===
i1818 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1862 #next: v1250  <|@  <|@
f <@~|@floating>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1819 
y: i1818 
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1819 y: i1818  <|@  <|@
f <@*|@fixed>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v814 
=== Succesors ===
trueSuccessor: v1247 
falseSuccessor: v1249 
=== Usages ===
=== Predecessor ===
i1819 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v814 #trueSuccessor: v1247 #falseSuccessor: v1249  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604488485143970824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1820 
=== Usages ===
i1820 
=== Predecessor ===
v1250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1820  <|@  <|@
f <@~|@floating>@ <|@
tid a806 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1817 
=== Succesors ===
=== Usages ===
v1864 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1817  <|@  <|@
f <@~|@floating>@ <|@
tid v1864 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a806 
index: i1819 
=== Succesors ===
=== Usages ===
i1820 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a806 index: i1819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1820 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1247 
address: v1864 
=== Succesors ===
next: v1254 
=== Usages ===
v174 v860 ?191 
=== Predecessor ===
v1247 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1247 address: v1864 #next: v1254  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1820 
y: i14 
=== Succesors ===
=== Usages ===
v1254 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1820 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v174 
=== Succesors ===
trueSuccessor: v1253 
falseSuccessor: v1251 
=== Usages ===
=== Predecessor ===
i1820 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v174 #trueSuccessor: v1253 #falseSuccessor: v1251  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1726 
=== Usages ===
=== Predecessor ===
v1254 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1726  <|@  <|@
f <@~|@floating>@ <|@
tid i1727 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -210451
stableDimension: 0
stamp: i32 [-210451] ⇊00000000fffcc9ed ⇈00000000fffcc9ed
stampKind: i32
value: int[-210451|0xfffffffffffcc9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1723 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1720 
=== Predecessor ===
v1253 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B38" 
    xhandlers
    flags 
    probability 4604488485143970824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1821 
=== Usages ===
=== Predecessor ===
v1254 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1821  <|@  <|@
f <@~|@floating>@ <|@
tid v1865 <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1821 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1821 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1865 
=== Succesors ===
next: i1822 
=== Usages ===
a826 v1875 v1867 v1874 
=== Predecessor ===
v1251 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1865 #next: i1822  <|@  <|@
f <@~|@floating>@ <|@
tid v1867 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1821 
=== Succesors ===
=== Usages ===
i1822 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1821  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1822 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?579 
guard: - 
address: v1867 
=== Succesors ===
next: i1823 
=== Usages ===
v853 v862 
=== Predecessor ===
a1821 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?579 guard: - address: v1867 #next: i1823  <|@  <|@
f <@~|@floating>@ <|@
tid v1866 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a615 
index: - 
=== Succesors ===
=== Usages ===
i1823 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a615 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1823 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1866 
=== Succesors ===
next: v1262 
=== Usages ===
v853 i189 v1868 
=== Predecessor ===
i1822 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1866 #next: v1262  <|@  <|@
f <@~|@floating>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1823 
y: i1822 
=== Succesors ===
=== Usages ===
v1262 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1823 y: i1822  <|@  <|@
f <@*|@fixed>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v853 
=== Succesors ===
trueSuccessor: v1259 
falseSuccessor: v1261 
=== Usages ===
=== Predecessor ===
i1823 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v853 #trueSuccessor: v1259 #falseSuccessor: v1261  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B37" 
    xhandlers
    flags 
    probability 4604488485143970824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1266 
=== Usages ===
i1827 v860 
=== Predecessor ===
v1262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1266  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: i32
=== Inputs ===
x: i1823 
y: i24 
=== Succesors ===
=== Usages ===
v1869 v862 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1823 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i189 
y: i1822 
=== Succesors ===
=== Usages ===
v1266 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i189 y: i1822  <|@  <|@
f <@*|@fixed>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v862 
=== Succesors ===
trueSuccessor: v1263 
falseSuccessor: v1265 
=== Usages ===
=== Predecessor ===
v1259 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v862 #trueSuccessor: v1263 #falseSuccessor: v1265  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B31" 
    xhandlers
    flags 
    probability 4604488485143970824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1824 
=== Usages ===
v899 v869 i1826 
=== Predecessor ===
v1266 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1824  <|@  <|@
f <@~|@floating>@ <|@
tid v1870 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a615 
index: - 
=== Succesors ===
=== Usages ===
a1824 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a615 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1824 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1870 
=== Succesors ===
next: v1825 
=== Usages ===
v1894 v1871 
=== Predecessor ===
v1263 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1870 #next: v1825  <|@  <|@
f <@~|@floating>@ <|@
tid v1894 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1824 
=== Succesors ===
=== Usages ===
v1825 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1824  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1825 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?579 
guard: - 
address: v1894 
=== Succesors ===
next: i1826 
=== Usages ===
v1784 v1782 
=== Predecessor ===
a1824 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?579 guard: - address: v1894 #next: i1826  <|@  <|@
f <@~|@floating>@ <|@
tid a826 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1821 
=== Succesors ===
=== Usages ===
v1869 v1868 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1821  <|@  <|@
f <@~|@floating>@ <|@
tid v1869 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a826 
index: i189 
=== Succesors ===
=== Usages ===
v869 i1826 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a826 index: i189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1826 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1263 
address: v1869 
=== Succesors ===
next: i1827 
=== Usages ===
?362 ?191 
=== Predecessor ===
v1825 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1263 address: v1869 #next: i1827  <|@  <|@
f <@~|@floating>@ <|@
tid v1868 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a826 
index: i1823 
=== Succesors ===
=== Usages ===
v860 i1827 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a826 index: i1823  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1827 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1259 
address: v1868 
=== Succesors ===
next: v860 
=== Usages ===
?362 ?191 
=== Predecessor ===
i1826 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1259 address: v1868 #next: v860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1259 
address: v1868 
value: i1820 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v869 
=== Usages ===
=== Predecessor ===
i1827 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1259 address: v1868 value: i1820 stateAfter: - lastLocationAccess: - #next: v869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1263 
address: v1869 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v291 
=== Usages ===
=== Predecessor ===
v860 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1263 address: v1869 value: i3 stateAfter: - lastLocationAccess: - #next: v291  <|@  <|@
tid ?199 <|@
d <@d|@=== Debug Properties ===
bci: 170
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4281
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - 
=== Succesors ===
=== Usages ===
?362 ?191 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - -  <|@  <|@
tid ?191 <|@
d <@d|@=== Debug Properties ===
bci: 63
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?199 
values: a615 a2 i3 a5 i1820 i1827 i1826 
=== Succesors ===
=== Usages ===
v1697 v1904 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?199 values: a615 a2 i3 a5 i1820 i1827 i1826  <|@  <|@
f <@~|@floating>@ <|@
tid v1781 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1782 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1782 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1825 
y: v1781 
=== Succesors ===
=== Usages ===
v291 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1825 y: v1781  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BranchConn; target_method=match target_method_class=Ljava/util/regex/Pattern$BranchConn; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 0.5698385272463588
=== Inputs ===
condition: v1782 
=== Succesors ===
trueSuccessor: v284 
falseSuccessor: v290 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1782 #trueSuccessor: v284 #falseSuccessor: v290  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4600866703859656166
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BranchConn; target_method=match target_method_class=Ljava/util/regex/Pattern$BranchConn; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1828 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1828  <|@  <|@
f <@~|@floating>@ <|@
tid v1871 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1824 
=== Succesors ===
=== Usages ===
a1828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1824  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1828 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1871 
=== Succesors ===
next: v1904 
=== Usages ===
a876 v1904 
=== Predecessor ===
v284 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1871 #next: v1904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1904 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?191 
object: a1828 
=== Succesors ===
next: i359 
=== Usages ===
=== Predecessor ===
a1828 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?191 object: a1828 #next: i359  <|@  <|@
f <@~|@floating>@ <|@
tid a876 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1828 
=== Succesors ===
=== Usages ===
v880 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1828  <|@  <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@6c22f2a0
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a876 a2 i3 a5 
=== Succesors ===
=== Usages ===
i359 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a876 a2 i3 a5  <|@  <|@
tid ?362 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?199 
values: a615 a2 - - - i1827 i1826 
=== Succesors ===
=== Usages ===
?360 ?1616 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?199 values: a615 a2 - - - i1827 i1826  <|@  <|@
tid ?1616 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<Pattern$BranchConn.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4570
stackSize: 0
=== Inputs ===
outerFrameState: ?362 
values: - - - - 
=== Succesors ===
=== Usages ===
i359 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?362 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i359 <|@
d <@d|@=== Debug Properties ===
bci: 7
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v880 
stateDuring: ?1616 
=== Succesors ===
next: v1278 
=== Usages ===
v637 
=== Predecessor ===
v1904 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v880 stateDuring: ?1616 #next: v1278  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i359 
y: i14 
=== Succesors ===
=== Usages ===
v1278 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i359 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v637 
=== Succesors ===
trueSuccessor: v1277 
falseSuccessor: v1275 
=== Usages ===
=== Predecessor ===
i359 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v637 #trueSuccessor: v1277 #falseSuccessor: v1275  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1276 
=== Usages ===
=== Predecessor ===
v1278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1276  <|@  <|@
tid ?360 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Pattern$BranchConn.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4570
stackSize: 1
=== Inputs ===
outerFrameState: ?362 
values: - - - - i14 
=== Succesors ===
=== Usages ===
v1276 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?362 values: - - - - i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1276 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 881
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?360 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1277 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?360  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4600866703859656166
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v639 
=== Usages ===
=== Predecessor ===
v1278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v639  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
result: i24 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1275 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i24 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" "B35" 
    xhandlers
    flags 
    probability 4599103067173544490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1282 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1282  <|@  <|@
f <@~|@floating>@ <|@
tid v1783 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1784 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1784 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1825 
y: v1783 
=== Succesors ===
=== Usages ===
v1282 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1825 y: v1783  <|@  <|@
f <@*|@fixed>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1784 
=== Succesors ===
trueSuccessor: v1279 
falseSuccessor: v1281 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1784 #trueSuccessor: v1279 #falseSuccessor: v1281  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599103067173544490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1829 
=== Usages ===
=== Predecessor ===
v1282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1829  <|@  <|@
f <@~|@floating>@ <|@
tid v1872 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1829 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.acceptMode
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1872 
=== Succesors ===
next: v1286 
=== Usages ===
v364 
=== Predecessor ===
v1279 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1872 #next: v1286  <|@  <|@
f <@~|@floating>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1829 
y: i24 
=== Succesors ===
=== Usages ===
v1286 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1829 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v1286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v364 
=== Succesors ===
trueSuccessor: v1285 
falseSuccessor: v1283 
=== Usages ===
=== Predecessor ===
i1829 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v364 #trueSuccessor: v1285 #falseSuccessor: v1283  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1698 
=== Usages ===
=== Predecessor ===
v1286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1698  <|@  <|@
f <@~|@floating>@ <|@
tid i1699 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -226579
stableDimension: 0
stamp: i32 [-226579] ⇊00000000fffc8aed ⇈00000000fffc8aed
stampKind: i32
value: int[-226579|0xfffffffffffc8aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1695 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1692 
=== Predecessor ===
v1285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 4599103067173544490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v888 
=== Usages ===
=== Predecessor ===
v1286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v888  <|@  <|@
f <@~|@floating>@ <|@
tid v1908 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3435) [bci: 20]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1908 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1830 
=== Usages ===
=== Predecessor ===
v1283 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1908 value: i3 stateAfter: - lastLocationAccess: - #next: i1830  <|@  <|@
f <@~|@floating>@ <|@
tid v1873 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1830 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1830 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.first
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 29]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1873 
=== Succesors ===
next: v899 
=== Usages ===
v899 
=== Predecessor ===
v888 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1873 #next: v899  <|@  <|@
f <@~|@floating>@ <|@
tid v1874 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1821 
=== Succesors ===
=== Usages ===
v899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1821  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1263 
address: v1874 
value: i1830 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v908 
=== Usages ===
=== Predecessor ===
i1830 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1263 address: v1874 value: i1830 stateAfter: - lastLocationAccess: - #next: v908  <|@  <|@
f <@~|@floating>@ <|@
tid v1875 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1821 
=== Succesors ===
=== Usages ===
v908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1821  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1875 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v899 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1875 value: i3 stateAfter: - lastLocationAccess: - #next: v409  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
result: i24 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v908 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i24 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1700 
=== Usages ===
=== Predecessor ===
v1282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1700  <|@  <|@
f <@~|@floating>@ <|@
tid i1701 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -225843
stableDimension: 0
stamp: i32 [-225843] ⇊00000000fffc8dcd ⇈00000000fffc8dcd
stampKind: i32
value: int[-225843|0xfffffffffffc8dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1695 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1692 
=== Predecessor ===
v1281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1695 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-226579 - -224779] ⇊00000000fffc80c5 ⇈00000000fffc9ffd
valueDescription: i32
=== Inputs ===
merge: v1692 
values: i1699 i1701 
=== Succesors ===
=== Usages ===
v1697 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1692 values: i1699 i1701  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1698 v1700 
=== Succesors ===
next: v1697 
=== Usages ===
i1695 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1698 v1700 #next: v1697  <|@  <|@
f <@*|@fixed>@ <|@
tid v1697 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?191 
actionAndReason: i1695 
speculation: a1620 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1692 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?191 actionAndReason: i1695 speculation: a1620  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1736 
=== Usages ===
=== Predecessor ===
v1266 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1736  <|@  <|@
f <@~|@floating>@ <|@
tid i1737 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -220955
stableDimension: 0
stamp: i32 [-220955] ⇊00000000fffca0e5 ⇈00000000fffca0e5
stampKind: i32
value: int[-220955|0xfffffffffffca0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1723 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1736 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1720 
=== Predecessor ===
v1265 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1734 
=== Usages ===
=== Predecessor ===
v1262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1734  <|@  <|@
f <@~|@floating>@ <|@
tid i1735 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -218651
stableDimension: 0
stamp: i32 [-218651] ⇊00000000fffca9e5 ⇈00000000fffca9e5
stampKind: i32
value: int[-218651|0xfffffffffffca9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1723 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1720 
=== Predecessor ===
v1261 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1728 
=== Usages ===
=== Predecessor ===
v1250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1728  <|@  <|@
f <@~|@floating>@ <|@
tid i1729 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -208667
stableDimension: 0
stamp: i32 [-208667] ⇊00000000fffcd0e5 ⇈00000000fffcd0e5
stampKind: i32
value: int[-208667|0xfffffffffffcd0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1723 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1720 
=== Predecessor ===
v1249 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B24" "B39" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1723 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-223499 - -207371] ⇊00000000fffc80e5 ⇈00000000fffcfffd
valueDescription: i32
=== Inputs ===
merge: v1720 
values: i1727 i1729 i1735 i1737 
=== Succesors ===
=== Usages ===
v1725 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1720 values: i1727 i1729 i1735 i1737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1720 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1726 v1728 v1734 v1736 
=== Succesors ===
next: v1725 
=== Usages ===
i1723 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1726 v1728 v1734 v1736 #next: v1725  <|@  <|@
f <@*|@fixed>@ <|@
tid v1725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?579 
actionAndReason: i1723 
speculation: a1620 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1720 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?579 actionAndReason: i1723 speculation: a1620  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B42" 
    xhandlers
    flags 
    probability 4587377447332292398
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v610 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v610  <|@  <|@
f <@*|@fixed>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v115 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B11" 
    successors "B43" "B52" 
    xhandlers
    flags 
    probability 4594094371727138681
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a614 <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/regex/Pattern$Node;
valueDescription: a -
=== Inputs ===
merge: v609 
values: a791 a1796 
=== Succesors ===
=== Usages ===
v1895 v1878 v1879 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v609 values: a791 a1796  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v610 v612 
=== Succesors ===
next: v1831 
=== Usages ===
a614 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v610 v612 #next: v1831  <|@  <|@
f <@~|@floating>@ <|@
tid v1895 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a614 
index: - 
=== Succesors ===
=== Usages ===
v1831 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a614 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1831 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1895 
=== Succesors ===
next: v1294 
=== Usages ===
v1786 
=== Predecessor ===
v609 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1895 #next: v1294  <|@  <|@
f <@~|@floating>@ <|@
tid v1785 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1786 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1786 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1831 
y: v1785 
=== Succesors ===
=== Usages ===
v1294 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1831 y: v1785  <|@  <|@
tid ?611 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4252
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 a5 i4 - i14 
=== Succesors ===
=== Usages ===
v1743 v1905 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 a5 i4 - i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Single; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1786 
=== Succesors ===
trueSuccessor: v1291 
falseSuccessor: v1293 
=== Usages ===
=== Predecessor ===
v1831 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1786 #trueSuccessor: v1291 #falseSuccessor: v1293  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4594094371727138681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Single; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1298 
=== Usages ===
=== Predecessor ===
v1294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1298  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1804 
=== Succesors ===
=== Usages ===
v1298 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i1804  <|@  <|@
f <@*|@fixed>@ <|@
tid v1298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v201 
=== Succesors ===
trueSuccessor: v1295 
falseSuccessor: v1297 
=== Usages ===
=== Predecessor ===
v1291 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v201 #trueSuccessor: v1295 #falseSuccessor: v1297  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B50" 
    xhandlers
    flags 
    probability 4594094371727138681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1302 
=== Usages ===
=== Predecessor ===
v1298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1302  <|@  <|@
f <@~|@floating>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1803 
=== Succesors ===
=== Usages ===
v1302 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i1803  <|@  <|@
f <@*|@fixed>@ <|@
tid v1302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v382 
=== Succesors ===
trueSuccessor: v1299 
falseSuccessor: v1301 
=== Usages ===
=== Predecessor ===
v1295 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v382 #trueSuccessor: v1299 #falseSuccessor: v1301  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B49" 
    xhandlers
    flags 
    probability 4594094371727138681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1832 
=== Usages ===
=== Predecessor ===
v1302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1832  <|@  <|@
f <@~|@floating>@ <|@
tid v1878 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a614 
index: - 
=== Succesors ===
=== Usages ===
i1832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a614 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1832 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Single.c
nodeSourcePosition: at java.util.regex.Pattern$Single.isSatisfiedBy(Pattern.java:3826) [bci: 2]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1878 
=== Succesors ===
next: v212 
=== Usages ===
v320 
=== Predecessor ===
v1299 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1878 #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid i928 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1805 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1805  <|@  <|@
f <@~|@floating>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Single.isSatisfiedBy(Pattern.java:3826) [bci: 5]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i928 
y: i1832 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i928 y: i1832  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 0.16235299736775066
=== Inputs ===
condition: v320 
=== Succesors ===
trueSuccessor: v211 
falseSuccessor: v210 
=== Usages ===
=== Predecessor ===
i1832 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v320 #trueSuccessor: v211 #falseSuccessor: v210  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4582055684782979642
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1833 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1833  <|@  <|@
f <@~|@floating>@ <|@
tid v1879 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a614 
index: - 
=== Succesors ===
=== Usages ===
a1833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a614 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1833 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1879 
=== Succesors ===
next: v1905 
=== Usages ===
a933 v1905 
=== Predecessor ===
v211 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1879 #next: v1905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1905 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?611 
object: a1833 
=== Succesors ===
next: i216 
=== Usages ===
=== Predecessor ===
a1833 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?611 object: a1833 #next: i216  <|@  <|@
f <@~|@floating>@ <|@
tid a933 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1833 
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1833  <|@  <|@
f <@~|@floating>@ <|@
tid i214 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: i32
=== Inputs ===
x: i3 
y: i24 
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i24  <|@  <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@5b170eb3
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a933 a2 i214 a5 
=== Succesors ===
=== Usages ===
i216 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a933 a2 i214 a5  <|@  <|@
tid ?222 <|@
d <@d|@=== Debug Properties ===
bci: 170
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4281
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - 
=== Succesors ===
=== Usages ===
?217 ?1612 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - -  <|@  <|@
tid ?1612 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?222 
values: - - - - 
=== Succesors ===
=== Usages ===
i216 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?222 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i216 <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v937 
stateDuring: ?1612 
=== Succesors ===
next: v1310 
=== Usages ===
v218 
=== Predecessor ===
v1905 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v937 stateDuring: ?1612 #next: v1310  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i216 
y: i14 
=== Succesors ===
=== Usages ===
v1310 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i216 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v218 
=== Succesors ===
trueSuccessor: v1309 
falseSuccessor: v1307 
=== Usages ===
=== Predecessor ===
i216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v218 #trueSuccessor: v1309 #falseSuccessor: v1307  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1308 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1308  <|@  <|@
tid ?217 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?222 
values: - - - - i14 
=== Succesors ===
=== Usages ===
v1308 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?222 values: - - - - i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 938
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?217 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1309 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?217  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4582055684782979642
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v413  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i24 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1307 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i24 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 4592917507692732515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v414  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i14 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i14 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1748 
=== Usages ===
=== Predecessor ===
v1302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1748  <|@  <|@
f <@~|@floating>@ <|@
tid i1749 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -234003
stableDimension: 0
stamp: i32 [-234003] ⇊00000000fffc6ded ⇈00000000fffc6ded
stampKind: i32
value: int[-234003|0xfffffffffffc6ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1741 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1748 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1738 
=== Predecessor ===
v1301 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B53" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1746 
=== Usages ===
=== Predecessor ===
v1298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1746  <|@  <|@
f <@~|@floating>@ <|@
tid i1747 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -232979
stableDimension: 0
stamp: i32 [-232979] ⇊00000000fffc71ed ⇈00000000fffc71ed
stampKind: i32
value: int[-232979|0xfffffffffffc71ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1741 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1738 
=== Predecessor ===
v1297 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Single; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1744 
=== Usages ===
=== Predecessor ===
v1294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1744  <|@  <|@
f <@~|@floating>@ <|@
tid i1745 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -232755
stableDimension: 0
stamp: i32 [-232755] ⇊00000000fffc72cd ⇈00000000fffc72cd
stampKind: i32
value: int[-232755|0xfffffffffffc72cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1741 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1738 
=== Predecessor ===
v1293 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1741 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-239371 - -232755] ⇊00000000fffc40c5 ⇈00000000fffc7ffd
valueDescription: i32
=== Inputs ===
merge: v1738 
values: i1745 i1747 i1749 
=== Succesors ===
=== Usages ===
v1743 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1738 values: i1745 i1747 i1749  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1744 v1746 v1748 
=== Succesors ===
next: v1743 
=== Usages ===
i1741 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1744 v1746 v1748 #next: v1743  <|@  <|@
f <@*|@fixed>@ <|@
tid v1743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?611 
actionAndReason: i1741 
speculation: a1620 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1738 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?611 actionAndReason: i1741 speculation: a1620  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4588729599181860091
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1834 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1834  <|@  <|@
f <@~|@floating>@ <|@
tid v1907 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1800 
=== Succesors ===
=== Usages ===
a1834 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1834 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1907 
=== Succesors ===
next: v1899 
=== Usages ===
a795 v1899 
=== Predecessor ===
v455 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1907 #next: v1899  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1899 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
object: a1834 
=== Succesors ===
next: i460 
=== Usages ===
=== Predecessor ===
a1834 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?6 object: a1834 #next: i460  <|@  <|@
f <@~|@floating>@ <|@
tid a795 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1834 
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1834  <|@  <|@
f <@~|@floating>@ <|@
tid i1795 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: i32
=== Inputs ===
x: i3 
y: i24 
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i24  <|@  <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@10b608fd
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a795 a2 i1795 a5 
=== Succesors ===
=== Usages ===
i460 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a795 a2 i1795 a5  <|@  <|@
tid ?466 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4252
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 a5 i4 - 
=== Succesors ===
=== Usages ===
?461 ?1610 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 a5 i4 -  <|@  <|@
tid ?1610 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?466 
values: - - - - 
=== Succesors ===
=== Usages ===
i460 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?466 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i460 <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v799 
stateDuring: ?1610 
=== Succesors ===
next: v1318 
=== Usages ===
v462 
=== Predecessor ===
v1899 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v799 stateDuring: ?1610 #next: v1318  <|@  <|@
f <@~|@floating>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i460 
y: i14 
=== Succesors ===
=== Usages ===
v1318 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i460 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v462 
=== Succesors ===
trueSuccessor: v1317 
falseSuccessor: v1315 
=== Usages ===
=== Predecessor ===
i460 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v462 #trueSuccessor: v1317 #falseSuccessor: v1315  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1316 
=== Usages ===
=== Predecessor ===
v1318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1316  <|@  <|@
tid ?461 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?466 
values: - - - - i14 
=== Succesors ===
=== Usages ===
v1316 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?466 values: - - - - i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1316 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 800
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?461 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1317 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?461  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4588729599181860091
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
v1318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v88  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
v1315 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B14" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4595017403478118504
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v88 v94 
=== Succesors ===
next: i1835 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v88 v94 #next: i1835  <|@  <|@
f <@~|@floating>@ <|@
tid v1880 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1835 i1846 i1852 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1835 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4254) [bci: 38]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1880 
=== Succesors ===
next: v1322 
=== Usages ===
i20 v21 i29 
=== Predecessor ===
v574 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1880 #next: v1322  <|@  <|@
f <@~|@floating>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4255) [bci: 47]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1835 
=== Succesors ===
=== Usages ===
v1322 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3 y: i1835  <|@  <|@
f <@*|@fixed>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4255) [bci: 47]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v21 
=== Succesors ===
trueSuccessor: v1321 
falseSuccessor: v1319 
=== Usages ===
=== Predecessor ===
i1835 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v21 #trueSuccessor: v1321 #falseSuccessor: v1319  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4255) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1320 
=== Usages ===
=== Predecessor ===
v1322 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1320  <|@  <|@
tid ?576 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4252
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 a5 i4 - i24 
=== Succesors ===
=== Usages ===
v1320 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 a5 i4 - i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 943
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4255) [bci: 47]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?576 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1321 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?576  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4595017403478118504
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4255) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v1322 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4254) [bci: 42]
stamp: i32
=== Inputs ===
x: i1835 
y: i3 
=== Succesors ===
=== Usages ===
?31 ?493 ?249 i47 ?58 ?1615 i75 ?585 i1790 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1835 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4259) [bci: 58]
stamp: i32
=== Inputs ===
x: i4 
y: i24 
=== Succesors ===
=== Usages ===
i30 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
v1319 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B92" "B71" 
    successors "B61" "B101" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595857845011793521
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i29 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v28 
values: i1835 i47 i1790 
=== Succesors ===
=== Usages ===
?31 ?493 v1887 i56 i47 ?585 ?249 i241 v1008 v563 v472 i1791 i1790 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v28 values: i1835 i47 i1790  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v28 
values: i25 i51 i1789 
=== Succesors ===
=== Usages ===
?31 v33 ?493 i57 i51 ?585 ?249 i1789 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v28 values: i25 i51 i1789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.1436803688052246
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v27 
=== Succesors ===
next: i1836 
=== Usages ===
i29 i30 v41 v52 v627 v1420 v1326 v1381 v1396 v1341 v1346 v1415 v1356 v1361 v1386 v1371 v1376 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v27 #next: i1836  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1836 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.cmax
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 63]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1853 
=== Succesors ===
next: v1327 
=== Usages ===
v33 
=== Predecessor ===
v28 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1853 #next: v1327  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 66]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i30 
y: i1836 
=== Succesors ===
=== Usages ===
v1327 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i30 y: i1836  <|@  <|@
tid ?31 <|@
d <@d|@=== Debug Properties ===
bci: 61
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4261
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i29 i30 a5 i4 i20 
=== Succesors ===
=== Usages ===
v1665 v1901 i1839 v1902 i1848 v1903 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i29 i30 a5 i4 i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v1327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 66]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v1323 
falseSuccessor: v1326 
=== Usages ===
=== Predecessor ===
i1836 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v1323 #falseSuccessor: v1326  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595857845011793521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1837 
=== Usages ===
=== Predecessor ===
v1327 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1837 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.atom
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 70]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1854 
=== Succesors ===
next: v1901 
=== Usages ===
v1896 v1901 v1882 v1884 v1906 
=== Predecessor ===
v1323 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1854 #next: v1901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1901 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?31 
object: a1837 
=== Succesors ===
next: a1838 
=== Usages ===
=== Predecessor ===
a1837 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?31 object: a1837 #next: a1838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1838 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1885 
=== Succesors ===
next: i1839 
=== Usages ===
a1000 v1886 
=== Predecessor ===
v1901 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1885 #next: i1839  <|@  <|@
f <@~|@floating>@ <|@
tid v1886 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1838 
=== Succesors ===
=== Usages ===
i1839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?31 
guard: - 
address: v1886 
=== Succesors ===
next: v1342 
=== Usages ===
v563 v1008 
=== Predecessor ===
a1838 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?31 guard: - address: v1886 #next: v1342  <|@  <|@
f <@~|@floating>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i29 
y: i1839 
=== Succesors ===
=== Usages ===
v1342 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i29 y: i1839  <|@  <|@
f <@*|@fixed>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1008 
=== Succesors ===
trueSuccessor: v1338 
falseSuccessor: v1341 
=== Usages ===
=== Predecessor ===
i1839 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1008 #trueSuccessor: v1338 #falseSuccessor: v1341  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595857845011793521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1840 
=== Usages ===
i1841 
=== Predecessor ===
v1342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1840  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1840 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 2]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1881 
=== Succesors ===
next: v1347 
=== Usages ===
v472 
=== Predecessor ===
v1338 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1881 #next: v1347  <|@  <|@
f <@~|@floating>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i29 
y: i1840 
=== Succesors ===
=== Usages ===
v1347 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i29 y: i1840  <|@  <|@
f <@*|@fixed>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v472 
=== Succesors ===
trueSuccessor: v1343 
falseSuccessor: v1346 
=== Usages ===
=== Predecessor ===
i1840 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v472 #trueSuccessor: v1343 #falseSuccessor: v1346  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595857845011793521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1357 
=== Usages ===
=== Predecessor ===
v1347 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1357  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i29 
y: i1839 
=== Succesors ===
=== Usages ===
v1357 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i29 y: i1839  <|@  <|@
f <@*|@fixed>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v563 
=== Succesors ===
trueSuccessor: v1353 
falseSuccessor: v1356 
=== Usages ===
=== Predecessor ===
v1343 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v563 #trueSuccessor: v1353 #falseSuccessor: v1356  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595857845011793521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1841 
=== Usages ===
=== Predecessor ===
v1357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1841  <|@  <|@
f <@~|@floating>@ <|@
tid a1000 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1838 
=== Succesors ===
=== Usages ===
v1887 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1838  <|@  <|@
f <@~|@floating>@ <|@
tid v1887 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1000 
index: i29 
=== Succesors ===
=== Usages ===
i1841 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1000 index: i29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1841 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1338 
address: v1887 
=== Succesors ===
next: v1842 
=== Usages ===
i1016 j1074 v1159 v1166 
=== Predecessor ===
v1353 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1338 address: v1887 #next: v1842  <|@  <|@
f <@~|@floating>@ <|@
tid v1896 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1837 
=== Succesors ===
=== Usages ===
v1842 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1842 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1896 
=== Succesors ===
next: v142 
=== Usages ===
v1788 v1787 
=== Predecessor ===
i1841 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1896 #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid v1787 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1842 
y: v1776 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1842 y: v1776  <|@  <|@
f <@~|@floating>@ <|@
tid j1074 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1841 
=== Succesors ===
=== Usages ===
v1889 v1883 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1841  <|@  <|@
f <@~|@floating>@ <|@
tid v1882 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1837 
=== Succesors ===
=== Usages ===
i1843 a1847 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1837  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
trueSuccessorProbability: 0.6255879059350504
=== Inputs ===
condition: v1787 
=== Succesors ===
trueSuccessor: v135 
falseSuccessor: v141 
=== Usages ===
=== Predecessor ===
v1842 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1787 #trueSuccessor: v135 #falseSuccessor: v141  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593034567540053699
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1362 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1362  <|@  <|@
f <@~|@floating>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1841 
y: i1157 
=== Succesors ===
=== Usages ===
v1362 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1841 y: i1157  <|@  <|@
f <@*|@fixed>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1159 
=== Succesors ===
trueSuccessor: v1358 
falseSuccessor: v1361 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1159 #trueSuccessor: v1358 #falseSuccessor: v1361  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593034567540053699
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1843 
=== Usages ===
i1844 
=== Predecessor ===
v1362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1843 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Ctype.ctype
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1882 
=== Succesors ===
next: i1844 
=== Usages ===
v399 
=== Predecessor ===
v1358 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1882 #next: i1844  <|@  <|@
f <@~|@floating>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a406 
index: j1074 
=== Succesors ===
=== Usages ===
i1844 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a406 index: j1074  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1844 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1358 
address: v1883 
=== Succesors ===
next: v239 
=== Usages ===
v399 
=== Predecessor ===
i1843 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1358 address: v1883 #next: v239  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 6]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
x: i1843 
y: i1844 
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i1843 y: i1844  <|@  <|@
f <@*|@fixed>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
trueSuccessorProbability: 0.8376470026322493
=== Inputs ===
condition: v399 
=== Succesors ===
trueSuccessor: v237 
falseSuccessor: v238 
=== Usages ===
=== Predecessor ===
i1844 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v399 #trueSuccessor: v237 #falseSuccessor: v238  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B80" 
    xhandlers
    flags 
    probability 4591675649106182490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
v237 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581092895143908772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1845 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1845  <|@  <|@
f <@~|@floating>@ <|@
tid v1884 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1837 
=== Succesors ===
=== Usages ===
a1845 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1845 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1884 
=== Succesors ===
next: v1902 
=== Usages ===
a984 v1902 
=== Predecessor ===
v238 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1884 #next: v1902  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1902 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?31 
object: a1845 
=== Succesors ===
next: i243 
=== Usages ===
=== Predecessor ===
a1845 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?31 object: a1845 #next: i243  <|@  <|@
f <@~|@floating>@ <|@
tid a984 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1845 
=== Succesors ===
=== Usages ===
v988 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1845  <|@  <|@
f <@~|@floating>@ <|@
tid i241 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: i32
=== Inputs ===
x: i29 
y: i24 
=== Succesors ===
=== Usages ===
v988 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i29 y: i24  <|@  <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@320e319e
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a984 a2 i241 a5 
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a984 a2 i241 a5  <|@  <|@
tid ?249 <|@
d <@d|@=== Debug Properties ===
bci: 77
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4262
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i29 i30 a5 i4 i20 
=== Succesors ===
=== Usages ===
?244 ?1613 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i29 i30 a5 i4 i20  <|@  <|@
tid ?1613 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?249 
values: - - - - 
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?249 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i243 <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v988 
stateDuring: ?1613 
=== Succesors ===
next: v1372 
=== Usages ===
?244 v245 
=== Predecessor ===
v1902 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v988 stateDuring: ?1613 #next: v1372  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i243 
y: i14 
=== Succesors ===
=== Usages ===
v1372 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i243 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v245 
=== Succesors ===
trueSuccessor: v1371 
falseSuccessor: v1368 
=== Usages ===
=== Predecessor ===
i243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v245 #trueSuccessor: v1371 #falseSuccessor: v1368  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1705 
=== Usages ===
=== Predecessor ===
v1372 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1705  <|@  <|@
f <@~|@floating>@ <|@
tid i1706 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -253203
stableDimension: 0
stamp: i32 [-253203] ⇊00000000fffc22ed ⇈00000000fffc22ed
stampKind: i32
value: int[-253203|0xfffffffffffc22ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1707 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1704 
=== Predecessor ===
v1371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581092895143908772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1846 
=== Usages ===
=== Predecessor ===
v1372 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1846 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4264) [bci: 91]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1880 
=== Succesors ===
next: v1377 
=== Usages ===
v632 
=== Predecessor ===
v1368 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1880 #next: v1377  <|@  <|@
f <@~|@floating>@ <|@
tid i1790 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4264) [bci: 89]
stamp: i32
=== Inputs ===
x: i20 
y: i29 
=== Succesors ===
=== Usages ===
v632 i29 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i20 y: i29  <|@  <|@
f <@~|@floating>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4264) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1790 
y: i1846 
=== Succesors ===
=== Usages ===
v1377 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1790 y: i1846  <|@  <|@
f <@*|@fixed>@ <|@
tid v1377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4264) [bci: 94]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v632 
=== Succesors ===
trueSuccessor: v1373 
falseSuccessor: v1376 
=== Usages ===
=== Predecessor ===
i1846 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v632 #trueSuccessor: v1373 #falseSuccessor: v1376  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581092895143908772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4264) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v627 
=== Usages ===
=== Predecessor ===
v1377 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v627  <|@  <|@
f <@~|@floating>@ <|@
tid i1789 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4270) [bci: 121]
stamp: i32
=== Inputs ===
x: i30 
y: i24 
=== Succesors ===
=== Usages ===
i30 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i30 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1373 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v28  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4264) [bci: 94]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1710 
=== Usages ===
=== Predecessor ===
v1377 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1710  <|@  <|@
f <@~|@floating>@ <|@
tid i1711 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -253715
stableDimension: 0
stamp: i32 [-253715] ⇊00000000fffc20ed ⇈00000000fffc20ed
stampKind: i32
value: int[-253715|0xfffffffffffc20ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1707 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1704 
=== Predecessor ===
v1376 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B69" "B72" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1707 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-253715 - -253203] ⇊00000000fffc20ed ⇈00000000fffc22ed
valueDescription: i32
=== Inputs ===
merge: v1704 
values: i1706 i1711 
=== Succesors ===
=== Usages ===
v1709 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1704 values: i1706 i1711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1705 v1710 
=== Succesors ===
next: v1709 
=== Usages ===
i1707 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1705 v1710 #next: v1709  <|@  <|@
tid ?244 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?249 
values: - - - - i243 
=== Succesors ===
=== Usages ===
v1709 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?249 values: - - - - i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v1709 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?244 
actionAndReason: i1707 
speculation: a1620 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1704 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?244 actionAndReason: i1707 speculation: a1620  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1678 
=== Usages ===
=== Predecessor ===
v1362 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1678  <|@  <|@
f <@~|@floating>@ <|@
tid i1679 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -249363
stableDimension: 0
stamp: i32 [-249363] ⇊00000000fffc31ed ⇈00000000fffc31ed
stampKind: i32
value: int[-249363|0xfffffffffffc31ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
v1361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B76" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589673923228792351
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1382 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1382  <|@  <|@
f <@~|@floating>@ <|@
tid v1788 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1842 
y: v1774 
=== Succesors ===
=== Usages ===
v1382 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1842 y: v1774  <|@  <|@
f <@*|@fixed>@ <|@
tid v1382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1788 
=== Succesors ===
trueSuccessor: v1378 
falseSuccessor: v1381 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1788 #trueSuccessor: v1378 #falseSuccessor: v1381  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B96" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589673923228792351
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1387 
=== Usages ===
=== Predecessor ===
v1382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1387  <|@  <|@
f <@~|@floating>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1841 
y: i1155 
=== Succesors ===
=== Usages ===
v1387 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1841 y: i1155  <|@  <|@
f <@*|@fixed>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1166 
=== Succesors ===
trueSuccessor: v1383 
falseSuccessor: v1386 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1166 #trueSuccessor: v1383 #falseSuccessor: v1386  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589673923228792351
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1847 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1847  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1847 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v1882 
=== Succesors ===
next: i1848 
=== Usages ===
v1889 v1888 
=== Predecessor ===
v1383 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1882 #next: i1848  <|@  <|@
f <@~|@floating>@ <|@
tid v1888 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1847 
=== Succesors ===
=== Usages ===
i1848 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1847  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1848 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?31 
guard: - 
address: v1888 
=== Succesors ===
next: v1397 
=== Usages ===
v1026 
=== Predecessor ===
a1847 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?31 guard: - address: v1888 #next: v1397  <|@  <|@
f <@~|@floating>@ <|@
tid i1016 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1841 
=== Succesors ===
=== Usages ===
v1026 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1841  <|@  <|@
f <@~|@floating>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1016 
y: i1848 
=== Succesors ===
=== Usages ===
v1397 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1016 y: i1848  <|@  <|@
f <@*|@fixed>@ <|@
tid v1397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1026 
=== Succesors ===
trueSuccessor: v1393 
falseSuccessor: v1396 
=== Usages ===
=== Predecessor ===
i1848 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1026 #trueSuccessor: v1393 #falseSuccessor: v1396  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589673923228792351
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1849 
=== Usages ===
i1849 
=== Predecessor ===
v1397 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1849  <|@  <|@
f <@~|@floating>@ <|@
tid v1889 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j1074 
index: a1847 
=== Succesors ===
=== Usages ===
i1849 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1074 index: a1847  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1849 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: v1393 
address: v1889 
=== Succesors ===
next: v483 
=== Usages ===
i1075 
=== Predecessor ===
v1393 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1393 address: v1889 #next: v483  <|@  <|@
f <@~|@floating>@ <|@
tid i1075 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1849 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1849  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1075 
y: i14 
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1075 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
trueSuccessorProbability: 0.8376470026322493
=== Inputs ===
condition: v480 
=== Succesors ===
trueSuccessor: v481 
falseSuccessor: v482 
=== Usages ===
=== Predecessor ===
i1849 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v480 #trueSuccessor: v481 #falseSuccessor: v482  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4588553210653347180
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v573  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
v481 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B67" "B79" 
    successors "B81" 
    xhandlers
    flags 
    probability 4594771731916432392
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 80]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v415 v573 
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v415 v573 #next: v41  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4594771731916432392
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4263) [bci: 83]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1401 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1401  <|@  <|@
f <@~|@floating>@ <|@
tid i1162 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 127]
rawvalue: -2147483645
stableDimension: 0
stamp: i32 [-2147483645] ⇊0000000080000003 ⇈0000000080000003
stampKind: i32
value: int[-2147483645|0xffffffff80000003]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1163 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 127]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i1162 
=== Succesors ===
=== Usages ===
v1401 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i1162  <|@  <|@
f <@*|@fixed>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 127]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1163 
=== Succesors ===
trueSuccessor: v1400 
falseSuccessor: v1398 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1163 #trueSuccessor: v1400 #falseSuccessor: v1398  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1399 
=== Usages ===
=== Predecessor ===
v1401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1399  <|@  <|@
tid ?585 <|@
d <@d|@=== Debug Properties ===
bci: 80
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 80]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4262
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i29 i30 a5 i4 i20 i14 
=== Succesors ===
=== Usages ===
v1399 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i29 i30 a5 i4 i20 i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
action: InvalidateRecompile
debugId: 1164
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 127]
reason: LoopLimitCheck
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?585 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1400 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?585  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" 
    xhandlers
    flags 
    probability 4594771731916432392
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
next: v54 
=== Usages ===
v55 
=== Predecessor ===
v1401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v54  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
v1398 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B87" 
    successors "B85" "B86" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4597186581738482105
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i56 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v55 
values: i29 i75 
=== Succesors ===
=== Usages ===
?58 v1049 ?1615 i75 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v55 values: i29 i75  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v55 
values: i30 i77 
=== Succesors ===
=== Usages ===
?58 v59 ?1615 i77 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v55 values: i30 i77  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.4309375612566744
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 127]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: v1398 
ends: v54 
=== Succesors ===
next: v64 
=== Usages ===
i56 i57 v61 v72 v78 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: v1398 ends: v54 #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 130]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i57 
y: i4 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i57 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 130]
stamp: void
trueSuccessorProbability: 0.10042065694083953
=== Inputs ===
condition: v59 
=== Succesors ===
trueSuccessor: v61 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v59 #trueSuccessor: v61 #falseSuccessor: v63  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors 
    xhandlers
    flags 
    probability 4582099055075010297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4279) [bci: 160]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v55 
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v55 #next: v80  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4279) [bci: 161]
stamp: void
=== Inputs ===
result: i14 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i14 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" "B88" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596381352530158810
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4274) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1850 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1850 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4274) [bci: 134]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1858 
=== Succesors ===
next: v1897 
=== Usages ===
a1045 v1897 
=== Predecessor ===
v63 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1858 #next: v1897  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 127
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4273
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i56 i57 a5 i4 i20 
=== Succesors ===
=== Usages ===
v1897 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i56 i57 a5 i4 i20  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1897 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?58 
object: a1850 
=== Succesors ===
next: i67 
=== Usages ===
=== Predecessor ===
a1850 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?58 object: a1850 #next: i67  <|@  <|@
f <@~|@floating>@ <|@
tid a1045 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4274) [bci: 134]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1850 
=== Succesors ===
=== Usages ===
v1049 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1850  <|@  <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4274) [bci: 141]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@49c2728d
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a1045 a2 i56 a5 
=== Succesors ===
=== Usages ===
i67 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1045 a2 i56 a5  <|@  <|@
tid ?1615 <|@
d <@d|@=== Debug Properties ===
bci: 141
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4274
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i56 i57 a5 i4 i20 
=== Succesors ===
=== Usages ===
i67 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i56 i57 a5 i4 i20  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i67 <|@
d <@d|@=== Debug Properties ===
bci: 141
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4274) [bci: 141]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1049 
stateDuring: ?1615 
=== Succesors ===
next: v74 
=== Usages ===
v69 
=== Predecessor ===
v1897 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1049 stateDuring: ?1615 #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4274) [bci: 144]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i67 
y: i14 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i67 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4274) [bci: 144]
stamp: void
trueSuccessorProbability: 0.33477590409391633
=== Inputs ===
condition: v69 
=== Succesors ===
trueSuccessor: v70 
falseSuccessor: v72 
=== Usages ===
=== Predecessor ===
i67 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v69 #trueSuccessor: v70 #falseSuccessor: v72  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B84" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589494120307264355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4276) [bci: 149]
stamp: void
=== Inputs ===
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4277) [bci: 154]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i77 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4277) [bci: 154]
stamp: i32
=== Inputs ===
x: i57 
y: i76 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i57 y: i76  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4276) [bci: 152]
stamp: i32
=== Inputs ===
x: i56 
y: i20 
=== Succesors ===
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i56 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 127]
stamp: void
=== Inputs ===
loopBegin: v55 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v55  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors 
    xhandlers
    flags 
    probability 4593966502708109097
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4275) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v55 
=== Succesors ===
next: v79 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v55 #next: v79  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4275) [bci: 148]
stamp: void
=== Inputs ===
result: i24 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i24 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577660083835861834
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1851 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1851  <|@  <|@
f <@~|@floating>@ <|@
tid v1906 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1837 
=== Succesors ===
=== Usages ===
a1851 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1851 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1906 
=== Succesors ===
next: v1903 
=== Usages ===
a1036 v1903 
=== Predecessor ===
v482 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1906 #next: v1903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1903 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?31 
object: a1851 
=== Succesors ===
next: i487 
=== Usages ===
=== Predecessor ===
a1851 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?31 object: a1851 #next: i487  <|@  <|@
f <@~|@floating>@ <|@
tid a1036 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1851 
=== Succesors ===
=== Usages ===
v1040 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1851  <|@  <|@
f <@~|@floating>@ <|@
tid i1791 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: i32
=== Inputs ===
x: i29 
y: i24 
=== Succesors ===
=== Usages ===
v1040 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i29 y: i24  <|@  <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@2ac38f90
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a1036 a2 i1791 a5 
=== Succesors ===
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1036 a2 i1791 a5  <|@  <|@
tid ?493 <|@
d <@d|@=== Debug Properties ===
bci: 77
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4262
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i29 i30 a5 i4 i20 
=== Succesors ===
=== Usages ===
?488 ?1614 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i29 i30 a5 i4 i20  <|@  <|@
tid ?1614 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?493 
values: - - - - 
=== Succesors ===
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?493 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i487 <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1040 
stateDuring: ?1614 
=== Succesors ===
next: v1416 
=== Usages ===
?488 v489 
=== Predecessor ===
v1903 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1040 stateDuring: ?1614 #next: v1416  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i487 
y: i14 
=== Succesors ===
=== Usages ===
v1416 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i487 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v489 
=== Succesors ===
trueSuccessor: v1415 
falseSuccessor: v1412 
=== Usages ===
=== Predecessor ===
i487 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v489 #trueSuccessor: v1415 #falseSuccessor: v1412  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1713 
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1713  <|@  <|@
f <@~|@floating>@ <|@
tid i1714 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -266515
stableDimension: 0
stamp: i32 [-266515] ⇊00000000fffbeeed ⇈00000000fffbeeed
stampKind: i32
value: int[-266515|0xfffffffffffbeeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1712 
=== Predecessor ===
v1415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577660083835861834
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1852 
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1852 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4264) [bci: 91]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1880 
=== Succesors ===
next: v1421 
=== Usages ===
v49 
=== Predecessor ===
v1412 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1880 #next: v1421  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4264) [bci: 89]
stamp: i32
=== Inputs ===
x: i20 
y: i29 
=== Succesors ===
=== Usages ===
v49 i29 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i20 y: i29  <|@  <|@
f <@~|@floating>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4264) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i47 
y: i1852 
=== Succesors ===
=== Usages ===
v1421 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i47 y: i1852  <|@  <|@
f <@*|@fixed>@ <|@
tid v1421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4264) [bci: 94]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v49 
=== Succesors ===
trueSuccessor: v1417 
falseSuccessor: v1420 
=== Usages ===
=== Predecessor ===
i1852 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v49 #trueSuccessor: v1417 #falseSuccessor: v1420  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577660083835861834
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4264) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v1421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4270) [bci: 121]
stamp: i32
=== Inputs ===
x: i30 
y: i24 
=== Succesors ===
=== Usages ===
i30 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i30 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
stamp: void
=== Inputs ===
loopBegin: v28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1417 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v28  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4264) [bci: 94]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1718 
=== Usages ===
=== Predecessor ===
v1421 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1718  <|@  <|@
f <@~|@floating>@ <|@
tid i1719 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -267027
stableDimension: 0
stamp: i32 [-267027] ⇊00000000fffbeced ⇈00000000fffbeced
stampKind: i32
value: int[-267027|0xfffffffffffbeced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1712 
=== Predecessor ===
v1420 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B90" "B93" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1715 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-267027 - -266515] ⇊00000000fffbeced ⇈00000000fffbeeed
valueDescription: i32
=== Inputs ===
merge: v1712 
values: i1714 i1719 
=== Succesors ===
=== Usages ===
v1717 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1712 values: i1714 i1719  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1713 v1718 
=== Succesors ===
next: v1717 
=== Usages ===
i1715 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1713 v1718 #next: v1717  <|@  <|@
tid ?488 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?493 
values: - - - - i487 
=== Succesors ===
=== Usages ===
v1717 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?493 values: - - - - i487  <|@  <|@
f <@*|@fixed>@ <|@
tid v1717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?488 
actionAndReason: i1715 
speculation: a1620 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1712 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?488 actionAndReason: i1715 speculation: a1620  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1688 
=== Usages ===
=== Predecessor ===
v1397 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1688  <|@  <|@
f <@~|@floating>@ <|@
tid i1689 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -262939
stableDimension: 0
stamp: i32 [-262939] ⇊00000000fffbfce5 ⇈00000000fffbfce5
stampKind: i32
value: int[-262939|0xfffffffffffbfce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1688 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
v1396 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1684 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1684  <|@  <|@
f <@~|@floating>@ <|@
tid i1685 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -260371
stableDimension: 0
stamp: i32 [-260371] ⇊00000000fffc06ed ⇈00000000fffc06ed
stampKind: i32
value: int[-260371|0xfffffffffffc06ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
v1386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1682 
=== Usages ===
=== Predecessor ===
v1382 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1682  <|@  <|@
f <@~|@floating>@ <|@
tid i1683 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -254003
stableDimension: 0
stamp: i32 [-254003] ⇊00000000fffc1fcd ⇈00000000fffc1fcd
stampKind: i32
value: int[-254003|0xfffffffffffc1fcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
v1381 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1676 
=== Usages ===
=== Predecessor ===
v1357 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1676  <|@  <|@
f <@~|@floating>@ <|@
tid i1677 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -295443
stableDimension: 0
stamp: i32 [-295443] ⇊00000000fffb7ded ⇈00000000fffb7ded
stampKind: i32
value: int[-295443|0xfffffffffffb7ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1676 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
v1356 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1672 
=== Usages ===
=== Predecessor ===
v1347 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1672  <|@  <|@
f <@~|@floating>@ <|@
tid i1673 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -291091
stableDimension: 0
stamp: i32 [-291091] ⇊00000000fffb8eed ⇈00000000fffb8eed
stampKind: i32
value: int[-291091|0xfffffffffffb8eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1672 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
v1346 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1670 
=== Usages ===
=== Predecessor ===
v1342 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1670  <|@  <|@
f <@~|@floating>@ <|@
tid i1671 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -295195
stableDimension: 0
stamp: i32 [-295195] ⇊00000000fffb7ee5 ⇈00000000fffb7ee5
stampKind: i32
value: int[-295195|0xfffffffffffb7ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
v1341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 66]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1661 
=== Usages ===
=== Predecessor ===
v1327 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1661  <|@  <|@
f <@~|@floating>@ <|@
tid i1662 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -241939
stableDimension: 0
stamp: i32 [-241939] ⇊00000000fffc4eed ⇈00000000fffc4eed
stampKind: i32
value: int[-241939|0xfffffffffffc4eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1661 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
v1326 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" "B100" "B99" "B98" "B74" "B97" "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1663 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-295443 - -241939] ⇊00000000fff800c5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1660 
values: i1662 i1671 i1673 i1677 i1679 i1683 i1685 i1689 
=== Succesors ===
=== Usages ===
v1665 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1660 values: i1662 i1671 i1673 i1677 i1679 i1683 i1685 i1689  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1660 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1661 v1670 v1672 v1676 v1678 v1682 v1684 v1688 
=== Succesors ===
next: v1665 
=== Usages ===
i1663 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1661 v1670 v1672 v1676 v1678 v1682 v1684 v1688 #next: v1665  <|@  <|@
f <@*|@fixed>@ <|@
tid v1665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?31 
actionAndReason: i1663 
speculation: a1620 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1660 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?31 actionAndReason: i1663 speculation: a1620  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1652 
=== Usages ===
=== Predecessor ===
v1238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1652  <|@  <|@
f <@~|@floating>@ <|@
tid i1653 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -199955
stableDimension: 0
stamp: i32 [-199955] ⇊00000000fffcf2ed ⇈00000000fffcf2ed
stampKind: i32
value: int[-199955|0xfffffffffffcf2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1617 
=== Predecessor ===
v1237 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1650 
=== Usages ===
=== Predecessor ===
v1234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1650  <|@  <|@
f <@~|@floating>@ <|@
tid i1651 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -192819
stableDimension: 0
stamp: i32 [-192819] ⇊00000000fffd0ecd ⇈00000000fffd0ecd
stampKind: i32
value: int[-192819|0xfffffffffffd0ecd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1617 
=== Predecessor ===
v1233 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1642 
=== Usages ===
=== Predecessor ===
v1206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1642  <|@  <|@
f <@~|@floating>@ <|@
tid i1643 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -294675
stableDimension: 0
stamp: i32 [-294675] ⇊00000000fffb80ed ⇈00000000fffb80ed
stampKind: i32
value: int[-294675|0xfffffffffffb80ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1642 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1617 
=== Predecessor ===
v1205 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1638 
=== Usages ===
=== Predecessor ===
v1198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1638  <|@  <|@
f <@~|@floating>@ <|@
tid i1639 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -293395
stableDimension: 0
stamp: i32 [-293395] ⇊00000000fffb85ed ⇈00000000fffb85ed
stampKind: i32
value: int[-293395|0xfffffffffffb85ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1617 
=== Predecessor ===
v1197 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1634 
=== Usages ===
=== Predecessor ===
v1190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1634  <|@  <|@
f <@~|@floating>@ <|@
tid i1635 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -294939
stableDimension: 0
stamp: i32 [-294939] ⇊00000000fffb7fe5 ⇈00000000fffb7fe5
stampKind: i32
value: int[-294939|0xfffffffffffb7fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1634 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1617 
=== Predecessor ===
v1189 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1630 
=== Usages ===
=== Predecessor ===
v1182 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1630  <|@  <|@
f <@~|@floating>@ <|@
tid i1631 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -293683
stableDimension: 0
stamp: i32 [-293683] ⇊00000000fffb84cd ⇈00000000fffb84cd
stampKind: i32
value: int[-293683|0xfffffffffffb84cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1630 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1617 
=== Predecessor ===
v1181 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1624 
=== Usages ===
=== Predecessor ===
v1170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1624  <|@  <|@
f <@~|@floating>@ <|@
tid i1625 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -176147
stableDimension: 0
stamp: i32 [-176147] ⇊00000000fffd4fed ⇈00000000fffd4fed
stampKind: i32
value: int[-176147|0xfffffffffffd4fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1624 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1617 
=== Predecessor ===
v1169 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B108" "B107" "B106" "B105" "B16" "B104" "B103" "B15" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1621 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-294939 - -176147] ⇊00000000fff800c5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1617 
values: i1625 i1631 i1635 i1639 i1643 i1647 i1651 i1653 i1657 
=== Succesors ===
=== Usages ===
v1623 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1617 values: i1625 i1631 i1635 i1639 i1643 i1647 i1651 i1653 i1657  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1617 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1624 v1630 v1634 v1638 v1642 v1646 v1650 v1652 v1656 
=== Succesors ===
next: v1623 
=== Usages ===
i1621 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1624 v1630 v1634 v1638 v1642 v1646 v1650 v1652 v1656 #next: v1623  <|@  <|@
f <@*|@fixed>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i1621 
speculation: a1620 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1617 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i1621 speculation: a1620  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i1799 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i1799  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/regex/Pattern$Curly;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v1853 v1854 ?493 ?31 ?576 ?166 ?466 ?611 ?58 ?585 ?1615 v1858 ?579 ?249 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1853 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1799 i1836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1799 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.cmax
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1853 
=== Succesors ===
next: v1170 
=== Usages ===
v8 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1853 #next: v1170  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v8 ?466 ?493 i25 ?31 ?466 ?611 ?58 v59 ?1615 ?579 ?579 ?166 ?249 ?585 ?166 ?576 ?576 ?611 v1163 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i1799 
=== Succesors ===
=== Usages ===
v1170 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i1799  <|@  <|@
f <@~|@floating>@ <|@
tid a1620 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1623 v1743 v1725 v1697 v1665 v1717 v1709 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/regex/Matcher;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 ?466 v799 v1865 ?611 ?31 ?493 v751 ?576 ?191 ?58 v1049 ?1615 v937 ?579 ?166 ?362 v988 ?585 ?249 v1861 v1040 v880 v1880 v1881 v1872 v1873 v1908 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 ?466 ?576 i20 v21 i214 ?579 ?166 v888 v920 v145 ?611 v908 v880 i1795 v547 v869 ?191 v201 v382 v1877 i1794 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 ?466 v799 ?31 ?493 ?191 ?611 ?58 v1049 ?1615 v937 ?579 ?166 v1040 v880 ?585 ?249 v1885 ?576 v1890 v988 v751 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4246
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 a5 - - 
=== Succesors ===
=== Usages ===
v1623 v1898 v1801 i1803 i1804 i1808 v1816 v1811 v1899 v1900 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 a5 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v1167 
falseSuccessor: v1169 
=== Usages ===
=== Predecessor ===
i1799 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v1167 #falseSuccessor: v1169  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@a129bd5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1800 
=== Usages ===
=== Predecessor ===
v1170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1800  <|@  <|@
f <@~|@floating>@ <|@
tid v1854 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1800 a1837 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1800 <|@
result v6|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.atom
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 24]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1854 
=== Succesors ===
next: v1898 
=== Usages ===
v1891 v1898 v1855 v1859 v1907 
=== Predecessor ===
v1167 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1854 #next: v1898  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1898 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
object: a1800 
=== Succesors ===
next: v1801 
=== Usages ===
=== Predecessor ===
a1800 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?6 object: a1800 #next: v1801  <|@  <|@
f <@~|@floating>@ <|@
tid v1890 <|@
result [v4|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: - 
=== Succesors ===
=== Usages ===
v1801 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1801 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v1890 
=== Succesors ===
next: v1182 
=== Usages ===
v1773 
=== Predecessor ===
v1898 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v1890 #next: v1182  <|@  <|@
f <@~|@floating>@ <|@
tid v1772 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1773 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1773 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1801 
y: v1772 
=== Succesors ===
=== Usages ===
v1182 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1801 y: v1772  <|@  <|@
f <@*|@fixed>@ <|@
tid v1182 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1773 
=== Succesors ===
trueSuccessor: v1179 
falseSuccessor: v1181 
=== Usages ===
=== Predecessor ===
v1801 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1773 #trueSuccessor: v1179 #falseSuccessor: v1181  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v6|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - 
>@ <|@ instruction CMP [v4|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1802 
=== Usages ===
=== Predecessor ===
v1182 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1802  <|@  <|@
f <@~|@floating>@ <|@
tid v1885 <|@
result [v4|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: - 
=== Succesors ===
=== Usages ===
a1838 a1802 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1802 <|@
result v7|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1885 
=== Succesors ===
next: i1803 
=== Usages ===
a707 v1876 
=== Predecessor ===
v1179 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1885 #next: i1803  <|@  <|@
f <@~|@floating>@ <|@
tid v1876 <|@
result [v7|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1802 
=== Succesors ===
=== Usages ===
i1803 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1803 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v1876 
=== Succesors ===
next: v1190 
=== Usages ===
v920 v547 v382 
=== Predecessor ===
a1802 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v1876 #next: v1190  <|@  <|@
f <@~|@floating>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1803 
=== Succesors ===
=== Usages ===
v1190 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i1803  <|@  <|@
f <@*|@fixed>@ <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v920 
=== Succesors ===
trueSuccessor: v1187 
falseSuccessor: v1189 
=== Usages ===
=== Predecessor ===
i1803 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v920 #trueSuccessor: v1187 #falseSuccessor: v1189  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v4|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV [v7|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B106" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1804 
=== Usages ===
i1805 
=== Predecessor ===
v1190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1804  <|@  <|@
f <@~|@floating>@ <|@
tid v1881 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1840 i1804 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1804 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 2]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v1881 
=== Succesors ===
next: v1198 
=== Usages ===
v145 v201 
=== Predecessor ===
v1187 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v1881 #next: v1198  <|@  <|@
f <@~|@floating>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1804 
=== Succesors ===
=== Usages ===
v1198 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i1804  <|@  <|@
f <@*|@fixed>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v145 
=== Succesors ===
trueSuccessor: v1195 
falseSuccessor: v1197 
=== Usages ===
=== Predecessor ===
i1804 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v145 #trueSuccessor: v1195 #falseSuccessor: v1197  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - 
>@ <|@ instruction v9|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B105" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1206 
=== Usages ===
=== Predecessor ===
v1198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1206  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1803 
=== Succesors ===
=== Usages ===
v1206 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i1803  <|@  <|@
f <@*|@fixed>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v547 
=== Succesors ===
trueSuccessor: v1203 
falseSuccessor: v1205 
=== Usages ===
=== Predecessor ===
v1195 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v547 #trueSuccessor: v1203 #falseSuccessor: v1205  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1805 
=== Usages ===
=== Predecessor ===
v1206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1805  <|@  <|@
f <@~|@floating>@ <|@
tid a707 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1802 
=== Succesors ===
=== Usages ===
v1877 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1802  <|@  <|@
f <@~|@floating>@ <|@
tid v1877 <|@
result [v10|QWORD[.] + v2|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a707 
index: i3 
=== Succesors ===
=== Usages ===
i1805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a707 index: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1805 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1187 
address: v1877 
=== Succesors ===
next: v1806 
=== Usages ===
i928 j1056 v1156 v1158 i1793 
=== Predecessor ===
v1203 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1187 address: v1877 #next: v1806  <|@  <|@
f <@~|@floating>@ <|@
tid v1891 <|@
result [v6|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1800 
=== Succesors ===
=== Usages ===
v1806 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1806 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1891 
=== Succesors ===
next: v100 
=== Usages ===
v1777 v1775 
=== Predecessor ===
i1805 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1891 #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v1774 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1775 v1788 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1775 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1806 
y: v1774 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1806 y: v1774  <|@  <|@
f <@~|@floating>@ <|@
tid j1056 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1805 
=== Succesors ===
=== Usages ===
v1860 v1857 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1805  <|@  <|@
f <@~|@floating>@ <|@
tid v1855 <|@
result [v6|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1800 
=== Succesors ===
=== Usages ===
a1807 i1813 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1800  <|@  <|@
f <@~|@floating>@ <|@
tid a406 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 7]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
rawvalue: int[128]{8192, 8192, 8192, 8192, 8192, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1883 v1860 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1157 <|@
result short[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1158 v1159 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1776 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1777 v1787 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4259) [bci: 58]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i25 i51 v79 i1794 ?576 v364 i189 v409 i214 v413 i241 v639 i1795 i1789 i1791 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1778 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1779 v1780 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1858 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1815 a1850 a1810 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v489 v480 v69 v80 v153 v162 ?579 v174 v637 ?217 v218 v414 ?611 v245 v462 ?585 ?161 ?461 ?360 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1155 <|@
result short[256|0x100] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
rawvalue: 256
stableDimension: 0
stamp: i16 [256] ⇊0000000000000100 ⇈0000000000000100
stampKind: i16
value: short[256|0x100]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1156 v1166 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 0.6337742856265922
=== Inputs ===
condition: v1775 
=== Succesors ===
trueSuccessor: v93 
falseSuccessor: v99 
=== Usages ===
=== Predecessor ===
v1806 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1775 #trueSuccessor: v93 #falseSuccessor: v99  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVSX [v10|QWORD[.] + v2|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v6|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVZX v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6337742856265922 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B16" 
    xhandlers
    flags 
    probability 4603883750818446262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1210 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1210  <|@  <|@
f <@~|@floating>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1805 
y: i1155 
=== Succesors ===
=== Usages ===
v1210 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1805 y: i1155  <|@  <|@
f <@*|@fixed>@ <|@
tid v1210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1156 
=== Succesors ===
trueSuccessor: v1207 
falseSuccessor: v1209 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1156 #trueSuccessor: v1207 #falseSuccessor: v1209  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B15" 
    xhandlers
    flags 
    probability 4603883750818446262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1807 
=== Usages ===
=== Predecessor ===
v1210 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1807 <|@
result v15|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v1855 
=== Succesors ===
next: i1808 
=== Usages ===
v1857 v1856 
=== Predecessor ===
v1207 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1855 #next: i1808  <|@  <|@
f <@~|@floating>@ <|@
tid v1856 <|@
result [v15|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1807 
=== Succesors ===
=== Usages ===
i1808 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1808 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v1856 
=== Succesors ===
next: v1218 
=== Usages ===
v733 
=== Predecessor ===
a1807 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v1856 #next: v1218  <|@  <|@
f <@~|@floating>@ <|@
tid i1793 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1805 
=== Succesors ===
=== Usages ===
v733 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1805  <|@  <|@
f <@~|@floating>@ <|@
tid v733 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1793 
y: i1808 
=== Succesors ===
=== Usages ===
v1218 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1793 y: i1808  <|@  <|@
f <@*|@fixed>@ <|@
tid v1218 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v733 
=== Succesors ===
trueSuccessor: v1215 
falseSuccessor: v1217 
=== Usages ===
=== Predecessor ===
i1808 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v733 #trueSuccessor: v1215 #falseSuccessor: v1217  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v6|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVZX v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - 
>@ <|@ instruction CMP (x: v16|DWORD, y: [v15|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4603883750818446262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1809 
=== Usages ===
i1809 
=== Predecessor ===
v1218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1809  <|@  <|@
f <@~|@floating>@ <|@
tid v1857 <|@
result [v13|QWORD + v15|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j1056 
index: a1807 
=== Succesors ===
=== Usages ===
i1809 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1056 index: a1807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1809 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: v1215 
address: v1857 
=== Succesors ===
next: v156 
=== Usages ===
i1053 
=== Predecessor ===
v1215 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1215 address: v1857 #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid i1053 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1809 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1809  <|@  <|@
f <@~|@floating>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1053 
y: i14 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1053 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 0.8376470026322493
=== Inputs ===
condition: v153 
=== Succesors ===
trueSuccessor: v154 
falseSuccessor: v155 
=== Usages ===
=== Predecessor ===
i1809 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v153 #trueSuccessor: v154 #falseSuccessor: v155  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVZXB [v13|QWORD + v15|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8376470026322493 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602956953655679596
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1810 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1810  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1810 <|@
result v18|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 163]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1858 
=== Succesors ===
next: v1811 
=== Usages ===
v1892 a1796 
=== Predecessor ===
v154 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1858 #next: v1811  <|@  <|@
f <@~|@floating>@ <|@
tid v1892 <|@
result [v18|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1810 
=== Succesors ===
=== Usages ===
v1811 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1810  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1811 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v1892 
=== Succesors ===
next: v626 
=== Usages ===
v1779 
=== Predecessor ===
a1810 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v1892 #next: v626  <|@  <|@
f <@~|@floating>@ <|@
tid v1779 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1811 
y: v1778 
=== Succesors ===
=== Usages ===
v626 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1811 y: v1778  <|@  <|@
f <@~|@floating>@ <|@
tid a1796 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 163]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1810 
=== Succesors ===
=== Usages ===
a614 a615 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1810  <|@  <|@
f <@*|@fixed>@ <|@
tid v626 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 0.836764508942159
=== Inputs ===
condition: v1779 
=== Succesors ===
trueSuccessor: v620 
falseSuccessor: v625 
=== Usages ===
=== Predecessor ===
v1811 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1779 #trueSuccessor: v620 #falseSuccessor: v625  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - 
>@ <|@ instruction CMP [v18|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.836764508942159 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601673990707472897
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v608 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v608  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v606 
=== Predecessor ===
v620 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B10 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B42" 
    xhandlers
    flags 
    probability 4590908810388122459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v612  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v625 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B11 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4592078797965298259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1812 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1812  <|@  <|@
f <@~|@floating>@ <|@
tid v1859 <|@
result [v6|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1800 
=== Succesors ===
=== Usages ===
a1812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1812 <|@
result v20|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1859 
=== Succesors ===
next: v1900 
=== Usages ===
a747 v1900 
=== Predecessor ===
v155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1859 #next: v1900  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1900 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
object: a1812 
=== Succesors ===
next: i160 
=== Usages ===
=== Predecessor ===
a1812 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?6 object: a1812 #next: i160  <|@  <|@
f <@~|@floating>@ <|@
tid a747 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1812 
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1812  <|@  <|@
f <@~|@floating>@ <|@
tid i1794 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: i32
=== Inputs ===
x: i3 
y: i24 
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i24  <|@  <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@22901144
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a747 a2 i1794 a5 
=== Succesors ===
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a747 a2 i1794 a5  <|@  <|@
tid ?166 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4252
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 a5 i4 - 
=== Succesors ===
=== Usages ===
?161 ?1611 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 a5 i4 -  <|@  <|@
tid ?1611 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?166 
values: - - - - 
=== Succesors ===
=== Usages ===
i160 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?166 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i160 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v751 
stateDuring: ?1611 
=== Succesors ===
next: v1230 
=== Usages ===
v162 
=== Predecessor ===
v1900 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v751 stateDuring: ?1611 #next: v1230  <|@  <|@
f <@~|@floating>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i160 
y: i14 
=== Succesors ===
=== Usages ===
v1230 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i160 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v162 
=== Succesors ===
trueSuccessor: v1229 
falseSuccessor: v1227 
=== Usages ===
=== Predecessor ===
i160 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v162 #trueSuccessor: v1229 #falseSuccessor: v1227  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[.] = MOV [v6|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v20|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v20|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] v3|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 31] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v23|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1228 
=== Usages ===
=== Predecessor ===
v1230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1228  <|@  <|@
tid ?161 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?166 
values: - - - - i14 
=== Succesors ===
=== Usages ===
v1228 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?166 values: - - - - i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 752
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?161 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1229 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?161  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -192531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] v3|DWORD - 
>@ <|@ instruction DEOPT info [bci:34, 31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B57" 
    xhandlers
    flags 
    probability 4592078797965298259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v1230 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v94  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
v1227 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1656 
=== Usages ===
=== Predecessor ===
v1218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1656  <|@  <|@
f <@~|@floating>@ <|@
tid i1657 <|@
result int[-187931|0xfffffffffffd21e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -187931
stableDimension: 0
stamp: i32 [-187931] ⇊00000000fffd21e5 ⇈00000000fffd21e5
stampKind: i32
value: int[-187931|0xfffffffffffd21e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1617 
=== Predecessor ===
v1217 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-187931|0xfffffffffffd21e5]] destination: B15 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1646 
=== Usages ===
=== Predecessor ===
v1210 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1646  <|@  <|@
f <@~|@floating>@ <|@
tid i1647 <|@
result int[-185363|0xfffffffffffd2bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -185363
stableDimension: 0
stamp: i32 [-185363] ⇊00000000fffd2bed ⇈00000000fffd2bed
stampKind: i32
value: int[-185363|0xfffffffffffd2bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1617 
=== Predecessor ===
v1209 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-185363|0xfffffffffffd2bed]] destination: B16 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B18" "B104" 
    xhandlers
    flags 
    probability 4600268955881048212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1234 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1234  <|@  <|@
f <@~|@floating>@ <|@
tid v1777 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1806 
y: v1776 
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1806 y: v1776  <|@  <|@
f <@*|@fixed>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1777 
=== Succesors ===
trueSuccessor: v1231 
falseSuccessor: v1233 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1777 #trueSuccessor: v1231 #falseSuccessor: v1233  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B103" 
    xhandlers
    flags 
    probability 4600268955881048212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1238 
=== Usages ===
=== Predecessor ===
v1234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1238  <|@  <|@
f <@~|@floating>@ <|@
tid v1158 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1805 
y: i1157 
=== Succesors ===
=== Usages ===
v1238 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1805 y: i1157  <|@  <|@
f <@*|@fixed>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1158 
=== Succesors ===
trueSuccessor: v1235 
falseSuccessor: v1237 
=== Usages ===
=== Predecessor ===
v1231 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1158 #trueSuccessor: v1235 #falseSuccessor: v1237  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B54" 
    xhandlers
    flags 
    probability 4600268955881048212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1813 
=== Usages ===
i1814 
=== Predecessor ===
v1238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1813  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1813 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Ctype.ctype
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1855 
=== Succesors ===
next: i1814 
=== Usages ===
v555 
=== Predecessor ===
v1235 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1855 #next: i1814  <|@  <|@
f <@~|@floating>@ <|@
tid v1860 <|@
result [v14|QWORD[.] + v13|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a406 
index: j1056 
=== Succesors ===
=== Usages ===
i1814 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a406 index: j1056  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1814 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1235 
address: v1860 
=== Succesors ===
next: v456 
=== Usages ===
v555 
=== Predecessor ===
i1813 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1235 address: v1860 #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 6]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
x: i1813 
y: i1814 
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i1813 y: i1814  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 0.8376470026322493
=== Inputs ===
condition: v555 
=== Succesors ===
trueSuccessor: v454 
falseSuccessor: v455 
=== Usages ===
=== Predecessor ===
i1814 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v555 #trueSuccessor: v454 #falseSuccessor: v455  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV [v6|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|DWORD, y: [v14|QWORD[.] + v13|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8376470026322493 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B41" 
    xhandlers
    flags 
    probability 4599197858612790005
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1815 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1815  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1815 <|@
result v25|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 163]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1858 
=== Succesors ===
next: v1816 
=== Usages ===
v1893 a791 
=== Predecessor ===
v454 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1858 #next: v1816  <|@  <|@
f <@~|@floating>@ <|@
tid v1893 <|@
result [v25|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1815 
=== Succesors ===
=== Usages ===
v1816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1815  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1816 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v1893 
=== Succesors ===
next: v116 
=== Usages ===
v1780 
=== Predecessor ===
a1815 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v1893 #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid v1780 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1816 
y: v1778 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1816 y: v1778  <|@  <|@
f <@~|@floating>@ <|@
tid a791 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 163]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1815 
=== Succesors ===
=== Usages ===
a615 a614 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1815  <|@  <|@
f <@*|@fixed>@ <|@
tid v116 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 0.836764508942159
=== Inputs ===
condition: v1780 
=== Succesors ===
trueSuccessor: v109 
falseSuccessor: v115 
=== Usages ===
=== Predecessor ===
v1816 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1780 #trueSuccessor: v109 #falseSuccessor: v115  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - 
>@ <|@ instruction CMP [v25|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.836764508942159 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598295780325727759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v607  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v606 
=== Predecessor ===
v109 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B10" 
    successors "B23" "B39" 
    xhandlers
    flags 
    probability 4604488485143970824
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a615 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/regex/Pattern$Node;
valueDescription: a -
=== Inputs ===
merge: v606 
values: a791 a1796 
=== Succesors ===
=== Usages ===
?191 v1870 v1862 v1866 ?362 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v606 values: a791 a1796  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v607 v608 
=== Succesors ===
next: a1817 
=== Usages ===
a615 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v607 v608 #next: a1817  <|@  <|@
f <@~|@floating>@ <|@
tid v1861 <|@
result [v1|QWORD[.] + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1817 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1817 <|@
result v28|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1861 
=== Succesors ===
next: i1818 
=== Usages ===
a806 v1863 
=== Predecessor ===
v606 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1861 #next: i1818  <|@  <|@
tid ?579 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4252
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 a5 i4 - i14 
=== Succesors ===
=== Usages ===
v1725 i1818 i1822 v1825 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 a5 i4 - i14  <|@  <|@
f <@~|@floating>@ <|@
tid v1863 <|@
result [v28|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1817 
=== Succesors ===
=== Usages ===
i1818 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1817  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1818 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?579 
guard: - 
address: v1863 
=== Succesors ===
next: i1819 
=== Usages ===
v814 
=== Predecessor ===
a1817 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?579 guard: - address: v1863 #next: i1819  <|@  <|@
f <@~|@floating>@ <|@
tid v1862 <|@
result [v27|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a615 
index: - 
=== Succesors ===
=== Usages ===
i1819 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a615 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1819 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1862 
=== Succesors ===
next: v1250 
=== Usages ===
v1864 v814 
=== Predecessor ===
i1818 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1862 #next: v1250  <|@  <|@
f <@~|@floating>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1819 
y: i1818 
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1819 y: i1818  <|@  <|@
f <@*|@fixed>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v814 
=== Succesors ===
trueSuccessor: v1247 
falseSuccessor: v1249 
=== Usages ===
=== Predecessor ===
i1819 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v814 #trueSuccessor: v1247 #falseSuccessor: v1249  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] v3|DWORD - 
>@ <|@ instruction v29|DWORD = MOV [v28|DWORD[.] * 8 + 12] size: DWORD state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV [v27|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604488485143970824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1820 
=== Usages ===
i1820 
=== Predecessor ===
v1250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1820  <|@  <|@
f <@~|@floating>@ <|@
tid a806 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1817 
=== Succesors ===
=== Usages ===
v1864 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1817  <|@  <|@
f <@~|@floating>@ <|@
tid v1864 <|@
result [v31|QWORD[.] + v30|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a806 
index: i1819 
=== Succesors ===
=== Usages ===
i1820 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a806 index: i1819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1820 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1247 
address: v1864 
=== Succesors ===
next: v1254 
=== Usages ===
v174 v860 ?191 
=== Predecessor ===
v1247 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1247 address: v1864 #next: v1254  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1820 
y: i14 
=== Succesors ===
=== Usages ===
v1254 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1820 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v174 
=== Succesors ===
trueSuccessor: v1253 
falseSuccessor: v1251 
=== Usages ===
=== Predecessor ===
i1820 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v174 #trueSuccessor: v1253 #falseSuccessor: v1251  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV [v31|QWORD[.] + v30|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v32|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1726 
=== Usages ===
=== Predecessor ===
v1254 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1726  <|@  <|@
f <@~|@floating>@ <|@
tid i1727 <|@
result int[-210451|0xfffffffffffcc9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -210451
stableDimension: 0
stamp: i32 [-210451] ⇊00000000fffcc9ed ⇈00000000fffcc9ed
stampKind: i32
value: int[-210451|0xfffffffffffcc9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1723 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1720 
=== Predecessor ===
v1253 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-210451|0xfffffffffffcc9ed]] destination: B24 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B38" 
    xhandlers
    flags 
    probability 4604488485143970824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1821 
=== Usages ===
=== Predecessor ===
v1254 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1821  <|@  <|@
f <@~|@floating>@ <|@
tid v1865 <|@
result [v1|QWORD[.] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1821 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1821 <|@
result v33|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1865 
=== Succesors ===
next: i1822 
=== Usages ===
a826 v1875 v1867 v1874 
=== Predecessor ===
v1251 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1865 #next: i1822  <|@  <|@
f <@~|@floating>@ <|@
tid v1867 <|@
result [v33|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1821 
=== Succesors ===
=== Usages ===
i1822 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1821  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1822 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?579 
guard: - 
address: v1867 
=== Succesors ===
next: i1823 
=== Usages ===
v853 v862 
=== Predecessor ===
a1821 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?579 guard: - address: v1867 #next: i1823  <|@  <|@
f <@~|@floating>@ <|@
tid v1866 <|@
result [v27|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a615 
index: - 
=== Succesors ===
=== Usages ===
i1823 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a615 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1823 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1866 
=== Succesors ===
next: v1262 
=== Usages ===
v853 i189 v1868 
=== Predecessor ===
i1822 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1866 #next: v1262  <|@  <|@
f <@~|@floating>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1823 
y: i1822 
=== Succesors ===
=== Usages ===
v1262 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1823 y: i1822  <|@  <|@
f <@*|@fixed>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v853 
=== Succesors ===
trueSuccessor: v1259 
falseSuccessor: v1261 
=== Usages ===
=== Predecessor ===
i1823 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v853 #trueSuccessor: v1259 #falseSuccessor: v1261  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] v3|DWORD - 
>@ <|@ instruction v34|DWORD = MOV [v33|DWORD[.] * 8 + 12] size: DWORD state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOV [v27|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B37" 
    xhandlers
    flags 
    probability 4604488485143970824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1266 
=== Usages ===
i1827 v860 
=== Predecessor ===
v1262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1266  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: i32
=== Inputs ===
x: i1823 
y: i24 
=== Succesors ===
=== Usages ===
v1869 v862 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1823 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i189 
y: i1822 
=== Succesors ===
=== Usages ===
v1266 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i189 y: i1822  <|@  <|@
f <@*|@fixed>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v862 
=== Succesors ===
trueSuccessor: v1263 
falseSuccessor: v1265 
=== Usages ===
=== Predecessor ===
v1259 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v862 #trueSuccessor: v1263 #falseSuccessor: v1265  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = INC v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B31" 
    xhandlers
    flags 
    probability 4604488485143970824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1824 
=== Usages ===
v899 v869 i1826 
=== Predecessor ===
v1266 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1824  <|@  <|@
f <@~|@floating>@ <|@
tid v1870 <|@
result [v27|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a615 
index: - 
=== Succesors ===
=== Usages ===
a1824 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a615 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1824 <|@
result v37|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1870 
=== Succesors ===
next: v1825 
=== Usages ===
v1894 v1871 
=== Predecessor ===
v1263 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1870 #next: v1825  <|@  <|@
f <@~|@floating>@ <|@
tid v1894 <|@
result [v37|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1824 
=== Succesors ===
=== Usages ===
v1825 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1824  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1825 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?579 
guard: - 
address: v1894 
=== Succesors ===
next: i1826 
=== Usages ===
v1784 v1782 
=== Predecessor ===
a1824 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?579 guard: - address: v1894 #next: i1826  <|@  <|@
f <@~|@floating>@ <|@
tid a826 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1821 
=== Succesors ===
=== Usages ===
v1869 v1868 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1821  <|@  <|@
f <@~|@floating>@ <|@
tid v1869 <|@
result [v39|QWORD[.] + v36|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a826 
index: i189 
=== Succesors ===
=== Usages ===
v869 i1826 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a826 index: i189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1826 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1263 
address: v1869 
=== Succesors ===
next: i1827 
=== Usages ===
?362 ?191 
=== Predecessor ===
v1825 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1263 address: v1869 #next: i1827  <|@  <|@
f <@~|@floating>@ <|@
tid v1868 <|@
result [v39|QWORD[.] + v35|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a826 
index: i1823 
=== Succesors ===
=== Usages ===
v860 i1827 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a826 index: i1823  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1827 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1259 
address: v1868 
=== Succesors ===
next: v860 
=== Usages ===
?362 ?191 
=== Predecessor ===
i1826 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1259 address: v1868 #next: v860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1259 
address: v1868 
value: i1820 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v869 
=== Usages ===
=== Predecessor ===
i1827 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1259 address: v1868 value: i1820 stateAfter: - lastLocationAccess: - #next: v869  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1263 
address: v1869 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v291 
=== Usages ===
=== Predecessor ===
v860 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1263 address: v1869 value: i3 stateAfter: - lastLocationAccess: - #next: v291  <|@  <|@
tid ?199 <|@
d <@d|@=== Debug Properties ===
bci: 170
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4281
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - 
=== Succesors ===
=== Usages ===
?362 ?191 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - -  <|@  <|@
tid ?191 <|@
d <@d|@=== Debug Properties ===
bci: 63
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?199 
values: a615 a2 i3 a5 i1820 i1827 i1826 
=== Succesors ===
=== Usages ===
v1697 v1904 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?199 values: a615 a2 i3 a5 i1820 i1827 i1826  <|@  <|@
f <@~|@floating>@ <|@
tid v1781 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1782 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1782 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1825 
y: v1781 
=== Succesors ===
=== Usages ===
v291 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1825 y: v1781  <|@  <|@
f <@*|@fixed>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BranchConn; target_method=match target_method_class=Ljava/util/regex/Pattern$BranchConn; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 0.5698385272463588
=== Inputs ===
condition: v1782 
=== Succesors ===
trueSuccessor: v284 
falseSuccessor: v290 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1782 #trueSuccessor: v284 #falseSuccessor: v290  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v27|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] v3|DWORD - 
>@ <|@ instruction v38|DWORD = MOV [v37|DWORD[.] * 8 + 8] size: DWORD state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOV [v39|QWORD[.] + v36|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV [v39|QWORD[.] + v35|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + v35|DWORD * 4 + 16], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + v36|DWORD * 4 + 16], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v38|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5698385272463588 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4600866703859656166
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BranchConn; target_method=match target_method_class=Ljava/util/regex/Pattern$BranchConn; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1828 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1828  <|@  <|@
f <@~|@floating>@ <|@
tid v1871 <|@
result [v37|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1824 
=== Succesors ===
=== Usages ===
a1828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1824  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1828 <|@
result v42|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1871 
=== Succesors ===
next: v1904 
=== Usages ===
a876 v1904 
=== Predecessor ===
v284 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1871 #next: v1904  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1904 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?191 
object: a1828 
=== Succesors ===
next: i359 
=== Usages ===
=== Predecessor ===
a1828 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?191 object: a1828 #next: i359  <|@  <|@
f <@~|@floating>@ <|@
tid a876 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1828 
=== Succesors ===
=== Usages ===
v880 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1828  <|@  <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@6c22f2a0
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a876 a2 i3 a5 
=== Succesors ===
=== Usages ===
i359 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a876 a2 i3 a5  <|@  <|@
tid ?362 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?199 
values: a615 a2 - - - i1827 i1826 
=== Succesors ===
=== Usages ===
?360 ?1616 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?199 values: a615 a2 - - - i1827 i1826  <|@  <|@
tid ?1616 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<Pattern$BranchConn.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4570
stackSize: 0
=== Inputs ===
outerFrameState: ?362 
values: - - - - 
=== Succesors ===
=== Usages ===
i359 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?362 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i359 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 7
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v880 
stateDuring: ?1616 
=== Succesors ===
next: v1278 
=== Usages ===
v637 
=== Predecessor ===
v1904 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v880 stateDuring: ?1616 #next: v1278  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i359 
y: i14 
=== Succesors ===
=== Usages ===
v1278 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i359 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v637 
=== Succesors ===
trueSuccessor: v1277 
falseSuccessor: v1275 
=== Usages ===
=== Predecessor ===
i359 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v637 #trueSuccessor: v1277 #falseSuccessor: v1275  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v37|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v27|QWORD[.] v1|QWORD[.] v2|DWORD v4|QWORD[.] v32|DWORD v41|DWORD v40|DWORD 
java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v42|DWORD[.] * 8] state [bci:63, 170] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: v27|QWORD[.] v1|QWORD[.] - - - v41|DWORD v40|DWORD 
java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
locals: - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:7, 70, 170] <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v44|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1276 
=== Usages ===
=== Predecessor ===
v1278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1276  <|@  <|@
tid ?360 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Pattern$BranchConn.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4570
stackSize: 1
=== Inputs ===
outerFrameState: ?362 
values: - - - - i14 
=== Succesors ===
=== Usages ===
v1276 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?362 values: - - - - i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1276 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 881
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?360 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1277 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?360  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -225555 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 10]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: v27|QWORD[.] v1|QWORD[.] - - - v41|DWORD v40|DWORD 
java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
locals: - - - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 70, 170] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4600866703859656166
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v639 
=== Usages ===
=== Predecessor ===
v1278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v639  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
result: i24 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1275 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i24 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" "B35" 
    xhandlers
    flags 
    probability 4599103067173544490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1282 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1282  <|@  <|@
f <@~|@floating>@ <|@
tid v1783 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1784 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1784 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1825 
y: v1783 
=== Succesors ===
=== Usages ===
v1282 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1825 y: v1783  <|@  <|@
f <@*|@fixed>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1784 
=== Succesors ===
trueSuccessor: v1279 
falseSuccessor: v1281 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1784 #trueSuccessor: v1279 #falseSuccessor: v1281  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v38|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599103067173544490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1829 
=== Usages ===
=== Predecessor ===
v1282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1829  <|@  <|@
f <@~|@floating>@ <|@
tid v1872 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1829 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.acceptMode
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1872 
=== Succesors ===
next: v1286 
=== Usages ===
v364 
=== Predecessor ===
v1279 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1872 #next: v1286  <|@  <|@
f <@~|@floating>@ <|@
tid v364 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1829 
y: i24 
=== Succesors ===
=== Usages ===
v1286 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1829 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v1286 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v364 
=== Succesors ===
trueSuccessor: v1285 
falseSuccessor: v1283 
=== Usages ===
=== Predecessor ===
i1829 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v364 #trueSuccessor: v1285 #falseSuccessor: v1283  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1698 
=== Usages ===
=== Predecessor ===
v1286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1698  <|@  <|@
f <@~|@floating>@ <|@
tid i1699 <|@
result int[-226579|0xfffffffffffc8aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -226579
stableDimension: 0
stamp: i32 [-226579] ⇊00000000fffc8aed ⇈00000000fffc8aed
stampKind: i32
value: int[-226579|0xfffffffffffc8aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1695 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1692 
=== Predecessor ===
v1285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-226579|0xfffffffffffc8aed]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 4599103067173544490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v888 
=== Usages ===
=== Predecessor ===
v1286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v888  <|@  <|@
f <@~|@floating>@ <|@
tid v1908 <|@
result [v1|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3435) [bci: 20]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1908 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i1830 
=== Usages ===
=== Predecessor ===
v1283 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1908 value: i3 stateAfter: - lastLocationAccess: - #next: i1830  <|@  <|@
f <@~|@floating>@ <|@
tid v1873 <|@
result [v1|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1830 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1830 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.first
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 29]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1873 
=== Succesors ===
next: v899 
=== Usages ===
v899 
=== Predecessor ===
v888 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1873 #next: v899  <|@  <|@
f <@~|@floating>@ <|@
tid v1874 <|@
result [v33|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1821 
=== Succesors ===
=== Usages ===
v899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1821  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1263 
address: v1874 
value: i1830 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v908 
=== Usages ===
=== Predecessor ===
i1830 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1263 address: v1874 value: i1830 stateAfter: - lastLocationAccess: - #next: v908  <|@  <|@
f <@~|@floating>@ <|@
tid v1875 <|@
result [v33|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1821 
=== Succesors ===
=== Usages ===
v908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1821  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1875 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v899 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1875 value: i3 stateAfter: - lastLocationAccess: - #next: v409  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
result: i24 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v908 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i24 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 32], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|DWORD[.] * 8 + 16], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|DWORD[.] * 8 + 20], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1700 
=== Usages ===
=== Predecessor ===
v1282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1700  <|@  <|@
f <@~|@floating>@ <|@
tid i1701 <|@
result int[-225843|0xfffffffffffc8dcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -225843
stableDimension: 0
stamp: i32 [-225843] ⇊00000000fffc8dcd ⇈00000000fffc8dcd
stampKind: i32
value: int[-225843|0xfffffffffffc8dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1695 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1692 
=== Predecessor ===
v1281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-225843|0xfffffffffffc8dcd]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1695 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-226579 - -224779] ⇊00000000fffc80c5 ⇈00000000fffc9ffd
valueDescription: i32
=== Inputs ===
merge: v1692 
values: i1699 i1701 
=== Succesors ===
=== Usages ===
v1697 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1692 values: i1699 i1701  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1698 v1700 
=== Succesors ===
next: v1697 
=== Usages ===
i1695 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1698 v1700 #next: v1697  <|@  <|@
f <@*|@fixed>@ <|@
tid v1697 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?191 
actionAndReason: i1695 
speculation: a1620 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1692 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?191 actionAndReason: i1695 speculation: a1620  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v27|QWORD[.] v1|QWORD[.] v2|DWORD v4|QWORD[.] v32|DWORD v41|DWORD v40|DWORD 
java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
locals: - - - - - - - 
>@ <|@ instruction DEOPT info [bci:63, 170] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1736 
=== Usages ===
=== Predecessor ===
v1266 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1736  <|@  <|@
f <@~|@floating>@ <|@
tid i1737 <|@
result int[-220955|0xfffffffffffca0e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -220955
stableDimension: 0
stamp: i32 [-220955] ⇊00000000fffca0e5 ⇈00000000fffca0e5
stampKind: i32
value: int[-220955|0xfffffffffffca0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1723 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1736 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1720 
=== Predecessor ===
v1265 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-220955|0xfffffffffffca0e5]] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1734 
=== Usages ===
=== Predecessor ===
v1262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1734  <|@  <|@
f <@~|@floating>@ <|@
tid i1735 <|@
result int[-218651|0xfffffffffffca9e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -218651
stableDimension: 0
stamp: i32 [-218651] ⇊00000000fffca9e5 ⇈00000000fffca9e5
stampKind: i32
value: int[-218651|0xfffffffffffca9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1723 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1720 
=== Predecessor ===
v1261 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-218651|0xfffffffffffca9e5]] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1728 
=== Usages ===
=== Predecessor ===
v1250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1728  <|@  <|@
f <@~|@floating>@ <|@
tid i1729 <|@
result int[-208667|0xfffffffffffcd0e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -208667
stableDimension: 0
stamp: i32 [-208667] ⇊00000000fffcd0e5 ⇈00000000fffcd0e5
stampKind: i32
value: int[-208667|0xfffffffffffcd0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1723 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1720 
=== Predecessor ===
v1249 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-208667|0xfffffffffffcd0e5]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B24" "B39" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1723 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-223499 - -207371] ⇊00000000fffc80e5 ⇈00000000fffcfffd
valueDescription: i32
=== Inputs ===
merge: v1720 
values: i1727 i1729 i1735 i1737 
=== Succesors ===
=== Usages ===
v1725 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1720 values: i1727 i1729 i1735 i1737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1720 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1726 v1728 v1734 v1736 
=== Succesors ===
next: v1725 
=== Usages ===
i1723 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1726 v1728 v1734 v1736 #next: v1725  <|@  <|@
f <@*|@fixed>@ <|@
tid v1725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?579 
actionAndReason: i1723 
speculation: a1620 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1720 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?579 actionAndReason: i1723 speculation: a1620  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] v3|DWORD - 
>@ <|@ instruction DEOPT info [bci:34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B42" 
    xhandlers
    flags 
    probability 4587377447332292398
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v610 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v610  <|@  <|@
f <@*|@fixed>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v115 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B11" 
    successors "B43" "B52" 
    xhandlers
    flags 
    probability 4594094371727138681
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a614 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/regex/Pattern$Node;
valueDescription: a -
=== Inputs ===
merge: v609 
values: a791 a1796 
=== Succesors ===
=== Usages ===
v1895 v1878 v1879 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v609 values: a791 a1796  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v610 v612 
=== Succesors ===
next: v1831 
=== Usages ===
a614 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v610 v612 #next: v1831  <|@  <|@
f <@~|@floating>@ <|@
tid v1895 <|@
result [v48|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a614 
index: - 
=== Succesors ===
=== Usages ===
v1831 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a614 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1831 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1895 
=== Succesors ===
next: v1294 
=== Usages ===
v1786 
=== Predecessor ===
v609 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1895 #next: v1294  <|@  <|@
f <@~|@floating>@ <|@
tid v1785 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1786 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1786 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1831 
y: v1785 
=== Succesors ===
=== Usages ===
v1294 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1831 y: v1785  <|@  <|@
tid ?611 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4252
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 a5 i4 - i14 
=== Succesors ===
=== Usages ===
v1743 v1905 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 a5 i4 - i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Single; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1786 
=== Succesors ===
trueSuccessor: v1291 
falseSuccessor: v1293 
=== Usages ===
=== Predecessor ===
v1831 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1786 #trueSuccessor: v1291 #falseSuccessor: v1293  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOV [v48|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v49|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4594094371727138681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Single; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1298 
=== Usages ===
=== Predecessor ===
v1294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1298  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1804 
=== Succesors ===
=== Usages ===
v1298 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i1804  <|@  <|@
f <@*|@fixed>@ <|@
tid v1298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v201 
=== Succesors ===
trueSuccessor: v1295 
falseSuccessor: v1297 
=== Usages ===
=== Predecessor ===
v1291 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v201 #trueSuccessor: v1295 #falseSuccessor: v1297  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B50" 
    xhandlers
    flags 
    probability 4594094371727138681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1302 
=== Usages ===
=== Predecessor ===
v1298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1302  <|@  <|@
f <@~|@floating>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1803 
=== Succesors ===
=== Usages ===
v1302 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i1803  <|@  <|@
f <@*|@fixed>@ <|@
tid v1302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v382 
=== Succesors ===
trueSuccessor: v1299 
falseSuccessor: v1301 
=== Usages ===
=== Predecessor ===
v1295 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v382 #trueSuccessor: v1299 #falseSuccessor: v1301  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B49" 
    xhandlers
    flags 
    probability 4594094371727138681
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1832 
=== Usages ===
=== Predecessor ===
v1302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1832  <|@  <|@
f <@~|@floating>@ <|@
tid v1878 <|@
result [v48|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a614 
index: - 
=== Succesors ===
=== Usages ===
i1832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a614 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1832 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Single.c
nodeSourcePosition: at java.util.regex.Pattern$Single.isSatisfiedBy(Pattern.java:3826) [bci: 2]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1878 
=== Succesors ===
next: v212 
=== Usages ===
v320 
=== Predecessor ===
v1299 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1878 #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid i928 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1805 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1805  <|@  <|@
f <@~|@floating>@ <|@
tid v320 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Single.isSatisfiedBy(Pattern.java:3826) [bci: 5]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i928 
y: i1832 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i928 y: i1832  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 0.16235299736775066
=== Inputs ===
condition: v320 
=== Succesors ===
trueSuccessor: v211 
falseSuccessor: v210 
=== Usages ===
=== Predecessor ===
i1832 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v320 #trueSuccessor: v211 #falseSuccessor: v210  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVZX v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|DWORD, y: [v48|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.16235299736775066 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4582055684782979642
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1833 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1833  <|@  <|@
f <@~|@floating>@ <|@
tid v1879 <|@
result [v48|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a614 
index: - 
=== Succesors ===
=== Usages ===
a1833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a614 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1833 <|@
result v51|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1879 
=== Succesors ===
next: v1905 
=== Usages ===
a933 v1905 
=== Predecessor ===
v211 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1879 #next: v1905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1905 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?611 
object: a1833 
=== Succesors ===
next: i216 
=== Usages ===
=== Predecessor ===
a1833 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?611 object: a1833 #next: i216  <|@  <|@
f <@~|@floating>@ <|@
tid a933 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1833 
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1833  <|@  <|@
f <@~|@floating>@ <|@
tid i214 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: i32
=== Inputs ===
x: i3 
y: i24 
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i24  <|@  <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@5b170eb3
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a933 a2 i214 a5 
=== Succesors ===
=== Usages ===
i216 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a933 a2 i214 a5  <|@  <|@
tid ?222 <|@
d <@d|@=== Debug Properties ===
bci: 170
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4281
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - 
=== Succesors ===
=== Usages ===
?217 ?1612 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - -  <|@  <|@
tid ?1612 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?222 
values: - - - - 
=== Succesors ===
=== Usages ===
i216 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?222 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i216 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v937 
stateDuring: ?1612 
=== Succesors ===
next: v1310 
=== Usages ===
v218 
=== Predecessor ===
v1905 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v937 stateDuring: ?1612 #next: v1310  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i216 
y: i14 
=== Succesors ===
=== Usages ===
v1310 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i216 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v218 
=== Succesors ===
trueSuccessor: v1309 
falseSuccessor: v1307 
=== Usages ===
=== Predecessor ===
i216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v218 #trueSuccessor: v1309 #falseSuccessor: v1307  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[.] = MOV [v48|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] v3|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v51|DWORD[.] * 8] state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
locals: - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 170] <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v54|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1308 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1308  <|@  <|@
tid ?217 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?222 
values: - - - - i14 
=== Succesors ===
=== Usages ===
v1308 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?222 values: - - - - i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 938
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?217 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1309 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?217  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -240147 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
locals: - - - - - - - 
>@ <|@ instruction DEOPT info [bci:34, 170] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4582055684782979642
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v1310 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v413  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i24 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1307 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i24 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 4592917507692732515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v414  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i14 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i14 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1748 
=== Usages ===
=== Predecessor ===
v1302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1748  <|@  <|@
f <@~|@floating>@ <|@
tid i1749 <|@
result int[-234003|0xfffffffffffc6ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -234003
stableDimension: 0
stamp: i32 [-234003] ⇊00000000fffc6ded ⇈00000000fffc6ded
stampKind: i32
value: int[-234003|0xfffffffffffc6ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1741 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1748 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1738 
=== Predecessor ===
v1301 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-234003|0xfffffffffffc6ded]] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B53" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1746 
=== Usages ===
=== Predecessor ===
v1298 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1746  <|@  <|@
f <@~|@floating>@ <|@
tid i1747 <|@
result int[-232979|0xfffffffffffc71ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -232979
stableDimension: 0
stamp: i32 [-232979] ⇊00000000fffc71ed ⇈00000000fffc71ed
stampKind: i32
value: int[-232979|0xfffffffffffc71ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1741 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1738 
=== Predecessor ===
v1297 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-232979|0xfffffffffffc71ed]] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Single; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1744 
=== Usages ===
=== Predecessor ===
v1294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1744  <|@  <|@
f <@~|@floating>@ <|@
tid i1745 <|@
result int[-232755|0xfffffffffffc72cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -232755
stableDimension: 0
stamp: i32 [-232755] ⇊00000000fffc72cd ⇈00000000fffc72cd
stampKind: i32
value: int[-232755|0xfffffffffffc72cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1741 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1738 
=== Predecessor ===
v1293 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-232755|0xfffffffffffc72cd]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1741 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-239371 - -232755] ⇊00000000fffc40c5 ⇈00000000fffc7ffd
valueDescription: i32
=== Inputs ===
merge: v1738 
values: i1745 i1747 i1749 
=== Succesors ===
=== Usages ===
v1743 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1738 values: i1745 i1747 i1749  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1744 v1746 v1748 
=== Succesors ===
next: v1743 
=== Usages ===
i1741 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1744 v1746 v1748 #next: v1743  <|@  <|@
f <@*|@fixed>@ <|@
tid v1743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?611 
actionAndReason: i1741 
speculation: a1620 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1738 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?611 actionAndReason: i1741 speculation: a1620  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] v3|DWORD - 
>@ <|@ instruction DEOPT info [bci:34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4588729599181860091
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1834 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1834  <|@  <|@
f <@~|@floating>@ <|@
tid v1907 <|@
result [v6|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1800 
=== Succesors ===
=== Usages ===
a1834 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1800  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1834 <|@
result v56|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1907 
=== Succesors ===
next: v1899 
=== Usages ===
a795 v1899 
=== Predecessor ===
v455 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1907 #next: v1899  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1899 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
object: a1834 
=== Succesors ===
next: i460 
=== Usages ===
=== Predecessor ===
a1834 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?6 object: a1834 #next: i460  <|@  <|@
f <@~|@floating>@ <|@
tid a795 <|@
result v57|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1834 
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1834  <|@  <|@
f <@~|@floating>@ <|@
tid i1795 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
stamp: i32
=== Inputs ===
x: i3 
y: i24 
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i24  <|@  <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@10b608fd
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a795 a2 i1795 a5 
=== Succesors ===
=== Usages ===
i460 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a795 a2 i1795 a5  <|@  <|@
tid ?466 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4252
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 a5 i4 - 
=== Succesors ===
=== Usages ===
?461 ?1610 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 a5 i4 -  <|@  <|@
tid ?1610 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?466 
values: - - - - 
=== Succesors ===
=== Usages ===
i460 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?466 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i460 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v799 
stateDuring: ?1610 
=== Succesors ===
next: v1318 
=== Usages ===
v462 
=== Predecessor ===
v1899 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v799 stateDuring: ?1610 #next: v1318  <|@  <|@
f <@~|@floating>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i460 
y: i14 
=== Succesors ===
=== Usages ===
v1318 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i460 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v462 
=== Succesors ===
trueSuccessor: v1317 
falseSuccessor: v1315 
=== Usages ===
=== Predecessor ===
i460 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v462 #trueSuccessor: v1317 #falseSuccessor: v1315  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[.] = MOV [v6|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v56|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v58|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] v3|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 31] <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v59|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1316 
=== Usages ===
=== Predecessor ===
v1318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1316  <|@  <|@
tid ?461 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?466 
values: - - - - i14 
=== Succesors ===
=== Usages ===
v1316 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?466 values: - - - - i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1316 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 800
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?461 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1317 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?461  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -204819 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] v3|DWORD - 
>@ <|@ instruction DEOPT info [bci:34, 31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4588729599181860091
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
v1318 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v88  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
v1315 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B14" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4595017403478118504
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v88 v94 
=== Succesors ===
next: i1835 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v88 v94 #next: i1835  <|@  <|@
f <@~|@floating>@ <|@
tid v1880 <|@
result [v1|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1835 i1846 i1852 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1835 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4254) [bci: 38]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1880 
=== Succesors ===
next: v1322 
=== Usages ===
i20 v21 i29 
=== Predecessor ===
v574 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1880 #next: v1322  <|@  <|@
f <@~|@floating>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4255) [bci: 47]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i1835 
=== Succesors ===
=== Usages ===
v1322 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3 y: i1835  <|@  <|@
f <@*|@fixed>@ <|@
tid v1322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4255) [bci: 47]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v21 
=== Succesors ===
trueSuccessor: v1321 
falseSuccessor: v1319 
=== Usages ===
=== Predecessor ===
i1835 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v21 #trueSuccessor: v1321 #falseSuccessor: v1319  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOV [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4255) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1320 
=== Usages ===
=== Predecessor ===
v1322 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1320  <|@  <|@
tid ?576 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4252
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 a5 i4 - i24 
=== Succesors ===
=== Usages ===
v1320 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 a5 i4 - i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 943
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4255) [bci: 47]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?576 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1321 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?576  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -241427 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[1|0x1] 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] v3|DWORD - 
>@ <|@ instruction DEOPT info [bci:34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4595017403478118504
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4255) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v1322 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4254) [bci: 42]
stamp: i32
=== Inputs ===
x: i1835 
y: i3 
=== Succesors ===
=== Usages ===
?31 ?493 ?249 i47 ?58 ?1615 i75 ?585 i1790 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i1835 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4259) [bci: 58]
stamp: i32
=== Inputs ===
x: i4 
y: i24 
=== Succesors ===
=== Usages ===
i30 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i4 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
v1319 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SUB (x: v60|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|DWORD, v62|DWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B92" "B71" 
    successors "B61" "B101" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595857845011793521
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i29 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v28 
values: i1835 i47 i1790 
=== Succesors ===
=== Usages ===
?31 ?493 v1887 i56 i47 ?585 ?249 i241 v1008 v563 v472 i1791 i1790 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v28 values: i1835 i47 i1790  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v28 
values: i25 i51 i1789 
=== Succesors ===
=== Usages ===
?31 v33 ?493 i57 i51 ?585 ?249 i1789 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v28 values: i25 i51 i1789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.1436803688052246
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v27 
=== Succesors ===
next: i1836 
=== Usages ===
i29 i30 v41 v52 v627 v1420 v1326 v1381 v1396 v1341 v1346 v1415 v1356 v1361 v1386 v1371 v1376 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v27 #next: i1836  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1836 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.cmax
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 63]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1853 
=== Succesors ===
next: v1327 
=== Usages ===
v33 
=== Predecessor ===
v28 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1853 #next: v1327  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 66]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i30 
y: i1836 
=== Succesors ===
=== Usages ===
v1327 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i30 y: i1836  <|@  <|@
tid ?31 <|@
d <@d|@=== Debug Properties ===
bci: 61
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4261
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i29 i30 a5 i4 i20 
=== Succesors ===
=== Usages ===
v1665 v1901 i1839 v1902 i1848 v1903 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i29 i30 a5 i4 i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v1327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 66]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v33 
=== Succesors ===
trueSuccessor: v1323 
falseSuccessor: v1326 
=== Usages ===
=== Predecessor ===
i1836 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v33 #trueSuccessor: v1323 #falseSuccessor: v1326  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|DWORD, v64|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|DWORD, y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595857845011793521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 66]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1837 
=== Usages ===
=== Predecessor ===
v1327 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1837 <|@
result v66|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.atom
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 70]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1854 
=== Succesors ===
next: v1901 
=== Usages ===
v1896 v1901 v1882 v1884 v1906 
=== Predecessor ===
v1323 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1854 #next: v1901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1901 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?31 
object: a1837 
=== Succesors ===
next: a1838 
=== Usages ===
=== Predecessor ===
a1837 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?31 object: a1837 #next: a1838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1838 <|@
result v67|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1885 
=== Succesors ===
next: i1839 
=== Usages ===
a1000 v1886 
=== Predecessor ===
v1901 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1885 #next: i1839  <|@  <|@
f <@~|@floating>@ <|@
tid v1886 <|@
result [v67|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1838 
=== Succesors ===
=== Usages ===
i1839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1839 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?31 
guard: - 
address: v1886 
=== Succesors ===
next: v1342 
=== Usages ===
v563 v1008 
=== Predecessor ===
a1838 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?31 guard: - address: v1886 #next: v1342  <|@  <|@
f <@~|@floating>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i29 
y: i1839 
=== Succesors ===
=== Usages ===
v1342 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i29 y: i1839  <|@  <|@
f <@*|@fixed>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1008 
=== Succesors ===
trueSuccessor: v1338 
falseSuccessor: v1341 
=== Usages ===
=== Predecessor ===
i1839 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1008 #trueSuccessor: v1338 #falseSuccessor: v1341  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD v64|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v66|DWORD[.] * 8] state [bci:61] <|@ <|@
      nr   -1  <|@ instruction v67|DWORD[.] = MOV [v4|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD v64|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction v68|DWORD = MOV [v67|DWORD[.] * 8 + 12] size: DWORD state [bci:61] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v68|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595857845011793521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1840 
=== Usages ===
i1841 
=== Predecessor ===
v1342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1840  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1840 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 2]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1881 
=== Succesors ===
next: v1347 
=== Usages ===
v472 
=== Predecessor ===
v1338 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1881 #next: v1347  <|@  <|@
f <@~|@floating>@ <|@
tid v472 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i29 
y: i1840 
=== Succesors ===
=== Usages ===
v1347 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i29 y: i1840  <|@  <|@
f <@*|@fixed>@ <|@
tid v1347 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v472 
=== Succesors ===
trueSuccessor: v1343 
falseSuccessor: v1346 
=== Usages ===
=== Predecessor ===
i1840 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v472 #trueSuccessor: v1343 #falseSuccessor: v1346  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|DWORD, y: [v1|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595857845011793521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1357 
=== Usages ===
=== Predecessor ===
v1347 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1357  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i29 
y: i1839 
=== Succesors ===
=== Usages ===
v1357 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i29 y: i1839  <|@  <|@
f <@*|@fixed>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v563 
=== Succesors ===
trueSuccessor: v1353 
falseSuccessor: v1356 
=== Usages ===
=== Predecessor ===
v1343 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v563 #trueSuccessor: v1353 #falseSuccessor: v1356  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v68|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595857845011793521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1841 
=== Usages ===
=== Predecessor ===
v1357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1841  <|@  <|@
f <@~|@floating>@ <|@
tid a1000 <|@
result v69|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1838 
=== Succesors ===
=== Usages ===
v1887 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1838  <|@  <|@
f <@~|@floating>@ <|@
tid v1887 <|@
result [v69|QWORD[.] + v63|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1000 
index: i29 
=== Succesors ===
=== Usages ===
i1841 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1000 index: i29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1841 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1338 
address: v1887 
=== Succesors ===
next: v1842 
=== Usages ===
i1016 j1074 v1159 v1166 
=== Predecessor ===
v1353 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1338 address: v1887 #next: v1842  <|@  <|@
f <@~|@floating>@ <|@
tid v1896 <|@
result [v66|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1837 
=== Succesors ===
=== Usages ===
v1842 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1842 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1896 
=== Succesors ===
next: v142 
=== Usages ===
v1788 v1787 
=== Predecessor ===
i1841 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1896 #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid v1787 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1842 
y: v1776 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1842 y: v1776  <|@  <|@
f <@~|@floating>@ <|@
tid j1074 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1841 
=== Succesors ===
=== Usages ===
v1889 v1883 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1841  <|@  <|@
f <@~|@floating>@ <|@
tid v1882 <|@
result [v66|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1837 
=== Succesors ===
=== Usages ===
i1843 a1847 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1837  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
trueSuccessorProbability: 0.6255879059350504
=== Inputs ===
condition: v1787 
=== Succesors ===
trueSuccessor: v135 
falseSuccessor: v141 
=== Usages ===
=== Predecessor ===
v1842 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1787 #trueSuccessor: v135 #falseSuccessor: v141  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v67|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVSX [v69|QWORD[.] + v63|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV [v66|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOVZX v70|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v71|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6255879059350504 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593034567540053699
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1362 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1362  <|@  <|@
f <@~|@floating>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1841 
y: i1157 
=== Succesors ===
=== Usages ===
v1362 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1841 y: i1157  <|@  <|@
f <@*|@fixed>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1159 
=== Succesors ===
trueSuccessor: v1358 
falseSuccessor: v1361 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1159 #trueSuccessor: v1358 #falseSuccessor: v1361  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v70|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B65 -> B66 falseDestination: B65 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593034567540053699
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1843 
=== Usages ===
i1844 
=== Predecessor ===
v1362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1843  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1843 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Ctype.ctype
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1882 
=== Succesors ===
next: i1844 
=== Usages ===
v399 
=== Predecessor ===
v1358 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1882 #next: i1844  <|@  <|@
f <@~|@floating>@ <|@
tid v1883 <|@
result [v14|QWORD[.] + v72|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a406 
index: j1074 
=== Succesors ===
=== Usages ===
i1844 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a406 index: j1074  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1844 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1358 
address: v1883 
=== Succesors ===
next: v239 
=== Usages ===
v399 
=== Predecessor ===
i1843 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1358 address: v1883 #next: v239  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 6]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
x: i1843 
y: i1844 
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i1843 y: i1844  <|@  <|@
f <@*|@fixed>@ <|@
tid v239 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
trueSuccessorProbability: 0.8376470026322493
=== Inputs ===
condition: v399 
=== Succesors ===
trueSuccessor: v237 
falseSuccessor: v238 
=== Usages ===
=== Predecessor ===
i1844 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v399 #trueSuccessor: v237 #falseSuccessor: v238  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOV [v66|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v73|DWORD, y: [v14|QWORD[.] + v72|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8376470026322493 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B80" 
    xhandlers
    flags 
    probability 4591675649106182490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
v237 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581092895143908772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1845 
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1845  <|@  <|@
f <@~|@floating>@ <|@
tid v1884 <|@
result [v66|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1837 
=== Succesors ===
=== Usages ===
a1845 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1845 <|@
result v74|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1884 
=== Succesors ===
next: v1902 
=== Usages ===
a984 v1902 
=== Predecessor ===
v238 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1884 #next: v1902  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1902 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?31 
object: a1845 
=== Succesors ===
next: i243 
=== Usages ===
=== Predecessor ===
a1845 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?31 object: a1845 #next: i243  <|@  <|@
f <@~|@floating>@ <|@
tid a984 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1845 
=== Succesors ===
=== Usages ===
v988 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1845  <|@  <|@
f <@~|@floating>@ <|@
tid i241 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: i32
=== Inputs ===
x: i29 
y: i24 
=== Succesors ===
=== Usages ===
v988 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i29 y: i24  <|@  <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@320e319e
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a984 a2 i241 a5 
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a984 a2 i241 a5  <|@  <|@
tid ?249 <|@
d <@d|@=== Debug Properties ===
bci: 77
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4262
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i29 i30 a5 i4 i20 
=== Succesors ===
=== Usages ===
?244 ?1613 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i29 i30 a5 i4 i20  <|@  <|@
tid ?1613 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?249 
values: - - - - 
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?249 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i243 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v988 
stateDuring: ?1613 
=== Succesors ===
next: v1372 
=== Usages ===
?244 v245 
=== Predecessor ===
v1902 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v988 stateDuring: ?1613 #next: v1372  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i243 
y: i14 
=== Succesors ===
=== Usages ===
v1372 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i243 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v245 
=== Succesors ===
trueSuccessor: v1371 
falseSuccessor: v1368 
=== Usages ===
=== Predecessor ===
i243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v245 #trueSuccessor: v1371 #falseSuccessor: v1368  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[.] = MOV [v66|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD v64|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v74|DWORD[.] * 8] state [bci:61] <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = INC v63|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v75|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v76|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD v64|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 77] <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v77|DWORD, y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1705 
=== Usages ===
=== Predecessor ===
v1372 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1705  <|@  <|@
f <@~|@floating>@ <|@
tid i1706 <|@
result int[-253203|0xfffffffffffc22ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -253203
stableDimension: 0
stamp: i32 [-253203] ⇊00000000fffc22ed ⇈00000000fffc22ed
stampKind: i32
value: int[-253203|0xfffffffffffc22ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1707 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1704 
=== Predecessor ===
v1371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-253203|0xfffffffffffc22ed]] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581092895143908772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1846 
=== Usages ===
=== Predecessor ===
v1372 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1846 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4264) [bci: 91]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1880 
=== Succesors ===
next: v1377 
=== Usages ===
v632 
=== Predecessor ===
v1368 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1880 #next: v1377  <|@  <|@
f <@~|@floating>@ <|@
tid i1790 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4264) [bci: 89]
stamp: i32
=== Inputs ===
x: i20 
y: i29 
=== Succesors ===
=== Usages ===
v632 i29 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i20 y: i29  <|@  <|@
f <@~|@floating>@ <|@
tid v632 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4264) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1790 
y: i1846 
=== Succesors ===
=== Usages ===
v1377 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1790 y: i1846  <|@  <|@
f <@*|@fixed>@ <|@
tid v1377 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4264) [bci: 94]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v632 
=== Succesors ===
trueSuccessor: v1373 
falseSuccessor: v1376 
=== Usages ===
=== Predecessor ===
i1846 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v632 #trueSuccessor: v1373 #falseSuccessor: v1376  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = ADD (x: v61|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|DWORD, y: [v1|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581092895143908772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4264) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v627 
=== Usages ===
=== Predecessor ===
v1377 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v627  <|@  <|@
f <@~|@floating>@ <|@
tid i1789 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4270) [bci: 121]
stamp: i32
=== Inputs ===
x: i30 
y: i24 
=== Succesors ===
=== Usages ===
i30 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i30 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1373 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v28  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = INC v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|DWORD, v79|DWORD] destination: B71 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4264) [bci: 94]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1710 
=== Usages ===
=== Predecessor ===
v1377 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1710  <|@  <|@
f <@~|@floating>@ <|@
tid i1711 <|@
result int[-253715|0xfffffffffffc20ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -253715
stableDimension: 0
stamp: i32 [-253715] ⇊00000000fffc20ed ⇈00000000fffc20ed
stampKind: i32
value: int[-253715|0xfffffffffffc20ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1707 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1704 
=== Predecessor ===
v1376 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-253715|0xfffffffffffc20ed]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B69" "B72" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1707 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-253715 - -253203] ⇊00000000fffc20ed ⇈00000000fffc22ed
valueDescription: i32
=== Inputs ===
merge: v1704 
values: i1706 i1711 
=== Succesors ===
=== Usages ===
v1709 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1704 values: i1706 i1711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1705 v1710 
=== Succesors ===
next: v1709 
=== Usages ===
i1707 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1705 v1710 #next: v1709  <|@  <|@
tid ?244 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?249 
values: - - - - i243 
=== Succesors ===
=== Usages ===
v1709 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?249 values: - - - - i243  <|@  <|@
f <@*|@fixed>@ <|@
tid v1709 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?244 
actionAndReason: i1707 
speculation: a1620 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1704 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?244 actionAndReason: i1707 speculation: a1620  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: v77|DWORD 
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD v64|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 77] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1678 
=== Usages ===
=== Predecessor ===
v1362 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1678  <|@  <|@
f <@~|@floating>@ <|@
tid i1679 <|@
result int[-249363|0xfffffffffffc31ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -249363
stableDimension: 0
stamp: i32 [-249363] ⇊00000000fffc31ed ⇈00000000fffc31ed
stampKind: i32
value: int[-249363|0xfffffffffffc31ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
v1361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-249363|0xfffffffffffc31ed]] destination: B74 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B76" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589673923228792351
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1382 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1382  <|@  <|@
f <@~|@floating>@ <|@
tid v1788 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1842 
y: v1774 
=== Succesors ===
=== Usages ===
v1382 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1842 y: v1774  <|@  <|@
f <@*|@fixed>@ <|@
tid v1382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1788 
=== Succesors ===
trueSuccessor: v1378 
falseSuccessor: v1381 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1788 #trueSuccessor: v1378 #falseSuccessor: v1381  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v71|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B96" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589673923228792351
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1387 
=== Usages ===
=== Predecessor ===
v1382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1387  <|@  <|@
f <@~|@floating>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1841 
y: i1155 
=== Succesors ===
=== Usages ===
v1387 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1841 y: i1155  <|@  <|@
f <@*|@fixed>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1166 
=== Succesors ===
trueSuccessor: v1383 
falseSuccessor: v1386 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1166 #trueSuccessor: v1383 #falseSuccessor: v1386  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v70|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B76 -> B77 falseDestination: B76 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589673923228792351
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1847 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1847  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1847 <|@
result v81|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v1882 
=== Succesors ===
next: i1848 
=== Usages ===
v1889 v1888 
=== Predecessor ===
v1383 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1882 #next: i1848  <|@  <|@
f <@~|@floating>@ <|@
tid v1888 <|@
result [v81|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1847 
=== Succesors ===
=== Usages ===
i1848 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1847  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1848 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?31 
guard: - 
address: v1888 
=== Succesors ===
next: v1397 
=== Usages ===
v1026 
=== Predecessor ===
a1847 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?31 guard: - address: v1888 #next: v1397  <|@  <|@
f <@~|@floating>@ <|@
tid i1016 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i1841 
=== Succesors ===
=== Usages ===
v1026 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1841  <|@  <|@
f <@~|@floating>@ <|@
tid v1026 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1016 
y: i1848 
=== Succesors ===
=== Usages ===
v1397 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1016 y: i1848  <|@  <|@
f <@*|@fixed>@ <|@
tid v1397 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1026 
=== Succesors ===
trueSuccessor: v1393 
falseSuccessor: v1396 
=== Usages ===
=== Predecessor ===
i1848 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1026 #trueSuccessor: v1393 #falseSuccessor: v1396  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD[.] = MOV [v66|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVZX v70|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD v64|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction CMP (x: v82|DWORD, y: [v81|DWORD[.] * 8 + 12]) size: DWORD state [bci:61] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B77 -> B78 falseDestination: B77 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589673923228792351
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1849 
=== Usages ===
i1849 
=== Predecessor ===
v1397 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1849  <|@  <|@
f <@~|@floating>@ <|@
tid v1889 <|@
result [v72|QWORD + v81|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j1074 
index: a1847 
=== Succesors ===
=== Usages ===
i1849 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1074 index: a1847  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1849 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: v1393 
address: v1889 
=== Succesors ===
next: v483 
=== Usages ===
i1075 
=== Predecessor ===
v1393 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1393 address: v1889 #next: v483  <|@  <|@
f <@~|@floating>@ <|@
tid i1075 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1849 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i1849  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1075 
y: i14 
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1075 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
trueSuccessorProbability: 0.8376470026322493
=== Inputs ===
condition: v480 
=== Succesors ===
trueSuccessor: v481 
falseSuccessor: v482 
=== Usages ===
=== Predecessor ===
i1849 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v480 #trueSuccessor: v481 #falseSuccessor: v482  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOVZXB [v72|QWORD + v81|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v83|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8376470026322493 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4588553210653347180
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v573  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
v481 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B67" "B79" 
    successors "B81" 
    xhandlers
    flags 
    probability 4594771731916432392
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 80]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v415 v573 
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v415 v573 #next: v41  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4594771731916432392
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4263) [bci: 83]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1401 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1401  <|@  <|@
f <@~|@floating>@ <|@
tid i1162 <|@
result int[-2147483645|0xffffffff80000003] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 127]
rawvalue: -2147483645
stableDimension: 0
stamp: i32 [-2147483645] ⇊0000000080000003 ⇈0000000080000003
stampKind: i32
value: int[-2147483645|0xffffffff80000003]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1163 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 127]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i1162 
=== Succesors ===
=== Usages ===
v1401 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i1162  <|@  <|@
f <@*|@fixed>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 127]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1163 
=== Succesors ===
trueSuccessor: v1400 
falseSuccessor: v1398 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1163 #trueSuccessor: v1400 #falseSuccessor: v1398  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -2147483645 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1399 
=== Usages ===
=== Predecessor ===
v1401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1399  <|@  <|@
tid ?585 <|@
d <@d|@=== Debug Properties ===
bci: 80
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 80]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4262
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i29 i30 a5 i4 i20 i14 
=== Succesors ===
=== Usages ===
v1399 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i29 i30 a5 i4 i20 i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
action: InvalidateRecompile
debugId: 1164
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 127]
reason: LoopLimitCheck
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?585 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1400 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?585  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -298116 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 80]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD v64|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction DEOPT info [bci:80] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" 
    xhandlers
    flags 
    probability 4594771731916432392
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
next: v54 
=== Usages ===
v55 
=== Predecessor ===
v1401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v54  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 127]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
v1398 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|DWORD, v64|DWORD] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B87" 
    successors "B85" "B86" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4597186581738482105
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i56 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v55 
values: i29 i75 
=== Succesors ===
=== Usages ===
?58 v1049 ?1615 i75 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v55 values: i29 i75  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v55 
values: i30 i77 
=== Succesors ===
=== Usages ===
?58 v59 ?1615 i77 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v55 values: i30 i77  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.4309375612566744
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 127]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: v1398 
ends: v54 
=== Succesors ===
next: v64 
=== Usages ===
i56 i57 v61 v72 v78 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: v1398 ends: v54 #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 130]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i57 
y: i4 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i57 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 130]
stamp: void
trueSuccessorProbability: 0.10042065694083953
=== Inputs ===
condition: v59 
=== Succesors ===
trueSuccessor: v61 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v59 #trueSuccessor: v61 #falseSuccessor: v63  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD, v85|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.10042065694083953 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors 
    xhandlers
    flags 
    probability 4582099055075010297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4279) [bci: 160]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v55 
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v55 #next: v80  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4279) [bci: 161]
stamp: void
=== Inputs ===
result: i14 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i14 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" "B88" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596381352530158810
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4274) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1850 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1850 <|@
result v86|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4274) [bci: 134]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1858 
=== Succesors ===
next: v1897 
=== Usages ===
a1045 v1897 
=== Predecessor ===
v63 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1858 #next: v1897  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 127
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4273
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i56 i57 a5 i4 i20 
=== Succesors ===
=== Usages ===
v1897 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i56 i57 a5 i4 i20  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1897 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?58 
object: a1850 
=== Succesors ===
next: i67 
=== Usages ===
=== Predecessor ===
a1850 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?58 object: a1850 #next: i67  <|@  <|@
f <@~|@floating>@ <|@
tid a1045 <|@
result v87|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4274) [bci: 134]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1850 
=== Succesors ===
=== Usages ===
v1049 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1850  <|@  <|@
tid v1049 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4274) [bci: 141]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@49c2728d
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a1045 a2 i56 a5 
=== Succesors ===
=== Usages ===
i67 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1045 a2 i56 a5  <|@  <|@
tid ?1615 <|@
d <@d|@=== Debug Properties ===
bci: 141
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4274
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i56 i57 a5 i4 i20 
=== Succesors ===
=== Usages ===
i67 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i56 i57 a5 i4 i20  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i67 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 141
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4274) [bci: 141]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1049 
stateDuring: ?1615 
=== Succesors ===
next: v74 
=== Usages ===
v69 
=== Predecessor ===
v1897 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1049 stateDuring: ?1615 #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4274) [bci: 144]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i67 
y: i14 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i67 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4274) [bci: 144]
stamp: void
trueSuccessorProbability: 0.33477590409391633
=== Inputs ===
condition: v69 
=== Succesors ===
trueSuccessor: v70 
falseSuccessor: v72 
=== Usages ===
=== Predecessor ===
i67 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v69 #trueSuccessor: v70 #falseSuccessor: v72  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 127]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD v85|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v86|DWORD[.] * 8] state [bci:127] <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v84|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4274) [bci: 141]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD v85|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:141] <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v88|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.33477590409391633 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B84" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589494120307264355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4276) [bci: 149]
stamp: void
=== Inputs ===
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4277) [bci: 154]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i77 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4277) [bci: 154]
stamp: i32
=== Inputs ===
x: i57 
y: i76 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i57 y: i76  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4276) [bci: 152]
stamp: i32
=== Inputs ===
x: i56 
y: i20 
=== Succesors ===
=== Usages ===
i56 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i56 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 127]
stamp: void
=== Inputs ===
loopBegin: v55 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v55  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = DEC v85|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SUB (x: v84|DWORD, ~y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v90|DWORD, v89|DWORD] destination: B87 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors 
    xhandlers
    flags 
    probability 4593966502708109097
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4275) [bci: 147]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v55 
=== Succesors ===
next: v79 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v55 #next: v79  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4275) [bci: 148]
stamp: void
=== Inputs ===
result: i24 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i24 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577660083835861834
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1851 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1851  <|@  <|@
f <@~|@floating>@ <|@
tid v1906 <|@
result [v66|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1837 
=== Succesors ===
=== Usages ===
a1851 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1851 <|@
result v91|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1906 
=== Succesors ===
next: v1903 
=== Usages ===
a1036 v1903 
=== Predecessor ===
v482 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1906 #next: v1903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1903 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?31 
object: a1851 
=== Succesors ===
next: i487 
=== Usages ===
=== Predecessor ===
a1851 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?31 object: a1851 #next: i487  <|@  <|@
f <@~|@floating>@ <|@
tid a1036 <|@
result v92|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a1851 
=== Succesors ===
=== Usages ===
v1040 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1851  <|@  <|@
f <@~|@floating>@ <|@
tid i1791 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: i32
=== Inputs ===
x: i29 
y: i24 
=== Succesors ===
=== Usages ===
v1040 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i29 y: i24  <|@  <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@2ac38f90
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a1036 a2 i1791 a5 
=== Succesors ===
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1036 a2 i1791 a5  <|@  <|@
tid ?493 <|@
d <@d|@=== Debug Properties ===
bci: 77
code: ResolvedJavaMethodBytecode<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4262
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i29 i30 a5 i4 i20 
=== Succesors ===
=== Usages ===
?488 ?1614 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i29 i30 a5 i4 i20  <|@  <|@
tid ?1614 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?493 
values: - - - - 
=== Succesors ===
=== Usages ===
i487 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?493 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i487 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1040 
stateDuring: ?1614 
=== Succesors ===
next: v1416 
=== Usages ===
?488 v489 
=== Predecessor ===
v1903 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1040 stateDuring: ?1614 #next: v1416  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i487 
y: i14 
=== Succesors ===
=== Usages ===
v1416 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i487 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v489 
=== Succesors ===
trueSuccessor: v1415 
falseSuccessor: v1412 
=== Usages ===
=== Predecessor ===
i487 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v489 #trueSuccessor: v1415 #falseSuccessor: v1412  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD[.] = MOV [v66|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD v64|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v91|DWORD[.] * 8] state [bci:61] <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v91|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = INC v63|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v92|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v93|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD v64|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 77] <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v94|DWORD, y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1713 
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1713  <|@  <|@
f <@~|@floating>@ <|@
tid i1714 <|@
result int[-266515|0xfffffffffffbeeed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -266515
stableDimension: 0
stamp: i32 [-266515] ⇊00000000fffbeeed ⇈00000000fffbeeed
stampKind: i32
value: int[-266515|0xfffffffffffbeeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1712 
=== Predecessor ===
v1415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-266515|0xfffffffffffbeeed]] destination: B90 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577660083835861834
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1852 
=== Usages ===
=== Predecessor ===
v1416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1852 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4264) [bci: 91]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1880 
=== Succesors ===
next: v1421 
=== Usages ===
v49 
=== Predecessor ===
v1412 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1880 #next: v1421  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4264) [bci: 89]
stamp: i32
=== Inputs ===
x: i20 
y: i29 
=== Succesors ===
=== Usages ===
v49 i29 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i20 y: i29  <|@  <|@
f <@~|@floating>@ <|@
tid v49 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4264) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i47 
y: i1852 
=== Succesors ===
=== Usages ===
v1421 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i47 y: i1852  <|@  <|@
f <@*|@fixed>@ <|@
tid v1421 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4264) [bci: 94]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v49 
=== Succesors ===
trueSuccessor: v1417 
falseSuccessor: v1420 
=== Usages ===
=== Predecessor ===
i1852 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v49 #trueSuccessor: v1417 #falseSuccessor: v1420  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = ADD (x: v61|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v95|DWORD, y: [v1|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577660083835861834
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4264) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v1421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4270) [bci: 121]
stamp: i32
=== Inputs ===
x: i30 
y: i24 
=== Succesors ===
=== Usages ===
i30 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i30 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
stamp: void
=== Inputs ===
loopBegin: v28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1417 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v28  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = INC v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|DWORD, v96|DWORD] destination: B92 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4264) [bci: 94]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1718 
=== Usages ===
=== Predecessor ===
v1421 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1718  <|@  <|@
f <@~|@floating>@ <|@
tid i1719 <|@
result int[-267027|0xfffffffffffbeced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -267027
stableDimension: 0
stamp: i32 [-267027] ⇊00000000fffbeced ⇈00000000fffbeced
stampKind: i32
value: int[-267027|0xfffffffffffbeced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1712 
=== Predecessor ===
v1420 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-267027|0xfffffffffffbeced]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B90" "B93" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1715 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-267027 - -266515] ⇊00000000fffbeced ⇈00000000fffbeeed
valueDescription: i32
=== Inputs ===
merge: v1712 
values: i1714 i1719 
=== Succesors ===
=== Usages ===
v1717 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1712 values: i1714 i1719  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1713 v1718 
=== Succesors ===
next: v1717 
=== Usages ===
i1715 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1713 v1718 #next: v1717  <|@  <|@
tid ?488 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?493 
values: - - - - i487 
=== Succesors ===
=== Usages ===
v1717 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?493 values: - - - - i487  <|@  <|@
f <@*|@fixed>@ <|@
tid v1717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?488 
actionAndReason: i1715 
speculation: a1620 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1712 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?488 actionAndReason: i1715 speculation: a1620  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v97|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: v94|DWORD 
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD v64|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 77] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1688 
=== Usages ===
=== Predecessor ===
v1397 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1688  <|@  <|@
f <@~|@floating>@ <|@
tid i1689 <|@
result int[-262939|0xfffffffffffbfce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -262939
stableDimension: 0
stamp: i32 [-262939] ⇊00000000fffbfce5 ⇈00000000fffbfce5
stampKind: i32
value: int[-262939|0xfffffffffffbfce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1688 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
v1396 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-262939|0xfffffffffffbfce5]] destination: B95 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1684 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1684  <|@  <|@
f <@~|@floating>@ <|@
tid i1685 <|@
result int[-260371|0xfffffffffffc06ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -260371
stableDimension: 0
stamp: i32 [-260371] ⇊00000000fffc06ed ⇈00000000fffc06ed
stampKind: i32
value: int[-260371|0xfffffffffffc06ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
v1386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-260371|0xfffffffffffc06ed]] destination: B96 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1682 
=== Usages ===
=== Predecessor ===
v1382 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1682  <|@  <|@
f <@~|@floating>@ <|@
tid i1683 <|@
result int[-254003|0xfffffffffffc1fcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -254003
stableDimension: 0
stamp: i32 [-254003] ⇊00000000fffc1fcd ⇈00000000fffc1fcd
stampKind: i32
value: int[-254003|0xfffffffffffc1fcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
v1381 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-254003|0xfffffffffffc1fcd]] destination: B97 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1676 
=== Usages ===
=== Predecessor ===
v1357 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1676  <|@  <|@
f <@~|@floating>@ <|@
tid i1677 <|@
result int[-295443|0xfffffffffffb7ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -295443
stableDimension: 0
stamp: i32 [-295443] ⇊00000000fffb7ded ⇈00000000fffb7ded
stampKind: i32
value: int[-295443|0xfffffffffffb7ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1676 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
v1356 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-295443|0xfffffffffffb7ded]] destination: B98 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1672 
=== Usages ===
=== Predecessor ===
v1347 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1672  <|@  <|@
f <@~|@floating>@ <|@
tid i1673 <|@
result int[-291091|0xfffffffffffb8eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -291091
stableDimension: 0
stamp: i32 [-291091] ⇊00000000fffb8eed ⇈00000000fffb8eed
stampKind: i32
value: int[-291091|0xfffffffffffb8eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1672 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
v1346 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-291091|0xfffffffffffb8eed]] destination: B99 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1670 
=== Usages ===
=== Predecessor ===
v1342 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1670  <|@  <|@
f <@~|@floating>@ <|@
tid i1671 <|@
result int[-295195|0xfffffffffffb7ee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -295195
stableDimension: 0
stamp: i32 [-295195] ⇊00000000fffb7ee5 ⇈00000000fffb7ee5
stampKind: i32
value: int[-295195|0xfffffffffffb7ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
v1341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-295195|0xfffffffffffb7ee5]] destination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 66]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v28 
=== Succesors ===
next: v1661 
=== Usages ===
=== Predecessor ===
v1327 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v28 #next: v1661  <|@  <|@
f <@~|@floating>@ <|@
tid i1662 <|@
result int[-241939|0xfffffffffffc4eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -241939
stableDimension: 0
stamp: i32 [-241939] ⇊00000000fffc4eed ⇈00000000fffc4eed
stampKind: i32
value: int[-241939|0xfffffffffffc4eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1661 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1660 
=== Predecessor ===
v1326 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-241939|0xfffffffffffc4eed]] destination: B101 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" "B100" "B99" "B98" "B74" "B97" "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1663 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-295443 - -241939] ⇊00000000fff800c5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1660 
values: i1662 i1671 i1673 i1677 i1679 i1683 i1685 i1689 
=== Succesors ===
=== Usages ===
v1665 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1660 values: i1662 i1671 i1673 i1677 i1679 i1683 i1685 i1689  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1660 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1661 v1670 v1672 v1676 v1678 v1682 v1684 v1688 
=== Succesors ===
next: v1665 
=== Usages ===
i1663 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1661 v1670 v1672 v1676 v1678 v1682 v1684 v1688 #next: v1665  <|@  <|@
f <@*|@fixed>@ <|@
tid v1665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?31 
actionAndReason: i1663 
speculation: a1620 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1660 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?31 actionAndReason: i1663 speculation: a1620  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v98|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD v64|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction DEOPT info [bci:61] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1652 
=== Usages ===
=== Predecessor ===
v1238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1652  <|@  <|@
f <@~|@floating>@ <|@
tid i1653 <|@
result int[-199955|0xfffffffffffcf2ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -199955
stableDimension: 0
stamp: i32 [-199955] ⇊00000000fffcf2ed ⇈00000000fffcf2ed
stampKind: i32
value: int[-199955|0xfffffffffffcf2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1617 
=== Predecessor ===
v1237 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-199955|0xfffffffffffcf2ed]] destination: B103 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1650 
=== Usages ===
=== Predecessor ===
v1234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1650  <|@  <|@
f <@~|@floating>@ <|@
tid i1651 <|@
result int[-192819|0xfffffffffffd0ecd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -192819
stableDimension: 0
stamp: i32 [-192819] ⇊00000000fffd0ecd ⇈00000000fffd0ecd
stampKind: i32
value: int[-192819|0xfffffffffffd0ecd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1617 
=== Predecessor ===
v1233 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-192819|0xfffffffffffd0ecd]] destination: B104 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1642 
=== Usages ===
=== Predecessor ===
v1206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1642  <|@  <|@
f <@~|@floating>@ <|@
tid i1643 <|@
result int[-294675|0xfffffffffffb80ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -294675
stableDimension: 0
stamp: i32 [-294675] ⇊00000000fffb80ed ⇈00000000fffb80ed
stampKind: i32
value: int[-294675|0xfffffffffffb80ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1642 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1617 
=== Predecessor ===
v1205 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-294675|0xfffffffffffb80ed]] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1638 
=== Usages ===
=== Predecessor ===
v1198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1638  <|@  <|@
f <@~|@floating>@ <|@
tid i1639 <|@
result int[-293395|0xfffffffffffb85ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -293395
stableDimension: 0
stamp: i32 [-293395] ⇊00000000fffb85ed ⇈00000000fffb85ed
stampKind: i32
value: int[-293395|0xfffffffffffb85ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1617 
=== Predecessor ===
v1197 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-293395|0xfffffffffffb85ed]] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1634 
=== Usages ===
=== Predecessor ===
v1190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1634  <|@  <|@
f <@~|@floating>@ <|@
tid i1635 <|@
result int[-294939|0xfffffffffffb7fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -294939
stableDimension: 0
stamp: i32 [-294939] ⇊00000000fffb7fe5 ⇈00000000fffb7fe5
stampKind: i32
value: int[-294939|0xfffffffffffb7fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1634 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1617 
=== Predecessor ===
v1189 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-294939|0xfffffffffffb7fe5]] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1630 
=== Usages ===
=== Predecessor ===
v1182 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1630  <|@  <|@
f <@~|@floating>@ <|@
tid i1631 <|@
result int[-293683|0xfffffffffffb84cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -293683
stableDimension: 0
stamp: i32 [-293683] ⇊00000000fffb84cd ⇈00000000fffb84cd
stampKind: i32
value: int[-293683|0xfffffffffffb84cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1630 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1617 
=== Predecessor ===
v1181 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-293683|0xfffffffffffb84cd]] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1624 
=== Usages ===
=== Predecessor ===
v1170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1624  <|@  <|@
f <@~|@floating>@ <|@
tid i1625 <|@
result int[-176147|0xfffffffffffd4fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -176147
stableDimension: 0
stamp: i32 [-176147] ⇊00000000fffd4fed ⇈00000000fffd4fed
stampKind: i32
value: int[-176147|0xfffffffffffd4fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1624 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1617 
=== Predecessor ===
v1169 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-176147|0xfffffffffffd4fed]] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B108" "B107" "B106" "B105" "B16" "B104" "B103" "B15" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1621 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-294939 - -176147] ⇊00000000fff800c5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1617 
values: i1625 i1631 i1635 i1639 i1643 i1647 i1651 i1653 i1657 
=== Succesors ===
=== Usages ===
v1623 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1617 values: i1625 i1631 i1635 i1639 i1643 i1647 i1651 i1653 i1657  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1617 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1624 v1630 v1634 v1638 v1642 v1646 v1650 v1652 v1656 
=== Succesors ===
next: v1623 
=== Usages ===
i1621 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1624 v1630 v1634 v1638 v1642 v1646 v1650 v1652 v1656 #next: v1623  <|@  <|@
f <@*|@fixed>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i1621 
speculation: a1620 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1617 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i1621 speculation: a1620  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@a129bd5 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v6|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - 
>@ <|@ instruction CMP [v4|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v4|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - 
>@ <|@ instruction v8|DWORD = MOV [v7|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B106" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - 
>@ <|@ instruction v9|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B105" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVSX [v10|QWORD[.] + v2|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v6|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVZX v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6337742856265922 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B16" 
    xhandlers
    flags 
    probability 4603883750818446262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B15" 
    xhandlers
    flags 
    probability 4603883750818446262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v6|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVZX v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - 
>@ <|@ instruction CMP (x: v16|DWORD, y: [v15|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4603883750818446262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVZXB [v13|QWORD + v15|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8376470026322493 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602956953655679596
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - 
>@ <|@ instruction CMP [v18|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.836764508942159 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601673990707472897
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B10 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B10" 
    successors "B23" "B39" 
    xhandlers
    flags 
    probability 4604488485143970824
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] v3|DWORD - 
>@ <|@ instruction v29|DWORD = MOV [v28|DWORD[.] * 8 + 12] size: DWORD state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOV [v27|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604488485143970824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV [v31|QWORD[.] + v30|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v32|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B38" 
    xhandlers
    flags 
    probability 4604488485143970824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] v3|DWORD - 
>@ <|@ instruction v34|DWORD = MOV [v33|DWORD[.] * 8 + 12] size: DWORD state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOV [v27|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B37" 
    xhandlers
    flags 
    probability 4604488485143970824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = INC v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B31" 
    xhandlers
    flags 
    probability 4604488485143970824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v27|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] v3|DWORD - 
>@ <|@ instruction v38|DWORD = MOV [v37|DWORD[.] * 8 + 8] size: DWORD state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOV [v39|QWORD[.] + v36|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV [v39|QWORD[.] + v35|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + v35|DWORD * 4 + 16], y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + v36|DWORD * 4 + 16], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v38|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5698385272463588 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4600866703859656166
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v37|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v27|QWORD[.] v1|QWORD[.] v2|DWORD v4|QWORD[.] v32|DWORD v41|DWORD v40|DWORD 
java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v42|DWORD[.] * 8] state [bci:63, 170] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: v27|QWORD[.] v1|QWORD[.] - - - v41|DWORD v40|DWORD 
java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
locals: - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:7, 70, 170] <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v44|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4600866703859656166
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B18" "B104" 
    xhandlers
    flags 
    probability 4600268955881048212
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v12|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B103" 
    xhandlers
    flags 
    probability 4600268955881048212
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B54" 
    xhandlers
    flags 
    probability 4600268955881048212
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV [v6|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|DWORD, y: [v101|QWORD[.] + v13|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8376470026322493 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B41" 
    xhandlers
    flags 
    probability 4599197858612790005
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - 
>@ <|@ instruction CMP [v25|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.836764508942159 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598295780325727759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" "B35" 
    xhandlers
    flags 
    probability 4599103067173544490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v38|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599103067173544490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 4599103067173544490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 32], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|DWORD[.] * 8 + 16], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|DWORD[.] * 8 + 20], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4592078797965298259
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[.] = MOV [v6|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v20|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v20|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] v3|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 31] <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v23|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B57" 
    xhandlers
    flags 
    probability 4592078797965298259
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B14" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4595017403478118504
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOV [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4595017403478118504
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SUB (x: v60|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|DWORD, v62|DWORD] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B92" "B71" 
    successors "B61" "B101" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595857845011793521
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|DWORD, v64|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|DWORD, y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595857845011793521
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD v64|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v66|DWORD[.] * 8] state [bci:61] <|@ <|@
      nr   -1  <|@ instruction v67|DWORD[.] = MOV [v4|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD v64|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction v68|DWORD = MOV [v67|DWORD[.] * 8 + 12] size: DWORD state [bci:61] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v68|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595857845011793521
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|DWORD, y: [v1|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595857845011793521
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v68|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595857845011793521
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v67|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVSX [v69|QWORD[.] + v63|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOV [v66|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOVZX v70|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v71|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6255879059350504 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593034567540053699
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v70|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B65 -> B66 falseDestination: B65 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593034567540053699
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOV [v66|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v73|DWORD, y: [v100|QWORD[.] + v72|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8376470026322493 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581092895143908772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[.] = MOV [v66|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD v64|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v74|DWORD[.] * 8] state [bci:61] <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v74|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = INC v63|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v75|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v76|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD v64|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 77] <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v77|DWORD, y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581092895143908772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = ADD (x: v61|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|DWORD, y: [v1|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581092895143908772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = INC v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|DWORD, v79|DWORD] destination: B71 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B76" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589673923228792351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v71|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B96" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589673923228792351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v70|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B76 -> B77 falseDestination: B76 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589673923228792351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD[.] = MOV [v66|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVZX v70|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD v64|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction CMP (x: v82|DWORD, y: [v81|DWORD[.] * 8 + 12]) size: DWORD state [bci:61] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B77 -> B78 falseDestination: B77 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589673923228792351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOVZXB [v72|QWORD + v81|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v83|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8376470026322493 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577660083835861834
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD[.] = MOV [v66|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD v64|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v91|DWORD[.] * 8] state [bci:61] <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = UNCOMPRESSPOINTER (input: v91|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = INC v63|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v92|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v93|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD v64|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 77] <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v94|DWORD, y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577660083835861834
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = ADD (x: v61|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v95|DWORD, y: [v1|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577660083835861834
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = INC v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|DWORD, v96|DWORD] destination: B92 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B80" 
    xhandlers
    flags 
    probability 4591675649106182490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B67" "B79" 
    successors "B81" 
    xhandlers
    flags 
    probability 4594771731916432392
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4594771731916432392
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -2147483645 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" 
    xhandlers
    flags 
    probability 4594771731916432392
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|DWORD, v64|DWORD] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" "B88" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596381352530158810
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 127]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD v85|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v86|DWORD[.] * 8] state [bci:127] <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v84|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4274) [bci: 141]
locals: v0|QWORD[.] v1|QWORD[.] v84|DWORD v85|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:141] <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v88|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.33477590409391633 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B84" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589494120307264355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = DEC v85|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SUB (x: v84|DWORD, ~y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v90|DWORD, v89|DWORD] destination: B87 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B87" 
    successors "B85" "B86" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4597186581738482105
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD, v85|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.10042065694083953 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors 
    xhandlers
    flags 
    probability 4593966502708109097
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B42" 
    xhandlers
    flags 
    probability 4590908810388122459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B11 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B11" 
    successors "B43" "B52" 
    xhandlers
    flags 
    probability 4594094371727138681
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOV [v48|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v49|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4594094371727138681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B50" 
    xhandlers
    flags 
    probability 4594094371727138681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B49" 
    xhandlers
    flags 
    probability 4594094371727138681
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVZX v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|DWORD, y: [v48|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.16235299736775066 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 4592917507692732515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4588729599181860091
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[.] = MOV [v6|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v56|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v58|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] v3|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 31] <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v59|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4588729599181860091
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4588553210653347180
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B42" 
    xhandlers
    flags 
    probability 4587377447332292398
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors 
    xhandlers
    flags 
    probability 4582099055075010297
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4582055684782979642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[.] = MOV [v48|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] v3|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v51|DWORD[.] * 8] state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
locals: - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 170] <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v54|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4582055684782979642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -225555 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 10]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: v27|QWORD[.] v1|QWORD[.] - - - v41|DWORD v40|DWORD 
java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
locals: - - - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 70, 170] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-253715|0xfffffffffffc20ed]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B69" "B72" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v80|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v80|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: v77|DWORD 
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD v64|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 77] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-260371|0xfffffffffffc06ed]] destination: B96 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" "B100" "B99" "B98" "B74" "B97" "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr   -1  <|@ instruction [v98|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD v64|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction DEOPT info [bci:61] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-267027|0xfffffffffffbeced]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B90" "B93" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v97|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: v94|DWORD 
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD v64|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 77] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-232755|0xfffffffffffc72cd]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] v3|DWORD - 
>@ <|@ instruction DEOPT info [bci:34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -240147 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
locals: - - - - - - - 
>@ <|@ instruction DEOPT info [bci:34, 170] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-225843|0xfffffffffffc8dcd]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v27|QWORD[.] v1|QWORD[.] v2|DWORD v4|QWORD[.] v32|DWORD v41|DWORD v40|DWORD 
java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
locals: - - - - - - - 
>@ <|@ instruction DEOPT info [bci:63, 170] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-266515|0xfffffffffffbeeed]] destination: B90 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-192819|0xfffffffffffd0ecd]] destination: B104 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B108" "B107" "B106" "B105" "B16" "B104" "B103" "B15" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-254003|0xfffffffffffc1fcd]] destination: B97 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-262939|0xfffffffffffbfce5]] destination: B95 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-253203|0xfffffffffffc22ed]] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-220955|0xfffffffffffca0e5]] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B24" "B39" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] v3|DWORD - 
>@ <|@ instruction DEOPT info [bci:34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-249363|0xfffffffffffc31ed]] destination: B74 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-218651|0xfffffffffffca9e5]] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-295443|0xfffffffffffb7ded]] destination: B98 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-291091|0xfffffffffffb8eed]] destination: B99 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B53" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-232979|0xfffffffffffc71ed]] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-241939|0xfffffffffffc4eed]] destination: B101 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -241427 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[1|0x1] 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] v3|DWORD - 
>@ <|@ instruction DEOPT info [bci:34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -192531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] v3|DWORD - 
>@ <|@ instruction DEOPT info [bci:34, 31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -204819 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] v3|DWORD - 
>@ <|@ instruction DEOPT info [bci:34, 31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-293395|0xfffffffffffb85ed]] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -298116 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 80]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v63|DWORD v64|DWORD v4|QWORD[.] v3|DWORD v61|DWORD 
>@ <|@ instruction DEOPT info [bci:80] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-185363|0xfffffffffffd2bed]] destination: B16 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-187931|0xfffffffffffd21e5]] destination: B15 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-294939|0xfffffffffffb7fe5]] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-210451|0xfffffffffffcc9ed]] destination: B24 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-295195|0xfffffffffffb7ee5]] destination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-294675|0xfffffffffffb80ed]] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-226579|0xfffffffffffc8aed]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-176147|0xfffffffffffd4fed]] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-199955|0xfffffffffffcf2ed]] destination: B103 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-293683|0xfffffffffffb84cd]] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-208667|0xfffffffffffcd0e5]] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-234003|0xfffffffffffc6ded]] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: aload_0       
     2: getfield      #4          // cmax:int
     5: if_icmplt     20
     8: aload_0       
     9: getfield      #10         // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    12: aload_1       
    13: iload_2       
    14: aload         4
    16: invokevirtual #5          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    19: ireturn       
    20: iload_3       
    21: istore        5
    23: aload_0       
    24: getfield      #1          // atom:java.util.regex.Pattern$Node
    27: aload_1       
    28: iload_2       
    29: aload         4
    31: invokevirtual #5          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    34: ifeq          162
    37: aload_1       
    38: getfield      #6          // java.util.regex.Matcher.last:int
    41: iload_2       
    42: isub          
    43: istore        6
    45: iload         6
    47: ifne          53
    50: goto          162
    53: aload_1       
    54: getfield      #6          // java.util.regex.Matcher.last:int
    57: istore_2      
    58: iinc          
    61: iload_3       
    62: aload_0       
    63: getfield      #4          // cmax:int
    66: if_icmpge     127
    69: aload_0       
    70: getfield      #1          // atom:java.util.regex.Pattern$Node
    73: aload_1       
    74: iload_2       
    75: aload         4
    77: invokevirtual #5          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    80: ifne          86
    83: goto          127
    86: iload_2       
    87: iload         6
    89: iadd          
    90: aload_1       
    91: getfield      #6          // java.util.regex.Matcher.last:int
    94: if_icmpeq     116
    97: aload_0       
    98: aload_1       
    99: aload_1       
   100: getfield      #6          // java.util.regex.Matcher.last:int
   103: iload_3       
   104: iconst_1      
   105: iadd          
   106: aload         4
   108: invokevirtual #7          // match0:(java.util.regex.Matcher, int, int, java.lang.CharSequence)boolean
   111: ifeq          127
   114: iconst_1      
   115: ireturn       
   116: iload_2       
   117: iload         6
   119: iadd          
   120: istore_2      
   121: iinc          
   124: goto          61
   127: iload_3       
   128: iload         5
   130: if_icmplt     160
   133: aload_0       
   134: getfield      #10         // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   137: aload_1       
   138: iload_2       
   139: aload         4
   141: invokevirtual #5          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   144: ifeq          149
   147: iconst_1      
   148: ireturn       
   149: iload_2       
   150: iload         6
   152: isub          
   153: istore_2      
   154: iinc          
   157: goto          127
   160: iconst_0      
   161: ireturn       
   162: aload_0       
   163: getfield      #10         // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   166: aload_1       
   167: iload_2       
   168: aload         4
   170: invokevirtual #5          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   173: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@a129bd5 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction stack:56|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] - - 
>@ <|@ instruction CMP [r9|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r11|DWORD[.] = MOV [r9|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r10:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] - - 
>@ <|@ instruction rbx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B106" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r10:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B105" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVSX [r11|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   62  <|@ instruction rbp|QWORD = MOVZX r11|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.6337742856265922 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B16" 
    xhandlers
    flags 
    probability 4603883750818446262
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction CMP r11|DWORD y: 256 size: WORD <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B15" 
    xhandlers
    flags 
    probability 4603883750818446262
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   78  <|@ instruction r13|DWORD = MOVZX r11|DWORD size: DWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] - - 
>@ <|@ instruction CMP (x: r13|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4603883750818446262
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rax|DWORD = MOVZXB [rbp|QWORD + rax|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.8376470026322493 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602956953655679596
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r9:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] - - 
>@ <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:0] <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.836764508942159 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601673990707472897
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B10 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B10" 
    successors "B23" "B39" 
    xhandlers
    flags 
    probability 4604488485143970824
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  208  <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  210  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] r8|DWORD - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:34] <|@ <|@
      nr  212  <|@ instruction rbx|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  214  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604488485143970824
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction r10|DWORD = MOV [r10|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  224  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B38" 
    xhandlers
    flags 
    probability 4604488485143970824
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction r11|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  240  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r9:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] r8|DWORD - 
>@ <|@ instruction rbx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:34] <|@ <|@
      nr  242  <|@ instruction rdi|DWORD = MOV [rax|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  244  <|@ instruction CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B37" 
    xhandlers
    flags 
    probability 4604488485143970824
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rbp|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr  252  <|@ instruction CMP (x: rbx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B31" 
    xhandlers
    flags 
    probability 4604488485143970824
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction rbx|DWORD[.] = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  260  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, rsi:0, r9:0, r11:0, stack:56]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] r8|DWORD - 
>@ <|@ instruction r13|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:34] <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  264  <|@ instruction r14|DWORD = MOV [rsi|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV (x: [rsi|QWORD[.] + rdi|DWORD * 4 + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rsi|QWORD[.] + rbp|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed} <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.5698385272463588 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4600866703859656166
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  286  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, stack:16, stack:56]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: stack:80|QWORD[.] rdx|QWORD[.] rcx|DWORD r9|QWORD[.] r10|DWORD stack:64|DWORD stack:68|DWORD 
java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:63, 170] <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction r8|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ st <@st|@reference-map: [stack:16, stack:56]
live-base-pointers: []
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: stack:80|QWORD[.] stack:40|QWORD[.] - - - stack:64|DWORD stack:68|DWORD 
java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
locals: - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:7, 70, 170] <|@ <|@
      nr  298  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4600866703859656166
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  314  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B18" "B104" 
    xhandlers
    flags 
    probability 4600268955881048212
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B103" 
    xhandlers
    flags 
    probability 4600268955881048212
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction CMP r11|DWORD y: 128 size: WORD <|@ <|@
      nr  180  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B54" 
    xhandlers
    flags 
    probability 4600268955881048212
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr  186  <|@ instruction r13|DWORD = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  188  <|@ instruction TEST (x: r13|DWORD, y: [rax|QWORD[.] + rbp|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.8376470026322493 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B41" 
    xhandlers
    flags 
    probability 4599197858612790005
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  196  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r9:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] - - 
>@ <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:0] <|@ <|@
      nr  200  <|@ instruction BRANCH trueDestinationProbability: 0.836764508942159 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598295780325727759
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" "B35" 
    xhandlers
    flags 
    probability 4599103067173544490
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599103067173544490
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction CMP [rdx|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr  334  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 4599103067173544490
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV (x: [r11|DWORD[.] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction MOV (x: [r11|DWORD[.] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  358  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  360  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4592078797965298259
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rdx:0, r9:0, r10:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|DWORD stack:44|DWORD r9|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr  118  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction r11|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction r8|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:44|DWORD stack:56|QWORD[.] stack:44|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 31] <|@ <|@
      nr  136  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B57" 
    xhandlers
    flags 
    probability 4592078797965298259
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B14 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B14" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4595017403478118504
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  554  <|@ instruction rsi|DWORD = MOV [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  556  <|@ instruction CMP (x: rsi|DWORD, y: stack:60|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4595017403478118504
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction r10|DWORD = SUB (x: rsi|DWORD, ~y: stack:60|DWORD) size: DWORD <|@ <|@
      nr  572  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction r8|DWORD = INC stack:44|DWORD size: DWORD <|@ <|@
      nr  576  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B92" "B71" 
    successors "B61" "B101" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595857845011793521
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  588  <|@ instruction rcx|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  590  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595857845011793521
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  598  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD r11|DWORD r9|QWORD[.] stack:44|DWORD stack:68|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:61] <|@ <|@
      nr  600  <|@ instruction rcx|DWORD[.] = MOV [r9|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  602  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0, r9:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD r11|DWORD r9|QWORD[.] stack:44|DWORD stack:68|DWORD 
>@ <|@ instruction rdi|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:61] <|@ <|@
      nr  604  <|@ instruction CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  606  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595857845011793521
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  612  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595857845011793521
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  616  <|@ instruction CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595857845011793521
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  624  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  626  <|@ instruction rdi|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  628  <|@ instruction rax|QWORD = MOVZX rcx|DWORD size: DWORD <|@ <|@
      nr  630  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.6255879059350504 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593034567540053699
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction CMP rcx|DWORD y: 128 size: WORD <|@ <|@
      nr  638  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B65 -> B66 falseDestination: B65 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593034567540053699
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr  644  <|@ instruction rdi|DWORD = MOV [r8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  646  <|@ instruction TEST (x: rdi|DWORD, y: [rcx|QWORD[.] + rax|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  648  <|@ instruction BRANCH trueDestinationProbability: 0.8376470026322493 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581092895143908772
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction rcx|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  664  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r9:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
locals: stack:32|QWORD[.] rdx|QWORD[.] r10|DWORD stack:64|DWORD r9|QWORD[.] stack:44|DWORD stack:68|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:61] <|@ <|@
      nr  666  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction r8|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  670  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction r8|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:84|DWORD stack:64|DWORD stack:56|QWORD[.] stack:44|DWORD stack:68|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 77] <|@ <|@
      nr  684  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  686  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581092895143908772
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r10|DWORD = ADD (x: stack:68|DWORD, y: stack:84|DWORD) size: DWORD <|@ <|@
      nr  700  <|@ instruction CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  702  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581092895143908772
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  706  <|@ instruction r11|DWORD = INC stack:64|DWORD size: DWORD <|@ <|@
      nr  708  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B71 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B76" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589673923228792351
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B96" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589673923228792351
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction CMP rcx|DWORD y: 256 size: WORD <|@ <|@
      nr  754  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B76 -> B77 falseDestination: B76 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589673923228792351
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction rsi|DWORD[.] = MOV [r8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  760  <|@ instruction rcx|DWORD = MOVZX rcx|DWORD size: DWORD <|@ <|@
      nr  762  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:84|DWORD stack:64|DWORD stack:56|QWORD[.] stack:44|DWORD stack:68|DWORD 
>@ <|@ instruction CMP (x: rcx|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:61] <|@ <|@
      nr  764  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B77 -> B78 falseDestination: B77 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B79" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589673923228792351
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  770  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 0.8376470026322493 condition: = trueDestination: B78 -> B79 falseDestination: B78 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577660083835861834
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction rsi|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  876  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:84|DWORD stack:64|DWORD stack:56|QWORD[.] stack:44|DWORD stack:68|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:61] <|@ <|@
      nr  878  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  880  <|@ instruction r10|DWORD = INC stack:84|DWORD size: DWORD <|@ <|@
      nr  882  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  884  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:84|DWORD stack:64|DWORD stack:56|QWORD[.] stack:44|DWORD stack:68|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 77] <|@ <|@
      nr  892  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577660083835861834
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction r10|DWORD = ADD (x: stack:68|DWORD, y: stack:84|DWORD) size: DWORD <|@ <|@
      nr  908  <|@ instruction CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  910  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577660083835861834
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction r11|DWORD = INC stack:64|DWORD size: DWORD <|@ <|@
      nr  916  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction JUMP ~[] destination: B92 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B80" 
    xhandlers
    flags 
    probability 4591675649106182490
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B67 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B67" "B79" 
    successors "B81" 
    xhandlers
    flags 
    probability 4594771731916432392
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  780  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4594771731916432392
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction CMP stack:44|DWORD y: -2147483645 size: DWORD <|@ <|@
      nr  786  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" 
    xhandlers
    flags 
    probability 4594771731916432392
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  802  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" "B88" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596381352530158810
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  822  <|@ instruction stack:88|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  826  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 127]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD stack:88|DWORD stack:56|QWORD[.] stack:44|DWORD stack:68|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:127] <|@ <|@
      nr  828  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  830  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction rbx|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  834  <|@ instruction rdx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4274) [bci: 141]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:92|DWORD stack:88|DWORD stack:56|QWORD[.] stack:44|DWORD stack:68|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:141] <|@ <|@
      nr  844  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction BRANCH trueDestinationProbability: 0.33477590409391633 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B84" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589494120307264355
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  850  <|@ instruction r11|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  856  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  858  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  860  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  862  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B87 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B87" 
    successors "B85" "B86" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4597186581738482105
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  810  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction BRANCH trueDestinationProbability: 0.10042065694083953 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors 
    xhandlers
    flags 
    probability 4593966502708109097
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  870  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B42" 
    xhandlers
    flags 
    probability 4590908810388122459
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B11 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B11" 
    successors "B43" "B52" 
    xhandlers
    flags 
    probability 4594094371727138681
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  424  <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  426  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed} <|@ <|@
      nr  428  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4594094371727138681
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction CMP (x: rdi|DWORD, y: stack:60|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B50" 
    xhandlers
    flags 
    probability 4594094371727138681
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction CMP (x: rbx|DWORD, y: stack:60|DWORD) size: DWORD <|@ <|@
      nr  440  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B49" 
    xhandlers
    flags 
    probability 4594094371727138681
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction rsi|DWORD = MOVZX r11|DWORD size: DWORD <|@ <|@
      nr  446  <|@ instruction CMP (x: rsi|DWORD, y: [rax|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.16235299736775066 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 4592917507692732515
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  488  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4588729599181860091
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  522  <|@ st <@st|@reference-map: [rsi:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:44|DWORD stack:56|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  526  <|@ instruction rcx|DWORD = INC stack:60|DWORD size: DWORD <|@ <|@
      nr  528  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:44|DWORD stack:56|QWORD[.] stack:44|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 31] <|@ <|@
      nr  534  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4588729599181860091
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 4588553210653347180
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B42" 
    xhandlers
    flags 
    probability 4587377447332292398
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors 
    xhandlers
    flags 
    probability 4582099055075010297
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  816  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  818  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4582055684782979642
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rsi|DWORD[.] = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  454  <|@ st <@st|@reference-map: [rsi:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[0|0x0] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:44|DWORD stack:56|QWORD[.] stack:44|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:34] <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  458  <|@ instruction rcx|DWORD = INC stack:60|DWORD size: DWORD <|@ <|@
      nr  460  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
locals: - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 170] <|@ <|@
      nr  466  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4582055684782979642
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  482  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction MOV [r15|QWORD + 668] y: -225555 size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  308  <|@ st <@st|@reference-map: [stack:16, stack:56]
live-base-pointers: []
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 10]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: stack:80|QWORD[.] stack:40|QWORD[.] - - - stack:64|DWORD stack:68|DWORD 
java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
locals: - - - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 70, 170] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction r10|DWORD = MOVE input: int[-253715|0xfffffffffffc20ed] <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B69" "B72" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  722  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  726  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: rax|DWORD 
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:84|DWORD stack:64|DWORD stack:56|QWORD[.] stack:44|DWORD stack:68|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 77] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  954  <|@ instruction r10|DWORD = MOVE input: int[-260371|0xfffffffffffc06ed] <|@ <|@
      nr  956  <|@ instruction r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  964  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction JUMP ~[] destination: B96 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" "B100" "B99" "B98" "B74" "B97" "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1034  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1036  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1038  <|@ st <@st|@reference-map: [rsi:0, stack:40, stack:56]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
locals: rsi|QWORD[.] stack:40|QWORD[.] r9|DWORD r11|DWORD stack:56|QWORD[.] r8|DWORD rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:61] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  924  <|@ instruction r10|DWORD = MOVE input: int[-267027|0xfffffffffffbeced] <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B90" "B93" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  930  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  932  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  934  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: rax|DWORD 
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:84|DWORD stack:64|DWORD stack:56|QWORD[.] stack:44|DWORD stack:68|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 77] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction r10|DWORD = MOVE input: int[-232755|0xfffffffffffc72cd] <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  514  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[0|0x0] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:44|DWORD stack:56|QWORD[.] stack:44|DWORD - 
>@ <|@ instruction DEOPT info [bci:34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction MOV [r15|QWORD + 668] y: -240147 size: DWORD <|@ <|@
      nr  474  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  476  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
locals: - - - - - - - 
>@ <|@ instruction DEOPT info [bci:34, 170] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction r11|DWORD = MOVE input: int[-225843|0xfffffffffffc8dcd] <|@ <|@
      nr  366  <|@ instruction r8|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction r14|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  378  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  382  <|@ st <@st|@reference-map: [rax:0, rdx:0, r9:0]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: rax|QWORD[.] rdx|QWORD[.] rcx|DWORD r9|QWORD[.] r10|DWORD r8|DWORD r14|DWORD 
java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
locals: - - - - - - - 
>@ <|@ instruction DEOPT info [bci:63, 170] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction r10|DWORD = MOVE input: int[-266515|0xfffffffffffbeeed] <|@ <|@
      nr  900  <|@ instruction JUMP ~[] destination: B90 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1050  <|@ instruction r10|DWORD = MOVE input: int[-192819|0xfffffffffffd0ecd] <|@ <|@
      nr 1052  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B104 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B108" "B107" "B106" "B105" "B16" "B104" "B103" "B15" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1098  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1102  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:44|DWORD stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  970  <|@ instruction r10|DWORD = MOVE input: int[-254003|0xfffffffffffc1fcd] <|@ <|@
      nr  972  <|@ instruction r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  976  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  982  <|@ instruction JUMP ~[] destination: B97 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  938  <|@ instruction r10|DWORD = MOVE input: int[-262939|0xfffffffffffbfce5] <|@ <|@
      nr  940  <|@ instruction r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  942  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  944  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B95 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction r10|DWORD = MOVE input: int[-253203|0xfffffffffffc22ed] <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction r10|DWORD = MOVE input: int[-220955|0xfffffffffffca0e5] <|@ <|@
      nr  388  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B24" "B39" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  410  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  414  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[0|0x0] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:44|DWORD stack:56|QWORD[.] stack:44|DWORD - 
>@ <|@ instruction DEOPT info [bci:34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  732  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction r10|DWORD = MOVE input: int[-249363|0xfffffffffffc31ed] <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B74 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction r10|DWORD = MOVE input: int[-218651|0xfffffffffffca9e5] <|@ <|@
      nr  396  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  986  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  988  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction r10|DWORD = MOVE input: int[-295443|0xfffffffffffb7ded] <|@ <|@
      nr  994  <|@ instruction JUMP ~[] destination: B98 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  998  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction r10|DWORD = MOVE input: int[-291091|0xfffffffffffb8eed] <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B99 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B53" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction r10|DWORD = MOVE input: int[-232979|0xfffffffffffc71ed] <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction r10|DWORD = MOVE input: int[-241939|0xfffffffffffc4eed] <|@ <|@
      nr 1030  <|@ instruction JUMP ~[] destination: B101 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ instruction MOV [r15|QWORD + 668] y: -241427 size: DWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  566  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[1|0x1] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:44|DWORD stack:56|QWORD[.] stack:44|DWORD - 
>@ <|@ instruction DEOPT info [bci:34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction MOV [r15|QWORD + 668] y: -192531 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  146  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:44|DWORD stack:56|QWORD[.] stack:44|DWORD - 
>@ <|@ instruction DEOPT info [bci:34, 31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction MOV [r15|QWORD + 668] y: -204819 size: DWORD <|@ <|@
      nr  542  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  544  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:44|DWORD stack:56|QWORD[.] stack:44|DWORD - 
>@ <|@ instruction DEOPT info [bci:34, 31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1066  <|@ instruction r10|DWORD = MOVE input: int[-293395|0xfffffffffffb85ed] <|@ <|@
      nr 1068  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ instruction JUMP ~[] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  790  <|@ instruction MOV [r15|QWORD + 668] y: -298116 size: DWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  794  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 80]
stack: int[0|0x0] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:84|DWORD stack:64|DWORD stack:56|QWORD[.] stack:44|DWORD stack:68|DWORD 
>@ <|@ instruction DEOPT info [bci:80] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction r10|DWORD = MOVE input: int[-185363|0xfffffffffffd2bed] <|@ <|@
      nr  166  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B16 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: int[-187931|0xfffffffffffd21e5] <|@ <|@
      nr  158  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B15 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1072  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1074  <|@ instruction r10|DWORD = MOVE input: int[-294939|0xfffffffffffb7fe5] <|@ <|@
      nr 1076  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~[] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction r10|DWORD = MOVE input: int[-210451|0xfffffffffffcc9ed] <|@ <|@
      nr  232  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B24 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1010  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r10|DWORD = MOVE input: int[-295195|0xfffffffffffb7ee5] <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1058  <|@ instruction r10|DWORD = MOVE input: int[-294675|0xfffffffffffb80ed] <|@ <|@
      nr 1060  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~[] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction r11|DWORD = MOVE input: int[-226579|0xfffffffffffc8aed] <|@ <|@
      nr  340  <|@ instruction r8|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction r14|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1090  <|@ instruction r10|DWORD = MOVE input: int[-176147|0xfffffffffffd4fed] <|@ <|@
      nr 1092  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction JUMP ~[] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1042  <|@ instruction r10|DWORD = MOVE input: int[-199955|0xfffffffffffcf2ed] <|@ <|@
      nr 1044  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction JUMP ~[] destination: B103 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1082  <|@ instruction r10|DWORD = MOVE input: int[-293683|0xfffffffffffb84cd] <|@ <|@
      nr 1084  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction JUMP ~[] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction r10|DWORD = MOVE input: int[-208667|0xfffffffffffcd0e5] <|@ <|@
      nr  404  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction r10|DWORD = MOVE input: int[-234003|0xfffffffffffc6ded] <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: aload_0       
     2: getfield      #4          // cmax:int
     5: if_icmplt     20
     8: aload_0       
     9: getfield      #10         // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    12: aload_1       
    13: iload_2       
    14: aload         4
    16: invokevirtual #5          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    19: ireturn       
    20: iload_3       
    21: istore        5
    23: aload_0       
    24: getfield      #1          // atom:java.util.regex.Pattern$Node
    27: aload_1       
    28: iload_2       
    29: aload         4
    31: invokevirtual #5          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    34: ifeq          162
    37: aload_1       
    38: getfield      #6          // java.util.regex.Matcher.last:int
    41: iload_2       
    42: isub          
    43: istore        6
    45: iload         6
    47: ifne          53
    50: goto          162
    53: aload_1       
    54: getfield      #6          // java.util.regex.Matcher.last:int
    57: istore_2      
    58: iinc          
    61: iload_3       
    62: aload_0       
    63: getfield      #4          // cmax:int
    66: if_icmpge     127
    69: aload_0       
    70: getfield      #1          // atom:java.util.regex.Pattern$Node
    73: aload_1       
    74: iload_2       
    75: aload         4
    77: invokevirtual #5          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    80: ifne          86
    83: goto          127
    86: iload_2       
    87: iload         6
    89: iadd          
    90: aload_1       
    91: getfield      #6          // java.util.regex.Matcher.last:int
    94: if_icmpeq     116
    97: aload_0       
    98: aload_1       
    99: aload_1       
   100: getfield      #6          // java.util.regex.Matcher.last:int
   103: iload_3       
   104: iconst_1      
   105: iadd          
   106: aload         4
   108: invokevirtual #7          // match0:(java.util.regex.Matcher, int, int, java.lang.CharSequence)boolean
   111: ifeq          127
   114: iconst_1      
   115: ireturn       
   116: iload_2       
   117: iload         6
   119: iadd          
   120: istore_2      
   121: iinc          
   124: goto          61
   127: iload_3       
   128: iload         5
   130: if_icmplt     160
   133: aload_0       
   134: getfield      #10         // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   137: aload_1       
   138: iload_2       
   139: aload         4
   141: invokevirtual #5          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   144: ifeq          149
   147: iconst_1      
   148: ireturn       
   149: iload_2       
   150: iload         6
   152: isub          
   153: istore_2      
   154: iinc          
   157: goto          127
   160: iconst_0      
   161: ireturn       
   162: aload_0       
   163: getfield      #10         // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   166: aload_1       
   167: iload_2       
   168: aload         4
   170: invokevirtual #5          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   173: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B109" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@a129bd5 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction stack:56|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B108" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] - - 
>@ <|@ instruction CMP [r9|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B107" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r11|DWORD[.] = MOV [r9|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r10:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] - - 
>@ <|@ instruction rbx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B106" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r10:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B105" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVSX [r11|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   62  <|@ instruction rbp|QWORD = MOVZX r11|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.6337742856265922 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B16" 
    xhandlers
    flags 
    probability 4603883750818446262
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction CMP r11|DWORD y: 256 size: WORD <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B15" 
    xhandlers
    flags 
    probability 4603883750818446262
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   78  <|@ instruction r13|DWORD = MOVZX r11|DWORD size: DWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] - - 
>@ <|@ instruction CMP (x: r13|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4603883750818446262
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rax|DWORD = MOVZXB [rbp|QWORD + rax|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   88  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.8376470026322493 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" "B42" 
    xhandlers
    flags 
    probability 4602956953655679596
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   96  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r9:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] - - 
>@ <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:0] <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.836764508942159 condition: = trueDestination: B9 -> B22 falseDestination: B9 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B9" 
    successors "B23" "B39" 
    xhandlers
    flags 
    probability 4604488485143970824
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  208  <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  210  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] r8|DWORD - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:34] <|@ <|@
      nr  212  <|@ instruction rbx|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  214  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604488485143970824
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction r10|DWORD = MOV [r10|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  224  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B38" 
    xhandlers
    flags 
    probability 4604488485143970824
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction r11|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  240  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r9:0, r11:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] r8|DWORD - 
>@ <|@ instruction rbx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:34] <|@ <|@
      nr  242  <|@ instruction rdi|DWORD = MOV [rax|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  244  <|@ instruction CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B37" 
    xhandlers
    flags 
    probability 4604488485143970824
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rbp|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr  252  <|@ instruction CMP (x: rbx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B31" 
    xhandlers
    flags 
    probability 4604488485143970824
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction rbx|DWORD[.] = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  260  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbx:0, rsi:0, r9:0, r11:0, stack:56]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] r8|DWORD - 
>@ <|@ instruction r13|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:34] <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  264  <|@ instruction r14|DWORD = MOV [rsi|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  266  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV (x: [rsi|QWORD[.] + rdi|DWORD * 4 + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rsi|QWORD[.] + rbp|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed} <|@ <|@
      nr  278  <|@ instruction stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  282  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.5698385272463588 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4600866703859656166
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  286  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, stack:16, stack:56]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: stack:80|QWORD[.] rdx|QWORD[.] rcx|DWORD r9|QWORD[.] r10|DWORD stack:64|DWORD stack:68|DWORD 
java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
locals: - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:63, 170] <|@ <|@
      nr  288  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  290  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction r8|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ st <@st|@reference-map: [stack:16, stack:56]
live-base-pointers: []
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: stack:80|QWORD[.] stack:40|QWORD[.] - - - stack:64|DWORD stack:68|DWORD 
java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
locals: - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:7, 70, 170] <|@ <|@
      nr  298  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 4600866703859656166
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  314  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B18" "B104" 
    xhandlers
    flags 
    probability 4600268955881048212
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} <|@ <|@
      nr  174  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B103" 
    xhandlers
    flags 
    probability 4600268955881048212
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction CMP r11|DWORD y: 128 size: WORD <|@ <|@
      nr  180  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B54" 
    xhandlers
    flags 
    probability 4600268955881048212
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr  186  <|@ instruction r13|DWORD = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  188  <|@ instruction TEST (x: r13|DWORD, y: [rax|QWORD[.] + rbp|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.8376470026322493 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B42" 
    xhandlers
    flags 
    probability 4599197858612790005
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  196  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r9:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] - - 
>@ <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:0] <|@ <|@
      nr  200  <|@ instruction BRANCH trueDestinationProbability: 0.836764508942159 condition: = trueDestination: B20 -> B22 falseDestination: B20 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" "B35" 
    xhandlers
    flags 
    probability 4599103067173544490
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4599103067173544490
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction CMP [rdx|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr  334  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 4599103067173544490
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV (x: [r11|DWORD[.] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  356  <|@ instruction MOV (x: [r11|DWORD[.] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  358  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  360  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B57" 
    xhandlers
    flags 
    probability 4592078797965298259
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rdx:0, r9:0, r10:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|DWORD stack:44|DWORD r9|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr  118  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction r11|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction r8|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:44|DWORD stack:56|QWORD[.] stack:44|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 31] <|@ <|@
      nr  136  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B54" "B12" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4595017403478118504
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rsi|DWORD = MOV [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  556  <|@ instruction CMP (x: rsi|DWORD, y: stack:60|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4595017403478118504
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction r10|DWORD = SUB (x: rsi|DWORD, ~y: stack:60|DWORD) size: DWORD <|@ <|@
      nr  572  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction r8|DWORD = INC stack:44|DWORD size: DWORD <|@ <|@
      nr  576  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B92" "B71" 
    successors "B61" "B101" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595857845011793521
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  582  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rcx|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  590  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B100" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595857845011793521
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  598  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD r11|DWORD r9|QWORD[.] stack:44|DWORD stack:68|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:61] <|@ <|@
      nr  600  <|@ instruction rcx|DWORD[.] = MOV [r9|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  602  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0, r9:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD r11|DWORD r9|QWORD[.] stack:44|DWORD stack:68|DWORD 
>@ <|@ instruction rdi|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:61] <|@ <|@
      nr  604  <|@ instruction CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  606  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B99" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595857845011793521
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  612  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B98" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595857845011793521
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  616  <|@ instruction CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  618  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B75" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595857845011793521
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  624  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  626  <|@ instruction rdi|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  628  <|@ instruction rax|QWORD = MOVZX rcx|DWORD size: DWORD <|@ <|@
      nr  630  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} <|@ <|@
      nr  632  <|@ instruction BRANCH trueDestinationProbability: 0.6255879059350504 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593034567540053699
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction CMP rcx|DWORD y: 128 size: WORD <|@ <|@
      nr  638  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B65 -> B66 falseDestination: B65 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593034567540053699
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr  644  <|@ instruction rdi|DWORD = MOV [r8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  646  <|@ instruction TEST (x: rdi|DWORD, y: [rcx|QWORD[.] + rax|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  652  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction BRANCH trueDestinationProbability: 0.8376470026322493 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581092895143908772
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ instruction rcx|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  664  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r9:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
locals: stack:32|QWORD[.] rdx|QWORD[.] r10|DWORD stack:64|DWORD r9|QWORD[.] stack:44|DWORD stack:68|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:61] <|@ <|@
      nr  666  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  668  <|@ instruction r8|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  670  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction r8|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:84|DWORD stack:64|DWORD stack:56|QWORD[.] stack:44|DWORD stack:68|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 77] <|@ <|@
      nr  684  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  686  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581092895143908772
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction r10|DWORD = ADD (x: stack:68|DWORD, y: stack:84|DWORD) size: DWORD <|@ <|@
      nr  700  <|@ instruction CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  702  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581092895143908772
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  706  <|@ instruction r11|DWORD = INC stack:64|DWORD size: DWORD <|@ <|@
      nr  708  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B71 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B76" "B97" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589673923228792351
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B96" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589673923228792351
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction CMP rcx|DWORD y: 256 size: WORD <|@ <|@
      nr  754  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B76 -> B77 falseDestination: B76 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" "B95" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589673923228792351
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction rsi|DWORD[.] = MOV [r8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  760  <|@ instruction rcx|DWORD = MOVZX rcx|DWORD size: DWORD <|@ <|@
      nr  762  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:84|DWORD stack:64|DWORD stack:56|QWORD[.] stack:44|DWORD stack:68|DWORD 
>@ <|@ instruction CMP (x: rcx|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:61] <|@ <|@
      nr  764  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B77 -> B78 falseDestination: B77 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B81" "B89" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589673923228792351
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction rsi|DWORD = MOVZXB [rax|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  770  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 0.8376470026322493 condition: = trueDestination: B78 -> B81 falseDestination: B78 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577660083835861834
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction rsi|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  876  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:84|DWORD stack:64|DWORD stack:56|QWORD[.] stack:44|DWORD stack:68|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:61] <|@ <|@
      nr  878  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  880  <|@ instruction r10|DWORD = INC stack:84|DWORD size: DWORD <|@ <|@
      nr  882  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:84|DWORD stack:64|DWORD stack:56|QWORD[.] stack:44|DWORD stack:68|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 77] <|@ <|@
      nr  892  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" "B93" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4577660083835861834
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction r10|DWORD = ADD (x: stack:68|DWORD, y: stack:84|DWORD) size: DWORD <|@ <|@
      nr  908  <|@ instruction CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 32]) size: DWORD <|@ <|@
      nr  910  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B60" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4577660083835861834
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction r11|DWORD = INC stack:64|DWORD size: DWORD <|@ <|@
      nr  916  <|@ instruction r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction JUMP ~[] destination: B92 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B81" 
    xhandlers
    flags 
    probability 4591675649106182490
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction JUMP ~[] destination: B67 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B67" "B78" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4594771731916432392
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction CMP stack:44|DWORD y: -2147483645 size: DWORD <|@ <|@
      nr  786  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B84" 
    xhandlers
    flags 
    probability 4594771731916432392
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  802  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" "B88" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4596381352530158810
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  822  <|@ instruction stack:88|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction rcx|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  826  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 127]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD stack:88|DWORD stack:56|QWORD[.] stack:44|DWORD stack:68|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:127] <|@ <|@
      nr  828  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  830  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  832  <|@ instruction rbx|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  838  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4274) [bci: 141]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:92|DWORD stack:88|DWORD stack:56|QWORD[.] stack:44|DWORD stack:68|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:141] <|@ <|@
      nr  844  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction BRANCH trueDestinationProbability: 0.33477590409391633 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B84" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4589494120307264355
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  850  <|@ instruction r11|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  856  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  858  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  860  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B87 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" "B87" 
    successors "B85" "B86" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4597186581738482105
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  804  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction BRANCH trueDestinationProbability: 0.10042065694083953 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors 
    xhandlers
    flags 
    probability 4593966502708109097
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  870  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B20" "B9" 
    successors "B43" "B52" 
    xhandlers
    flags 
    probability 4594094371727138681
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  418  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  426  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed} <|@ <|@
      nr  428  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B51" 
    xhandlers
    flags 
    probability 4594094371727138681
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction CMP (x: rdi|DWORD, y: stack:60|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B50" 
    xhandlers
    flags 
    probability 4594094371727138681
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction CMP (x: rbx|DWORD, y: stack:60|DWORD) size: DWORD <|@ <|@
      nr  440  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B49" 
    xhandlers
    flags 
    probability 4594094371727138681
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction rsi|DWORD = MOVZX r11|DWORD size: DWORD <|@ <|@
      nr  446  <|@ instruction CMP (x: rsi|DWORD, y: [rax|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.16235299736775066 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors 
    xhandlers
    flags 
    probability 4592917507692732515
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  488  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B55" "B57" 
    xhandlers
    flags 
    probability 4588729599181860091
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  522  <|@ st <@st|@reference-map: [rsi:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:44|DWORD stack:56|QWORD[.] - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr  524  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  526  <|@ instruction rcx|DWORD = INC stack:60|DWORD size: DWORD <|@ <|@
      nr  528  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  532  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:44|DWORD stack:56|QWORD[.] stack:44|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 31] <|@ <|@
      nr  534  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors 
    xhandlers
    flags 
    probability 4582099055075010297
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  816  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  818  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4582055684782979642
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rsi|DWORD[.] = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  454  <|@ st <@st|@reference-map: [rsi:0, stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[0|0x0] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:44|DWORD stack:56|QWORD[.] stack:44|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:34] <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3 <|@ <|@
      nr  458  <|@ instruction rcx|DWORD = INC stack:60|DWORD size: DWORD <|@ <|@
      nr  460  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
locals: - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 170] <|@ <|@
      nr  466  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 4582055684782979642
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  482  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction MOV [r15|QWORD + 668] y: -225555 size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  308  <|@ st <@st|@reference-map: [stack:16, stack:56]
live-base-pointers: []
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 10]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: stack:80|QWORD[.] stack:40|QWORD[.] - - - stack:64|DWORD stack:68|DWORD 
java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
locals: - - - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 70, 170] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction r10|DWORD = MOVE input: int[-253715|0xfffffffffffc20ed] <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B69" "B72" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  722  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  726  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: rax|DWORD 
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:84|DWORD stack:64|DWORD stack:56|QWORD[.] stack:44|DWORD stack:68|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 77] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  954  <|@ instruction r10|DWORD = MOVE input: int[-260371|0xfffffffffffc06ed] <|@ <|@
      nr  956  <|@ instruction r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  964  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction JUMP ~[] destination: B96 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" "B100" "B99" "B98" "B74" "B97" "B96" "B95" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1034  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1036  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1038  <|@ st <@st|@reference-map: [rsi:0, stack:40, stack:56]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61]
locals: rsi|QWORD[.] stack:40|QWORD[.] r9|DWORD r11|DWORD stack:56|QWORD[.] r8|DWORD rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:61] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  924  <|@ instruction r10|DWORD = MOVE input: int[-267027|0xfffffffffffbeced] <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B90" "B93" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  930  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  932  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  934  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: rax|DWORD 
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:84|DWORD stack:64|DWORD stack:56|QWORD[.] stack:44|DWORD stack:68|DWORD 
>@ <|@ instruction DEOPT info [bci:34, 77] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B53" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction r10|DWORD = MOVE input: int[-232755|0xfffffffffffc72cd] <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" "B50" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  514  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[0|0x0] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:44|DWORD stack:56|QWORD[.] stack:44|DWORD - 
>@ <|@ instruction DEOPT info [bci:34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction MOV [r15|QWORD + 668] y: -240147 size: DWORD <|@ <|@
      nr  474  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  476  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
locals: - - - - - - - 
>@ <|@ instruction DEOPT info [bci:34, 170] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction r11|DWORD = MOVE input: int[-225843|0xfffffffffffc8dcd] <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  378  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  382  <|@ st <@st|@reference-map: [rax:0, rdx:0, r9:0]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: rax|QWORD[.] rdx|QWORD[.] rcx|DWORD r9|QWORD[.] r10|DWORD r8|DWORD r14|DWORD 
java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170]
locals: - - - - - - - 
>@ <|@ instruction DEOPT info [bci:63, 170] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  898  <|@ instruction r10|DWORD = MOVE input: int[-266515|0xfffffffffffbeeed] <|@ <|@
      nr  900  <|@ instruction JUMP ~[] destination: B90 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1050  <|@ instruction r10|DWORD = MOVE input: int[-192819|0xfffffffffffd0ecd] <|@ <|@
      nr 1054  <|@ instruction JUMP ~[] destination: B104 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B108" "B107" "B106" "B105" "B16" "B104" "B103" "B15" 
    successors 
    xhandlers
    flags 
    probability 2369456353950302208
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1092  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1098  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1100  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1102  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:44|DWORD stack:56|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  970  <|@ instruction r10|DWORD = MOVE input: int[-254003|0xfffffffffffc1fcd] <|@ <|@
      nr  972  <|@ instruction r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  976  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  982  <|@ instruction JUMP ~[] destination: B97 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  938  <|@ instruction r10|DWORD = MOVE input: int[-262939|0xfffffffffffbfce5] <|@ <|@
      nr  940  <|@ instruction r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  942  <|@ instruction r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  944  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B95 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction r10|DWORD = MOVE input: int[-253203|0xfffffffffffc22ed] <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B69 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction r10|DWORD = MOVE input: int[-220955|0xfffffffffffca0e5] <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B37 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B24" "B39" "B38" "B37" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  232  <|@ instruction stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  410  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  414  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[0|0x0] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:44|DWORD stack:56|QWORD[.] stack:44|DWORD - 
>@ <|@ instruction DEOPT info [bci:34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  732  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction r10|DWORD = MOVE input: int[-249363|0xfffffffffffc31ed] <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B74 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction r10|DWORD = MOVE input: int[-218651|0xfffffffffffca9e5] <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  986  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  988  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction r10|DWORD = MOVE input: int[-295443|0xfffffffffffb7ded] <|@ <|@
      nr  994  <|@ instruction JUMP ~[] destination: B98 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  998  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1000  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1004  <|@ instruction r10|DWORD = MOVE input: int[-291091|0xfffffffffffb8eed] <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B99 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B53" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction r10|DWORD = MOVE input: int[-232979|0xfffffffffffc71ed] <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction r10|DWORD = MOVE input: int[-241939|0xfffffffffffc4eed] <|@ <|@
      nr 1030  <|@ instruction JUMP ~[] destination: B101 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ instruction MOV [r15|QWORD + 668] y: -241427 size: DWORD <|@ <|@
      nr  564  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  566  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34]
stack: int[1|0x1] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:44|DWORD stack:56|QWORD[.] stack:44|DWORD - 
>@ <|@ instruction DEOPT info [bci:34] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction MOV [r15|QWORD + 668] y: -192531 size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  146  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:44|DWORD stack:56|QWORD[.] stack:44|DWORD - 
>@ <|@ instruction DEOPT info [bci:34, 31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction MOV [r15|QWORD + 668] y: -204819 size: DWORD <|@ <|@
      nr  542  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  544  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:60|DWORD stack:44|DWORD stack:56|QWORD[.] stack:44|DWORD - 
>@ <|@ instruction DEOPT info [bci:34, 31] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1066  <|@ instruction r10|DWORD = MOVE input: int[-293395|0xfffffffffffb85ed] <|@ <|@
      nr 1070  <|@ instruction JUMP ~[] destination: B106 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  790  <|@ instruction MOV [r15|QWORD + 668] y: -298116 size: DWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  794  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:64]
live-base-pointers: []
java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 80]
stack: int[0|0x0] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:84|DWORD stack:64|DWORD stack:56|QWORD[.] stack:44|DWORD stack:68|DWORD 
>@ <|@ instruction DEOPT info [bci:80] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction r10|DWORD = MOVE input: int[-185363|0xfffffffffffd2bed] <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B16 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: int[-187931|0xfffffffffffd21e5] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B15 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1072  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1074  <|@ instruction r10|DWORD = MOVE input: int[-294939|0xfffffffffffb7fe5] <|@ <|@
      nr 1078  <|@ instruction JUMP ~[] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction r10|DWORD = MOVE input: int[-210451|0xfffffffffffcc9ed] <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B24 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1010  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1014  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction r10|DWORD = MOVE input: int[-295195|0xfffffffffffb7ee5] <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1058  <|@ instruction r10|DWORD = MOVE input: int[-294675|0xfffffffffffb80ed] <|@ <|@
      nr 1062  <|@ instruction JUMP ~[] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction r11|DWORD = MOVE input: int[-226579|0xfffffffffffc8aed] <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1090  <|@ instruction r10|DWORD = MOVE input: int[-176147|0xfffffffffffd4fed] <|@ <|@
      nr 1094  <|@ instruction JUMP ~[] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1042  <|@ instruction r10|DWORD = MOVE input: int[-199955|0xfffffffffffcf2ed] <|@ <|@
      nr 1046  <|@ instruction JUMP ~[] destination: B103 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B110" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1082  <|@ instruction r10|DWORD = MOVE input: int[-293683|0xfffffffffffb84cd] <|@ <|@
      nr 1086  <|@ instruction JUMP ~[] destination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B40" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction r10|DWORD = MOVE input: int[-208667|0xfffffffffffcd0e5] <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction r10|DWORD = MOVE input: int[-234003|0xfffffffffffc6ded] <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B50 -> B53 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_3       
     1: aload_0       
     2: getfield      #4          // cmax:int
     5: if_icmplt     20
     8: aload_0       
     9: getfield      #10         // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    12: aload_1       
    13: iload_2       
    14: aload         4
    16: invokevirtual #5          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    19: ireturn       
    20: iload_3       
    21: istore        5
    23: aload_0       
    24: getfield      #1          // atom:java.util.regex.Pattern$Node
    27: aload_1       
    28: iload_2       
    29: aload         4
    31: invokevirtual #5          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    34: ifeq          162
    37: aload_1       
    38: getfield      #6          // java.util.regex.Matcher.last:int
    41: iload_2       
    42: isub          
    43: istore        6
    45: iload         6
    47: ifne          53
    50: goto          162
    53: aload_1       
    54: getfield      #6          // java.util.regex.Matcher.last:int
    57: istore_2      
    58: iinc          
    61: iload_3       
    62: aload_0       
    63: getfield      #4          // cmax:int
    66: if_icmpge     127
    69: aload_0       
    70: getfield      #1          // atom:java.util.regex.Pattern$Node
    73: aload_1       
    74: iload_2       
    75: aload         4
    77: invokevirtual #5          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    80: ifne          86
    83: goto          127
    86: iload_2       
    87: iload         6
    89: iadd          
    90: aload_1       
    91: getfield      #6          // java.util.regex.Matcher.last:int
    94: if_icmpeq     116
    97: aload_0       
    98: aload_1       
    99: aload_1       
   100: getfield      #6          // java.util.regex.Matcher.last:int
   103: iload_3       
   104: iconst_1      
   105: iadd          
   106: aload         4
   108: invokevirtual #7          // match0:(java.util.regex.Matcher, int, int, java.lang.CharSequence)boolean
   111: ifeq          127
   114: iconst_1      
   115: ireturn       
   116: iload_2       
   117: iload         6
   119: iadd          
   120: istore_2      
   121: iinc          
   124: goto          61
   127: iload_3       
   128: iload         5
   130: if_icmplt     160
   133: aload_0       
   134: getfield      #10         // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   137: aload_1       
   138: iload_2       
   139: aload         4
   141: invokevirtual #5          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   144: ifeq          149
   147: iconst_1      
   148: ireturn       
   149: iload_2       
   150: iload         6
   152: isub          
   153: istore_2      
   154: iinc          
   157: goto          127
   160: iconst_0      
   161: ireturn       
   162: aload_0       
   163: getfield      #10         // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
   166: aload_1       
   167: iload_2       
   168: aload         4
   170: invokevirtual #5          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   173: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c24504889742440488954243844894424344c894c2428448b5618453bd00f8e7b080000448b561c438504d441817908addeadde0f857b080000458b590c428b1cdd0c0000003bd90f860e0800008b7a103bf90f8eca0700003bd90f8e2808000049c1e303450fbf5c4b10428b04d508000000410fb7eb81f8addeadde0f8525010000664181fb00010f83b7070000428b04d510000000450fb7eb443b2cc50c0000000f83a80700000fb644c51085c00f8593010000448b560c418bc248c1e00342813cd508000000addeadde0f8540040000448b523c468b1cd50c0000008b5810443bdb0f86d507000049c1e203458b549a104585d20f8c6a070000448b5a34428b1cdd0c0000008b78143bdf0f866f0600008befffc53bdd0f862e0600008b580c448b2cdd08000000418bf348c1e603448b74ae10448b44be10448954be10894cae104181fdaddeadde4489442420448974241c48894424100f859e0000008b34dd0c000000418504f448c1e6034c8bd24d8bc148b8ffffffffffffffff6690e8000000009085c00f8478040000b801000000488b6c24504883c458850500000000c5f877c381f8addeadde0f852b050000664181fb80000f83ea06000048b8addeaddeaddeadde468b2cd51000000044856ca8100f8582030000448b560c418bc248c1e00342813cd508000000addeadde0f84d9feffffe9140300004181fdaddeadde0f85ac040000488b542438837a18010f8479060000894a208b421c428904dd1000000042890cdd14000000b801000000488b6c24504883c458850500000000c5f877c3468b14d50c000000438504d449c1e203448bd941ffc3498bf24c8bd2894c2424418bcb4d8bc148b8ffffffffffffffff90e8000000009085c00f846b050000488b5424388b72203b7424240f8441050000448bd6442b542424448954241c448b44243441ffc0458bd84c8b4c2428448bd6660f1f840000000000488b7424408b4e18413bcb0f8ef0040000448b461c438504c4418b490c8b3ccd0c000000413bfa0f8682050000443b52100f8da8040000413bfa0f8e8804000048c1e103420fbf4c5110428b3cc5080000000fb7c181ffaddeadde0f85970000006681f980000f833d04000048b9addeaddeaddeadde428b3cc510000000857c811044895c24200f841b010000428b0cc50c000000418504cc48c1e103458bc241ffc0488bf1488bc2418bc84d8bc1448954240c48b8ffffffffffffffff90e8000000009085c00f84b3030000488b542438448b54241c440354240c443b52200f8577020000448b5c242041ffc34c8b4c2428e908ffffff44895c2420448954240c81ffaddeadde0f852c0300006681f900010f835e020000428b34c5100000000fb7c93b0cf50c0000000f832c0300000fb674f01085f60f846f000000428b34c50c000000418504f448c1e603448b54240c41ffc24c8bda418bca4c8b44242848b8ffffffffffffffff0f1f4000e8000000009085c00f8497020000488b542438448b54241c440354240c443b52200f8513020000448b5c242041ffc34c8b4c2428e958feffff448954240c817c2434030000800f8cb0030000448b5c2420448b54240c448b442434e95a0000009044895c24088b4e0c418504cc48c1e103488bf1488bda418bca4c8b442428448954240448b8ffffffffffffffff6690e8000000009085c00f852b000000448b5c2408448b54240441ffcb442b54241c448b442434488b542438488b742440453bc37e9de9aa000000b801000000488b6c24504883c458850500000000c5f877c3894c24248b700881feaddeadde0f85600100003b7c24240f8e890200003b5c24240f8e91030000410fb7f33b70100f8476000000b800000000488b6c24504883c458850500000000c5f877c3894c2424428b34d50c000000418504f448c1e6038b4c2424ffc1488b5424384c8b44242848b8ffffffffffffffff0f1f440000e8000000009085c00f85e8fcffffe966020000b800000000488b6c24504883c458850500000000c5f877c38b700c418504f448c1e6038b4c2424ffc1488b5424384c8b44242848b8ffffffffffffffffe8000000009085c00f84b0000000b801000000488b6c24504883c458850500000000c5f877c341c7879c020000ed8efcff4d89a7a8020000e8000000009041baed20fcff4589979c0200004d89a7a8020000e8000000009041baed06fcff448b5c2420448b4c240c8b4c241c448b442434488b7424404589979c0200004d89a7a8020000e8000000009041baedecfbff4589979c0200004d89a7a8020000e8000000009041bacd72fcff4589979c0200004d89a7a8020000e8000000009041c7879c020000ed55fcff4d89a7a8020000e8000000009041bbcd8dfcff488b54243845899f9c0200004d89a7a8020000e8000000009041baedeefbffeb9341bacd0efdff894c24244589979c0200004d89a7a8020000e8000000009041bacd1ffcff448b5c2420448b4c240c8b4c241c448b442434488b742440e938ffffff41bae5fcfbff448b5c2420448b4c240c8b4c241c448b442434488b742440e915ffffff41baed22fcffe9d8feffff41bae5a0fcff894c24244589979c0200004d89a7a8020000e800000000908b4c241c448b442434458bca41baed31fcffe9d5feffff41bae5a9fcffebc98b4c241c448b442434458bca41baed7dfbffe9b6feffff8b4c241c448b442434458bca41baed8efbffe99ffeffff41baed71fcffe9c8feffff8b4c241c448b442434458bca41baed4efcffe97dfeffff41c7879c020000ed50fcff4d89a7a8020000e8000000009041c7879c020000ed0ffdff4d89a7a8020000e8000000009041c7879c020000eddffcff4d89a7a8020000e8000000009041baed85fbffe9b7feffff41c7879c0200007c73fbff4d89a7a8020000e8000000009041baed2bfdffe994feffff41bae521fdffe989feffff41bae57ffbffe97efeffff41baedc9fcffe9e2feffff8b4c241c448b442434458bca41bae57efbffe9cffdffff41baed80fbffe951feffff41bbed8afcffe924feffff41baed4ffdffe93bfeffff41baedf2fcffe930feffff41bacd84fbffe925feffff41bae5d0fcffe989feffff41baed6dfcffe9b6fdffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@a129bd5 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 63 12 stack:56|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 68 14 r10|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 72 16 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 75 18 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B109  <||@
  Comment 81 block B1 null  <||@
  Comment 81 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 81 22 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 85 24 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 85 [rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |-  |-   <||@
  Comment 85 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 89 26 CMP [r9|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0]  <||@
  Comment 89 [rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |-  |-   <||@
  Comment 89 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 89 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 97 28 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B108  <||@
  Comment 103 block B2 null  <||@
  Comment 103 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 32 r11|DWORD[.] = MOV [r9|QWORD[.] + 12] size: DWORD  <||@
  Comment 107 34 rbx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 107 [rdx:0, rsi:0, r9:0, r10:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |-  |-   <||@
  Comment 107 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 115 36 CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 117 38 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B107  <||@
  Comment 123 block B3 null  <||@
  Comment 123 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 42 rdi|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD state [bci:0]  <||@
  Comment 123 [rdx:0, rsi:0, r9:0, r10:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |-  |-   <||@
  Comment 123 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 126 44 CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 128 46 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B106  <||@
  Comment 134 block B4 null  <||@
  Comment 134 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 134 50 CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 136 52 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B105  <||@
  Comment 142 block B5 null  <||@
  Comment 142 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 142 56 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 146 58 r11|DWORD = MOVSX [r11|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 152 60 rax|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 160 62 rbp|QWORD = MOVZX r11|DWORD size: DWORD  <||@
  Comment 164 64 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}  <||@
  Comment 164 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 170 66 BRANCH trueDestinationProbability: 0.6337742856265922 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B17  <||@
  Comment 176 block B6 null  <||@
  Comment 176 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 176 70 CMP r11|DWORD y: 256 size: WORD  <||@
  Comment 182 72 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B16  <||@
  Comment 188 block B7 null  <||@
  Comment 188 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 188 76 rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 196 78 r13|DWORD = MOVZX r11|DWORD size: DWORD  <||@
  Comment 200 80 CMP (x: r13|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0]  <||@
  Comment 200 [rax:0, rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |-  |-   <||@
  Comment 200 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 208 82 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B15  <||@
  Comment 214 block B8 null  <||@
  Comment 214 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 214 86 rax|DWORD = MOVZXB [rbp|QWORD + rax|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 219 88 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 221 90 BRANCH trueDestinationProbability: 0.8376470026322493 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12  <||@
  Comment 227 block B9 null  <||@
  Comment 227 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 227 94 r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 231 96 rax|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 238 98 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:0]  <||@
  Comment 238 [rax:0, rdx:0, rsi:0, r9:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |-  |-   <||@
  Comment 238 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 238 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 250 100 BRANCH trueDestinationProbability: 0.836764508942159 condition: = trueDestination: B9 -> B22 falseDestination: B9 -> B42  <||@
  Comment 256 block B22 null  <||@
  Comment 256 206 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 256 208 r10|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 260 210 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:34]  <||@
  Comment 260 [rax:0, rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5         |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |r8|DWORD  |- 
     stack:   |int[0|0x0]    |              |           |          |             |          |    <||@
  Comment 260 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 268 212 rbx|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 271 214 CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 274 216 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B39  <||@
  Comment 280 block B23 null  <||@
  Comment 280 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 280 220 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 284 222 r10|DWORD = MOV [r10|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 289 224 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 292 226 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 298 block B25 null  <||@
  Comment 298 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 298 238 r11|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD  <||@
  Comment 302 240 rbx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:34]  <||@
  Comment 302 [rax:0, rdx:0, rsi:0, r9:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5         |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |r8|DWORD  |- 
     stack:   |int[0|0x0]    |              |           |          |             |          |    <||@
  Comment 302 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 310 242 rdi|DWORD = MOV [rax|QWORD[.] + 20] size: DWORD  <||@
  Comment 313 244 CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 315 246 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B38  <||@
  Comment 321 block B26 null  <||@
  Comment 321 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 321 250 rbp|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 325 252 CMP (x: rbx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 327 254 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B37  <||@
  Comment 333 block B27 null  <||@
  Comment 333 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 333 258 rbx|DWORD[.] = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 336 260 r13|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:34]  <||@
  Comment 336 [rax:0, rdx:0, rbx:0, rsi:0, r9:0, r11:0, stack:56]at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5         |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |r8|DWORD  |- 
     stack:   |int[0|0x0]    |              |           |          |             |          |    <||@
  Comment 336 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 344 262 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 351 264 r14|DWORD = MOV [rsi|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 356 266 r8|DWORD = MOV [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 361 268 MOV (x: [rsi|QWORD[.] + rdi|DWORD * 4 + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 366 270 MOV (x: [rsi|QWORD[.] + rbp|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 370 272 CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed}  <||@
  Comment 370 {meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed}}  <||@
  Comment 377 278 stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 382 280 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 387 282 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 392 274 BRANCH trueDestinationProbability: 0.5698385272463588 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B31  <||@
  Comment 398 block B28 null  <||@
  Comment 398 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 398 284 rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 405 286 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:63, 170]  <||@
  Comment 405 [rdx:0, rsi:0, r9:0, stack:16, stack:56]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4          |5               |6              
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r9|QWORD[.]  |r10|DWORD  |stack:64|DWORD  |stack:68|DWORD 
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 405 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 409 288 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 413 290 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 416 294 r8|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 419 296 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:7, 70, 170]  <||@
  Comment 419 7  <||@
  Comment 431 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 436 [stack:16, stack:56]at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4  |5               |6              
     locals:  |stack:80|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |stack:64|DWORD  |stack:68|DWORD 
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 437 298 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 439 300 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30  <||@
  Comment 445 block B30 null  <||@
  Comment 445 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 445 312 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 450 314 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 459 12  <||@
  Comment 469 block B17 null  <||@
  Comment 469 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 469 172 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}  <||@
  Comment 469 {meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}}  <||@
  Comment 475 174 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B104  <||@
  Comment 481 block B18 null  <||@
  Comment 481 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 481 178 CMP r11|DWORD y: 128 size: WORD  <||@
  Comment 487 180 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B103  <||@
  Comment 493 block B19 null  <||@
  Comment 493 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 493 184 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]  <||@
  Comment 493 {Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]}  <||@
  Comment 503 186 r13|DWORD = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 511 188 TEST (x: r13|DWORD, y: [rax|QWORD[.] + rbp|QWORD * 4 + 16]) size: DWORD  <||@
  Comment 516 190 BRANCH trueDestinationProbability: 0.8376470026322493 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B54  <||@
  Comment 522 block B20 null  <||@
  Comment 522 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 522 194 r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 526 196 rax|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 533 198 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:0]  <||@
  Comment 533 [rax:0, rdx:0, rsi:0, r9:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |-  |-   <||@
  Comment 533 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 533 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 545 200 BRANCH trueDestinationProbability: 0.836764508942159 condition: = trueDestination: B20 -> B22 falseDestination: B20 -> B42  <||@
  Comment 556 block B31 null  <||@
  Comment 556 316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 556 324 CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 556 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 563 326 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B35  <||@
  Comment 569 block B32 null  <||@
  Comment 569 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 569 330 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 574 332 CMP [rdx|QWORD[.] + 24] y: 1 size: DWORD  <||@
  Comment 578 334 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 584 block B34 null  <||@
  Comment 584 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 584 350 MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD  <||@
  Comment 587 352 rax|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 590 354 MOV (x: [r11|DWORD[.] * 8 + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 598 356 MOV (x: [r11|DWORD[.] * 8 + 20], y: rcx|DWORD) size: DWORD  <||@
  Comment 606 358 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 611 360 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 620 12  <||@
  Comment 630 block B12 null  <||@
  Comment 630 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 630 114 r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 638 116 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 638 [rdx:0, r9:0, r10:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2          |3               |4            |5  |6 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |stack:44|DWORD  |r9|QWORD[.]  |-  |-   <||@
  Comment 638 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 642 118 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 646 120 r11|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 652 122 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 655 124 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 658 128 stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 662 130 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 665 132 r8|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 668 134 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 31]  <||@
  Comment 668 7  <||@
  Comment 679 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 684 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |-   <||@
  Comment 685 136 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 687 138 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B57  <||@
  Comment 693 block B57 null  <||@
  Comment 693 552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 693 548 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 698 554 rsi|DWORD = MOV [rdx|QWORD[.] + 32] size: DWORD  <||@
  Comment 701 556 CMP (x: rsi|DWORD, y: stack:60|DWORD) size: DWORD  <||@
  Comment 705 558 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59  <||@
  Comment 711 block B59 null  <||@
  Comment 711 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 711 570 r10|DWORD = SUB (x: rsi|DWORD, ~y: stack:60|DWORD) size: DWORD  <||@
  Comment 719 572 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 724 574 r8|DWORD = INC stack:44|DWORD size: DWORD  <||@
  Comment 732 576 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 735 578 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 740 580 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 743 584 JUMP ~[] destination: B59 -> B60  <||@
  Comment 743 block B60 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 743 586 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 752 582 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 757 588 rcx|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 760 590 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 763 592 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B101  <||@
  Comment 769 block B61 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 769 594 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 769 596 r8|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 773 598 NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:61]  <||@
  Comment 773 [rdx:0, rsi:0, r8:0, r9:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61, duringCall: false, rethrow: false]
              |0             |1             |2          |3          |4            |5               |6              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |r11|DWORD  |r9|QWORD[.]  |stack:44|DWORD  |stack:68|DWORD   <||@
  Comment 773 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 777 600 rcx|DWORD[.] = MOV [r9|QWORD[.] + 12] size: DWORD  <||@
  Comment 781 602 rdi|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:61]  <||@
  Comment 781 [rcx:0, rdx:0, rsi:0, r8:0, r9:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61, duringCall: false, rethrow: false]
              |0             |1             |2          |3          |4            |5               |6              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |r11|DWORD  |r9|QWORD[.]  |stack:44|DWORD  |stack:68|DWORD   <||@
  Comment 781 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 788 604 CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 791 606 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B100  <||@
  Comment 797 block B62 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 797 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 797 610 CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD  <||@
  Comment 801 612 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B99  <||@
  Comment 807 block B63 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 807 614 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 807 616 CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 810 618 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B98  <||@
  Comment 816 block B64 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 816 620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 816 622 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 820 624 rcx|DWORD = MOVSX [rcx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 826 626 rdi|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 834 628 rax|QWORD = MOVZX rcx|DWORD size: DWORD  <||@
  Comment 837 630 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}  <||@
  Comment 837 {meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}}  <||@
  Comment 843 632 BRANCH trueDestinationProbability: 0.6255879059350504 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B75  <||@
  Comment 849 block B65 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 849 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 849 636 CMP rcx|DWORD y: 128 size: WORD  <||@
  Comment 854 638 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B65 -> B66 falseDestination: B65 -> B74  <||@
  Comment 860 block B66 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 860 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 860 642 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]  <||@
  Comment 860 {Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]}  <||@
  Comment 870 644 rdi|DWORD = MOV [r8|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 878 646 TEST (x: rdi|DWORD, y: [rcx|QWORD[.] + rax|QWORD * 4 + 16]) size: DWORD  <||@
  Comment 882 652 stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 887 648 BRANCH trueDestinationProbability: 0.8376470026322493 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68  <||@
  Comment 893 block B68 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 893 658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 893 662 rcx|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 901 664 NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:61]  <||@
  Comment 901 [rcx:0, rdx:0, r9:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61, duringCall: false, rethrow: false]
              |0                  |1             |2          |3               |4            |5               |6              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |stack:64|DWORD  |r9|QWORD[.]  |stack:44|DWORD  |stack:68|DWORD   <||@
  Comment 901 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 905 666 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 909 668 r8|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 915 670 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 918 672 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 921 676 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 924 678 r8|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 927 680 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 932 682 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 77]  <||@
  Comment 932 7  <||@
  Comment 943 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 948 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:84|DWORD  |stack:64|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:68|DWORD   <||@
  Comment 949 684 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 951 686 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70  <||@
  Comment 957 block B70 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 957 694 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 957 696 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 962 698 r10|DWORD = ADD (x: stack:68|DWORD, y: stack:84|DWORD) size: DWORD  <||@
  Comment 972 700 CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 32]) size: DWORD  <||@
  Comment 976 702 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72  <||@
  Comment 982 block B71 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 982 704 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 982 706 r11|DWORD = INC stack:64|DWORD size: DWORD  <||@
  Comment 990 708 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 995 712 JUMP ~[] destination: B71 -> B60  <||@
  Comment 1000 block B75 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 1000 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1000 742 stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1005 744 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1010 746 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}  <||@
  Comment 1010 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 1016 748 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B97  <||@
  Comment 1022 block B76 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 1022 750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1022 752 CMP rcx|DWORD y: 256 size: WORD  <||@
  Comment 1027 754 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B76 -> B77 falseDestination: B76 -> B96  <||@
  Comment 1033 block B77 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 1033 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1033 758 rsi|DWORD[.] = MOV [r8|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1041 760 rcx|DWORD = MOVZX rcx|DWORD size: DWORD  <||@
  Comment 1044 762 CMP (x: rcx|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:61]  <||@
  Comment 1044 [rdx:0, rsi:0, r8:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61, duringCall: false, rethrow: false]
              |0                  |1             |2               |3               |4                  |5               |6              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:84|DWORD  |stack:64|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:68|DWORD   <||@
  Comment 1044 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1051 764 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B77 -> B78 falseDestination: B77 -> B95  <||@
  Comment 1057 block B78 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 1057 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1057 768 rsi|DWORD = MOVZXB [rax|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1062 770 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1064 772 BRANCH trueDestinationProbability: 0.8376470026322493 condition: = trueDestination: B78 -> B81 falseDestination: B78 -> B89  <||@
  Comment 1070 block B89 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 1070 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1070 874 rsi|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1078 876 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:61]  <||@
  Comment 1078 [rdx:0, rsi:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61, duringCall: false, rethrow: false]
              |0                  |1             |2               |3               |4                  |5               |6              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:84|DWORD  |stack:64|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:68|DWORD   <||@
  Comment 1078 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1082 878 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 1086 880 r10|DWORD = INC stack:84|DWORD size: DWORD  <||@
  Comment 1094 882 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1097 886 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1100 888 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1105 890 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 77]  <||@
  Comment 1105 7  <||@
  Comment 1119 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 1124 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:84|DWORD  |stack:64|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:68|DWORD   <||@
  Comment 1125 892 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1127 894 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B91  <||@
  Comment 1133 block B91 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 1133 902 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1133 904 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1138 906 r10|DWORD = ADD (x: stack:68|DWORD, y: stack:84|DWORD) size: DWORD  <||@
  Comment 1148 908 CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 32]) size: DWORD  <||@
  Comment 1152 910 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B93  <||@
  Comment 1158 block B92 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 1158 912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1158 914 r11|DWORD = INC stack:64|DWORD size: DWORD  <||@
  Comment 1166 916 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1171 920 JUMP ~[] destination: B92 -> B60  <||@
  Comment 1176 block B67 null  <||@
  Comment 1176 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1176 654 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1181 656 JUMP ~[] destination: B67 -> B81  <||@
  Comment 1181 block B81 null  <||@
  Comment 1181 782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1181 784 CMP stack:44|DWORD y: -2147483645 size: DWORD  <||@
  Comment 1189 786 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B81 -> B82 falseDestination: B81 -> B83  <||@
  Comment 1195 block B83 null  <||@
  Comment 1195 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1195 798 r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1200 800 r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1205 802 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1210 806 JUMP ~[] destination: B83 -> B84  <||@
  Comment 1215 block B86 loop 1 depth 1 header:55|LoopBegin  <||@
  Comment 1215 820 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1216 822 stack:88|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1221 824 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 1224 826 NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:127]  <||@
  Comment 1224 [rcx:0, rdx:0, rsi:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 127, duringCall: false, rethrow: false]
              |0             |1             |2          |3               |4                  |5               |6              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |stack:88|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:68|DWORD   <||@
  Comment 1224 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1228 828 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 1232 830 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1235 832 rbx|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1238 836 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1241 838 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1246 840 stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1251 842 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:141]  <||@
  Comment 1251 7  <||@
  Comment 1263 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 1268 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4274) [bci: 141, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:92|DWORD  |stack:88|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:68|DWORD   <||@
  Comment 1269 844 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1271 846 BRANCH trueDestinationProbability: 0.33477590409391633 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B88  <||@
  Comment 1277 block B87 loop 1 depth 1 header:55|LoopBegin  <||@
  Comment 1277 848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1277 850 r11|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 1282 852 r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 1287 854 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 1290 856 r10|DWORD = SUB (x: r10|DWORD, ~y: stack:68|DWORD) size: DWORD  <||@
  Comment 1295 858 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1300 860 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1305 864 JUMP ~[] destination: B87 -> B84  <||@
  Comment 1305 block B84 loop 1 depth 1 header:55|LoopBegin  <||@
  Comment 1305 808 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1305 804 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1310 810 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1313 812 BRANCH trueDestinationProbability: 0.10042065694083953 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B86  <||@
  Comment 1320 block B88 null  <||@
  Comment 1320 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1320 868 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1325 870 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1334 12  <||@
  Comment 1344 block B42 null  <||@
  Comment 1344 422 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1344 418 stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1348 424 rsi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD  <||@
  Comment 1351 426 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed}  <||@
  Comment 1351 {meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed}}  <||@
  Comment 1357 428 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B52  <||@
  Comment 1363 block B43 null  <||@
  Comment 1363 430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1363 432 CMP (x: rdi|DWORD, y: stack:60|DWORD) size: DWORD  <||@
  Comment 1367 434 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B51  <||@
  Comment 1373 block B44 null  <||@
  Comment 1373 436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1373 438 CMP (x: rbx|DWORD, y: stack:60|DWORD) size: DWORD  <||@
  Comment 1377 440 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B50  <||@
  Comment 1383 block B45 null  <||@
  Comment 1383 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1383 444 rsi|DWORD = MOVZX r11|DWORD size: DWORD  <||@
  Comment 1387 446 CMP (x: rsi|DWORD, y: [rax|QWORD[.] + 16]) size: DWORD  <||@
  Comment 1390 448 BRANCH trueDestinationProbability: 0.16235299736775066 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B49  <||@
  Comment 1396 block B49 null  <||@
  Comment 1396 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1396 486 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1401 488 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1410 12  <||@
  Comment 1420 block B54 null  <||@
  Comment 1420 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1420 518 stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1424 520 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1432 522 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:0]  <||@
  Comment 1432 [rsi:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5  |6 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:44|DWORD  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 1432 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1436 524 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 1440 526 rcx|DWORD = INC stack:60|DWORD size: DWORD  <||@
  Comment 1446 528 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1451 530 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1456 532 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 31]  <||@
  Comment 1456 7  <||@
  Comment 1471 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 1476 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |-   <||@
  Comment 1477 534 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1479 536 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B57  <||@
  Comment 1490 block B85 null  <||@
  Comment 1490 814 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1490 816 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1495 818 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1504 12  <||@
  Comment 1514 block B46 null  <||@
  Comment 1514 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1514 452 rsi|DWORD[.] = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 1517 454 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:34]  <||@
  Comment 1517 [rsi:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |- 
     stack:   |int[0|0x0]         |                   |                |                |                   |                |    <||@
  Comment 1517 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1521 456 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 1525 458 rcx|DWORD = INC stack:60|DWORD size: DWORD  <||@
  Comment 1531 460 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1536 462 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1541 464 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 170]  <||@
  Comment 1541 7  <||@
  Comment 1551 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 1556 []at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1557 466 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1559 468 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48  <||@
  Comment 1565 block B48 null  <||@
  Comment 1565 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1565 480 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1570 482 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1579 12  <||@
  Comment 1589 block B29 null  <||@
  Comment 1589 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1589 304 MOV [r15|QWORD + 668] y: -225555 size: DWORD  <||@
  Comment 1600 306 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1607 308 DEOPT info [bci:10, 70, 170]  <||@
  Comment 1607 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1612 [stack:16, stack:56]at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 10, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |  
  at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4  |5               |6              
     locals:  |stack:80|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |stack:64|DWORD  |stack:68|DWORD 
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1613 block B72 null  <||@
  Comment 1613 714 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1613 716 r10|DWORD = MOVE input: int[-253715|0xfffffffffffc20ed]  <||@
  Comment 1619 718 JUMP ~[] destination: B72 -> B73  <||@
  Comment 1619 block B73 null  <||@
  Comment 1619 720 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1619 722 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1626 724 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1633 726 DEOPT info [bci:34, 77]  <||@
  Comment 1633 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1638 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0          |1  |2  |3 
     locals:  |-          |-  |-  |- 
     stack:   |rax|DWORD  |   |   |  
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:84|DWORD  |stack:64|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:68|DWORD   <||@
  Comment 1639 block B96 null  <||@
  Comment 1639 952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1639 954 r10|DWORD = MOVE input: int[-260371|0xfffffffffffc06ed]  <||@
  Comment 1645 956 r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1650 958 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1655 960 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1659 962 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1664 964 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1669 966 JUMP ~[] destination: B96 -> B102  <||@
  Comment 1669 block B102 null  <||@
  Comment 1669 1032 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1669 1034 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1676 1036 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1683 1038 DEOPT info [bci:61]  <||@
  Comment 1683 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1688 [rsi:0, stack:40, stack:56]at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61, duringCall: false, rethrow: false]
              |0             |1                  |2         |3          |4                  |5         |6         
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |r9|DWORD  |r11|DWORD  |stack:56|QWORD[.]  |r8|DWORD  |rcx|DWORD   <||@
  Comment 1689 block B93 null  <||@
  Comment 1689 922 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1689 924 r10|DWORD = MOVE input: int[-267027|0xfffffffffffbeced]  <||@
  Comment 1695 926 JUMP ~[] destination: B93 -> B94  <||@
  Comment 1695 block B94 null  <||@
  Comment 1695 928 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1695 930 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1702 932 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1709 934 DEOPT info [bci:34, 77]  <||@
  Comment 1709 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1714 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0          |1  |2  |3 
     locals:  |-          |-  |-  |- 
     stack:   |rax|DWORD  |   |   |  
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:84|DWORD  |stack:64|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:68|DWORD   <||@
  Comment 1715 block B52 null  <||@
  Comment 1715 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1715 504 r10|DWORD = MOVE input: int[-232755|0xfffffffffffc72cd]  <||@
  Comment 1721 506 JUMP ~[] destination: B52 -> B53  <||@
  Comment 1721 block B53 null  <||@
  Comment 1721 508 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1721 510 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1728 512 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1735 514 DEOPT info [bci:34]  <||@
  Comment 1735 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1740 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |- 
     stack:   |int[0|0x0]         |                   |                |                |                   |                |    <||@
  Comment 1741 block B47 null  <||@
  Comment 1741 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1741 472 MOV [r15|QWORD + 668] y: -240147 size: DWORD  <||@
  Comment 1752 474 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1759 476 DEOPT info [bci:34, 170]  <||@
  Comment 1759 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1764 []at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |  
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1765 block B35 null  <||@
  Comment 1765 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1765 364 r11|DWORD = MOVE input: int[-225843|0xfffffffffffc8dcd]  <||@
  Comment 1771 372 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1776 374 JUMP ~[] destination: B35 -> B36  <||@
  Comment 1776 block B36 null  <||@
  Comment 1776 376 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1776 378 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1783 380 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1790 382 DEOPT info [bci:63, 170]  <||@
  Comment 1790 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1795 [rax:0, rdx:0, r9:0]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4          |5         |6         
     locals:  |rax|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r9|QWORD[.]  |r10|DWORD  |r8|DWORD  |r14|DWORD 
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1796 block B90 null  <||@
  Comment 1796 896 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1796 898 r10|DWORD = MOVE input: int[-266515|0xfffffffffffbeeed]  <||@
  Comment 1802 900 JUMP ~[] destination: B90 -> B94  <||@
  Comment 1804 block B104 null  <||@
  Comment 1804 1048 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1804 1050 r10|DWORD = MOVE input: int[-192819|0xfffffffffffd0ecd]  <||@
  Comment 1810 1054 JUMP ~[] destination: B104 -> B110  <||@
  Comment 1810 block B110 null  <||@
  Comment 1810 1096 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1810 1092 stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1814 1098 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1821 1100 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1828 1102 DEOPT info [bci:0]  <||@
  Comment 1828 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1833 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5  |6 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:44|DWORD  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 1834 block B97 null  <||@
  Comment 1834 968 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1834 970 r10|DWORD = MOVE input: int[-254003|0xfffffffffffc1fcd]  <||@
  Comment 1840 972 r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1845 974 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1850 976 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1854 978 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1859 980 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1864 982 JUMP ~[] destination: B97 -> B102  <||@
  Comment 1869 block B95 null  <||@
  Comment 1869 936 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1869 938 r10|DWORD = MOVE input: int[-262939|0xfffffffffffbfce5]  <||@
  Comment 1875 940 r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1880 942 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1885 944 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1889 946 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1894 948 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1899 950 JUMP ~[] destination: B95 -> B102  <||@
  Comment 1904 block B69 null  <||@
  Comment 1904 688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1904 690 r10|DWORD = MOVE input: int[-253203|0xfffffffffffc22ed]  <||@
  Comment 1910 692 JUMP ~[] destination: B69 -> B73  <||@
  Comment 1915 block B37 null  <||@
  Comment 1915 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1915 386 r10|DWORD = MOVE input: int[-220955|0xfffffffffffca0e5]  <||@
  Comment 1921 390 JUMP ~[] destination: B37 -> B40  <||@
  Comment 1921 block B40 null  <||@
  Comment 1921 408 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1921 232 stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1925 410 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1932 412 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1939 414 DEOPT info [bci:34]  <||@
  Comment 1939 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1944 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |- 
     stack:   |int[0|0x0]         |                   |                |                |                   |                |    <||@
  Comment 1945 block B74 null  <||@
  Comment 1945 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1945 730 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1949 732 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1954 734 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1957 736 r10|DWORD = MOVE input: int[-249363|0xfffffffffffc31ed]  <||@
  Comment 1963 738 JUMP ~[] destination: B74 -> B102  <||@
  Comment 1968 block B38 null  <||@
  Comment 1968 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1968 394 r10|DWORD = MOVE input: int[-218651|0xfffffffffffca9e5]  <||@
  Comment 1974 398 JUMP ~[] destination: B38 -> B40  <||@
  Comment 1976 block B98 null  <||@
  Comment 1976 984 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1976 986 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1980 988 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1985 990 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1988 992 r10|DWORD = MOVE input: int[-295443|0xfffffffffffb7ded]  <||@
  Comment 1994 994 JUMP ~[] destination: B98 -> B102  <||@
  Comment 1999 block B99 null  <||@
  Comment 1999 996 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1999 998 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2003 1000 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2008 1002 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2011 1004 r10|DWORD = MOVE input: int[-291091|0xfffffffffffb8eed]  <||@
  Comment 2017 1006 JUMP ~[] destination: B99 -> B102  <||@
  Comment 2022 block B51 null  <||@
  Comment 2022 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2022 498 r10|DWORD = MOVE input: int[-232979|0xfffffffffffc71ed]  <||@
  Comment 2028 500 JUMP ~[] destination: B51 -> B53  <||@
  Comment 2033 block B101 null  <||@
  Comment 2033 1020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2033 1022 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2037 1024 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2042 1026 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2045 1028 r10|DWORD = MOVE input: int[-241939|0xfffffffffffc4eed]  <||@
  Comment 2051 1030 JUMP ~[] destination: B101 -> B102  <||@
  Comment 2056 block B58 null  <||@
  Comment 2056 560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2056 562 MOV [r15|QWORD + 668] y: -241427 size: DWORD  <||@
  Comment 2067 564 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2074 566 DEOPT info [bci:34]  <||@
  Comment 2074 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2079 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |- 
     stack:   |int[1|0x1]         |                   |                |                |                   |                |    <||@
  Comment 2080 block B13 null  <||@
  Comment 2080 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2080 142 MOV [r15|QWORD + 668] y: -192531 size: DWORD  <||@
  Comment 2091 144 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2098 146 DEOPT info [bci:34, 31]  <||@
  Comment 2098 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2103 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |  
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |-   <||@
  Comment 2104 block B55 null  <||@
  Comment 2104 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2104 540 MOV [r15|QWORD + 668] y: -204819 size: DWORD  <||@
  Comment 2115 542 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2122 544 DEOPT info [bci:34, 31]  <||@
  Comment 2122 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2127 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |  
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |-   <||@
  Comment 2128 block B106 null  <||@
  Comment 2128 1064 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2128 1066 r10|DWORD = MOVE input: int[-293395|0xfffffffffffb85ed]  <||@
  Comment 2134 1070 JUMP ~[] destination: B106 -> B110  <||@
  Comment 2139 block B82 null  <||@
  Comment 2139 788 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2139 790 MOV [r15|QWORD + 668] y: -298116 size: DWORD  <||@
  Comment 2150 792 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2157 794 DEOPT info [bci:80]  <||@
  Comment 2157 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2162 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 80, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:84|DWORD  |stack:64|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:68|DWORD 
     stack:   |int[0|0x0]         |                   |                |                |                   |                |                 <||@
  Comment 2163 block B16 null  <||@
  Comment 2163 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2163 164 r10|DWORD = MOVE input: int[-185363|0xfffffffffffd2bed]  <||@
  Comment 2169 168 JUMP ~[] destination: B16 -> B110  <||@
  Comment 2174 block B15 null  <||@
  Comment 2174 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2174 156 r10|DWORD = MOVE input: int[-187931|0xfffffffffffd21e5]  <||@
  Comment 2180 160 JUMP ~[] destination: B15 -> B110  <||@
  Comment 2185 block B107 null  <||@
  Comment 2185 1072 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2185 1074 r10|DWORD = MOVE input: int[-294939|0xfffffffffffb7fe5]  <||@
  Comment 2191 1078 JUMP ~[] destination: B107 -> B110  <||@
  Comment 2196 block B24 null  <||@
  Comment 2196 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2196 230 r10|DWORD = MOVE input: int[-210451|0xfffffffffffcc9ed]  <||@
  Comment 2202 234 JUMP ~[] destination: B24 -> B40  <||@
  Comment 2207 block B100 null  <||@
  Comment 2207 1008 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2207 1010 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2211 1012 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2216 1014 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2219 1016 r10|DWORD = MOVE input: int[-295195|0xfffffffffffb7ee5]  <||@
  Comment 2225 1018 JUMP ~[] destination: B100 -> B102  <||@
  Comment 2230 block B105 null  <||@
  Comment 2230 1056 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2230 1058 r10|DWORD = MOVE input: int[-294675|0xfffffffffffb80ed]  <||@
  Comment 2236 1062 JUMP ~[] destination: B105 -> B110  <||@
  Comment 2241 block B33 null  <||@
  Comment 2241 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2241 338 r11|DWORD = MOVE input: int[-226579|0xfffffffffffc8aed]  <||@
  Comment 2247 346 JUMP ~[] destination: B33 -> B36  <||@
  Comment 2252 block B109 null  <||@
  Comment 2252 1088 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2252 1090 r10|DWORD = MOVE input: int[-176147|0xfffffffffffd4fed]  <||@
  Comment 2258 1094 JUMP ~[] destination: B109 -> B110  <||@
  Comment 2263 block B103 null  <||@
  Comment 2263 1040 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2263 1042 r10|DWORD = MOVE input: int[-199955|0xfffffffffffcf2ed]  <||@
  Comment 2269 1046 JUMP ~[] destination: B103 -> B110  <||@
  Comment 2274 block B108 null  <||@
  Comment 2274 1080 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2274 1082 r10|DWORD = MOVE input: int[-293683|0xfffffffffffb84cd]  <||@
  Comment 2280 1086 JUMP ~[] destination: B108 -> B110  <||@
  Comment 2285 block B39 null  <||@
  Comment 2285 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2285 402 r10|DWORD = MOVE input: int[-208667|0xfffffffffffcd0e5]  <||@
  Comment 2291 406 JUMP ~[] destination: B39 -> B40  <||@
  Comment 2296 block B50 null  <||@
  Comment 2296 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2296 492 r10|DWORD = MOVE input: int[-234003|0xfffffffffffc6ded]  <||@
  Comment 2302 494 JUMP ~[] destination: B50 -> B53  <||@
  Comment 2307 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2307 4  <||@
  Comment 2313 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 2313 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4609[java.util.regex.Pattern$Curly.match0(Matcher, int, int, CharSequence)]"
  method "HotSpotCompilation-4609[java.util.regex.Pattern$Curly.match0(Matcher, int, int, CharSequence)]"
  date 1526687556161
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1193d4640 448b560849c1e203493bc20f850f0863ff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c24504889742440488954243844894424344c894c2428448b5618453bd00f8e7b080000448b561c438504d441817908da0200f80f857b080000458b590c428b1cdd0c0000003bd90f860e0800008b7a103bf90f8eca0700003bd90f8e2808000049c1e303450fbf5c4b10428b04d508000000410fb7eb81f8643802f80f8525010000664181fb00010f83b7070000428b04d510000000450fb7eb443b2cc50c0000000f83a80700000fb644c51085c00f8593010000448b560c418bc248c1e00342813cd508000000593702f80f8540040000448b523c468b1cd50c0000008b5810443bdb0f86d507000049c1e203458b549a104585d20f8c6a070000448b5a34428b1cdd0c0000008b78143bdf0f866f0600008befffc53bdd0f862e0600008b580c448b2cdd08000000418bf348c1e603448b74ae10448b44be10448954be10894cae104181fdcbfa00f84489442420448974241c48894424100f859e0000008b34dd0c000000418504f448c1e6034c8bd24d8bc148b8ffffffffffffffff6690e8ec0a63ff9085c00f8478040000b801000000488b6c24504883c4588505f577b0f0c5f877c381f89a3702f80f852b050000664181fb80000f83ea06000048b8f01400c006000000468b2cd51000000044856ca8100f8582030000448b560c418bc248c1e00342813cd508000000593702f80f84d9feffffe9140300004181fd46f600f80f85ac040000488b542438837a18010f8479060000894a208b421c428904dd1000000042890cdd14000000b801000000488b6c24504883c45885055477b0f0c5f877c3468b14d50c000000438504d449c1e203448bd941ffc3498bf24c8bd2894c2424418bcb4d8bc148b8ffffffffffffffff90e8f40963ff9085c00f846b050000488b5424388b72203b7424240f8441050000448bd6442b542424448954241c448b44243441ffc0458bd84c8b4c2428448bd6660f1f840000000000488b7424408b4e18413bcb0f8ef0040000448b461c438504c4418b490c8b3ccd0c000000413bfa0f8682050000443b52100f8da8040000413bfa0f8e8804000048c1e103420fbf4c5110428b3cc5080000000fb7c181ff9a3702f80f85970000006681f980000f833d04000048b9f01400c006000000428b3cc510000000857c811044895c24200f841b010000428b0cc50c000000418504cc48c1e103458bc241ffc0488bf1488bc2418bc84d8bc1448954240c48b8ffffffffffffffff90e8ec0863ff9085c00f84b3030000488b542438448b54241c440354240c443b52200f8577020000448b5c242041ffc34c8b4c2428e908ffffff44895c2420448954240c81ff643802f80f852c0300006681f900010f835e020000428b34c5100000000fb7c93b0cf50c0000000f832c0300000fb674f01085f60f846f000000428b34c50c000000418504f448c1e603448b54240c41ffc24c8bda418bca4c8b44242848b8ffffffffffffffff0f1f4000e83c0863ff9085c00f8497020000488b542438448b54241c440354240c443b52200f8513020000448b5c242041ffc34c8b4c2428e958feffff448954240c817c2434030000800f8cb0030000448b5c2420448b54240c448b442434e95a0000009044895c24088b4e0c418504cc48c1e103488bf1488bda418bca4c8b442428448954240448b8ffffffffffffffff6690e8ac0763ff9085c00f852b000000448b5c2408448b54240441ffcb442b54241c448b442434488b542438488b742440453bc37e9de9aa000000b801000000488b6c24504883c45885058a74b0f0c5f877c3894c24248b700881fe4bf800f80f85600100003b7c24240f8e890200003b5c24240f8e91030000410fb7f33b70100f8476000000b800000000488b6c24504883c45885053e74b0f0c5f877c3894c2424428b34d50c000000418504f448c1e6038b4c2424ffc1488b5424384c8b44242848b8ffffffffffffffff0f1f440000e8dc0663ff9085c00f85e8fcffffe966020000b800000000488b6c24504883c4588505e073b0f0c5f877c38b700c418504f448c1e6038b4c2424ffc1488b5424384c8b44242848b8ffffffffffffffffe88c0663ff9085c00f84b0000000b801000000488b6c24504883c45885059573b0f0c5f877c341c7879c020000ed8efcff4d89a7a8020000e8721963ff9041baed20fcff4589979c0200004d89a7a8020000e8581963ff9041baed06fcff448b5c2420448b4c240c8b4c241c448b442434488b7424404589979c0200004d89a7a8020000e8261963ff9041baedecfbff4589979c0200004d89a7a8020000e80c1963ff9041bacd72fcff4589979c0200004d89a7a8020000e8f21863ff9041c7879c020000ed55fcff4d89a7a8020000e8da1863ff9041bbcd8dfcff488b54243845899f9c0200004d89a7a8020000e8bb1863ff9041baedeefbffeb9341bacd0efdff894c24244589979c0200004d89a7a8020000e8951863ff9041bacd1ffcff448b5c2420448b4c240c8b4c241c448b442434488b742440e938ffffff41bae5fcfbff448b5c2420448b4c240c8b4c241c448b442434488b742440e915ffffff41baed22fcffe9d8feffff41bae5a0fcff894c24244589979c0200004d89a7a8020000e8261863ff908b4c241c448b442434458bca41baed31fcffe9d5feffff41bae5a9fcffebc98b4c241c448b442434458bca41baed7dfbffe9b6feffff8b4c241c448b442434458bca41baed8efbffe99ffeffff41baed71fcffe9c8feffff8b4c241c448b442434458bca41baed4efcffe97dfeffff41c7879c020000ed50fcff4d89a7a8020000e89f1763ff9041c7879c020000ed0ffdff4d89a7a8020000e8871763ff9041c7879c020000eddffcff4d89a7a8020000e86f1763ff9041baed85fbffe9b7feffff41c7879c0200007c73fbff4d89a7a8020000e84c1763ff9041baed2bfdffe994feffff41bae521fdffe989feffff41bae57ffbffe97efeffff41baedc9fcffe9e2feffff8b4c241c448b442434458bca41bae57efbffe9cffdffff41baed80fbffe951feffff41bbed8afcffe924feffff41baed4ffdffe93bfeffff41baedf2fcffe930feffff41bacd84fbffe925feffff41bae5d0fcffe989feffff41baed6dfcffe9b6fdffffe858a8a2ff90e8b21563ff90f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@a129bd5 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 63 12 stack:56|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 68 14 r10|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 72 16 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 75 18 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B109  <||@
  Comment 81 block B1 null  <||@
  Comment 81 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 81 22 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 85 24 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 85 [rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |-  |-   <||@
  Comment 85 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 89 26 CMP [r9|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0]  <||@
  Comment 89 [rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |-  |-   <||@
  Comment 89 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 89 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 97 28 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B108  <||@
  Comment 103 block B2 null  <||@
  Comment 103 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 32 r11|DWORD[.] = MOV [r9|QWORD[.] + 12] size: DWORD  <||@
  Comment 107 34 rbx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 107 [rdx:0, rsi:0, r9:0, r10:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |-  |-   <||@
  Comment 107 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 115 36 CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 117 38 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B107  <||@
  Comment 123 block B3 null  <||@
  Comment 123 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 42 rdi|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD state [bci:0]  <||@
  Comment 123 [rdx:0, rsi:0, r9:0, r10:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |-  |-   <||@
  Comment 123 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 126 44 CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 128 46 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B106  <||@
  Comment 134 block B4 null  <||@
  Comment 134 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 134 50 CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 136 52 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B105  <||@
  Comment 142 block B5 null  <||@
  Comment 142 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 142 56 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 146 58 r11|DWORD = MOVSX [r11|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 152 60 rax|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 160 62 rbp|QWORD = MOVZX r11|DWORD size: DWORD  <||@
  Comment 164 64 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}  <||@
  Comment 164 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 170 66 BRANCH trueDestinationProbability: 0.6337742856265922 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B17  <||@
  Comment 176 block B6 null  <||@
  Comment 176 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 176 70 CMP r11|DWORD y: 256 size: WORD  <||@
  Comment 182 72 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B16  <||@
  Comment 188 block B7 null  <||@
  Comment 188 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 188 76 rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 196 78 r13|DWORD = MOVZX r11|DWORD size: DWORD  <||@
  Comment 200 80 CMP (x: r13|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:0]  <||@
  Comment 200 [rax:0, rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |-  |-   <||@
  Comment 200 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 208 82 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B15  <||@
  Comment 214 block B8 null  <||@
  Comment 214 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 214 86 rax|DWORD = MOVZXB [rbp|QWORD + rax|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 219 88 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 221 90 BRANCH trueDestinationProbability: 0.8376470026322493 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12  <||@
  Comment 227 block B9 null  <||@
  Comment 227 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 227 94 r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 231 96 rax|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 238 98 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:0]  <||@
  Comment 238 [rax:0, rdx:0, rsi:0, r9:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |-  |-   <||@
  Comment 238 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 238 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 250 100 BRANCH trueDestinationProbability: 0.836764508942159 condition: = trueDestination: B9 -> B22 falseDestination: B9 -> B42  <||@
  Comment 256 block B22 null  <||@
  Comment 256 206 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 256 208 r10|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 260 210 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:34]  <||@
  Comment 260 [rax:0, rdx:0, rsi:0, r9:0, r10:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5         |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |r8|DWORD  |- 
     stack:   |int[0|0x0]    |              |           |          |             |          |    <||@
  Comment 260 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 268 212 rbx|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 271 214 CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 274 216 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B39  <||@
  Comment 280 block B23 null  <||@
  Comment 280 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 280 220 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 284 222 r10|DWORD = MOV [r10|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 289 224 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 292 226 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 298 block B25 null  <||@
  Comment 298 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 298 238 r11|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD  <||@
  Comment 302 240 rbx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:34]  <||@
  Comment 302 [rax:0, rdx:0, rsi:0, r9:0, r11:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5         |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |r8|DWORD  |- 
     stack:   |int[0|0x0]    |              |           |          |             |          |    <||@
  Comment 302 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 310 242 rdi|DWORD = MOV [rax|QWORD[.] + 20] size: DWORD  <||@
  Comment 313 244 CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 315 246 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B38  <||@
  Comment 321 block B26 null  <||@
  Comment 321 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 321 250 rbp|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 325 252 CMP (x: rbx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 327 254 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B37  <||@
  Comment 333 block B27 null  <||@
  Comment 333 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 333 258 rbx|DWORD[.] = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 336 260 r13|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:34]  <||@
  Comment 336 [rax:0, rdx:0, rbx:0, rsi:0, r9:0, r11:0, stack:56]at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5         |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |r8|DWORD  |- 
     stack:   |int[0|0x0]    |              |           |          |             |          |    <||@
  Comment 336 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 344 262 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 351 264 r14|DWORD = MOV [rsi|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 356 266 r8|DWORD = MOV [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 361 268 MOV (x: [rsi|QWORD[.] + rdi|DWORD * 4 + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 366 270 MOV (x: [rsi|QWORD[.] + rbp|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 370 272 CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed}  <||@
  Comment 370 {meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed}}  <||@
  Comment 377 278 stack:64|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 382 280 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 387 282 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 392 274 BRANCH trueDestinationProbability: 0.5698385272463588 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B31  <||@
  Comment 398 block B28 null  <||@
  Comment 398 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 398 284 rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 405 286 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:63, 170]  <||@
  Comment 405 [rdx:0, rsi:0, r9:0, stack:16, stack:56]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4          |5               |6              
     locals:  |stack:80|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r9|QWORD[.]  |r10|DWORD  |stack:64|DWORD  |stack:68|DWORD 
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 405 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 409 288 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 413 290 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 416 294 r8|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 419 296 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:7, 70, 170]  <||@
  Comment 419 7  <||@
  Comment 431 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 436 [stack:16, stack:56]at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4  |5               |6              
     locals:  |stack:80|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |stack:64|DWORD  |stack:68|DWORD 
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 437 298 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 439 300 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30  <||@
  Comment 445 block B30 null  <||@
  Comment 445 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 445 312 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 450 314 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 459 12  <||@
  Comment 469 block B17 null  <||@
  Comment 469 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 469 172 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}  <||@
  Comment 469 {meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}}  <||@
  Comment 475 174 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B104  <||@
  Comment 481 block B18 null  <||@
  Comment 481 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 481 178 CMP r11|DWORD y: 128 size: WORD  <||@
  Comment 487 180 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B103  <||@
  Comment 493 block B19 null  <||@
  Comment 493 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 493 184 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]  <||@
  Comment 493 {Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]}  <||@
  Comment 503 186 r13|DWORD = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 511 188 TEST (x: r13|DWORD, y: [rax|QWORD[.] + rbp|QWORD * 4 + 16]) size: DWORD  <||@
  Comment 516 190 BRANCH trueDestinationProbability: 0.8376470026322493 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B54  <||@
  Comment 522 block B20 null  <||@
  Comment 522 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 522 194 r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 526 196 rax|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 533 198 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:0]  <||@
  Comment 533 [rax:0, rdx:0, rsi:0, r9:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5  |6 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |-  |-   <||@
  Comment 533 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 533 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 545 200 BRANCH trueDestinationProbability: 0.836764508942159 condition: = trueDestination: B20 -> B22 falseDestination: B20 -> B42  <||@
  Comment 556 block B31 null  <||@
  Comment 556 316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 556 324 CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 556 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 563 326 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B35  <||@
  Comment 569 block B32 null  <||@
  Comment 569 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 569 330 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 574 332 CMP [rdx|QWORD[.] + 24] y: 1 size: DWORD  <||@
  Comment 578 334 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 584 block B34 null  <||@
  Comment 584 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 584 350 MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD  <||@
  Comment 587 352 rax|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 590 354 MOV (x: [r11|DWORD[.] * 8 + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 598 356 MOV (x: [r11|DWORD[.] * 8 + 20], y: rcx|DWORD) size: DWORD  <||@
  Comment 606 358 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 611 360 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 620 12  <||@
  Comment 630 block B12 null  <||@
  Comment 630 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 630 114 r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 638 116 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 638 [rdx:0, r9:0, r10:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2          |3               |4            |5  |6 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |stack:44|DWORD  |r9|QWORD[.]  |-  |-   <||@
  Comment 638 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 642 118 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 646 120 r11|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 652 122 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 655 124 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 658 128 stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 662 130 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 665 132 r8|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 668 134 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 31]  <||@
  Comment 668 7  <||@
  Comment 679 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 684 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |-   <||@
  Comment 685 136 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 687 138 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B57  <||@
  Comment 693 block B57 null  <||@
  Comment 693 552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 693 548 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 698 554 rsi|DWORD = MOV [rdx|QWORD[.] + 32] size: DWORD  <||@
  Comment 701 556 CMP (x: rsi|DWORD, y: stack:60|DWORD) size: DWORD  <||@
  Comment 705 558 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59  <||@
  Comment 711 block B59 null  <||@
  Comment 711 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 711 570 r10|DWORD = SUB (x: rsi|DWORD, ~y: stack:60|DWORD) size: DWORD  <||@
  Comment 719 572 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 724 574 r8|DWORD = INC stack:44|DWORD size: DWORD  <||@
  Comment 732 576 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 735 578 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 740 580 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 743 584 JUMP ~[] destination: B59 -> B60  <||@
  Comment 743 block B60 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 743 586 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 752 582 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 757 588 rcx|DWORD = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 760 590 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 763 592 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B60 -> B61 falseDestination: B60 -> B101  <||@
  Comment 769 block B61 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 769 594 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 769 596 r8|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 773 598 NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:61]  <||@
  Comment 773 [rdx:0, rsi:0, r8:0, r9:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61, duringCall: false, rethrow: false]
              |0             |1             |2          |3          |4            |5               |6              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |r11|DWORD  |r9|QWORD[.]  |stack:44|DWORD  |stack:68|DWORD   <||@
  Comment 773 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 777 600 rcx|DWORD[.] = MOV [r9|QWORD[.] + 12] size: DWORD  <||@
  Comment 781 602 rdi|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:61]  <||@
  Comment 781 [rcx:0, rdx:0, rsi:0, r8:0, r9:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61, duringCall: false, rethrow: false]
              |0             |1             |2          |3          |4            |5               |6              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |r11|DWORD  |r9|QWORD[.]  |stack:44|DWORD  |stack:68|DWORD   <||@
  Comment 781 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 788 604 CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 791 606 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B100  <||@
  Comment 797 block B62 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 797 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 797 610 CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD  <||@
  Comment 801 612 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B99  <||@
  Comment 807 block B63 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 807 614 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 807 616 CMP (x: rdi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 810 618 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B98  <||@
  Comment 816 block B64 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 816 620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 816 622 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 820 624 rcx|DWORD = MOVSX [rcx|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 826 626 rdi|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 834 628 rax|QWORD = MOVZX rcx|DWORD size: DWORD  <||@
  Comment 837 630 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}  <||@
  Comment 837 {meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}}  <||@
  Comment 843 632 BRANCH trueDestinationProbability: 0.6255879059350504 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B75  <||@
  Comment 849 block B65 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 849 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 849 636 CMP rcx|DWORD y: 128 size: WORD  <||@
  Comment 854 638 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B65 -> B66 falseDestination: B65 -> B74  <||@
  Comment 860 block B66 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 860 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 860 642 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]  <||@
  Comment 860 {Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]}  <||@
  Comment 870 644 rdi|DWORD = MOV [r8|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 878 646 TEST (x: rdi|DWORD, y: [rcx|QWORD[.] + rax|QWORD * 4 + 16]) size: DWORD  <||@
  Comment 882 652 stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 887 648 BRANCH trueDestinationProbability: 0.8376470026322493 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68  <||@
  Comment 893 block B68 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 893 658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 893 662 rcx|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 901 664 NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:61]  <||@
  Comment 901 [rcx:0, rdx:0, r9:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61, duringCall: false, rethrow: false]
              |0                  |1             |2          |3               |4            |5               |6              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |stack:64|DWORD  |r9|QWORD[.]  |stack:44|DWORD  |stack:68|DWORD   <||@
  Comment 901 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 905 666 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 909 668 r8|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 915 670 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 918 672 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 921 676 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 924 678 r8|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 927 680 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 932 682 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 77]  <||@
  Comment 932 7  <||@
  Comment 943 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 948 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:84|DWORD  |stack:64|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:68|DWORD   <||@
  Comment 949 684 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 951 686 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70  <||@
  Comment 957 block B70 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 957 694 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 957 696 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 962 698 r10|DWORD = ADD (x: stack:68|DWORD, y: stack:84|DWORD) size: DWORD  <||@
  Comment 972 700 CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 32]) size: DWORD  <||@
  Comment 976 702 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72  <||@
  Comment 982 block B71 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 982 704 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 982 706 r11|DWORD = INC stack:64|DWORD size: DWORD  <||@
  Comment 990 708 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 995 712 JUMP ~[] destination: B71 -> B60  <||@
  Comment 1000 block B75 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 1000 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1000 742 stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1005 744 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1010 746 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}  <||@
  Comment 1010 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 1016 748 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B97  <||@
  Comment 1022 block B76 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 1022 750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1022 752 CMP rcx|DWORD y: 256 size: WORD  <||@
  Comment 1027 754 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B76 -> B77 falseDestination: B76 -> B96  <||@
  Comment 1033 block B77 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 1033 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1033 758 rsi|DWORD[.] = MOV [r8|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1041 760 rcx|DWORD = MOVZX rcx|DWORD size: DWORD  <||@
  Comment 1044 762 CMP (x: rcx|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:61]  <||@
  Comment 1044 [rdx:0, rsi:0, r8:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61, duringCall: false, rethrow: false]
              |0                  |1             |2               |3               |4                  |5               |6              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:84|DWORD  |stack:64|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:68|DWORD   <||@
  Comment 1044 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1051 764 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B77 -> B78 falseDestination: B77 -> B95  <||@
  Comment 1057 block B78 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 1057 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1057 768 rsi|DWORD = MOVZXB [rax|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1062 770 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1064 772 BRANCH trueDestinationProbability: 0.8376470026322493 condition: = trueDestination: B78 -> B81 falseDestination: B78 -> B89  <||@
  Comment 1070 block B89 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 1070 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1070 874 rsi|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1078 876 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:61]  <||@
  Comment 1078 [rdx:0, rsi:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61, duringCall: false, rethrow: false]
              |0                  |1             |2               |3               |4                  |5               |6              
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:84|DWORD  |stack:64|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:68|DWORD   <||@
  Comment 1078 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1082 878 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 1086 880 r10|DWORD = INC stack:84|DWORD size: DWORD  <||@
  Comment 1094 882 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1097 886 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1100 888 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1105 890 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 77]  <||@
  Comment 1105 7  <||@
  Comment 1119 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 1124 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:84|DWORD  |stack:64|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:68|DWORD   <||@
  Comment 1125 892 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1127 894 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B91  <||@
  Comment 1133 block B91 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 1133 902 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1133 904 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1138 906 r10|DWORD = ADD (x: stack:68|DWORD, y: stack:84|DWORD) size: DWORD  <||@
  Comment 1148 908 CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 32]) size: DWORD  <||@
  Comment 1152 910 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B93  <||@
  Comment 1158 block B92 loop 0 depth 1 header:28|LoopBegin  <||@
  Comment 1158 912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1158 914 r11|DWORD = INC stack:64|DWORD size: DWORD  <||@
  Comment 1166 916 r9|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1171 920 JUMP ~[] destination: B92 -> B60  <||@
  Comment 1176 block B67 null  <||@
  Comment 1176 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1176 654 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1181 656 JUMP ~[] destination: B67 -> B81  <||@
  Comment 1181 block B81 null  <||@
  Comment 1181 782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1181 784 CMP stack:44|DWORD y: -2147483645 size: DWORD  <||@
  Comment 1189 786 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B81 -> B82 falseDestination: B81 -> B83  <||@
  Comment 1195 block B83 null  <||@
  Comment 1195 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1195 798 r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1200 800 r10|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1205 802 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1210 806 JUMP ~[] destination: B83 -> B84  <||@
  Comment 1215 block B86 loop 1 depth 1 header:55|LoopBegin  <||@
  Comment 1215 820 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1216 822 stack:88|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1221 824 rcx|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 1224 826 NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:127]  <||@
  Comment 1224 [rcx:0, rdx:0, rsi:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4273) [bci: 127, duringCall: false, rethrow: false]
              |0             |1             |2          |3               |4                  |5               |6              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |stack:88|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:68|DWORD   <||@
  Comment 1224 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1228 828 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 1232 830 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1235 832 rbx|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1238 836 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1241 838 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1246 840 stack:92|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1251 842 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:141]  <||@
  Comment 1251 7  <||@
  Comment 1263 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 1268 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4274) [bci: 141, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:92|DWORD  |stack:88|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:68|DWORD   <||@
  Comment 1269 844 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1271 846 BRANCH trueDestinationProbability: 0.33477590409391633 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B88  <||@
  Comment 1277 block B87 loop 1 depth 1 header:55|LoopBegin  <||@
  Comment 1277 848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1277 850 r11|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 1282 852 r10|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 1287 854 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 1290 856 r10|DWORD = SUB (x: r10|DWORD, ~y: stack:68|DWORD) size: DWORD  <||@
  Comment 1295 858 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1300 860 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1305 864 JUMP ~[] destination: B87 -> B84  <||@
  Comment 1305 block B84 loop 1 depth 1 header:55|LoopBegin  <||@
  Comment 1305 808 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1305 804 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1310 810 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1313 812 BRANCH trueDestinationProbability: 0.10042065694083953 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B86  <||@
  Comment 1320 block B88 null  <||@
  Comment 1320 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1320 868 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1325 870 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1334 12  <||@
  Comment 1344 block B42 null  <||@
  Comment 1344 422 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1344 418 stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1348 424 rsi|DWORD = MOV [rax|QWORD[.] + 8] size: DWORD  <||@
  Comment 1351 426 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed}  <||@
  Comment 1351 {meta{HotSpotType<Ljava/util/regex/Pattern$Single;, resolved>;compressed}}  <||@
  Comment 1357 428 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B52  <||@
  Comment 1363 block B43 null  <||@
  Comment 1363 430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1363 432 CMP (x: rdi|DWORD, y: stack:60|DWORD) size: DWORD  <||@
  Comment 1367 434 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B43 -> B44 falseDestination: B43 -> B51  <||@
  Comment 1373 block B44 null  <||@
  Comment 1373 436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1373 438 CMP (x: rbx|DWORD, y: stack:60|DWORD) size: DWORD  <||@
  Comment 1377 440 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B50  <||@
  Comment 1383 block B45 null  <||@
  Comment 1383 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1383 444 rsi|DWORD = MOVZX r11|DWORD size: DWORD  <||@
  Comment 1387 446 CMP (x: rsi|DWORD, y: [rax|QWORD[.] + 16]) size: DWORD  <||@
  Comment 1390 448 BRANCH trueDestinationProbability: 0.16235299736775066 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B49  <||@
  Comment 1396 block B49 null  <||@
  Comment 1396 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1396 486 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1401 488 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1410 12  <||@
  Comment 1420 block B54 null  <||@
  Comment 1420 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1420 518 stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1424 520 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1432 522 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:0]  <||@
  Comment 1432 [rsi:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5  |6 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:44|DWORD  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 1432 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1436 524 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 1440 526 rcx|DWORD = INC stack:60|DWORD size: DWORD  <||@
  Comment 1446 528 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1451 530 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1456 532 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 31]  <||@
  Comment 1456 7  <||@
  Comment 1471 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 1476 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |-   <||@
  Comment 1477 534 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1479 536 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B57  <||@
  Comment 1490 block B85 null  <||@
  Comment 1490 814 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1490 816 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1495 818 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1504 12  <||@
  Comment 1514 block B46 null  <||@
  Comment 1514 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1514 452 rsi|DWORD[.] = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 1517 454 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:34]  <||@
  Comment 1517 [rsi:0, stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |- 
     stack:   |int[0|0x0]         |                   |                |                |                   |                |    <||@
  Comment 1517 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1521 456 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@49d3d9c8 encoding: base: 0 shift: 3  <||@
  Comment 1525 458 rcx|DWORD = INC stack:60|DWORD size: DWORD  <||@
  Comment 1531 460 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1536 462 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1541 464 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:31, 170]  <||@
  Comment 1541 7  <||@
  Comment 1551 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 1556 []at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1557 466 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1559 468 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48  <||@
  Comment 1565 block B48 null  <||@
  Comment 1565 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1565 480 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1570 482 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1579 12  <||@
  Comment 1589 block B29 null  <||@
  Comment 1589 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1589 304 MOV [r15|QWORD + 668] y: -225555 size: DWORD  <||@
  Comment 1600 306 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1607 308 DEOPT info [bci:10, 70, 170]  <||@
  Comment 1607 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1612 [stack:16, stack:56]at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 10, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |  
  at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4  |5               |6              
     locals:  |stack:80|QWORD[.]  |stack:40|QWORD[.]  |-  |-  |-  |stack:64|DWORD  |stack:68|DWORD 
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1613 block B72 null  <||@
  Comment 1613 714 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1613 716 r10|DWORD = MOVE input: int[-253715|0xfffffffffffc20ed]  <||@
  Comment 1619 718 JUMP ~[] destination: B72 -> B73  <||@
  Comment 1619 block B73 null  <||@
  Comment 1619 720 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1619 722 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1626 724 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1633 726 DEOPT info [bci:34, 77]  <||@
  Comment 1633 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1638 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0          |1  |2  |3 
     locals:  |-          |-  |-  |- 
     stack:   |rax|DWORD  |   |   |  
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:84|DWORD  |stack:64|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:68|DWORD   <||@
  Comment 1639 block B96 null  <||@
  Comment 1639 952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1639 954 r10|DWORD = MOVE input: int[-260371|0xfffffffffffc06ed]  <||@
  Comment 1645 956 r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1650 958 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1655 960 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1659 962 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1664 964 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1669 966 JUMP ~[] destination: B96 -> B102  <||@
  Comment 1669 block B102 null  <||@
  Comment 1669 1032 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1669 1034 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1676 1036 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1683 1038 DEOPT info [bci:61]  <||@
  Comment 1683 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1688 [rsi:0, stack:40, stack:56]at java.util.regex.Pattern$Curly.match0(Pattern.java:4261) [bci: 61, duringCall: false, rethrow: false]
              |0             |1                  |2         |3          |4                  |5         |6         
     locals:  |rsi|QWORD[.]  |stack:40|QWORD[.]  |r9|DWORD  |r11|DWORD  |stack:56|QWORD[.]  |r8|DWORD  |rcx|DWORD   <||@
  Comment 1689 block B93 null  <||@
  Comment 1689 922 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1689 924 r10|DWORD = MOVE input: int[-267027|0xfffffffffffbeced]  <||@
  Comment 1695 926 JUMP ~[] destination: B93 -> B94  <||@
  Comment 1695 block B94 null  <||@
  Comment 1695 928 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1695 930 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1702 932 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1709 934 DEOPT info [bci:34, 77]  <||@
  Comment 1709 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1714 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0          |1  |2  |3 
     locals:  |-          |-  |-  |- 
     stack:   |rax|DWORD  |   |   |  
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 77, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:84|DWORD  |stack:64|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:68|DWORD   <||@
  Comment 1715 block B52 null  <||@
  Comment 1715 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1715 504 r10|DWORD = MOVE input: int[-232755|0xfffffffffffc72cd]  <||@
  Comment 1721 506 JUMP ~[] destination: B52 -> B53  <||@
  Comment 1721 block B53 null  <||@
  Comment 1721 508 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1721 510 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1728 512 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1735 514 DEOPT info [bci:34]  <||@
  Comment 1735 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1740 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |- 
     stack:   |int[0|0x0]         |                   |                |                |                   |                |    <||@
  Comment 1741 block B47 null  <||@
  Comment 1741 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1741 472 MOV [r15|QWORD + 668] y: -240147 size: DWORD  <||@
  Comment 1752 474 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1759 476 DEOPT info [bci:34, 170]  <||@
  Comment 1759 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1764 []at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |  
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1765 block B35 null  <||@
  Comment 1765 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1765 364 r11|DWORD = MOVE input: int[-225843|0xfffffffffffc8dcd]  <||@
  Comment 1771 372 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1776 374 JUMP ~[] destination: B35 -> B36  <||@
  Comment 1776 block B36 null  <||@
  Comment 1776 376 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1776 378 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 1783 380 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1790 382 DEOPT info [bci:63, 170]  <||@
  Comment 1790 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1795 [rax:0, rdx:0, r9:0]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4          |5         |6         
     locals:  |rax|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r9|QWORD[.]  |r10|DWORD  |r8|DWORD  |r14|DWORD 
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4281) [bci: 170, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1796 block B90 null  <||@
  Comment 1796 896 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1796 898 r10|DWORD = MOVE input: int[-266515|0xfffffffffffbeeed]  <||@
  Comment 1802 900 JUMP ~[] destination: B90 -> B94  <||@
  Comment 1804 block B104 null  <||@
  Comment 1804 1048 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1804 1050 r10|DWORD = MOVE input: int[-192819|0xfffffffffffd0ecd]  <||@
  Comment 1810 1054 JUMP ~[] destination: B104 -> B110  <||@
  Comment 1810 block B110 null  <||@
  Comment 1810 1096 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1810 1092 stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1814 1098 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1821 1100 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1828 1102 DEOPT info [bci:0]  <||@
  Comment 1828 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1833 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4246) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5  |6 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:44|DWORD  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 1834 block B97 null  <||@
  Comment 1834 968 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1834 970 r10|DWORD = MOVE input: int[-254003|0xfffffffffffc1fcd]  <||@
  Comment 1840 972 r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1845 974 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1850 976 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1854 978 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1859 980 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1864 982 JUMP ~[] destination: B97 -> B102  <||@
  Comment 1869 block B95 null  <||@
  Comment 1869 936 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1869 938 r10|DWORD = MOVE input: int[-262939|0xfffffffffffbfce5]  <||@
  Comment 1875 940 r11|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1880 942 r9|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1885 944 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1889 946 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1894 948 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1899 950 JUMP ~[] destination: B95 -> B102  <||@
  Comment 1904 block B69 null  <||@
  Comment 1904 688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1904 690 r10|DWORD = MOVE input: int[-253203|0xfffffffffffc22ed]  <||@
  Comment 1910 692 JUMP ~[] destination: B69 -> B73  <||@
  Comment 1915 block B37 null  <||@
  Comment 1915 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1915 386 r10|DWORD = MOVE input: int[-220955|0xfffffffffffca0e5]  <||@
  Comment 1921 390 JUMP ~[] destination: B37 -> B40  <||@
  Comment 1921 block B40 null  <||@
  Comment 1921 408 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1921 232 stack:60|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1925 410 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1932 412 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1939 414 DEOPT info [bci:34]  <||@
  Comment 1939 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1944 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |- 
     stack:   |int[0|0x0]         |                   |                |                |                   |                |    <||@
  Comment 1945 block B74 null  <||@
  Comment 1945 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1945 730 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1949 732 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1954 734 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1957 736 r10|DWORD = MOVE input: int[-249363|0xfffffffffffc31ed]  <||@
  Comment 1963 738 JUMP ~[] destination: B74 -> B102  <||@
  Comment 1968 block B38 null  <||@
  Comment 1968 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1968 394 r10|DWORD = MOVE input: int[-218651|0xfffffffffffca9e5]  <||@
  Comment 1974 398 JUMP ~[] destination: B38 -> B40  <||@
  Comment 1976 block B98 null  <||@
  Comment 1976 984 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1976 986 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1980 988 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1985 990 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1988 992 r10|DWORD = MOVE input: int[-295443|0xfffffffffffb7ded]  <||@
  Comment 1994 994 JUMP ~[] destination: B98 -> B102  <||@
  Comment 1999 block B99 null  <||@
  Comment 1999 996 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1999 998 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2003 1000 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2008 1002 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2011 1004 r10|DWORD = MOVE input: int[-291091|0xfffffffffffb8eed]  <||@
  Comment 2017 1006 JUMP ~[] destination: B99 -> B102  <||@
  Comment 2022 block B51 null  <||@
  Comment 2022 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2022 498 r10|DWORD = MOVE input: int[-232979|0xfffffffffffc71ed]  <||@
  Comment 2028 500 JUMP ~[] destination: B51 -> B53  <||@
  Comment 2033 block B101 null  <||@
  Comment 2033 1020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2033 1022 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2037 1024 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2042 1026 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2045 1028 r10|DWORD = MOVE input: int[-241939|0xfffffffffffc4eed]  <||@
  Comment 2051 1030 JUMP ~[] destination: B101 -> B102  <||@
  Comment 2056 block B58 null  <||@
  Comment 2056 560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2056 562 MOV [r15|QWORD + 668] y: -241427 size: DWORD  <||@
  Comment 2067 564 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2074 566 DEOPT info [bci:34]  <||@
  Comment 2074 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2079 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 34, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |- 
     stack:   |int[1|0x1]         |                   |                |                |                   |                |    <||@
  Comment 2080 block B13 null  <||@
  Comment 2080 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2080 142 MOV [r15|QWORD + 668] y: -192531 size: DWORD  <||@
  Comment 2091 144 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2098 146 DEOPT info [bci:34, 31]  <||@
  Comment 2098 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2103 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |  
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |-   <||@
  Comment 2104 block B55 null  <||@
  Comment 2104 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2104 540 MOV [r15|QWORD + 668] y: -204819 size: DWORD  <||@
  Comment 2115 542 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2122 544 DEOPT info [bci:34, 31]  <||@
  Comment 2122 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2127 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |  
  at java.util.regex.Pattern$Curly.match0(Pattern.java:4252) [bci: 31, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:60|DWORD  |stack:44|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |-   <||@
  Comment 2128 block B106 null  <||@
  Comment 2128 1064 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2128 1066 r10|DWORD = MOVE input: int[-293395|0xfffffffffffb85ed]  <||@
  Comment 2134 1070 JUMP ~[] destination: B106 -> B110  <||@
  Comment 2139 block B82 null  <||@
  Comment 2139 788 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2139 790 MOV [r15|QWORD + 668] y: -298116 size: DWORD  <||@
  Comment 2150 792 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2157 794 DEOPT info [bci:80]  <||@
  Comment 2157 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2162 [stack:40, stack:56, stack:64]at java.util.regex.Pattern$Curly.match0(Pattern.java:4262) [bci: 80, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3               |4                  |5               |6              
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:84|DWORD  |stack:64|DWORD  |stack:56|QWORD[.]  |stack:44|DWORD  |stack:68|DWORD 
     stack:   |int[0|0x0]         |                   |                |                |                   |                |                 <||@
  Comment 2163 block B16 null  <||@
  Comment 2163 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2163 164 r10|DWORD = MOVE input: int[-185363|0xfffffffffffd2bed]  <||@
  Comment 2169 168 JUMP ~[] destination: B16 -> B110  <||@
  Comment 2174 block B15 null  <||@
  Comment 2174 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2174 156 r10|DWORD = MOVE input: int[-187931|0xfffffffffffd21e5]  <||@
  Comment 2180 160 JUMP ~[] destination: B15 -> B110  <||@
  Comment 2185 block B107 null  <||@
  Comment 2185 1072 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2185 1074 r10|DWORD = MOVE input: int[-294939|0xfffffffffffb7fe5]  <||@
  Comment 2191 1078 JUMP ~[] destination: B107 -> B110  <||@
  Comment 2196 block B24 null  <||@
  Comment 2196 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2196 230 r10|DWORD = MOVE input: int[-210451|0xfffffffffffcc9ed]  <||@
  Comment 2202 234 JUMP ~[] destination: B24 -> B40  <||@
  Comment 2207 block B100 null  <||@
  Comment 2207 1008 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2207 1010 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2211 1012 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2216 1014 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2219 1016 r10|DWORD = MOVE input: int[-295195|0xfffffffffffb7ee5]  <||@
  Comment 2225 1018 JUMP ~[] destination: B100 -> B102  <||@
  Comment 2230 block B105 null  <||@
  Comment 2230 1056 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2230 1058 r10|DWORD = MOVE input: int[-294675|0xfffffffffffb80ed]  <||@
  Comment 2236 1062 JUMP ~[] destination: B105 -> B110  <||@
  Comment 2241 block B33 null  <||@
  Comment 2241 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2241 338 r11|DWORD = MOVE input: int[-226579|0xfffffffffffc8aed]  <||@
  Comment 2247 346 JUMP ~[] destination: B33 -> B36  <||@
  Comment 2252 block B109 null  <||@
  Comment 2252 1088 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2252 1090 r10|DWORD = MOVE input: int[-176147|0xfffffffffffd4fed]  <||@
  Comment 2258 1094 JUMP ~[] destination: B109 -> B110  <||@
  Comment 2263 block B103 null  <||@
  Comment 2263 1040 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2263 1042 r10|DWORD = MOVE input: int[-199955|0xfffffffffffcf2ed]  <||@
  Comment 2269 1046 JUMP ~[] destination: B103 -> B110  <||@
  Comment 2274 block B108 null  <||@
  Comment 2274 1080 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2274 1082 r10|DWORD = MOVE input: int[-293683|0xfffffffffffb84cd]  <||@
  Comment 2280 1086 JUMP ~[] destination: B108 -> B110  <||@
  Comment 2285 block B39 null  <||@
  Comment 2285 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2285 402 r10|DWORD = MOVE input: int[-208667|0xfffffffffffcd0e5]  <||@
  Comment 2291 406 JUMP ~[] destination: B39 -> B40  <||@
  Comment 2296 block B50 null  <||@
  Comment 2296 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2296 492 r10|DWORD = MOVE input: int[-234003|0xfffffffffffc6ded]  <||@
  Comment 2302 494 JUMP ~[] destination: B50 -> B53  <||@
  Comment 2307 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2307 4  <||@
  Comment 2313 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 2313 5  <||@
  HexCodeFile>>> <|@
end_nmethod
