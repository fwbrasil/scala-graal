begin_compilation
  name " HotSpotCompilation-5315[java.util.regex.Pattern$CharProperty.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-5315[java.util.regex.Pattern$CharProperty.match(Matcher, int, CharSequence)]"
  date 1526687597270
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B119" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i2136 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i2136  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/regex/Pattern$CharProperty;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v2221 ?175 ?661 v2253 ?197 v2220 v2209 ?304 ?792 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/regex/Matcher;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v2234 ?166 ?175 v1247 v2233 ?622 ?197 ?102 ?585 v2205 v2222 v2226 v2232 v2281 v2282 v2283 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v7 v115 v2208 ?175 i22 v111 ?197 v931 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?585 ?102 ?175 v1247 v2252 v2206 ?197 ?622 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3776
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 - 
=== Succesors ===
=== Usages ===
v1939 i2136 v2137 i2139 v2143 v2147 v2151 v2155 v2159 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 -  <|@  <|@
f <@~|@floating>@ <|@
tid v2205 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2136 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 2]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2205 
=== Succesors ===
next: v1355 
=== Usages ===
v7 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2205 #next: v1355  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i2136 
=== Succesors ===
=== Usages ===
v1355 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i2136  <|@  <|@
f <@~|@floating>@ <|@
tid a1936 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1939 v2037 v1999 v2015 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v1352 
falseSuccessor: v1354 
=== Usages ===
=== Predecessor ===
i2136 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v1352 #falseSuccessor: v1354  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B118" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2137 
=== Usages ===
=== Predecessor ===
v1355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2137  <|@  <|@
f <@~|@floating>@ <|@
tid v2252 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v2137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2137 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2252 
=== Succesors ===
next: v1363 
=== Usages ===
v2109 
=== Predecessor ===
v1352 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2252 #next: v1363  <|@  <|@
f <@~|@floating>@ <|@
tid v2108 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2109 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2109 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2137 
y: v2108 
=== Succesors ===
=== Usages ===
v1363 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2137 y: v2108  <|@  <|@
f <@*|@fixed>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2109 
=== Succesors ===
trueSuccessor: v1360 
falseSuccessor: v1362 
=== Usages ===
=== Predecessor ===
v2137 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2109 #trueSuccessor: v1360 #falseSuccessor: v1362  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1367 
=== Usages ===
=== Predecessor ===
v1363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1367  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 v107 v111 v612 v85 v187 ?532 v294 ?792 ?322 v378 v431 ?394 ?459 v516 ?175 ?164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i15 
=== Succesors ===
=== Usages ===
v1367 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v111 
=== Succesors ===
trueSuccessor: v1366 
falseSuccessor: v1364 
=== Usages ===
=== Predecessor ===
v1360 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v111 #trueSuccessor: v1366 #falseSuccessor: v1364  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1944 
=== Usages ===
=== Predecessor ===
v1367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1944  <|@  <|@
f <@~|@floating>@ <|@
tid i1945 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -235283
stableDimension: 0
stamp: i32 [-235283] â‡Š00000000fffc68ed â‡ˆ00000000fffc68ed
stampKind: i32
value: int[-235283|0xfffffffffffc68ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1944 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1366 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B117" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2138 
=== Usages ===
=== Predecessor ===
v1367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2138  <|@  <|@
f <@~|@floating>@ <|@
tid v2206 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a2138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2138 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2206 
=== Succesors ===
next: i2139 
=== Usages ===
a923 v2207 
=== Predecessor ===
v1364 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2206 #next: i2139  <|@  <|@
f <@~|@floating>@ <|@
tid v2207 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2138 
=== Succesors ===
=== Usages ===
i2139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2139 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2207 
=== Succesors ===
next: v1375 
=== Usages ===
v115 v931 
=== Predecessor ===
a2138 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2207 #next: v1375  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i2139 
=== Succesors ===
=== Usages ===
v1375 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i2139  <|@  <|@
f <@*|@fixed>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v1372 
falseSuccessor: v1374 
=== Usages ===
=== Predecessor ===
i2139 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v1372 #falseSuccessor: v1374  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B116" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1379 
=== Usages ===
=== Predecessor ===
v1375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1379  <|@  <|@
f <@~|@floating>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i2139 
=== Succesors ===
=== Usages ===
v1379 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i2139  <|@  <|@
f <@*|@fixed>@ <|@
tid v1379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v931 
=== Succesors ===
trueSuccessor: v1376 
falseSuccessor: v1378 
=== Usages ===
=== Predecessor ===
v1372 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v931 #trueSuccessor: v1376 #falseSuccessor: v1378  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B115" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2140 
=== Usages ===
i2140 
=== Predecessor ===
v1379 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2140  <|@  <|@
f <@~|@floating>@ <|@
tid a923 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2138 
=== Succesors ===
=== Usages ===
v2208 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2138  <|@  <|@
f <@~|@floating>@ <|@
tid v2208 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a923 
index: i3 
=== Succesors ===
=== Usages ===
i2140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a923 index: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2140 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1376 
address: v2208 
=== Succesors ===
next: v1383 
=== Usages ===
i939 j1268 v1345 v1347 
=== Predecessor ===
v1376 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1376 address: v2208 #next: v1383  <|@  <|@
f <@~|@floating>@ <|@
tid i1344 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
rawvalue: -10240
stableDimension: 0
stamp: i16 [-10240] â‡Š000000000000d800 â‡ˆ000000000000d800
stampKind: i16
value: short[-10240|0xffffffffffffd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2140 
y: i1344 
=== Succesors ===
=== Usages ===
v1383 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2140 y: i1344  <|@  <|@
f <@*|@fixed>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1345 
=== Succesors ===
trueSuccessor: v1380 
falseSuccessor: v1382 
=== Usages ===
=== Predecessor ===
i2140 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1345 #trueSuccessor: v1380 #falseSuccessor: v1382  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B114" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2141 
=== Usages ===
=== Predecessor ===
v1383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2141  <|@  <|@
f <@~|@floating>@ <|@
tid v2253 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v2141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2141 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2253 
=== Succesors ===
next: v1387 
=== Usages ===
v2111 
=== Predecessor ===
v1380 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2253 #next: v1387  <|@  <|@
f <@~|@floating>@ <|@
tid v2110 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2111 v2114 v2116 v2118 v2120 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2111 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2141 
y: v2110 
=== Succesors ===
=== Usages ===
v1387 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2141 y: v2110  <|@  <|@
f <@*|@fixed>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2111 
=== Succesors ===
trueSuccessor: v1384 
falseSuccessor: v1386 
=== Usages ===
=== Predecessor ===
v2141 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2111 #trueSuccessor: v1384 #falseSuccessor: v1386  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2142 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2142  <|@  <|@
f <@~|@floating>@ <|@
tid v2209 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2142 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2209 
=== Succesors ===
next: v2143 
=== Usages ===
?322 v2254 v2210 v2211 ?388 v2280 
=== Predecessor ===
v1384 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2209 #next: v2143  <|@  <|@
f <@~|@floating>@ <|@
tid v2254 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2142 
=== Succesors ===
=== Usages ===
v2143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2143 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2254 
=== Succesors ===
next: v270 
=== Usages ===
v2114 v2113 
=== Predecessor ===
a2142 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2254 #next: v270  <|@  <|@
f <@~|@floating>@ <|@
tid v2112 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2113 v2115 v2117 v2119 v2121 v2124 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2113 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2143 
y: v2112 
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2143 y: v2112  <|@  <|@
f <@~|@floating>@ <|@
tid v2210 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2142 
=== Succesors ===
=== Usages ===
i2144 a2146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2142  <|@  <|@
f <@~|@floating>@ <|@
tid i939 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
resultBits: 32
stamp: i32 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i2140 
=== Succesors ===
=== Usages ===
?792 ?175 ?197 v345 ?304 ?661 v242 v246 v1146 ?1924 ?322 v349 v313 ?388 v482 v1020 v309 v486 ?441 v1013 ?394 v446 ?459 v450 ?526 v555 v1006 v992 v559 v999 ?532 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2140  <|@  <|@
tid ?197 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3778
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i939 
=== Succesors ===
=== Usages ===
?304 ?792 ?661 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i939  <|@  <|@
tid ?110 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3779
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - 
=== Succesors ===
=== Usages ===
?585 ?102 ?166 ?622 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2127 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2128 v2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 43]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v29 i22 i259 i100 v634 v147 v903 v893 i620 i259 i259 i664 i664 i259 i259 i259 i664 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 35]
stamp: i32
=== Inputs ===
x: i3 
y: i28 
=== Succesors ===
=== Usages ===
v1247 v1239 v1097 ?102 v1226 v1108 ?622 v1219 v1129 ?585 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid v2226 <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a2173 a2194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2222 <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a2169 a2190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2122 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2123 v2129 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2221 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2167 a2188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.5000557636836476
=== Inputs ===
condition: v2113 
=== Succesors ===
trueSuccessor: v263 
falseSuccessor: v269 
=== Usages ===
=== Predecessor ===
v2143 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2113 #trueSuccessor: v263 #falseSuccessor: v269  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602679321447256704
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2144 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2144 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2210 
=== Succesors ===
next: v312 
=== Usages ===
v309 
=== Predecessor ===
v263 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2210 #next: v312  <|@  <|@
f <@~|@floating>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i939 
y: i2144 
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i939 y: i2144  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.01987898583705925
=== Inputs ===
condition: v309 
=== Succesors ===
trueSuccessor: v310 
falseSuccessor: v311 
=== Usages ===
=== Predecessor ===
i2144 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v309 #trueSuccessor: v310 #falseSuccessor: v311  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576883988367814258
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v793 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v793  <|@  <|@
f <@*|@fixed>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
v310 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4602500749766030220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2145 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2145  <|@  <|@
f <@~|@floating>@ <|@
tid v2211 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2142 
=== Succesors ===
=== Usages ===
i2145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2145 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2211 
=== Succesors ===
next: v1395 
=== Usages ===
v313 
=== Predecessor ===
v311 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2211 #next: v1395  <|@  <|@
f <@~|@floating>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2145 
y: i939 
=== Succesors ===
=== Usages ===
v1395 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2145 y: i939  <|@  <|@
f <@*|@fixed>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v313 
=== Succesors ===
trueSuccessor: v1394 
falseSuccessor: v1392 
=== Usages ===
=== Predecessor ===
i2145 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v313 #trueSuccessor: v1394 #falseSuccessor: v1392  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1962 
=== Usages ===
=== Predecessor ===
v1395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1962  <|@  <|@
f <@~|@floating>@ <|@
tid i1963 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -243475
stableDimension: 0
stamp: i32 [-243475] â‡Š00000000fffc48ed â‡ˆ00000000fffc48ed
stampKind: i32
value: int[-243475|0xfffffffffffc48ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1962 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1394 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B89" 
    xhandlers
    flags 
    probability 4602500749766030220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v720 
=== Usages ===
=== Predecessor ===
v1395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v720  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
v1392 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" "B113" 
    xhandlers
    flags 
    probability 4602677814623427328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1399 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1399  <|@  <|@
f <@~|@floating>@ <|@
tid v2114 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2143 
y: v2110 
=== Succesors ===
=== Usages ===
v1399 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2143 y: v2110  <|@  <|@
f <@*|@fixed>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2114 
=== Succesors ===
trueSuccessor: v1396 
falseSuccessor: v1398 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2114 #trueSuccessor: v1396 #falseSuccessor: v1398  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4602677814623427328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2146 
=== Usages ===
=== Predecessor ===
v1399 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2146 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2210 
=== Succesors ===
next: v2147 
=== Usages ===
?394 v2255 v2212 v2213 ?441 v2279 
=== Predecessor ===
v1396 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2210 #next: v2147  <|@  <|@
f <@~|@floating>@ <|@
tid v2255 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2146 
=== Succesors ===
=== Usages ===
v2147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2147 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2255 
=== Succesors ===
next: v335 
=== Usages ===
v2116 v2115 
=== Predecessor ===
a2146 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2255 #next: v335  <|@  <|@
f <@~|@floating>@ <|@
tid v2115 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2147 
y: v2112 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2147 y: v2112  <|@  <|@
f <@~|@floating>@ <|@
tid v2212 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2146 
=== Succesors ===
=== Usages ===
i2148 a2150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2146  <|@  <|@
tid ?304 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?197 
values: a1 i939 
=== Succesors ===
=== Usages ===
?388 ?1928 ?322 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?197 values: a1 i939  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.5000557636836476
=== Inputs ===
condition: v2115 
=== Succesors ===
trueSuccessor: v328 
falseSuccessor: v334 
=== Usages ===
=== Predecessor ===
v2147 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2115 #trueSuccessor: v328 #falseSuccessor: v334  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598175219433241686
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2148 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2148 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2212 
=== Succesors ===
next: v348 
=== Usages ===
v345 
=== Predecessor ===
v328 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2212 #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i939 
y: i2148 
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i939 y: i2148  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.01987898583705925
=== Inputs ===
condition: v345 
=== Succesors ===
trueSuccessor: v346 
falseSuccessor: v347 
=== Usages ===
=== Predecessor ===
i2148 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v345 #trueSuccessor: v346 #falseSuccessor: v347  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B50" 
    xhandlers
    flags 
    probability 4572379749647744704
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v809 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v809  <|@  <|@
f <@*|@fixed>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v807 
=== Predecessor ===
v346 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597996165449052256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2149 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2149  <|@  <|@
f <@~|@floating>@ <|@
tid v2213 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2146 
=== Succesors ===
=== Usages ===
i2149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2149 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2213 
=== Succesors ===
next: v1407 
=== Usages ===
v349 
=== Predecessor ===
v347 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2213 #next: v1407  <|@  <|@
f <@~|@floating>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2149 
y: i939 
=== Succesors ===
=== Usages ===
v1407 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2149 y: i939  <|@  <|@
f <@*|@fixed>@ <|@
tid v1407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v349 
=== Succesors ===
trueSuccessor: v1406 
falseSuccessor: v1404 
=== Usages ===
=== Predecessor ===
i2149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v349 #trueSuccessor: v1406 #falseSuccessor: v1404  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1968 
=== Usages ===
=== Predecessor ===
v1407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1968  <|@  <|@
f <@~|@floating>@ <|@
tid i1969 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -246035
stableDimension: 0
stamp: i32 [-246035] â‡Š00000000fffc3eed â‡ˆ00000000fffc3eed
stampKind: i32
value: int[-246035|0xfffffffffffc3eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1968 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1406 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B89" 
    xhandlers
    flags 
    probability 4597996165449052256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v737 
=== Usages ===
=== Predecessor ===
v1407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v737  <|@  <|@
f <@*|@fixed>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
v1404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B112" 
    xhandlers
    flags 
    probability 4598173210558871978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1411 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1411  <|@  <|@
f <@~|@floating>@ <|@
tid v2116 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2147 
y: v2110 
=== Succesors ===
=== Usages ===
v1411 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2147 y: v2110  <|@  <|@
f <@*|@fixed>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2116 
=== Succesors ===
trueSuccessor: v1408 
falseSuccessor: v1410 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2116 #trueSuccessor: v1408 #falseSuccessor: v1410  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B28" 
    xhandlers
    flags 
    probability 4598173210558871978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2150 
=== Usages ===
=== Predecessor ===
v1411 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2150 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2212 
=== Succesors ===
next: v2151 
=== Usages ===
?459 v2256 v2214 v2215 ?526 v2278 
=== Predecessor ===
v1408 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2212 #next: v2151  <|@  <|@
f <@~|@floating>@ <|@
tid v2256 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2150 
=== Succesors ===
=== Usages ===
v2151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2151 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2256 
=== Succesors ===
next: v407 
=== Usages ===
v2118 v2117 
=== Predecessor ===
a2150 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2256 #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid v2117 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2151 
y: v2112 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2151 y: v2112  <|@  <|@
f <@~|@floating>@ <|@
tid v2214 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2150 
=== Succesors ===
=== Usages ===
i2152 a2154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2150  <|@  <|@
tid ?388 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?304 
values: a2142 i939 
=== Succesors ===
=== Usages ===
?441 ?1927 ?394 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?304 values: a2142 i939  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.5000557636836476
=== Inputs ===
condition: v2117 
=== Succesors ===
trueSuccessor: v400 
falseSuccessor: v406 
=== Usages ===
=== Predecessor ===
v2151 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2117 #trueSuccessor: v400 #falseSuccessor: v406  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4593670615256664101
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2152 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2152 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2214 
=== Succesors ===
next: v449 
=== Usages ===
v446 
=== Predecessor ===
v400 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2214 #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i939 
y: i2152 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i939 y: i2152  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.01987898583705925
=== Inputs ===
condition: v446 
=== Succesors ===
trueSuccessor: v447 
falseSuccessor: v448 
=== Usages ===
=== Predecessor ===
i2152 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v446 #trueSuccessor: v447 #falseSuccessor: v448  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4567875510998951477
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v825 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v825  <|@  <|@
f <@*|@fixed>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v823 
=== Predecessor ===
v447 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4593491581241894131
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2153 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2153  <|@  <|@
f <@~|@floating>@ <|@
tid v2215 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2150 
=== Succesors ===
=== Usages ===
i2153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2153 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2215 
=== Succesors ===
next: v1419 
=== Usages ===
v450 
=== Predecessor ===
v448 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2215 #next: v1419  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2153 
y: i939 
=== Succesors ===
=== Usages ===
v1419 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2153 y: i939  <|@  <|@
f <@*|@fixed>@ <|@
tid v1419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v450 
=== Succesors ===
trueSuccessor: v1418 
falseSuccessor: v1416 
=== Usages ===
=== Predecessor ===
i2153 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v450 #trueSuccessor: v1418 #falseSuccessor: v1416  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1974 
=== Usages ===
=== Predecessor ===
v1419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1974  <|@  <|@
f <@~|@floating>@ <|@
tid i1975 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -248595
stableDimension: 0
stamp: i32 [-248595] â‡Š00000000fffc34ed â‡ˆ00000000fffc34ed
stampKind: i32
value: int[-248595|0xfffffffffffc34ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1974 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1418 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B55" 
    xhandlers
    flags 
    probability 4593491581241894131
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v1419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v771  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
v1416 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" "B111" 
    xhandlers
    flags 
    probability 4593668606606338863
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1423 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1423  <|@  <|@
f <@~|@floating>@ <|@
tid v2118 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2151 
y: v2110 
=== Succesors ===
=== Usages ===
v1423 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2151 y: v2110  <|@  <|@
f <@*|@fixed>@ <|@
tid v1423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2118 
=== Succesors ===
trueSuccessor: v1420 
falseSuccessor: v1422 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2118 #trueSuccessor: v1420 #falseSuccessor: v1422  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4593668606606338863
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2154 
=== Usages ===
=== Predecessor ===
v1423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2154 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2214 
=== Succesors ===
next: v2155 
=== Usages ===
?532 v2257 v2216 v2217 ?1924 v2277 
=== Predecessor ===
v1420 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2214 #next: v2155  <|@  <|@
f <@~|@floating>@ <|@
tid v2257 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2154 
=== Succesors ===
=== Usages ===
v2155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2155 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2257 
=== Succesors ===
next: v472 
=== Usages ===
v2120 v2119 
=== Predecessor ===
a2154 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2257 #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid v2119 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2155 
y: v2112 
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2155 y: v2112  <|@  <|@
f <@~|@floating>@ <|@
tid v2216 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2154 
=== Succesors ===
=== Usages ===
i2156 a2158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2154  <|@  <|@
tid ?441 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?388 
values: a2146 i939 
=== Succesors ===
=== Usages ===
?526 ?1926 ?459 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?388 values: a2146 i939  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.5000557636836476
=== Inputs ===
condition: v2119 
=== Succesors ===
trueSuccessor: v465 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
v2155 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2119 #trueSuccessor: v465 #falseSuccessor: v471  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4589166011192121245
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2156 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2156 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2216 
=== Succesors ===
next: v485 
=== Usages ===
v482 
=== Predecessor ===
v465 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2216 #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i939 
y: i2156 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i939 y: i2156  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.01987898583705925
=== Inputs ===
condition: v482 
=== Succesors ===
trueSuccessor: v483 
falseSuccessor: v484 
=== Usages ===
=== Predecessor ===
i2156 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v482 #trueSuccessor: v483 #falseSuccessor: v484  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B46" 
    xhandlers
    flags 
    probability 4563371272421426627
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v841 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v841  <|@  <|@
f <@*|@fixed>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
v483 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4588986997144543599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2157 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2157  <|@  <|@
f <@~|@floating>@ <|@
tid v2217 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2154 
=== Succesors ===
=== Usages ===
i2157 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2157 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2217 
=== Succesors ===
next: v1431 
=== Usages ===
v486 
=== Predecessor ===
v484 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2217 #next: v1431  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2157 
y: i939 
=== Succesors ===
=== Usages ===
v1431 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2157 y: i939  <|@  <|@
f <@*|@fixed>@ <|@
tid v1431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v486 
=== Succesors ===
trueSuccessor: v1430 
falseSuccessor: v1428 
=== Usages ===
=== Predecessor ===
i2157 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v486 #trueSuccessor: v1430 #falseSuccessor: v1428  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1980 
=== Usages ===
=== Predecessor ===
v1431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1980  <|@  <|@
f <@~|@floating>@ <|@
tid i1981 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -251155
stableDimension: 0
stamp: i32 [-251155] â‡Š00000000fffc2aed â‡ˆ00000000fffc2aed
stampKind: i32
value: int[-251155|0xfffffffffffc2aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1980 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588986997144543599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v788 
=== Usages ===
=== Predecessor ===
v1431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v788  <|@  <|@
f <@*|@fixed>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
v1428 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B110" 
    xhandlers
    flags 
    probability 4589164002765815489
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1435 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1435  <|@  <|@
f <@~|@floating>@ <|@
tid v2120 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2155 
y: v2110 
=== Succesors ===
=== Usages ===
v1435 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2155 y: v2110  <|@  <|@
f <@*|@fixed>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2120 
=== Succesors ===
trueSuccessor: v1432 
falseSuccessor: v1434 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2120 #trueSuccessor: v1432 #falseSuccessor: v1434  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B42" 
    xhandlers
    flags 
    probability 4589164002765815489
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2158 
=== Usages ===
=== Predecessor ===
v1435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2158 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2216 
=== Succesors ===
next: v2159 
=== Usages ===
a985 v2258 v2218 v2219 
=== Predecessor ===
v1432 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2216 #next: v2159  <|@  <|@
f <@~|@floating>@ <|@
tid v2258 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2158 
=== Succesors ===
=== Usages ===
v2159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2159 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2258 
=== Succesors ===
next: v545 
=== Usages ===
v2121 
=== Predecessor ===
a2158 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2258 #next: v545  <|@  <|@
f <@~|@floating>@ <|@
tid v2121 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2159 
y: v2112 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2159 y: v2112  <|@  <|@
tid ?526 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?441 
values: a2150 i939 
=== Succesors ===
=== Usages ===
?1925 ?1924 ?532 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?441 values: a2150 i939  <|@  <|@
f <@*|@fixed>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.5000557636836476
=== Inputs ===
condition: v2121 
=== Succesors ===
trueSuccessor: v538 
falseSuccessor: v544 
=== Usages ===
=== Predecessor ===
v2159 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2121 #trueSuccessor: v538 #falseSuccessor: v544  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4584661407239600622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2160 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2160  <|@  <|@
f <@~|@floating>@ <|@
tid v2218 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2158 
=== Succesors ===
=== Usages ===
i2160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2160 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2218 
=== Succesors ===
next: v558 
=== Usages ===
v555 
=== Predecessor ===
v538 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2218 #next: v558  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i939 
y: i2160 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i939 y: i2160  <|@  <|@
f <@*|@fixed>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.01987898583705925
=== Inputs ===
condition: v555 
=== Succesors ===
trueSuccessor: v556 
falseSuccessor: v557 
=== Usages ===
=== Predecessor ===
i2160 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v555 #trueSuccessor: v556 #falseSuccessor: v557  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558867033915162205
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v857 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v857  <|@  <|@
f <@*|@fixed>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v855 
=== Predecessor ===
v556 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4584482413156988411
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2161 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2161  <|@  <|@
f <@~|@floating>@ <|@
tid v2219 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2158 
=== Succesors ===
=== Usages ===
i2161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2161 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2219 
=== Succesors ===
next: v1443 
=== Usages ===
v559 
=== Predecessor ===
v557 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2219 #next: v1443  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2161 
y: i939 
=== Succesors ===
=== Usages ===
v1443 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2161 y: i939  <|@  <|@
f <@*|@fixed>@ <|@
tid v1443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v559 
=== Succesors ===
trueSuccessor: v1442 
falseSuccessor: v1440 
=== Usages ===
=== Predecessor ===
i2161 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v559 #trueSuccessor: v1442 #falseSuccessor: v1440  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1984 
=== Usages ===
=== Predecessor ===
v1443 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1984  <|@  <|@
f <@~|@floating>@ <|@
tid i1985 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -253715
stableDimension: 0
stamp: i32 [-253715] â‡Š00000000fffc20ed â‡ˆ00000000fffc20ed
stampKind: i32
value: int[-253715|0xfffffffffffc20ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1984 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1442 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 4584482413156988411
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v754 
=== Usages ===
=== Predecessor ===
v1443 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v754  <|@  <|@
f <@*|@fixed>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
v1440 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B54" 
    xhandlers
    flags 
    probability 4584659399037289364
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i514 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i514  <|@  <|@
f <@~|@floating>@ <|@
tid a985 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2158 
=== Succesors ===
=== Usages ===
v992 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2158  <|@  <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@774a95d5
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a985 i939 
=== Succesors ===
=== Usages ===
i514 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a985 i939  <|@  <|@
tid ?1924 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?526 
values: a2154 i939 
=== Succesors ===
=== Usages ===
i514 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?526 values: a2154 i939  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i514 <|@
d <@d|@=== Debug Properties ===
bci: 5
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v992 
stateDuring: ?1924 
=== Succesors ===
next: v519 
=== Usages ===
v516 
=== Predecessor ===
v544 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v992 stateDuring: ?1924 #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i514 
y: i15 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i514 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.010037089919821551
=== Inputs ===
condition: v516 
=== Succesors ===
trueSuccessor: v517 
falseSuccessor: v518 
=== Usages ===
=== Predecessor ===
i514 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v516 #trueSuccessor: v517 #falseSuccessor: v518  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4554418386289649169
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v856  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v855 
=== Predecessor ===
v517 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B38" 
    successors "B45" "B53" 
    xhandlers
    flags 
    probability 4561758415237886310
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v856 v857 
=== Succesors ===
next: a2162 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v856 v857 #next: a2162  <|@  <|@
f <@~|@floating>@ <|@
tid v2277 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2154 
=== Succesors ===
=== Usages ===
a2162 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2162 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2277 
=== Succesors ===
next: v2269 
=== Usages ===
a995 v2269 
=== Predecessor ===
v855 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2277 #next: v2269  <|@  <|@
tid ?532 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?526 
values: a2154 i939 i15 
=== Succesors ===
=== Usages ===
v2269 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?526 values: a2154 i939 i15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2269 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?532 
object: a2162 
=== Succesors ===
next: i522 
=== Usages ===
=== Predecessor ===
a2162 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?532 object: a2162 #next: i522  <|@  <|@
f <@~|@floating>@ <|@
tid a995 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2162 
=== Succesors ===
=== Usages ===
v999 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2162  <|@  <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@709d2eb3
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a995 i939 
=== Succesors ===
=== Usages ===
i522 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a995 i939  <|@  <|@
tid ?1925 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?526 
values: - - 
=== Succesors ===
=== Usages ===
i522 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?526 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i522 <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v999 
stateDuring: ?1925 
=== Succesors ===
next: v434 
=== Usages ===
v431 
=== Predecessor ===
v2269 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v999 stateDuring: ?1925 #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i522 
y: i15 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i522 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.010037089919821551
=== Inputs ===
condition: v431 
=== Succesors ===
trueSuccessor: v432 
falseSuccessor: v433 
=== Usages ===
=== Predecessor ===
i522 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v431 #trueSuccessor: v432 #falseSuccessor: v433  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    probability 4531654368214683246
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v840 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v840  <|@  <|@
f <@*|@fixed>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
v432 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B31" 
    successors "B47" "B52" 
    xhandlers
    flags 
    probability 4563414528223827680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v840 v841 
=== Succesors ===
next: a2163 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v840 v841 #next: a2163  <|@  <|@
f <@~|@floating>@ <|@
tid v2278 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2150 
=== Succesors ===
=== Usages ===
a2163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2163 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2278 
=== Succesors ===
next: v2270 
=== Usages ===
a1002 v2270 
=== Predecessor ===
v839 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2278 #next: v2270  <|@  <|@
tid ?459 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?441 
values: a2150 i939 i15 
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?441 values: a2150 i939 i15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?459 
object: a2163 
=== Succesors ===
next: i437 
=== Usages ===
=== Predecessor ===
a2163 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?459 object: a2163 #next: i437  <|@  <|@
f <@~|@floating>@ <|@
tid a1002 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2163 
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2163  <|@  <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@e136e72
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a1002 i939 
=== Succesors ===
=== Usages ===
i437 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1002 i939  <|@  <|@
tid ?1926 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?441 
values: - - 
=== Succesors ===
=== Usages ===
i437 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?441 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i437 <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1006 
stateDuring: ?1926 
=== Succesors ===
next: v381 
=== Usages ===
v378 
=== Predecessor ===
v2270 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1006 stateDuring: ?1926 #next: v381  <|@  <|@
f <@~|@floating>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i437 
y: i15 
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i437 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.010037089919821551
=== Inputs ===
condition: v378 
=== Succesors ===
trueSuccessor: v379 
falseSuccessor: v380 
=== Usages ===
=== Predecessor ===
i437 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v378 #trueSuccessor: v379 #falseSuccessor: v380  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4533532809550432117
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v824 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v824  <|@  <|@
f <@*|@fixed>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v823 
=== Predecessor ===
v379 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B24" 
    successors "B49" "B51" 
    xhandlers
    flags 
    probability 4567904476561619772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v824 v825 
=== Succesors ===
next: a2164 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v824 v825 #next: a2164  <|@  <|@
f <@~|@floating>@ <|@
tid v2279 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2146 
=== Succesors ===
=== Usages ===
a2164 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2164 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2279 
=== Succesors ===
next: v2271 
=== Usages ===
a1009 v2271 
=== Predecessor ===
v823 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2279 #next: v2271  <|@  <|@
tid ?394 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?388 
values: a2146 i939 i15 
=== Succesors ===
=== Usages ===
v2271 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?388 values: a2146 i939 i15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?394 
object: a2164 
=== Succesors ===
next: i384 
=== Usages ===
=== Predecessor ===
a2164 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?394 object: a2164 #next: i384  <|@  <|@
f <@~|@floating>@ <|@
tid a1009 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2164 
=== Succesors ===
=== Usages ===
v1013 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2164  <|@  <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@286fe00d
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a1009 i939 
=== Succesors ===
=== Usages ===
i384 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1009 i939  <|@  <|@
tid ?1927 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?388 
values: - - 
=== Succesors ===
=== Usages ===
i384 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?388 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i384 <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1013 
stateDuring: ?1927 
=== Succesors ===
next: v297 
=== Usages ===
v294 
=== Predecessor ===
v2271 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1013 stateDuring: ?1927 #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i384 
y: i15 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i384 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.010037089919821551
=== Inputs ===
condition: v294 
=== Succesors ===
trueSuccessor: v295 
falseSuccessor: v296 
=== Usages ===
=== Predecessor ===
i384 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v294 #trueSuccessor: v295 #falseSuccessor: v296  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4538018870717512057
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v808 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v808  <|@  <|@
f <@*|@fixed>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v807 
=== Predecessor ===
v295 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B17" 
    successors "B55" 
    xhandlers
    flags 
    probability 4572408646700802489
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v808 v809 
=== Succesors ===
next: a2165 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v808 v809 #next: a2165  <|@  <|@
f <@~|@floating>@ <|@
tid v2280 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2142 
=== Succesors ===
=== Usages ===
a2165 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2165 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2280 
=== Succesors ===
next: v2272 
=== Usages ===
a1016 v2272 
=== Predecessor ===
v807 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2280 #next: v2272  <|@  <|@
tid ?322 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?304 
values: a2142 i939 i15 
=== Succesors ===
=== Usages ===
v2272 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?304 values: a2142 i939 i15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?322 
object: a2165 
=== Succesors ===
next: i300 
=== Usages ===
=== Predecessor ===
a2165 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?322 object: a2165 #next: i300  <|@  <|@
f <@~|@floating>@ <|@
tid a1016 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2165 
=== Succesors ===
=== Usages ===
v1020 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2165  <|@  <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@ba83ce8
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a1016 i939 
=== Succesors ===
=== Usages ===
i300 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1016 i939  <|@  <|@
tid ?1928 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?304 
values: - - 
=== Succesors ===
=== Usages ===
i300 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?304 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i300 <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1020 
stateDuring: ?1928 
=== Succesors ===
next: v276 
=== Usages ===
i259 
=== Predecessor ===
v2272 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1020 stateDuring: ?1928 #next: v276  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
i300 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B89" 
    xhandlers
    flags 
    probability 4567846682455504201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v662 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v662  <|@  <|@
f <@*|@fixed>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
v296 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    probability 4563356597098491089
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v653 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v653  <|@  <|@
f <@*|@fixed>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
v380 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    probability 4561671903633084204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v686  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
v433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B55" 
    xhandlers
    flags 
    probability 4584569043370954236
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v703 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v703  <|@  <|@
f <@*|@fixed>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
v518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" "B53" "B54" "B41" "B27" "B34" 
    successors "B56" "B88" 
    xhandlers
    flags 
    probability 4598219208763472101
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: i32 [0 - 1] â‡ˆ0000000000000001
valueDescription: i32
=== Inputs ===
merge: v256 
values: i300 i28 i28 i28 i28 i28 i28 
=== Succesors ===
=== Usages ===
i664 v187 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v256 values: i300 i28 i28 i28 i28 i28 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v276 v653 v686 v703 v754 v771 v788 
=== Succesors ===
next: v190 
=== Usages ===
i259 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v276 v653 v686 v703 v754 v771 v788 #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i259 
y: i15 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i259 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.010037089919821551
=== Inputs ===
condition: v187 
=== Succesors ===
trueSuccessor: v188 
falseSuccessor: v189 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v187 #trueSuccessor: v188 #falseSuccessor: v189  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4567988925970962079
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v791 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v791  <|@  <|@
f <@*|@fixed>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
v188 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B10" 
    successors "B58" "B86" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v791 v793 
=== Succesors ===
next: a2166 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v791 v793 #next: a2166  <|@  <|@
f <@~|@floating>@ <|@
tid v2220 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2166 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2220 
=== Succesors ===
next: v2274 
=== Usages ===
v2260 v2274 v2237 v2238 
=== Predecessor ===
v790 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2220 #next: v2274  <|@  <|@
tid ?792 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?197 
values: a1 i939 i15 
=== Succesors ===
=== Usages ===
v2037 v2274 v2168 i2170 i2174 v2275 i2181 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?197 values: a1 i939 i15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?792 
object: a2166 
=== Succesors ===
next: a2167 
=== Usages ===
=== Predecessor ===
a2166 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?792 object: a2166 #next: a2167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2167 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2221 
=== Succesors ===
next: v2168 
=== Usages ===
a1028 v2259 v2223 v2227 v2231 
=== Predecessor ===
v2274 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2221 #next: v2168  <|@  <|@
f <@~|@floating>@ <|@
tid v2259 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2167 
=== Succesors ===
=== Usages ===
v2168 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2168 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?792 
guard: - 
address: v2259 
=== Succesors ===
next: v1471 
=== Usages ===
v2123 
=== Predecessor ===
a2167 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?792 guard: - address: v2259 #next: v1471  <|@  <|@
f <@~|@floating>@ <|@
tid v2123 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2168 
y: v2122 
=== Succesors ===
=== Usages ===
v1471 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2168 y: v2122  <|@  <|@
f <@*|@fixed>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2123 
=== Succesors ===
trueSuccessor: v1468 
falseSuccessor: v1470 
=== Usages ===
=== Predecessor ===
v2168 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2123 #trueSuccessor: v1468 #falseSuccessor: v1470  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B85" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2169 
=== Usages ===
=== Predecessor ===
v1471 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2169 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2222 
=== Succesors ===
next: i2170 
=== Usages ===
a1034 v2224 
=== Predecessor ===
v1468 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2222 #next: i2170  <|@  <|@
f <@~|@floating>@ <|@
tid v2224 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2169 
=== Succesors ===
=== Usages ===
i2170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2170 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?792 
guard: - 
address: v2224 
=== Succesors ===
next: i2171 
=== Usages ===
v1042 
=== Predecessor ===
a2169 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?792 guard: - address: v2224 #next: i2171  <|@  <|@
f <@~|@floating>@ <|@
tid v2223 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2167 
=== Succesors ===
=== Usages ===
i2171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2171 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2223 
=== Succesors ===
next: v1479 
=== Usages ===
v2225 v1042 
=== Predecessor ===
i2170 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2223 #next: v1479  <|@  <|@
f <@~|@floating>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2171 
y: i2170 
=== Succesors ===
=== Usages ===
v1479 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2171 y: i2170  <|@  <|@
f <@*|@fixed>@ <|@
tid v1479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1042 
=== Succesors ===
trueSuccessor: v1476 
falseSuccessor: v1478 
=== Usages ===
=== Predecessor ===
i2171 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1042 #trueSuccessor: v1476 #falseSuccessor: v1478  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2172 
=== Usages ===
i2172 
=== Predecessor ===
v1479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2172  <|@  <|@
f <@~|@floating>@ <|@
tid a1034 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2169 
=== Succesors ===
=== Usages ===
v2225 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2169  <|@  <|@
f <@~|@floating>@ <|@
tid v2225 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1034 
index: i2171 
=== Succesors ===
=== Usages ===
i2172 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1034 index: i2171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2172 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1476 
address: v2225 
=== Succesors ===
next: v1483 
=== Usages ===
v85 v1088 i1931 ?102 
=== Predecessor ===
v1476 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1476 address: v2225 #next: v1483  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2172 
y: i15 
=== Succesors ===
=== Usages ===
v1483 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2172 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v85 
=== Succesors ===
trueSuccessor: v1482 
falseSuccessor: v1480 
=== Usages ===
=== Predecessor ===
i2172 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v85 #trueSuccessor: v1482 #falseSuccessor: v1480  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2044 
=== Usages ===
=== Predecessor ===
v1483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2044  <|@  <|@
f <@~|@floating>@ <|@
tid i2045 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -269075
stableDimension: 0
stamp: i32 [-269075] â‡Š00000000fffbe4ed â‡ˆ00000000fffbe4ed
stampKind: i32
value: int[-269075|0xfffffffffffbe4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2035 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2044 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
v1482 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B84" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2173 
=== Usages ===
=== Predecessor ===
v1483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2173 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2226 
=== Succesors ===
next: i2174 
=== Usages ===
a1055 v2236 v2228 v2235 
=== Predecessor ===
v1480 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2226 #next: i2174  <|@  <|@
f <@~|@floating>@ <|@
tid v2228 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2173 
=== Succesors ===
=== Usages ===
i2174 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2174 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?792 
guard: - 
address: v2228 
=== Succesors ===
next: i2175 
=== Usages ===
v1081 v1090 
=== Predecessor ===
a2173 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?792 guard: - address: v2228 #next: i2175  <|@  <|@
f <@~|@floating>@ <|@
tid v2227 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2167 
=== Succesors ===
=== Usages ===
i2175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2175 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2227 
=== Succesors ===
next: v1491 
=== Usages ===
v1081 i100 v2229 
=== Predecessor ===
i2174 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2227 #next: v1491  <|@  <|@
f <@~|@floating>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2175 
y: i2174 
=== Succesors ===
=== Usages ===
v1491 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2175 y: i2174  <|@  <|@
f <@*|@fixed>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1081 
=== Succesors ===
trueSuccessor: v1488 
falseSuccessor: v1490 
=== Usages ===
=== Predecessor ===
i2175 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1081 #trueSuccessor: v1488 #falseSuccessor: v1490  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B83" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1495 
=== Usages ===
i2184 v1088 
=== Predecessor ===
v1491 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1495  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: i32
=== Inputs ===
x: i2175 
y: i28 
=== Succesors ===
=== Usages ===
v2230 v1090 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2175 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i100 
y: i2174 
=== Succesors ===
=== Usages ===
v1495 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i100 y: i2174  <|@  <|@
f <@*|@fixed>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1090 
=== Succesors ===
trueSuccessor: v1492 
falseSuccessor: v1494 
=== Usages ===
=== Predecessor ===
v1488 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1090 #trueSuccessor: v1492 #falseSuccessor: v1494  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B69" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2176 
=== Usages ===
v1120 v1097 i2183 
=== Predecessor ===
v1495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2176  <|@  <|@
f <@~|@floating>@ <|@
tid v2231 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2167 
=== Succesors ===
=== Usages ===
a2176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2176 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2231 
=== Succesors ===
next: v2275 
=== Usages ===
a1100 v2275 v2261 
=== Predecessor ===
v1492 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2231 #next: v2275  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?792 
object: a2176 
=== Succesors ===
next: v2177 
=== Usages ===
=== Predecessor ===
a2176 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?792 object: a2176 #next: v2177  <|@  <|@
f <@~|@floating>@ <|@
tid v2260 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2166 
=== Succesors ===
=== Usages ===
v2177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2177 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2260 
=== Succesors ===
next: v216 
=== Usages ===
v2126 v2124 
=== Predecessor ===
v2275 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2260 #next: v216  <|@  <|@
f <@~|@floating>@ <|@
tid v2124 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2177 
y: v2112 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2177 y: v2112  <|@  <|@
f <@~|@floating>@ <|@
tid v2237 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2166 
=== Succesors ===
=== Usages ===
i2178 a2180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2166  <|@  <|@
f <@*|@fixed>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2124 
=== Succesors ===
trueSuccessor: v209 
falseSuccessor: v215 
=== Usages ===
=== Predecessor ===
v2177 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2124 #trueSuccessor: v209 #falseSuccessor: v215  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2178 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2178 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2237 
=== Succesors ===
next: v1503 
=== Usages ===
v242 
=== Predecessor ===
v209 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2237 #next: v1503  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i939 
y: i2178 
=== Succesors ===
=== Usages ===
v1503 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i939 y: i2178  <|@  <|@
f <@*|@fixed>@ <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v242 
=== Succesors ===
trueSuccessor: v1502 
falseSuccessor: v1500 
=== Usages ===
=== Predecessor ===
i2178 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v242 #trueSuccessor: v1502 #falseSuccessor: v1500  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2056 
=== Usages ===
=== Predecessor ===
v1503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2056  <|@  <|@
f <@~|@floating>@ <|@
tid i2057 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -290323
stableDimension: 0
stamp: i32 [-290323] â‡Š00000000fffb91ed â‡ˆ00000000fffb91ed
stampKind: i32
value: int[-290323|0xfffffffffffb91ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2035 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2056 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
v1502 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2179 
=== Usages ===
=== Predecessor ===
v1503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2179  <|@  <|@
f <@~|@floating>@ <|@
tid v2238 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2166 
=== Succesors ===
=== Usages ===
i2179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2179 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2238 
=== Succesors ===
next: v1507 
=== Usages ===
v246 
=== Predecessor ===
v1500 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2238 #next: v1507  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2179 
y: i939 
=== Succesors ===
=== Usages ===
v1507 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2179 y: i939  <|@  <|@
f <@*|@fixed>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v246 
=== Succesors ===
trueSuccessor: v1506 
falseSuccessor: v1504 
=== Usages ===
=== Predecessor ===
i2179 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v246 #trueSuccessor: v1506 #falseSuccessor: v1504  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2060 
=== Usages ===
=== Predecessor ===
v1507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2060  <|@  <|@
f <@~|@floating>@ <|@
tid i2061 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -290579
stableDimension: 0
stamp: i32 [-290579] â‡Š00000000fffb90ed â‡ˆ00000000fffb90ed
stampKind: i32
value: int[-290579|0xfffffffffffb90ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2035 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2060 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
v1506 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B75" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
v1507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v199  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2265 
=== Predecessor ===
v1504 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B70" "B82" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1511 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1511  <|@  <|@
f <@~|@floating>@ <|@
tid v2125 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2126 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2177 
y: v2125 
=== Succesors ===
=== Usages ===
v1511 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2177 y: v2125  <|@  <|@
f <@*|@fixed>@ <|@
tid v1511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2126 
=== Succesors ===
trueSuccessor: v1508 
falseSuccessor: v1510 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2126 #trueSuccessor: v1508 #falseSuccessor: v1510  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B81" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2180 
=== Usages ===
=== Predecessor ===
v1511 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2180 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v2237 
=== Succesors ===
next: i2181 
=== Usages ===
v2240 v2239 
=== Predecessor ===
v1508 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2237 #next: i2181  <|@  <|@
f <@~|@floating>@ <|@
tid v2239 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2180 
=== Succesors ===
=== Usages ===
i2181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?792 
guard: - 
address: v2239 
=== Succesors ===
next: v1519 
=== Usages ===
v1146 
=== Predecessor ===
a2180 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?792 guard: - address: v2239 #next: v1519  <|@  <|@
f <@~|@floating>@ <|@
tid v1146 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i939 
y: i2181 
=== Succesors ===
=== Usages ===
v1519 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i939 y: i2181  <|@  <|@
f <@*|@fixed>@ <|@
tid v1519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1146 
=== Succesors ===
trueSuccessor: v1516 
falseSuccessor: v1518 
=== Usages ===
=== Predecessor ===
i2181 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1146 #trueSuccessor: v1516 #falseSuccessor: v1518  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B80" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1523 
=== Usages ===
i2182 
=== Predecessor ===
v1519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1523  <|@  <|@
f <@~|@floating>@ <|@
tid i1346 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rawvalue: 256
stableDimension: 0
stamp: i16 [256] â‡Š0000000000000100 â‡ˆ0000000000000100
stampKind: i16
value: short[256|0x100]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1347 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2140 
y: i1346 
=== Succesors ===
=== Usages ===
v1523 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2140 y: i1346  <|@  <|@
f <@*|@fixed>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1347 
=== Succesors ===
trueSuccessor: v1520 
falseSuccessor: v1522 
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1347 #trueSuccessor: v1520 #falseSuccessor: v1522  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2182 
=== Usages ===
=== Predecessor ===
v1523 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2182  <|@  <|@
f <@~|@floating>@ <|@
tid j1268 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
resultBits: 64
stamp: i64 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i2140 
=== Succesors ===
=== Usages ===
v2240 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2140  <|@  <|@
f <@~|@floating>@ <|@
tid v2240 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j1268 
index: a2180 
=== Succesors ===
=== Usages ===
i2182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1268 index: a2180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2182 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: v1516 
address: v2240 
=== Succesors ===
next: v1527 
=== Usages ===
i1269 
=== Predecessor ===
v1520 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1516 address: v2240 #next: v1527  <|@  <|@
f <@~|@floating>@ <|@
tid i1269 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i2182 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2182  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1269 
y: i15 
=== Succesors ===
=== Usages ===
v1527 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1269 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v1526 
falseSuccessor: v1524 
=== Usages ===
=== Predecessor ===
i2182 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v1526 #falseSuccessor: v1524  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1525 
=== Usages ===
=== Predecessor ===
v1527 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1525  <|@  <|@
tid ?175 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3778
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i939 i15 
=== Succesors ===
=== Usages ===
v1525 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i939 i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1025
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?175 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1526 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?175  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2266 
=== Usages ===
=== Predecessor ===
v1527 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2266  <|@  <|@
f <@*|@fixed>@ <|@
tid v2266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2265 
=== Predecessor ===
v1524 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B68" 
    successors "B76" "B79" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2266 v199 
=== Succesors ===
next: i2183 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2266 v199 #next: i2183  <|@  <|@
f <@~|@floating>@ <|@
tid a1055 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2173 
=== Succesors ===
=== Usages ===
v2230 v2229 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2173  <|@  <|@
f <@~|@floating>@ <|@
tid v2230 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1055 
index: i100 
=== Succesors ===
=== Usages ===
v1097 i2183 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1055 index: i100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2183 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1492 
address: v2230 
=== Succesors ===
next: i2184 
=== Usages ===
i596 ?102 
=== Predecessor ===
v2265 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1492 address: v2230 #next: i2184  <|@  <|@
f <@~|@floating>@ <|@
tid v2229 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1055 
index: i2175 
=== Succesors ===
=== Usages ===
v1088 i2184 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1055 index: i2175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2184 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1488 
address: v2229 
=== Succesors ===
next: v1088 
=== Usages ===
i593 ?102 
=== Predecessor ===
i2183 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1488 address: v2229 #next: v1088  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1488 
address: v2229 
value: i2172 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1097 
=== Usages ===
=== Predecessor ===
i2184 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1488 address: v2229 value: i2172 stateAfter: - lastLocationAccess: - #next: v1097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1492 
address: v2230 
value: i22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2185 
=== Usages ===
=== Predecessor ===
v1088 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1492 address: v2230 value: i22 stateAfter: - lastLocationAccess: - #next: v2185  <|@  <|@
f <@~|@floating>@ <|@
tid v2261 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2176 
=== Succesors ===
=== Usages ===
v2185 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2185 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2261 
=== Succesors ===
next: v134 
=== Usages ===
v2128 
=== Predecessor ===
v1097 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2261 #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid v2128 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2185 
y: v2127 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2185 y: v2127  <|@  <|@
f <@~|@floating>@ <|@
tid a1028 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2167 
=== Succesors ===
=== Usages ===
a587 ?102 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2167  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.7905664707988008
=== Inputs ===
condition: v2128 
=== Succesors ===
trueSuccessor: v127 
falseSuccessor: v133 
=== Usages ===
=== Predecessor ===
v2185 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2128 #trueSuccessor: v127 #falseSuccessor: v133  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4576838579302148934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2186 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2186  <|@  <|@
f <@~|@floating>@ <|@
tid v2232 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2186 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.acceptMode
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2232 
=== Succesors ===
next: v1531 
=== Usages ===
v147 
=== Predecessor ===
v127 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2232 #next: v1531  <|@  <|@
f <@~|@floating>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2186 
y: i28 
=== Succesors ===
=== Usages ===
v1531 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2186 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v147 
=== Succesors ===
trueSuccessor: v1530 
falseSuccessor: v1528 
=== Usages ===
=== Predecessor ===
i2186 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v147 #trueSuccessor: v1530 #falseSuccessor: v1528  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2267 
=== Usages ===
=== Predecessor ===
v1531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2267  <|@  <|@
tid ?102 <|@
d <@d|@=== Debug Properties ===
bci: 63
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?110 
values: a1028 a2 i22 a4 i2172 i2184 i2183 
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?110 values: a1028 a2 i22 a4 i2172 i2184 i2183  <|@  <|@
f <@*|@fixed>@ <|@
tid v2267 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1105
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?102 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1530 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?102  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 4576838579302148934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1108 
=== Usages ===
=== Predecessor ===
v1531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1108  <|@  <|@
f <@~|@floating>@ <|@
tid v2233 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1108 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1108 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3435) [bci: 20]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2233 
value: i22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2187 
=== Usages ===
=== Predecessor ===
v1528 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2233 value: i22 stateAfter: - lastLocationAccess: - #next: i2187  <|@  <|@
f <@~|@floating>@ <|@
tid v2234 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2187 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.first
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 29]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2234 
=== Succesors ===
next: v1120 
=== Usages ===
v1120 
=== Predecessor ===
v1108 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2234 #next: v1120  <|@  <|@
f <@~|@floating>@ <|@
tid v2235 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2173 
=== Succesors ===
=== Usages ===
v1120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1492 
address: v2235 
value: i2187 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1129 
=== Usages ===
=== Predecessor ===
i2187 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1492 address: v2235 value: i2187 stateAfter: - lastLocationAccess: - #next: v1129  <|@  <|@
f <@~|@floating>@ <|@
tid v2236 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2173 
=== Succesors ===
=== Usages ===
v1129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2236 
value: i22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v634 
=== Usages ===
=== Predecessor ===
v1120 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2236 value: i22 stateAfter: - lastLocationAccess: - #next: v634  <|@  <|@
f <@*|@fixed>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 48]
stamp: void
=== Inputs ===
result: i28 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1129 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i28 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B100" 
    xhandlers
    flags 
    probability 4568170562233623375
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v584  <|@  <|@
f <@~|@floating>@ <|@
tid a1100 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2176 
=== Succesors ===
=== Usages ===
a599 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2176  <|@  <|@
f <@*|@fixed>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
v133 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2066 
=== Usages ===
=== Predecessor ===
v1523 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2066  <|@  <|@
f <@~|@floating>@ <|@
tid i2067 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -291091
stableDimension: 0
stamp: i32 [-291091] â‡Š00000000fffb8eed â‡ˆ00000000fffb8eed
stampKind: i32
value: int[-291091|0xfffffffffffb8eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2035 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2066 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
v1522 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2064 
=== Usages ===
=== Predecessor ===
v1519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2064  <|@  <|@
f <@~|@floating>@ <|@
tid i2065 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -293659
stableDimension: 0
stamp: i32 [-293659] â‡Š00000000fffb84e5 â‡ˆ00000000fffb84e5
stampKind: i32
value: int[-293659|0xfffffffffffb84e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2035 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2064 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
v1518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2062 
=== Usages ===
=== Predecessor ===
v1511 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2062  <|@  <|@
f <@~|@floating>@ <|@
tid i2063 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -290867
stableDimension: 0
stamp: i32 [-290867] â‡Š00000000fffb8fcd â‡ˆ00000000fffb8fcd
stampKind: i32
value: int[-290867|0xfffffffffffb8fcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2035 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2062 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
v1510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2054 
=== Usages ===
=== Predecessor ===
v1495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2054  <|@  <|@
f <@~|@floating>@ <|@
tid i2055 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -279323
stableDimension: 0
stamp: i32 [-279323] â‡Š00000000fffbbce5 â‡ˆ00000000fffbbce5
stampKind: i32
value: int[-279323|0xfffffffffffbbce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2035 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2054 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
v1494 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2052 
=== Usages ===
=== Predecessor ===
v1491 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2052  <|@  <|@
f <@~|@floating>@ <|@
tid i2053 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -277019
stableDimension: 0
stamp: i32 [-277019] â‡Š00000000fffbc5e5 â‡ˆ00000000fffbc5e5
stampKind: i32
value: int[-277019|0xfffffffffffbc5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2035 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2052 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
v1490 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2046 
=== Usages ===
=== Predecessor ===
v1479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2046  <|@  <|@
f <@~|@floating>@ <|@
tid i2047 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -267035
stableDimension: 0
stamp: i32 [-267035] â‡Š00000000fffbece5 â‡ˆ00000000fffbece5
stampKind: i32
value: int[-267035|0xfffffffffffbece5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2035 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2046 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
v1478 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2042 
=== Usages ===
=== Predecessor ===
v1471 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2042  <|@  <|@
f <@~|@floating>@ <|@
tid i2043 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -263731
stableDimension: 0
stamp: i32 [-263731] â‡Š00000000fffbf9cd â‡ˆ00000000fffbf9cd
stampKind: i32
value: int[-263731|0xfffffffffffbf9cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2035 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2042 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
v1470 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B60" "B85" "B84" "B83" "B65" "B67" "B82" "B81" "B80" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2035 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-293659 - -262155] â‡Š00000000fffb80c5 â‡ˆ00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v2032 
values: i2043 i2045 i2047 i2053 i2055 i2057 i2061 i2063 i2065 i2067 
=== Succesors ===
=== Usages ===
v2037 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2032 values: i2043 i2045 i2047 i2053 i2055 i2057 i2061 i2063 i2065 i2067  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2032 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2042 v2044 v2046 v2052 v2054 v2056 v2060 v2062 v2064 v2066 
=== Succesors ===
next: v2037 
=== Usages ===
i2035 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2042 v2044 v2046 v2052 v2054 v2056 v2060 v2062 v2064 v2066 #next: v2037  <|@  <|@
f <@*|@fixed>@ <|@
tid v2037 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?792 
actionAndReason: i2035 
speculation: a1936 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2032 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?792 actionAndReason: i2035 speculation: a1936  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B89" 
    xhandlers
    flags 
    probability 4598171908865345136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v660  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
v189 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B51" "B13" "B20" 
    successors "B90" "B108" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i664 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] â‡ˆ0000000000000001
valueDescription: i32
=== Inputs ===
merge: v659 
values: i259 i28 i28 i28 
=== Succesors ===
=== Usages ===
?661 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v659 values: i259 i28 i28 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v660 v662 v720 v737 
=== Succesors ===
next: a2188 
=== Usages ===
i664 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v660 v662 v720 v737 #next: a2188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2188 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2221 
=== Succesors ===
next: v2189 
=== Usages ===
a1155 v2262 v2241 v2244 v2248 a2276 
=== Predecessor ===
v659 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2221 #next: v2189  <|@  <|@
tid ?661 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?197 
values: a1 i939 i664 
=== Succesors ===
=== Usages ===
v2015 v2189 i2191 i2195 v2198 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?197 values: a1 i939 i664  <|@  <|@
f <@~|@floating>@ <|@
tid v2262 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2188 
=== Succesors ===
=== Usages ===
v2189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2189 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?661 
guard: - 
address: v2262 
=== Succesors ===
next: v1543 
=== Usages ===
v2129 
=== Predecessor ===
a2188 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?661 guard: - address: v2262 #next: v1543  <|@  <|@
f <@~|@floating>@ <|@
tid v2129 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2189 
y: v2122 
=== Succesors ===
=== Usages ===
v1543 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2189 y: v2122  <|@  <|@
f <@*|@fixed>@ <|@
tid v1543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2129 
=== Succesors ===
trueSuccessor: v1540 
falseSuccessor: v1542 
=== Usages ===
=== Predecessor ===
v2189 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2129 #trueSuccessor: v1540 #falseSuccessor: v1542  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B107" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2190 
=== Usages ===
=== Predecessor ===
v1543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2222 
=== Succesors ===
next: i2191 
=== Usages ===
a1159 v2242 
=== Predecessor ===
v1540 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2222 #next: i2191  <|@  <|@
f <@~|@floating>@ <|@
tid v2242 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2190 
=== Succesors ===
=== Usages ===
i2191 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2191 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?661 
guard: - 
address: v2242 
=== Succesors ===
next: i2192 
=== Usages ===
v1167 
=== Predecessor ===
a2190 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?661 guard: - address: v2242 #next: i2192  <|@  <|@
f <@~|@floating>@ <|@
tid v2241 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2188 
=== Succesors ===
=== Usages ===
i2192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2192 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2241 
=== Succesors ===
next: v1551 
=== Usages ===
v2243 v1167 
=== Predecessor ===
i2191 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2241 #next: v1551  <|@  <|@
f <@~|@floating>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2192 
y: i2191 
=== Succesors ===
=== Usages ===
v1551 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2192 y: i2191  <|@  <|@
f <@*|@fixed>@ <|@
tid v1551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1167 
=== Succesors ===
trueSuccessor: v1548 
falseSuccessor: v1550 
=== Usages ===
=== Predecessor ===
i2192 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1167 #trueSuccessor: v1548 #falseSuccessor: v1550  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B93" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2193 
=== Usages ===
i2193 
=== Predecessor ===
v1551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2193  <|@  <|@
f <@~|@floating>@ <|@
tid a1159 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2190 
=== Succesors ===
=== Usages ===
v2243 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2190  <|@  <|@
f <@~|@floating>@ <|@
tid v2243 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1159 
index: i2192 
=== Succesors ===
=== Usages ===
i2193 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1159 index: i2192  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2193 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1548 
address: v2243 
=== Succesors ===
next: v1555 
=== Usages ===
v612 v1210 i1931 ?622 
=== Predecessor ===
v1548 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1548 address: v2243 #next: v1555  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2193 
y: i15 
=== Succesors ===
=== Usages ===
v1555 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2193 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v612 
=== Succesors ===
trueSuccessor: v1554 
falseSuccessor: v1552 
=== Usages ===
=== Predecessor ===
i2193 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v612 #trueSuccessor: v1554 #falseSuccessor: v1552  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B109" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2020 
=== Usages ===
=== Predecessor ===
v1555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2020  <|@  <|@
f <@~|@floating>@ <|@
tid i2021 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -300819
stableDimension: 0
stamp: i32 [-300819] â‡Š00000000fffb68ed â‡ˆ00000000fffb68ed
stampKind: i32
value: int[-300819|0xfffffffffffb68ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2020 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2010 
=== Predecessor ===
v1554 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B106" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2194 
=== Usages ===
=== Predecessor ===
v1555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2194 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2226 
=== Succesors ===
next: i2195 
=== Usages ===
a1177 v2250 v2245 v2249 
=== Predecessor ===
v1552 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2226 #next: i2195  <|@  <|@
f <@~|@floating>@ <|@
tid v2245 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2194 
=== Succesors ===
=== Usages ===
i2195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2195 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?661 
guard: - 
address: v2245 
=== Succesors ===
next: i2196 
=== Usages ===
v1203 v1212 
=== Predecessor ===
a2194 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?661 guard: - address: v2245 #next: i2196  <|@  <|@
f <@~|@floating>@ <|@
tid v2244 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2188 
=== Succesors ===
=== Usages ===
i2196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2196 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2244 
=== Succesors ===
next: v1563 
=== Usages ===
v1203 v2246 i620 
=== Predecessor ===
i2195 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2244 #next: v1563  <|@  <|@
f <@~|@floating>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2196 
y: i2195 
=== Succesors ===
=== Usages ===
v1563 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2196 y: i2195  <|@  <|@
f <@*|@fixed>@ <|@
tid v1563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1203 
=== Succesors ===
trueSuccessor: v1560 
falseSuccessor: v1562 
=== Usages ===
=== Predecessor ===
i2196 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1203 #trueSuccessor: v1560 #falseSuccessor: v1562  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B105" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1567 
=== Usages ===
i2200 v1210 
=== Predecessor ===
v1563 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1567  <|@  <|@
f <@~|@floating>@ <|@
tid i620 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: i32
=== Inputs ===
x: i2196 
y: i28 
=== Succesors ===
=== Usages ===
v1212 v2247 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2196 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid v1212 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i620 
y: i2195 
=== Succesors ===
=== Usages ===
v1567 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i620 y: i2195  <|@  <|@
f <@*|@fixed>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1212 
=== Succesors ===
trueSuccessor: v1564 
falseSuccessor: v1566 
=== Usages ===
=== Predecessor ===
v1560 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1212 #trueSuccessor: v1564 #falseSuccessor: v1566  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B99" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2197 
=== Usages ===
v1233 v1219 i2199 
=== Predecessor ===
v1567 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2197  <|@  <|@
f <@~|@floating>@ <|@
tid v2248 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2188 
=== Succesors ===
=== Usages ===
a2197 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2197 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2248 
=== Succesors ===
next: v2198 
=== Usages ===
a1222 v2263 
=== Predecessor ===
v1564 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2248 #next: v2198  <|@  <|@
f <@~|@floating>@ <|@
tid v2263 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2197 
=== Succesors ===
=== Usages ===
v2198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?661 
guard: - 
address: v2263 
=== Succesors ===
next: i2199 
=== Usages ===
v2130 
=== Predecessor ===
a2197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?661 guard: - address: v2263 #next: i2199  <|@  <|@
f <@~|@floating>@ <|@
tid a1177 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2194 
=== Succesors ===
=== Usages ===
v2247 v2246 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2194  <|@  <|@
f <@~|@floating>@ <|@
tid v2247 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1177 
index: i620 
=== Succesors ===
=== Usages ===
v1219 i2199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1177 index: i620  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2199 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1564 
address: v2247 
=== Succesors ===
next: i2200 
=== Usages ===
i596 ?622 
=== Predecessor ===
v2198 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1564 address: v2247 #next: i2200  <|@  <|@
f <@~|@floating>@ <|@
tid v2246 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1177 
index: i2196 
=== Succesors ===
=== Usages ===
v1210 i2200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1177 index: i2196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1560 
address: v2246 
=== Succesors ===
next: v1210 
=== Usages ===
i593 ?622 
=== Predecessor ===
i2199 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1560 address: v2246 #next: v1210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1210 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1560 
address: v2246 
value: i2193 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1219 
=== Usages ===
=== Predecessor ===
i2200 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1560 address: v2246 value: i2193 stateAfter: - lastLocationAccess: - #next: v1219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1564 
address: v2247 
value: i22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v1210 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1564 address: v2247 value: i22 stateAfter: - lastLocationAccess: - #next: v630  <|@  <|@
f <@~|@floating>@ <|@
tid v2130 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2198 
y: v2127 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2198 y: v2127  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.7905664707988008
=== Inputs ===
condition: v2130 
=== Succesors ===
trueSuccessor: v624 
falseSuccessor: v629 
=== Usages ===
=== Predecessor ===
v1219 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2130 #trueSuccessor: v624 #falseSuccessor: v629  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4605207181810611474
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2201 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2201  <|@  <|@
f <@~|@floating>@ <|@
tid v2283 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2201 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.acceptMode
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2283 
=== Succesors ===
next: v1575 
=== Usages ===
v893 
=== Predecessor ===
v624 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2283 #next: v1575  <|@  <|@
f <@~|@floating>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2201 
y: i28 
=== Succesors ===
=== Usages ===
v1575 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2201 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v893 
=== Succesors ===
trueSuccessor: v1574 
falseSuccessor: v1572 
=== Usages ===
=== Predecessor ===
i2201 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v893 #trueSuccessor: v1574 #falseSuccessor: v1572  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2268 
=== Usages ===
=== Predecessor ===
v1575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2268  <|@  <|@
f <@~|@floating>@ <|@
tid a2276 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2188 
=== Succesors ===
=== Usages ===
?622 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2188  <|@  <|@
tid ?622 <|@
d <@d|@=== Debug Properties ===
bci: 63
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?110 
values: a2276 a2 i22 a4 i2193 i2200 i2199 
=== Succesors ===
=== Usages ===
v2268 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?110 values: a2276 a2 i22 a4 i2193 i2200 i2199  <|@  <|@
f <@*|@fixed>@ <|@
tid v2268 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1225
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?622 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1574 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?622  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors 
    xhandlers
    flags 
    probability 4605207181810611474
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1226 
=== Usages ===
=== Predecessor ===
v1575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1226  <|@  <|@
f <@~|@floating>@ <|@
tid v2282 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3435) [bci: 20]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2282 
value: i22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2202 
=== Usages ===
=== Predecessor ===
v1572 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2282 value: i22 stateAfter: - lastLocationAccess: - #next: i2202  <|@  <|@
f <@~|@floating>@ <|@
tid v2281 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.first
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 29]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2281 
=== Succesors ===
next: v1233 
=== Usages ===
v1233 
=== Predecessor ===
v1226 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2281 #next: v1233  <|@  <|@
f <@~|@floating>@ <|@
tid v2249 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2194 
=== Succesors ===
=== Usages ===
v1233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1564 
address: v2249 
value: i2202 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1239 
=== Usages ===
=== Predecessor ===
i2202 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1564 address: v2249 value: i2202 stateAfter: - lastLocationAccess: - #next: v1239  <|@  <|@
f <@~|@floating>@ <|@
tid v2250 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2194 
=== Succesors ===
=== Usages ===
v1239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2250 
value: i22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v903 
=== Usages ===
=== Predecessor ===
v1233 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2250 value: i22 stateAfter: - lastLocationAccess: - #next: v903  <|@  <|@
f <@*|@fixed>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 48]
stamp: void
=== Inputs ===
result: i28 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1239 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i28 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B100" 
    xhandlers
    flags 
    probability 4596619531220163959
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid a1222 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2197 
=== Succesors ===
=== Usages ===
a599 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2197  <|@  <|@
f <@~|@floating>@ <|@
tid a1155 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2188 
=== Succesors ===
=== Usages ===
a587 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2188  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
v629 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B79" "B99" 
    successors "B101" "B104" 
    xhandlers
    flags 
    probability 4596713658403090692
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a587 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/regex/Pattern$GroupTail;
valueDescription: a -
=== Inputs ===
merge: v583 
values: a1028 a1155 
=== Succesors ===
=== Usages ===
?166 ?585 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v583 values: a1028 a1155  <|@  <|@
f <@~|@floating>@ <|@
tid i1931 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v583 
values: i2172 i2193 
=== Succesors ===
=== Usages ===
?585 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v583 values: i2172 i2193  <|@  <|@
f <@~|@floating>@ <|@
tid i593 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v583 
values: i2184 i2200 
=== Succesors ===
=== Usages ===
?166 ?585 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v583 values: i2184 i2200  <|@  <|@
f <@~|@floating>@ <|@
tid i596 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v583 
values: i2183 i2199 
=== Succesors ===
=== Usages ===
?166 ?585 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v583 values: i2183 i2199  <|@  <|@
f <@~|@floating>@ <|@
tid a599 <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/regex/Pattern$Node;
valueDescription: a -
=== Inputs ===
merge: v583 
values: a1100 a1222 
=== Succesors ===
=== Usages ===
v2264 v2251 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v583 values: a1100 a1222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v584 v586 
=== Succesors ===
next: v2203 
=== Usages ===
a587 i1931 i593 i596 a599 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v584 v586 #next: v2203  <|@  <|@
f <@~|@floating>@ <|@
tid v2264 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a599 
index: - 
=== Succesors ===
=== Usages ===
v2203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a599 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2203 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2264 
=== Succesors ===
next: v1583 
=== Usages ===
v2132 
=== Predecessor ===
v583 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2264 #next: v1583  <|@  <|@
f <@~|@floating>@ <|@
tid v2131 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2132 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2203 
y: v2131 
=== Succesors ===
=== Usages ===
v1583 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2203 y: v2131  <|@  <|@
tid ?585 <|@
d <@d|@=== Debug Properties ===
bci: 63
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?110 
values: a587 a2 i22 a4 i1931 i593 i596 
=== Succesors ===
=== Usages ===
v1999 v2273 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?110 values: a587 a2 i22 a4 i1931 i593 i596  <|@  <|@
f <@*|@fixed>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BranchConn; target_method=match target_method_class=Ljava/util/regex/Pattern$BranchConn; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2132 
=== Succesors ===
trueSuccessor: v1580 
falseSuccessor: v1582 
=== Usages ===
=== Predecessor ===
v2203 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2132 #trueSuccessor: v1580 #falseSuccessor: v1582  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4596713658403090692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BranchConn; target_method=match target_method_class=Ljava/util/regex/Pattern$BranchConn; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2204 
=== Usages ===
=== Predecessor ===
v1583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2204  <|@  <|@
f <@~|@floating>@ <|@
tid v2251 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a599 
index: - 
=== Succesors ===
=== Usages ===
a2204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a599 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2204 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2251 
=== Succesors ===
next: v2273 
=== Usages ===
a1243 v2273 
=== Predecessor ===
v1580 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2251 #next: v2273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?585 
object: a2204 
=== Succesors ===
next: i163 
=== Usages ===
=== Predecessor ===
a2204 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?585 object: a2204 #next: i163  <|@  <|@
f <@~|@floating>@ <|@
tid a1243 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2204 
=== Succesors ===
=== Usages ===
v1247 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2204  <|@  <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@12d96398
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a1243 a2 i22 a4 
=== Succesors ===
=== Usages ===
i163 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1243 a2 i22 a4  <|@  <|@
tid ?166 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?110 
values: a587 a2 - - - i593 i596 
=== Succesors ===
=== Usages ===
?164 ?1929 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?110 values: a587 a2 - - - i593 i596  <|@  <|@
tid ?1929 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<Pattern$BranchConn.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4570
stackSize: 0
=== Inputs ===
outerFrameState: ?166 
values: - - - - 
=== Succesors ===
=== Usages ===
i163 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?166 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i163 <|@
d <@d|@=== Debug Properties ===
bci: 7
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1247 
stateDuring: ?1929 
=== Succesors ===
next: v1591 
=== Usages ===
v107 
=== Predecessor ===
v2273 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1247 stateDuring: ?1929 #next: v1591  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i163 
y: i15 
=== Succesors ===
=== Usages ===
v1591 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i163 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v107 
=== Succesors ===
trueSuccessor: v1590 
falseSuccessor: v1588 
=== Usages ===
=== Predecessor ===
i163 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v107 #trueSuccessor: v1590 #falseSuccessor: v1588  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1589 
=== Usages ===
=== Predecessor ===
v1591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1589  <|@  <|@
tid ?164 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Pattern$BranchConn.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4570
stackSize: 1
=== Inputs ===
outerFrameState: ?166 
values: - - - - i15 
=== Succesors ===
=== Usages ===
v1589 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?166 values: - - - - i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1248
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?164 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1590 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?164  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors 
    xhandlers
    flags 
    probability 4596713658403090692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v1591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v29  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 48]
stamp: void
=== Inputs ===
result: i28 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1588 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i28 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BranchConn; target_method=match target_method_class=Ljava/util/regex/Pattern$BranchConn; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1999 
=== Usages ===
=== Predecessor ===
v1583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1999  <|@  <|@
f <@~|@floating>@ <|@
tid i2001 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -317491
stableDimension: 0
stamp: i32 [-317491] â‡Š00000000fffb27cd â‡ˆ00000000fffb27cd
stampKind: i32
value: int[-317491|0xfffffffffffb27cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1999 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1999 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?585 
actionAndReason: i2001 
speculation: a1936 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1582 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?585 actionAndReason: i2001 speculation: a1936  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B109" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2030 
=== Usages ===
=== Predecessor ===
v1567 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2030  <|@  <|@
f <@~|@floating>@ <|@
tid i2031 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -310555
stableDimension: 0
stamp: i32 [-310555] â‡Š00000000fffb42e5 â‡ˆ00000000fffb42e5
stampKind: i32
value: int[-310555|0xfffffffffffb42e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2030 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2010 
=== Predecessor ===
v1566 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B109" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2028 
=== Usages ===
=== Predecessor ===
v1563 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2028  <|@  <|@
f <@~|@floating>@ <|@
tid i2029 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -308251
stableDimension: 0
stamp: i32 [-308251] â‡Š00000000fffb4be5 â‡ˆ00000000fffb4be5
stampKind: i32
value: int[-308251|0xfffffffffffb4be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2028 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2010 
=== Predecessor ===
v1562 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B109" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2022 
=== Usages ===
=== Predecessor ===
v1551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2022  <|@  <|@
f <@~|@floating>@ <|@
tid i2023 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -299035
stableDimension: 0
stamp: i32 [-299035] â‡Š00000000fffb6fe5 â‡ˆ00000000fffb6fe5
stampKind: i32
value: int[-299035|0xfffffffffffb6fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2022 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2010 
=== Predecessor ===
v1550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B109" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2018 
=== Usages ===
=== Predecessor ===
v1543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2018  <|@  <|@
f <@~|@floating>@ <|@
tid i2019 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -296243
stableDimension: 0
stamp: i32 [-296243] â‡Š00000000fffb7acd â‡ˆ00000000fffb7acd
stampKind: i32
value: int[-296243|0xfffffffffffb7acd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2018 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2010 
=== Predecessor ===
v1542 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" "B92" "B107" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2013 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-313099 - -295947] â‡Š00000000fffb00c5 â‡ˆ00000000fffb7ffd
valueDescription: i32
=== Inputs ===
merge: v2010 
values: i2019 i2021 i2023 i2029 i2031 
=== Succesors ===
=== Usages ===
v2015 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2010 values: i2019 i2021 i2023 i2029 i2031  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2010 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2018 v2020 v2022 v2028 v2030 
=== Succesors ===
next: v2015 
=== Usages ===
i2013 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2018 v2020 v2022 v2028 v2030 #next: v2015  <|@  <|@
f <@*|@fixed>@ <|@
tid v2015 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?661 
actionAndReason: i2013 
speculation: a1936 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2010 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?661 actionAndReason: i2013 speculation: a1936  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1982 
=== Usages ===
=== Predecessor ===
v1435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1982  <|@  <|@
f <@~|@floating>@ <|@
tid i1983 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -251443
stableDimension: 0
stamp: i32 [-251443] â‡Š00000000fffc29cd â‡ˆ00000000fffc29cd
stampKind: i32
value: int[-251443|0xfffffffffffc29cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1982 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1434 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1976 
=== Usages ===
=== Predecessor ===
v1423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1976  <|@  <|@
f <@~|@floating>@ <|@
tid i1977 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -248883
stableDimension: 0
stamp: i32 [-248883] â‡Š00000000fffc33cd â‡ˆ00000000fffc33cd
stampKind: i32
value: int[-248883|0xfffffffffffc33cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1422 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1970 
=== Usages ===
=== Predecessor ===
v1411 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1970  <|@  <|@
f <@~|@floating>@ <|@
tid i1971 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -246323
stableDimension: 0
stamp: i32 [-246323] â‡Š00000000fffc3dcd â‡ˆ00000000fffc3dcd
stampKind: i32
value: int[-246323|0xfffffffffffc3dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1970 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1410 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1964 
=== Usages ===
=== Predecessor ===
v1399 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1964  <|@  <|@
f <@~|@floating>@ <|@
tid i1965 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -243763
stableDimension: 0
stamp: i32 [-243763] â‡Š00000000fffc47cd â‡ˆ00000000fffc47cd
stampKind: i32
value: int[-243763|0xfffffffffffc47cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1964 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1398 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1958 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1958  <|@  <|@
f <@~|@floating>@ <|@
tid i1959 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -240947
stableDimension: 0
stamp: i32 [-240947] â‡Š00000000fffc52cd â‡ˆ00000000fffc52cd
stampKind: i32
value: int[-240947|0xfffffffffffc52cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1956 
=== Usages ===
=== Predecessor ===
v1383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1956  <|@  <|@
f <@~|@floating>@ <|@
tid i1957 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -240659
stableDimension: 0
stamp: i32 [-240659] â‡Š00000000fffc53ed â‡ˆ00000000fffc53ed
stampKind: i32
value: int[-240659|0xfffffffffffc53ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1956 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1382 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1954 
=== Usages ===
=== Predecessor ===
v1379 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1954  <|@  <|@
f <@~|@floating>@ <|@
tid i1955 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -238619
stableDimension: 0
stamp: i32 [-238619] â‡Š00000000fffc5be5 â‡ˆ00000000fffc5be5
stampKind: i32
value: int[-238619|0xfffffffffffc5be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1954 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1378 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1952 
=== Usages ===
=== Predecessor ===
v1375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1952  <|@  <|@
f <@~|@floating>@ <|@
tid i1953 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -237843
stableDimension: 0
stamp: i32 [-237843] â‡Š00000000fffc5eed â‡ˆ00000000fffc5eed
stampKind: i32
value: int[-237843|0xfffffffffffc5eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1952 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1946 
=== Usages ===
=== Predecessor ===
v1363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1946  <|@  <|@
f <@~|@floating>@ <|@
tid i1947 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -235059
stableDimension: 0
stamp: i32 [-235059] â‡Š00000000fffc69cd â‡ˆ00000000fffc69cd
stampKind: i32
value: int[-235059|0xfffffffffffc69cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1946 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1362 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1942 
=== Usages ===
=== Predecessor ===
v1355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1942  <|@  <|@
f <@~|@floating>@ <|@
tid i1943 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -234515
stableDimension: 0
stamp: i32 [-234515] â‡Š00000000fffc6bed â‡ˆ00000000fffc6bed
stampKind: i32
value: int[-234515|0xfffffffffffc6bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1354 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B3" "B118" "B117" "B116" "B115" "B114" "B12" "B113" "B19" "B112" "B26" "B111" "B33" "B110" "B40" 
    successors 
    xhandlers
    flags 
    probability 2373397003624251392
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1937 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-253715 - -233227] â‡Š00000000fffc00c5 â‡ˆ00000000fffc7ffd
valueDescription: i32
=== Inputs ===
merge: v1933 
values: i1943 i1945 i1947 i1953 i1955 i1957 i1959 i1963 i1965 i1969 i1971 i1975 i1977 i1981 i1983 i1985 
=== Succesors ===
=== Usages ===
v1939 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1933 values: i1943 i1945 i1947 i1953 i1955 i1957 i1959 i1963 i1965 i1969 i1971 i1975 i1977 i1981 i1983 i1985  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1933 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1942 v1944 v1946 v1952 v1954 v1956 v1958 v1962 v1964 v1968 v1970 v1974 v1976 v1980 v1982 v1984 
=== Succesors ===
next: v1939 
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1942 v1944 v1946 v1952 v1954 v1956 v1958 v1962 v1964 v1968 v1970 v1974 v1976 v1980 v1982 v1984 #next: v1939  <|@  <|@
f <@*|@fixed>@ <|@
tid v1939 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i1937 
speculation: a1936 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1933 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i1937 speculation: a1936  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B119" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i2136 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i2136  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/regex/Pattern$CharProperty;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v2221 ?175 ?661 v2253 ?197 v2220 v2209 ?304 ?792 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/regex/Matcher;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v2234 ?166 ?175 v1247 v2233 ?622 ?197 ?102 ?585 v2205 v2222 v2226 v2232 v2281 v2282 v2283 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v7 v115 v2208 ?175 i22 v111 ?197 v931 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?585 ?102 ?175 v1247 v2252 v2206 ?197 ?622 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3776
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 - 
=== Succesors ===
=== Usages ===
v1939 i2136 v2137 i2139 v2143 v2147 v2151 v2155 v2159 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 -  <|@  <|@
f <@~|@floating>@ <|@
tid v2205 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2136 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 2]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2205 
=== Succesors ===
next: v1355 
=== Usages ===
v7 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2205 #next: v1355  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i2136 
=== Succesors ===
=== Usages ===
v1355 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i2136  <|@  <|@
f <@~|@floating>@ <|@
tid a1936 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1939 v2037 v1999 v2015 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1355 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v1352 
falseSuccessor: v1354 
=== Usages ===
=== Predecessor ===
i2136 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v1352 #falseSuccessor: v1354  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7acef4f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction CMP (x: v2|DWORD, y: [v1|QWORD[.] + 16]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B118" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2137 
=== Usages ===
=== Predecessor ===
v1355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2137  <|@  <|@
f <@~|@floating>@ <|@
tid v2252 <|@
result [v3|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v2137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2137 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2252 
=== Succesors ===
next: v1363 
=== Usages ===
v2109 
=== Predecessor ===
v1352 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2252 #next: v1363  <|@  <|@
f <@~|@floating>@ <|@
tid v2108 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2109 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2109 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2137 
y: v2108 
=== Succesors ===
=== Usages ===
v1363 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2137 y: v2108  <|@  <|@
f <@*|@fixed>@ <|@
tid v1363 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2109 
=== Succesors ===
trueSuccessor: v1360 
falseSuccessor: v1362 
=== Usages ===
=== Predecessor ===
v2137 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2109 #trueSuccessor: v1360 #falseSuccessor: v1362  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1367 
=== Usages ===
=== Predecessor ===
v1363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1367  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 v107 v111 v612 v85 v187 ?532 v294 ?792 ?322 v378 v431 ?394 ?459 v516 ?175 ?164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i15 
=== Succesors ===
=== Usages ===
v1367 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v111 
=== Succesors ===
trueSuccessor: v1366 
falseSuccessor: v1364 
=== Usages ===
=== Predecessor ===
v1360 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v111 #trueSuccessor: v1366 #falseSuccessor: v1364  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1944 
=== Usages ===
=== Predecessor ===
v1367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1944  <|@  <|@
f <@~|@floating>@ <|@
tid i1945 <|@
result int[-235283|0xfffffffffffc68ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -235283
stableDimension: 0
stamp: i32 [-235283] â‡Š00000000fffc68ed â‡ˆ00000000fffc68ed
stampKind: i32
value: int[-235283|0xfffffffffffc68ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1944 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1366 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-235283|0xfffffffffffc68ed]] destination: B3 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B117" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2138 
=== Usages ===
=== Predecessor ===
v1367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2138  <|@  <|@
f <@~|@floating>@ <|@
tid v2206 <|@
result [v3|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a2138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2138 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2206 
=== Succesors ===
next: i2139 
=== Usages ===
a923 v2207 
=== Predecessor ===
v1364 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2206 #next: i2139  <|@  <|@
f <@~|@floating>@ <|@
tid v2207 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2138 
=== Succesors ===
=== Usages ===
i2139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2139 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2207 
=== Succesors ===
next: v1375 
=== Usages ===
v115 v931 
=== Predecessor ===
a2138 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2207 #next: v1375  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i2139 
=== Succesors ===
=== Usages ===
v1375 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i2139  <|@  <|@
f <@*|@fixed>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v1372 
falseSuccessor: v1374 
=== Usages ===
=== Predecessor ===
i2139 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v1372 #falseSuccessor: v1374  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B116" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1379 
=== Usages ===
=== Predecessor ===
v1375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1379  <|@  <|@
f <@~|@floating>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i2139 
=== Succesors ===
=== Usages ===
v1379 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i2139  <|@  <|@
f <@*|@fixed>@ <|@
tid v1379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v931 
=== Succesors ===
trueSuccessor: v1376 
falseSuccessor: v1378 
=== Usages ===
=== Predecessor ===
v1372 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v931 #trueSuccessor: v1376 #falseSuccessor: v1378  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B115" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2140 
=== Usages ===
i2140 
=== Predecessor ===
v1379 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2140  <|@  <|@
f <@~|@floating>@ <|@
tid a923 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2138 
=== Succesors ===
=== Usages ===
v2208 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2138  <|@  <|@
f <@~|@floating>@ <|@
tid v2208 <|@
result [v6|QWORD[.] + v2|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a923 
index: i3 
=== Succesors ===
=== Usages ===
i2140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a923 index: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2140 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1376 
address: v2208 
=== Succesors ===
next: v1383 
=== Usages ===
i939 j1268 v1345 v1347 
=== Predecessor ===
v1376 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1376 address: v2208 #next: v1383  <|@  <|@
f <@~|@floating>@ <|@
tid i1344 <|@
result short[-10240|0xffffffffffffd800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
rawvalue: -10240
stableDimension: 0
stamp: i16 [-10240] â‡Š000000000000d800 â‡ˆ000000000000d800
stampKind: i16
value: short[-10240|0xffffffffffffd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1345 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2140 
y: i1344 
=== Succesors ===
=== Usages ===
v1383 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2140 y: i1344  <|@  <|@
f <@*|@fixed>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1345 
=== Succesors ===
trueSuccessor: v1380 
falseSuccessor: v1382 
=== Usages ===
=== Predecessor ===
i2140 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1345 #trueSuccessor: v1380 #falseSuccessor: v1382  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSX [v6|QWORD[.] + v2|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: -10240 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B114" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2141 
=== Usages ===
=== Predecessor ===
v1383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2141  <|@  <|@
f <@~|@floating>@ <|@
tid v2253 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v2141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2141 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2253 
=== Succesors ===
next: v1387 
=== Usages ===
v2111 
=== Predecessor ===
v1380 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2253 #next: v1387  <|@  <|@
f <@~|@floating>@ <|@
tid v2110 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2111 v2114 v2116 v2118 v2120 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2111 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2141 
y: v2110 
=== Succesors ===
=== Usages ===
v1387 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2141 y: v2110  <|@  <|@
f <@*|@fixed>@ <|@
tid v1387 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2111 
=== Succesors ===
trueSuccessor: v1384 
falseSuccessor: v1386 
=== Usages ===
=== Predecessor ===
v2141 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2111 #trueSuccessor: v1384 #falseSuccessor: v1386  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2142 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2142  <|@  <|@
f <@~|@floating>@ <|@
tid v2209 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2142 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2142 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2209 
=== Succesors ===
next: v2143 
=== Usages ===
?322 v2254 v2210 v2211 ?388 v2280 
=== Predecessor ===
v1384 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2209 #next: v2143  <|@  <|@
f <@~|@floating>@ <|@
tid v2254 <|@
result [v8|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2142 
=== Succesors ===
=== Usages ===
v2143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2143 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2254 
=== Succesors ===
next: v270 
=== Usages ===
v2114 v2113 
=== Predecessor ===
a2142 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2254 #next: v270  <|@  <|@
f <@~|@floating>@ <|@
tid v2112 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2113 v2115 v2117 v2119 v2121 v2124 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2113 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2143 
y: v2112 
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2143 y: v2112  <|@  <|@
f <@~|@floating>@ <|@
tid v2210 <|@
result [v8|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2142 
=== Succesors ===
=== Usages ===
i2144 a2146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2142  <|@  <|@
f <@~|@floating>@ <|@
tid i939 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
resultBits: 32
stamp: i32 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i2140 
=== Succesors ===
=== Usages ===
?792 ?175 ?197 v345 ?304 ?661 v242 v246 v1146 ?1924 ?322 v349 v313 ?388 v482 v1020 v309 v486 ?441 v1013 ?394 v446 ?459 v450 ?526 v555 v1006 v992 v559 v999 ?532 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2140  <|@  <|@
tid ?197 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3778
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i939 
=== Succesors ===
=== Usages ===
?304 ?792 ?661 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i939  <|@  <|@
tid ?110 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3779
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - 
=== Succesors ===
=== Usages ===
?585 ?102 ?166 ?622 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2127 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2128 v2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 43]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v29 i22 i259 i100 v634 v147 v903 v893 i620 i259 i259 i664 i664 i259 i259 i259 i664 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 35]
stamp: i32
=== Inputs ===
x: i3 
y: i28 
=== Succesors ===
=== Usages ===
v1247 v1239 v1097 ?102 v1226 v1108 ?622 v1219 v1129 ?585 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid v2226 <|@
result [v1|QWORD[.] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a2173 a2194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2222 <|@
result [v1|QWORD[.] + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a2169 a2190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2122 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2123 v2129 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2221 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2167 a2188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.5000557636836476
=== Inputs ===
condition: v2113 
=== Succesors ===
trueSuccessor: v263 
falseSuccessor: v269 
=== Usages ===
=== Predecessor ===
v2143 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2113 #trueSuccessor: v263 #falseSuccessor: v269  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v9|DWORD = MOV [v8|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVZX v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602679321447256704
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2144 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2144 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2210 
=== Succesors ===
next: v312 
=== Usages ===
v309 
=== Predecessor ===
v263 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2210 #next: v312  <|@  <|@
f <@~|@floating>@ <|@
tid v309 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i939 
y: i2144 
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i939 y: i2144  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.01987898583705925
=== Inputs ===
condition: v309 
=== Succesors ===
trueSuccessor: v310 
falseSuccessor: v311 
=== Usages ===
=== Predecessor ===
i2144 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v309 #trueSuccessor: v310 #falseSuccessor: v311  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v8|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576883988367814258
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v793 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v793  <|@  <|@
f <@*|@fixed>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
v310 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4602500749766030220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2145 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2145  <|@  <|@
f <@~|@floating>@ <|@
tid v2211 <|@
result [v8|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2142 
=== Succesors ===
=== Usages ===
i2145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2145 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2211 
=== Succesors ===
next: v1395 
=== Usages ===
v313 
=== Predecessor ===
v311 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2211 #next: v1395  <|@  <|@
f <@~|@floating>@ <|@
tid v313 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2145 
y: i939 
=== Succesors ===
=== Usages ===
v1395 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2145 y: i939  <|@  <|@
f <@*|@fixed>@ <|@
tid v1395 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v313 
=== Succesors ===
trueSuccessor: v1394 
falseSuccessor: v1392 
=== Usages ===
=== Predecessor ===
i2145 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v313 #trueSuccessor: v1394 #falseSuccessor: v1392  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v8|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1962 
=== Usages ===
=== Predecessor ===
v1395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1962  <|@  <|@
f <@~|@floating>@ <|@
tid i1963 <|@
result int[-243475|0xfffffffffffc48ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -243475
stableDimension: 0
stamp: i32 [-243475] â‡Š00000000fffc48ed â‡ˆ00000000fffc48ed
stampKind: i32
value: int[-243475|0xfffffffffffc48ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1962 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1394 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-243475|0xfffffffffffc48ed]] destination: B12 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B89" 
    xhandlers
    flags 
    probability 4602500749766030220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v720 
=== Usages ===
=== Predecessor ===
v1395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v720  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
v1392 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B13 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" "B113" 
    xhandlers
    flags 
    probability 4602677814623427328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1399 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1399  <|@  <|@
f <@~|@floating>@ <|@
tid v2114 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2143 
y: v2110 
=== Succesors ===
=== Usages ===
v1399 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2143 y: v2110  <|@  <|@
f <@*|@fixed>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2114 
=== Succesors ===
trueSuccessor: v1396 
falseSuccessor: v1398 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2114 #trueSuccessor: v1396 #falseSuccessor: v1398  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4602677814623427328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2146 
=== Usages ===
=== Predecessor ===
v1399 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2146 <|@
result v12|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2210 
=== Succesors ===
next: v2147 
=== Usages ===
?394 v2255 v2212 v2213 ?441 v2279 
=== Predecessor ===
v1396 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2210 #next: v2147  <|@  <|@
f <@~|@floating>@ <|@
tid v2255 <|@
result [v12|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2146 
=== Succesors ===
=== Usages ===
v2147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2147 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2255 
=== Succesors ===
next: v335 
=== Usages ===
v2116 v2115 
=== Predecessor ===
a2146 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2255 #next: v335  <|@  <|@
f <@~|@floating>@ <|@
tid v2115 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2147 
y: v2112 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2147 y: v2112  <|@  <|@
f <@~|@floating>@ <|@
tid v2212 <|@
result [v12|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2146 
=== Succesors ===
=== Usages ===
i2148 a2150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2146  <|@  <|@
tid ?304 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?197 
values: a1 i939 
=== Succesors ===
=== Usages ===
?388 ?1928 ?322 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?197 values: a1 i939  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.5000557636836476
=== Inputs ===
condition: v2115 
=== Succesors ===
trueSuccessor: v328 
falseSuccessor: v334 
=== Usages ===
=== Predecessor ===
v2147 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2115 #trueSuccessor: v328 #falseSuccessor: v334  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v13|DWORD = MOV [v12|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598175219433241686
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2148 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2148 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2212 
=== Succesors ===
next: v348 
=== Usages ===
v345 
=== Predecessor ===
v328 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2212 #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid v345 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i939 
y: i2148 
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i939 y: i2148  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.01987898583705925
=== Inputs ===
condition: v345 
=== Succesors ===
trueSuccessor: v346 
falseSuccessor: v347 
=== Usages ===
=== Predecessor ===
i2148 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v345 #trueSuccessor: v346 #falseSuccessor: v347  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v12|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B50" 
    xhandlers
    flags 
    probability 4572379749647744704
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v809 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v809  <|@  <|@
f <@*|@fixed>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v807 
=== Predecessor ===
v346 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597996165449052256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2149 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2149  <|@  <|@
f <@~|@floating>@ <|@
tid v2213 <|@
result [v12|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2146 
=== Succesors ===
=== Usages ===
i2149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2149 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2213 
=== Succesors ===
next: v1407 
=== Usages ===
v349 
=== Predecessor ===
v347 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2213 #next: v1407  <|@  <|@
f <@~|@floating>@ <|@
tid v349 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2149 
y: i939 
=== Succesors ===
=== Usages ===
v1407 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2149 y: i939  <|@  <|@
f <@*|@fixed>@ <|@
tid v1407 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v349 
=== Succesors ===
trueSuccessor: v1406 
falseSuccessor: v1404 
=== Usages ===
=== Predecessor ===
i2149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v349 #trueSuccessor: v1406 #falseSuccessor: v1404  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v12|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1968 
=== Usages ===
=== Predecessor ===
v1407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1968  <|@  <|@
f <@~|@floating>@ <|@
tid i1969 <|@
result int[-246035|0xfffffffffffc3eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -246035
stableDimension: 0
stamp: i32 [-246035] â‡Š00000000fffc3eed â‡ˆ00000000fffc3eed
stampKind: i32
value: int[-246035|0xfffffffffffc3eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1968 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1406 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-246035|0xfffffffffffc3eed]] destination: B19 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B89" 
    xhandlers
    flags 
    probability 4597996165449052256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v737 
=== Usages ===
=== Predecessor ===
v1407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v737  <|@  <|@
f <@*|@fixed>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
v1404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B20 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B112" 
    xhandlers
    flags 
    probability 4598173210558871978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1411 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1411  <|@  <|@
f <@~|@floating>@ <|@
tid v2116 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2147 
y: v2110 
=== Succesors ===
=== Usages ===
v1411 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2147 y: v2110  <|@  <|@
f <@*|@fixed>@ <|@
tid v1411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2116 
=== Succesors ===
trueSuccessor: v1408 
falseSuccessor: v1410 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2116 #trueSuccessor: v1408 #falseSuccessor: v1410  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B28" 
    xhandlers
    flags 
    probability 4598173210558871978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2150 
=== Usages ===
=== Predecessor ===
v1411 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2150 <|@
result v14|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2212 
=== Succesors ===
next: v2151 
=== Usages ===
?459 v2256 v2214 v2215 ?526 v2278 
=== Predecessor ===
v1408 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2212 #next: v2151  <|@  <|@
f <@~|@floating>@ <|@
tid v2256 <|@
result [v14|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2150 
=== Succesors ===
=== Usages ===
v2151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2151 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2256 
=== Succesors ===
next: v407 
=== Usages ===
v2118 v2117 
=== Predecessor ===
a2150 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2256 #next: v407  <|@  <|@
f <@~|@floating>@ <|@
tid v2117 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2151 
y: v2112 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2151 y: v2112  <|@  <|@
f <@~|@floating>@ <|@
tid v2214 <|@
result [v14|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2150 
=== Succesors ===
=== Usages ===
i2152 a2154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2150  <|@  <|@
tid ?388 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?304 
values: a2142 i939 
=== Succesors ===
=== Usages ===
?441 ?1927 ?394 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?304 values: a2142 i939  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.5000557636836476
=== Inputs ===
condition: v2117 
=== Succesors ===
trueSuccessor: v400 
falseSuccessor: v406 
=== Usages ===
=== Predecessor ===
v2151 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2117 #trueSuccessor: v400 #falseSuccessor: v406  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v12|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v15|DWORD = MOV [v14|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v15|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4593670615256664101
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2152 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2152 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2214 
=== Succesors ===
next: v449 
=== Usages ===
v446 
=== Predecessor ===
v400 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2214 #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid v446 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i939 
y: i2152 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i939 y: i2152  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.01987898583705925
=== Inputs ===
condition: v446 
=== Succesors ===
trueSuccessor: v447 
falseSuccessor: v448 
=== Usages ===
=== Predecessor ===
i2152 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v446 #trueSuccessor: v447 #falseSuccessor: v448  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v14|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4567875510998951477
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v825 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v825  <|@  <|@
f <@*|@fixed>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v823 
=== Predecessor ===
v447 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4593491581241894131
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2153 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2153  <|@  <|@
f <@~|@floating>@ <|@
tid v2215 <|@
result [v14|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2150 
=== Succesors ===
=== Usages ===
i2153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2153 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2215 
=== Succesors ===
next: v1419 
=== Usages ===
v450 
=== Predecessor ===
v448 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2215 #next: v1419  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2153 
y: i939 
=== Succesors ===
=== Usages ===
v1419 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2153 y: i939  <|@  <|@
f <@*|@fixed>@ <|@
tid v1419 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v450 
=== Succesors ===
trueSuccessor: v1418 
falseSuccessor: v1416 
=== Usages ===
=== Predecessor ===
i2153 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v450 #trueSuccessor: v1418 #falseSuccessor: v1416  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v14|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1974 
=== Usages ===
=== Predecessor ===
v1419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1974  <|@  <|@
f <@~|@floating>@ <|@
tid i1975 <|@
result int[-248595|0xfffffffffffc34ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -248595
stableDimension: 0
stamp: i32 [-248595] â‡Š00000000fffc34ed â‡ˆ00000000fffc34ed
stampKind: i32
value: int[-248595|0xfffffffffffc34ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1974 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1418 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-248595|0xfffffffffffc34ed]] destination: B26 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B55" 
    xhandlers
    flags 
    probability 4593491581241894131
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v1419 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v771  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
v1416 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B27 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" "B111" 
    xhandlers
    flags 
    probability 4593668606606338863
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1423 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1423  <|@  <|@
f <@~|@floating>@ <|@
tid v2118 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2151 
y: v2110 
=== Succesors ===
=== Usages ===
v1423 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2151 y: v2110  <|@  <|@
f <@*|@fixed>@ <|@
tid v1423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2118 
=== Succesors ===
trueSuccessor: v1420 
falseSuccessor: v1422 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2118 #trueSuccessor: v1420 #falseSuccessor: v1422  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v15|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4593668606606338863
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2154 
=== Usages ===
=== Predecessor ===
v1423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2154 <|@
result v16|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2214 
=== Succesors ===
next: v2155 
=== Usages ===
?532 v2257 v2216 v2217 ?1924 v2277 
=== Predecessor ===
v1420 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2214 #next: v2155  <|@  <|@
f <@~|@floating>@ <|@
tid v2257 <|@
result [v16|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2154 
=== Succesors ===
=== Usages ===
v2155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2155 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2257 
=== Succesors ===
next: v472 
=== Usages ===
v2120 v2119 
=== Predecessor ===
a2154 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2257 #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid v2119 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2155 
y: v2112 
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2155 y: v2112  <|@  <|@
f <@~|@floating>@ <|@
tid v2216 <|@
result [v16|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2154 
=== Succesors ===
=== Usages ===
i2156 a2158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2154  <|@  <|@
tid ?441 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?388 
values: a2146 i939 
=== Succesors ===
=== Usages ===
?526 ?1926 ?459 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?388 values: a2146 i939  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.5000557636836476
=== Inputs ===
condition: v2119 
=== Succesors ===
trueSuccessor: v465 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
v2155 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2119 #trueSuccessor: v465 #falseSuccessor: v471  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4589166011192121245
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2156 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2156 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2216 
=== Succesors ===
next: v485 
=== Usages ===
v482 
=== Predecessor ===
v465 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2216 #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i939 
y: i2156 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i939 y: i2156  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.01987898583705925
=== Inputs ===
condition: v482 
=== Succesors ===
trueSuccessor: v483 
falseSuccessor: v484 
=== Usages ===
=== Predecessor ===
i2156 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v482 #trueSuccessor: v483 #falseSuccessor: v484  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v16|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B46" 
    xhandlers
    flags 
    probability 4563371272421426627
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v841 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v841  <|@  <|@
f <@*|@fixed>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
v483 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4588986997144543599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2157 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2157  <|@  <|@
f <@~|@floating>@ <|@
tid v2217 <|@
result [v16|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2154 
=== Succesors ===
=== Usages ===
i2157 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2157 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2217 
=== Succesors ===
next: v1431 
=== Usages ===
v486 
=== Predecessor ===
v484 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2217 #next: v1431  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2157 
y: i939 
=== Succesors ===
=== Usages ===
v1431 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2157 y: i939  <|@  <|@
f <@*|@fixed>@ <|@
tid v1431 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v486 
=== Succesors ===
trueSuccessor: v1430 
falseSuccessor: v1428 
=== Usages ===
=== Predecessor ===
i2157 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v486 #trueSuccessor: v1430 #falseSuccessor: v1428  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v16|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1980 
=== Usages ===
=== Predecessor ===
v1431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1980  <|@  <|@
f <@~|@floating>@ <|@
tid i1981 <|@
result int[-251155|0xfffffffffffc2aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -251155
stableDimension: 0
stamp: i32 [-251155] â‡Š00000000fffc2aed â‡ˆ00000000fffc2aed
stampKind: i32
value: int[-251155|0xfffffffffffc2aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1980 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-251155|0xfffffffffffc2aed]] destination: B33 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588986997144543599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v788 
=== Usages ===
=== Predecessor ===
v1431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v788  <|@  <|@
f <@*|@fixed>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
v1428 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B34 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B110" 
    xhandlers
    flags 
    probability 4589164002765815489
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1435 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1435  <|@  <|@
f <@~|@floating>@ <|@
tid v2120 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2155 
y: v2110 
=== Succesors ===
=== Usages ===
v1435 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2155 y: v2110  <|@  <|@
f <@*|@fixed>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2120 
=== Succesors ===
trueSuccessor: v1432 
falseSuccessor: v1434 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2120 #trueSuccessor: v1432 #falseSuccessor: v1434  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B42" 
    xhandlers
    flags 
    probability 4589164002765815489
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2158 
=== Usages ===
=== Predecessor ===
v1435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2158 <|@
result v18|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2216 
=== Succesors ===
next: v2159 
=== Usages ===
a985 v2258 v2218 v2219 
=== Predecessor ===
v1432 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2216 #next: v2159  <|@  <|@
f <@~|@floating>@ <|@
tid v2258 <|@
result [v18|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2158 
=== Succesors ===
=== Usages ===
v2159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2159 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v2258 
=== Succesors ===
next: v545 
=== Usages ===
v2121 
=== Predecessor ===
a2158 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v2258 #next: v545  <|@  <|@
f <@~|@floating>@ <|@
tid v2121 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2159 
y: v2112 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2159 y: v2112  <|@  <|@
tid ?526 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?441 
values: a2150 i939 
=== Succesors ===
=== Usages ===
?1925 ?1924 ?532 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?441 values: a2150 i939  <|@  <|@
f <@*|@fixed>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.5000557636836476
=== Inputs ===
condition: v2121 
=== Succesors ===
trueSuccessor: v538 
falseSuccessor: v544 
=== Usages ===
=== Predecessor ===
v2159 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2121 #trueSuccessor: v538 #falseSuccessor: v544  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v16|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v19|DWORD = MOV [v18|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v19|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4584661407239600622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2160 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2160  <|@  <|@
f <@~|@floating>@ <|@
tid v2218 <|@
result [v18|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2158 
=== Succesors ===
=== Usages ===
i2160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2160 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2218 
=== Succesors ===
next: v558 
=== Usages ===
v555 
=== Predecessor ===
v538 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2218 #next: v558  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i939 
y: i2160 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i939 y: i2160  <|@  <|@
f <@*|@fixed>@ <|@
tid v558 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.01987898583705925
=== Inputs ===
condition: v555 
=== Succesors ===
trueSuccessor: v556 
falseSuccessor: v557 
=== Usages ===
=== Predecessor ===
i2160 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v555 #trueSuccessor: v556 #falseSuccessor: v557  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v18|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558867033915162205
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v857 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v857  <|@  <|@
f <@*|@fixed>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v855 
=== Predecessor ===
v556 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4584482413156988411
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2161 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2161  <|@  <|@
f <@~|@floating>@ <|@
tid v2219 <|@
result [v18|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2158 
=== Succesors ===
=== Usages ===
i2161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2161 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2219 
=== Succesors ===
next: v1443 
=== Usages ===
v559 
=== Predecessor ===
v557 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2219 #next: v1443  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2161 
y: i939 
=== Succesors ===
=== Usages ===
v1443 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2161 y: i939  <|@  <|@
f <@*|@fixed>@ <|@
tid v1443 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v559 
=== Succesors ===
trueSuccessor: v1442 
falseSuccessor: v1440 
=== Usages ===
=== Predecessor ===
i2161 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v559 #trueSuccessor: v1442 #falseSuccessor: v1440  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v18|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1984 
=== Usages ===
=== Predecessor ===
v1443 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1984  <|@  <|@
f <@~|@floating>@ <|@
tid i1985 <|@
result int[-253715|0xfffffffffffc20ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -253715
stableDimension: 0
stamp: i32 [-253715] â‡Š00000000fffc20ed â‡ˆ00000000fffc20ed
stampKind: i32
value: int[-253715|0xfffffffffffc20ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1984 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1442 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-253715|0xfffffffffffc20ed]] destination: B40 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 4584482413156988411
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v754 
=== Usages ===
=== Predecessor ===
v1443 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v754  <|@  <|@
f <@*|@fixed>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
v1440 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B41 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B54" 
    xhandlers
    flags 
    probability 4584659399037289364
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i514 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i514  <|@  <|@
f <@~|@floating>@ <|@
tid a985 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2158 
=== Succesors ===
=== Usages ===
v992 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2158  <|@  <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@774a95d5
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a985 i939 
=== Succesors ===
=== Usages ===
i514 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a985 i939  <|@  <|@
tid ?1924 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?526 
values: a2154 i939 
=== Succesors ===
=== Usages ===
i514 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?526 values: a2154 i939  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i514 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 5
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v992 
stateDuring: ?1924 
=== Succesors ===
next: v519 
=== Usages ===
v516 
=== Predecessor ===
v544 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v992 stateDuring: ?1924 #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i514 
y: i15 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i514 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.010037089919821551
=== Inputs ===
condition: v516 
=== Succesors ===
trueSuccessor: v517 
falseSuccessor: v518 
=== Usages ===
=== Predecessor ===
i514 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v516 #trueSuccessor: v517 #falseSuccessor: v518  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v16|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v14|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v12|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:5, 5, 5, 5, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4554418386289649169
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v856 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v856  <|@  <|@
f <@*|@fixed>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v855 
=== Predecessor ===
v517 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B38" 
    successors "B45" "B53" 
    xhandlers
    flags 
    probability 4561758415237886310
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v856 v857 
=== Succesors ===
next: a2162 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v856 v857 #next: a2162  <|@  <|@
f <@~|@floating>@ <|@
tid v2277 <|@
result [v16|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2154 
=== Succesors ===
=== Usages ===
a2162 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2162 <|@
result v22|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2277 
=== Succesors ===
next: v2269 
=== Usages ===
a995 v2269 
=== Predecessor ===
v855 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2277 #next: v2269  <|@  <|@
tid ?532 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?526 
values: a2154 i939 i15 
=== Succesors ===
=== Usages ===
v2269 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?526 values: a2154 i939 i15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2269 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?532 
object: a2162 
=== Succesors ===
next: i522 
=== Usages ===
=== Predecessor ===
a2162 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?532 object: a2162 #next: i522  <|@  <|@
f <@~|@floating>@ <|@
tid a995 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2162 
=== Succesors ===
=== Usages ===
v999 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2162  <|@  <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@709d2eb3
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a995 i939 
=== Succesors ===
=== Usages ===
i522 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a995 i939  <|@  <|@
tid ?1925 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?526 
values: - - 
=== Succesors ===
=== Usages ===
i522 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?526 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i522 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v999 
stateDuring: ?1925 
=== Succesors ===
next: v434 
=== Usages ===
v431 
=== Predecessor ===
v2269 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v999 stateDuring: ?1925 #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i522 
y: i15 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i522 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.010037089919821551
=== Inputs ===
condition: v431 
=== Succesors ===
trueSuccessor: v432 
falseSuccessor: v433 
=== Usages ===
=== Predecessor ===
i522 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v431 #trueSuccessor: v432 #falseSuccessor: v433  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v16|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v16|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v14|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v12|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v22|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v14|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v12|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 5, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    probability 4531654368214683246
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v840 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v840  <|@  <|@
f <@*|@fixed>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
v432 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B31" 
    successors "B47" "B52" 
    xhandlers
    flags 
    probability 4563414528223827680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v840 v841 
=== Succesors ===
next: a2163 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v840 v841 #next: a2163  <|@  <|@
f <@~|@floating>@ <|@
tid v2278 <|@
result [v14|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2150 
=== Succesors ===
=== Usages ===
a2163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2163 <|@
result v25|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2278 
=== Succesors ===
next: v2270 
=== Usages ===
a1002 v2270 
=== Predecessor ===
v839 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2278 #next: v2270  <|@  <|@
tid ?459 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?441 
values: a2150 i939 i15 
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?441 values: a2150 i939 i15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?459 
object: a2163 
=== Succesors ===
next: i437 
=== Usages ===
=== Predecessor ===
a2163 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?459 object: a2163 #next: i437  <|@  <|@
f <@~|@floating>@ <|@
tid a1002 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2163 
=== Succesors ===
=== Usages ===
v1006 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2163  <|@  <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@e136e72
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a1002 i939 
=== Succesors ===
=== Usages ===
i437 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1002 i939  <|@  <|@
tid ?1926 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?441 
values: - - 
=== Succesors ===
=== Usages ===
i437 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?441 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i437 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1006 
stateDuring: ?1926 
=== Succesors ===
next: v381 
=== Usages ===
v378 
=== Predecessor ===
v2270 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1006 stateDuring: ?1926 #next: v381  <|@  <|@
f <@~|@floating>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i437 
y: i15 
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i437 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.010037089919821551
=== Inputs ===
condition: v378 
=== Succesors ===
trueSuccessor: v379 
falseSuccessor: v380 
=== Usages ===
=== Predecessor ===
i437 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v378 #trueSuccessor: v379 #falseSuccessor: v380  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = MOV [v14|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v14|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v12|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v25|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v12|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v27|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4533532809550432117
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v824 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v824  <|@  <|@
f <@*|@fixed>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v823 
=== Predecessor ===
v379 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B24" 
    successors "B49" "B51" 
    xhandlers
    flags 
    probability 4567904476561619772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v824 v825 
=== Succesors ===
next: a2164 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v824 v825 #next: a2164  <|@  <|@
f <@~|@floating>@ <|@
tid v2279 <|@
result [v12|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2146 
=== Succesors ===
=== Usages ===
a2164 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2164 <|@
result v28|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2279 
=== Succesors ===
next: v2271 
=== Usages ===
a1009 v2271 
=== Predecessor ===
v823 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2279 #next: v2271  <|@  <|@
tid ?394 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?388 
values: a2146 i939 i15 
=== Succesors ===
=== Usages ===
v2271 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?388 values: a2146 i939 i15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2271 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?394 
object: a2164 
=== Succesors ===
next: i384 
=== Usages ===
=== Predecessor ===
a2164 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?394 object: a2164 #next: i384  <|@  <|@
f <@~|@floating>@ <|@
tid a1009 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2164 
=== Succesors ===
=== Usages ===
v1013 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2164  <|@  <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@286fe00d
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a1009 i939 
=== Succesors ===
=== Usages ===
i384 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1009 i939  <|@  <|@
tid ?1927 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?388 
values: - - 
=== Succesors ===
=== Usages ===
i384 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?388 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i384 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1013 
stateDuring: ?1927 
=== Succesors ===
next: v297 
=== Usages ===
v294 
=== Predecessor ===
v2271 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1013 stateDuring: ?1927 #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i384 
y: i15 
=== Succesors ===
=== Usages ===
v297 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i384 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.010037089919821551
=== Inputs ===
condition: v294 
=== Succesors ===
trueSuccessor: v295 
falseSuccessor: v296 
=== Usages ===
=== Predecessor ===
i384 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v294 #trueSuccessor: v295 #falseSuccessor: v296  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[.] = MOV [v12|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v12|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v28|DWORD[.] * 8] state [bci:8, 5, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4538018870717512057
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v808 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v808  <|@  <|@
f <@*|@fixed>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v807 
=== Predecessor ===
v295 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B17" 
    successors "B55" 
    xhandlers
    flags 
    probability 4572408646700802489
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v808 v809 
=== Succesors ===
next: a2165 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v808 v809 #next: a2165  <|@  <|@
f <@~|@floating>@ <|@
tid v2280 <|@
result [v8|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2142 
=== Succesors ===
=== Usages ===
a2165 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2165 <|@
result v31|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2280 
=== Succesors ===
next: v2272 
=== Usages ===
a1016 v2272 
=== Predecessor ===
v807 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2280 #next: v2272  <|@  <|@
tid ?322 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?304 
values: a2142 i939 i15 
=== Succesors ===
=== Usages ===
v2272 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?304 values: a2142 i939 i15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?322 
object: a2165 
=== Succesors ===
next: i300 
=== Usages ===
=== Predecessor ===
a2165 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?322 object: a2165 #next: i300  <|@  <|@
f <@~|@floating>@ <|@
tid a1016 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a2165 
=== Succesors ===
=== Usages ===
v1020 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2165  <|@  <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@ba83ce8
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a1016 i939 
=== Succesors ===
=== Usages ===
i300 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1016 i939  <|@  <|@
tid ?1928 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?304 
values: - - 
=== Succesors ===
=== Usages ===
i300 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?304 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i300 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1020 
stateDuring: ?1928 
=== Succesors ===
next: v276 
=== Usages ===
i259 
=== Predecessor ===
v2272 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1020 stateDuring: ?1928 #next: v276  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
i300 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[.] = MOV [v8|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v31|DWORD[.] * 8] state [bci:8, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD] destination: B50 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B89" 
    xhandlers
    flags 
    probability 4567846682455504201
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v662 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v662  <|@  <|@
f <@*|@fixed>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
v296 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B51 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    probability 4563356597098491089
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v653 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v653  <|@  <|@
f <@*|@fixed>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
v380 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B52 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    probability 4561671903633084204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v686  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
v433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B55" 
    xhandlers
    flags 
    probability 4584569043370954236
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v703 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v703  <|@  <|@
f <@*|@fixed>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
v518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" "B53" "B54" "B41" "B27" "B34" 
    successors "B56" "B88" 
    xhandlers
    flags 
    probability 4598219208763472101
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i259 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: i32 [0 - 1] â‡ˆ0000000000000001
valueDescription: i32
=== Inputs ===
merge: v256 
values: i300 i28 i28 i28 i28 i28 i28 
=== Succesors ===
=== Usages ===
i664 v187 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v256 values: i300 i28 i28 i28 i28 i28 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v276 v653 v686 v703 v754 v771 v788 
=== Succesors ===
next: v190 
=== Usages ===
i259 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v276 v653 v686 v703 v754 v771 v788 #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i259 
y: i15 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i259 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.010037089919821551
=== Inputs ===
condition: v187 
=== Succesors ===
trueSuccessor: v188 
falseSuccessor: v189 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v187 #trueSuccessor: v188 #falseSuccessor: v189  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v34|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4567988925970962079
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v791 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v791  <|@  <|@
f <@*|@fixed>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
v188 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B10" 
    successors "B58" "B86" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v791 v793 
=== Succesors ===
next: a2166 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v791 v793 #next: a2166  <|@  <|@
f <@~|@floating>@ <|@
tid v2220 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2166 <|@
result v35|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2220 
=== Succesors ===
next: v2274 
=== Usages ===
v2260 v2274 v2237 v2238 
=== Predecessor ===
v790 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2220 #next: v2274  <|@  <|@
tid ?792 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?197 
values: a1 i939 i15 
=== Succesors ===
=== Usages ===
v2037 v2274 v2168 i2170 i2174 v2275 i2181 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?197 values: a1 i939 i15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?792 
object: a2166 
=== Succesors ===
next: a2167 
=== Usages ===
=== Predecessor ===
a2166 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?792 object: a2166 #next: a2167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2167 <|@
result v36|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2221 
=== Succesors ===
next: v2168 
=== Usages ===
a1028 v2259 v2223 v2227 v2231 
=== Predecessor ===
v2274 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2221 #next: v2168  <|@  <|@
f <@~|@floating>@ <|@
tid v2259 <|@
result [v36|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2167 
=== Succesors ===
=== Usages ===
v2168 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2168 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?792 
guard: - 
address: v2259 
=== Succesors ===
next: v1471 
=== Usages ===
v2123 
=== Predecessor ===
a2167 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?792 guard: - address: v2259 #next: v1471  <|@  <|@
f <@~|@floating>@ <|@
tid v2123 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2168 
y: v2122 
=== Succesors ===
=== Usages ===
v1471 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2168 y: v2122  <|@  <|@
f <@*|@fixed>@ <|@
tid v1471 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2123 
=== Succesors ===
trueSuccessor: v1468 
falseSuccessor: v1470 
=== Usages ===
=== Predecessor ===
v2168 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2123 #trueSuccessor: v1468 #falseSuccessor: v1470  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v35|DWORD[.] * 8] state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction CMP [v36|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B85" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2169 
=== Usages ===
=== Predecessor ===
v1471 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2169 <|@
result v37|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2222 
=== Succesors ===
next: i2170 
=== Usages ===
a1034 v2224 
=== Predecessor ===
v1468 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2222 #next: i2170  <|@  <|@
f <@~|@floating>@ <|@
tid v2224 <|@
result [v37|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2169 
=== Succesors ===
=== Usages ===
i2170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2170 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?792 
guard: - 
address: v2224 
=== Succesors ===
next: i2171 
=== Usages ===
v1042 
=== Predecessor ===
a2169 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?792 guard: - address: v2224 #next: i2171  <|@  <|@
f <@~|@floating>@ <|@
tid v2223 <|@
result [v36|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2167 
=== Succesors ===
=== Usages ===
i2171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2171 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2223 
=== Succesors ===
next: v1479 
=== Usages ===
v2225 v1042 
=== Predecessor ===
i2170 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2223 #next: v1479  <|@  <|@
f <@~|@floating>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2171 
y: i2170 
=== Succesors ===
=== Usages ===
v1479 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2171 y: i2170  <|@  <|@
f <@*|@fixed>@ <|@
tid v1479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1042 
=== Succesors ===
trueSuccessor: v1476 
falseSuccessor: v1478 
=== Usages ===
=== Predecessor ===
i2171 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1042 #trueSuccessor: v1476 #falseSuccessor: v1478  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction v38|DWORD = MOV [v37|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV [v36|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2172 
=== Usages ===
i2172 
=== Predecessor ===
v1479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2172  <|@  <|@
f <@~|@floating>@ <|@
tid a1034 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2169 
=== Succesors ===
=== Usages ===
v2225 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2169  <|@  <|@
f <@~|@floating>@ <|@
tid v2225 <|@
result [v40|QWORD[.] + v39|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1034 
index: i2171 
=== Succesors ===
=== Usages ===
i2172 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1034 index: i2171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2172 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1476 
address: v2225 
=== Succesors ===
next: v1483 
=== Usages ===
v85 v1088 i1931 ?102 
=== Predecessor ===
v1476 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1476 address: v2225 #next: v1483  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2172 
y: i15 
=== Succesors ===
=== Usages ===
v1483 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2172 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v85 
=== Succesors ===
trueSuccessor: v1482 
falseSuccessor: v1480 
=== Usages ===
=== Predecessor ===
i2172 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v85 #trueSuccessor: v1482 #falseSuccessor: v1480  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV [v40|QWORD[.] + v39|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2044 
=== Usages ===
=== Predecessor ===
v1483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2044  <|@  <|@
f <@~|@floating>@ <|@
tid i2045 <|@
result int[-269075|0xfffffffffffbe4ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -269075
stableDimension: 0
stamp: i32 [-269075] â‡Š00000000fffbe4ed â‡ˆ00000000fffbe4ed
stampKind: i32
value: int[-269075|0xfffffffffffbe4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2035 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2044 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
v1482 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-269075|0xfffffffffffbe4ed]] destination: B60 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B84" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2173 
=== Usages ===
=== Predecessor ===
v1483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2173 <|@
result v42|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2226 
=== Succesors ===
next: i2174 
=== Usages ===
a1055 v2236 v2228 v2235 
=== Predecessor ===
v1480 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2226 #next: i2174  <|@  <|@
f <@~|@floating>@ <|@
tid v2228 <|@
result [v42|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2173 
=== Succesors ===
=== Usages ===
i2174 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2174 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?792 
guard: - 
address: v2228 
=== Succesors ===
next: i2175 
=== Usages ===
v1081 v1090 
=== Predecessor ===
a2173 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?792 guard: - address: v2228 #next: i2175  <|@  <|@
f <@~|@floating>@ <|@
tid v2227 <|@
result [v36|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2167 
=== Succesors ===
=== Usages ===
i2175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2175 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2227 
=== Succesors ===
next: v1491 
=== Usages ===
v1081 i100 v2229 
=== Predecessor ===
i2174 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2227 #next: v1491  <|@  <|@
f <@~|@floating>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2175 
y: i2174 
=== Succesors ===
=== Usages ===
v1491 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2175 y: i2174  <|@  <|@
f <@*|@fixed>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1081 
=== Succesors ===
trueSuccessor: v1488 
falseSuccessor: v1490 
=== Usages ===
=== Predecessor ===
i2175 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1081 #trueSuccessor: v1488 #falseSuccessor: v1490  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction v43|DWORD = MOV [v42|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV [v36|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B83" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1495 
=== Usages ===
i2184 v1088 
=== Predecessor ===
v1491 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1495  <|@  <|@
f <@~|@floating>@ <|@
tid i100 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: i32
=== Inputs ===
x: i2175 
y: i28 
=== Succesors ===
=== Usages ===
v2230 v1090 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2175 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i100 
y: i2174 
=== Succesors ===
=== Usages ===
v1495 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i100 y: i2174  <|@  <|@
f <@*|@fixed>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1090 
=== Succesors ===
trueSuccessor: v1492 
falseSuccessor: v1494 
=== Usages ===
=== Predecessor ===
v1488 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1090 #trueSuccessor: v1492 #falseSuccessor: v1494  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B69" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2176 
=== Usages ===
v1120 v1097 i2183 
=== Predecessor ===
v1495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2176  <|@  <|@
f <@~|@floating>@ <|@
tid v2231 <|@
result [v36|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2167 
=== Succesors ===
=== Usages ===
a2176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2176 <|@
result v46|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2231 
=== Succesors ===
next: v2275 
=== Usages ===
a1100 v2275 v2261 
=== Predecessor ===
v1492 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2231 #next: v2275  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?792 
object: a2176 
=== Succesors ===
next: v2177 
=== Usages ===
=== Predecessor ===
a2176 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?792 object: a2176 #next: v2177  <|@  <|@
f <@~|@floating>@ <|@
tid v2260 <|@
result [v35|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2166 
=== Succesors ===
=== Usages ===
v2177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2177 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2260 
=== Succesors ===
next: v216 
=== Usages ===
v2126 v2124 
=== Predecessor ===
v2275 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2260 #next: v216  <|@  <|@
f <@~|@floating>@ <|@
tid v2124 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2177 
y: v2112 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2177 y: v2112  <|@  <|@
f <@~|@floating>@ <|@
tid v2237 <|@
result [v35|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2166 
=== Succesors ===
=== Usages ===
i2178 a2180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2166  <|@  <|@
f <@*|@fixed>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2124 
=== Succesors ===
trueSuccessor: v209 
falseSuccessor: v215 
=== Usages ===
=== Predecessor ===
v2177 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2124 #trueSuccessor: v209 #falseSuccessor: v215  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[.] = MOV [v36|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v46|DWORD[.] * 8] state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOV [v35|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2178 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2178 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2237 
=== Succesors ===
next: v1503 
=== Usages ===
v242 
=== Predecessor ===
v209 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2237 #next: v1503  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i939 
y: i2178 
=== Succesors ===
=== Usages ===
v1503 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i939 y: i2178  <|@  <|@
f <@*|@fixed>@ <|@
tid v1503 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v242 
=== Succesors ===
trueSuccessor: v1502 
falseSuccessor: v1500 
=== Usages ===
=== Predecessor ===
i2178 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v242 #trueSuccessor: v1502 #falseSuccessor: v1500  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v35|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2056 
=== Usages ===
=== Predecessor ===
v1503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2056  <|@  <|@
f <@~|@floating>@ <|@
tid i2057 <|@
result int[-290323|0xfffffffffffb91ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -290323
stableDimension: 0
stamp: i32 [-290323] â‡Š00000000fffb91ed â‡ˆ00000000fffb91ed
stampKind: i32
value: int[-290323|0xfffffffffffb91ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2035 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2056 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
v1502 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-290323|0xfffffffffffb91ed]] destination: B65 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2179 
=== Usages ===
=== Predecessor ===
v1503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2179  <|@  <|@
f <@~|@floating>@ <|@
tid v2238 <|@
result [v35|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2166 
=== Succesors ===
=== Usages ===
i2179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2166  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2179 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2238 
=== Succesors ===
next: v1507 
=== Usages ===
v246 
=== Predecessor ===
v1500 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2238 #next: v1507  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2179 
y: i939 
=== Succesors ===
=== Usages ===
v1507 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2179 y: i939  <|@  <|@
f <@*|@fixed>@ <|@
tid v1507 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v246 
=== Succesors ===
trueSuccessor: v1506 
falseSuccessor: v1504 
=== Usages ===
=== Predecessor ===
i2179 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v246 #trueSuccessor: v1506 #falseSuccessor: v1504  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v35|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2060 
=== Usages ===
=== Predecessor ===
v1507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2060  <|@  <|@
f <@~|@floating>@ <|@
tid i2061 <|@
result int[-290579|0xfffffffffffb90ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -290579
stableDimension: 0
stamp: i32 [-290579] â‡Š00000000fffb90ed â‡ˆ00000000fffb90ed
stampKind: i32
value: int[-290579|0xfffffffffffb90ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2035 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2060 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
v1506 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-290579|0xfffffffffffb90ed]] destination: B67 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B75" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
v1507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v199  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2265 
=== Predecessor ===
v1504 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B70" "B82" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1511 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1511  <|@  <|@
f <@~|@floating>@ <|@
tid v2125 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2126 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2177 
y: v2125 
=== Succesors ===
=== Usages ===
v1511 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2177 y: v2125  <|@  <|@
f <@*|@fixed>@ <|@
tid v1511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2126 
=== Succesors ===
trueSuccessor: v1508 
falseSuccessor: v1510 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2126 #trueSuccessor: v1508 #falseSuccessor: v1510  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B81" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2180 
=== Usages ===
=== Predecessor ===
v1511 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2180 <|@
result v48|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v2237 
=== Succesors ===
next: i2181 
=== Usages ===
v2240 v2239 
=== Predecessor ===
v1508 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2237 #next: i2181  <|@  <|@
f <@~|@floating>@ <|@
tid v2239 <|@
result [v48|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2180 
=== Succesors ===
=== Usages ===
i2181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2181 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?792 
guard: - 
address: v2239 
=== Succesors ===
next: v1519 
=== Usages ===
v1146 
=== Predecessor ===
a2180 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?792 guard: - address: v2239 #next: v1519  <|@  <|@
f <@~|@floating>@ <|@
tid v1146 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i939 
y: i2181 
=== Succesors ===
=== Usages ===
v1519 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i939 y: i2181  <|@  <|@
f <@*|@fixed>@ <|@
tid v1519 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1146 
=== Succesors ===
trueSuccessor: v1516 
falseSuccessor: v1518 
=== Usages ===
=== Predecessor ===
i2181 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1146 #trueSuccessor: v1516 #falseSuccessor: v1518  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[.] = MOV [v35|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction CMP (x: v10|DWORD, y: [v48|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B80" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1523 
=== Usages ===
i2182 
=== Predecessor ===
v1519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1523  <|@  <|@
f <@~|@floating>@ <|@
tid i1346 <|@
result short[256|0x100] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rawvalue: 256
stableDimension: 0
stamp: i16 [256] â‡Š0000000000000100 â‡ˆ0000000000000100
stampKind: i16
value: short[256|0x100]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1347 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2140 
y: i1346 
=== Succesors ===
=== Usages ===
v1523 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2140 y: i1346  <|@  <|@
f <@*|@fixed>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1347 
=== Succesors ===
trueSuccessor: v1520 
falseSuccessor: v1522 
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1347 #trueSuccessor: v1520 #falseSuccessor: v1522  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B71 -> B72 falseDestination: B71 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2182 
=== Usages ===
=== Predecessor ===
v1523 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2182  <|@  <|@
f <@~|@floating>@ <|@
tid j1268 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
resultBits: 64
stamp: i64 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i2140 
=== Succesors ===
=== Usages ===
v2240 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2140  <|@  <|@
f <@~|@floating>@ <|@
tid v2240 <|@
result [v49|QWORD + v48|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j1268 
index: a2180 
=== Succesors ===
=== Usages ===
i2182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1268 index: a2180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2182 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: v1516 
address: v2240 
=== Succesors ===
next: v1527 
=== Usages ===
i1269 
=== Predecessor ===
v1520 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1516 address: v2240 #next: v1527  <|@  <|@
f <@~|@floating>@ <|@
tid i1269 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i2182 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2182  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1269 
y: i15 
=== Succesors ===
=== Usages ===
v1527 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1269 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v1526 
falseSuccessor: v1524 
=== Usages ===
=== Predecessor ===
i2182 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v1526 #falseSuccessor: v1524  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVZX v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVZXB [v49|QWORD + v48|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v50|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1525 
=== Usages ===
=== Predecessor ===
v1527 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1525  <|@  <|@
tid ?175 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3778
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 i939 i15 
=== Succesors ===
=== Usages ===
v1525 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4 i939 i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1025
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?175 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1526 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?175  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -262419 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2266 
=== Usages ===
=== Predecessor ===
v1527 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2266  <|@  <|@
f <@*|@fixed>@ <|@
tid v2266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2265 
=== Predecessor ===
v1524 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B68" 
    successors "B76" "B79" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2266 v199 
=== Succesors ===
next: i2183 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2266 v199 #next: i2183  <|@  <|@
f <@~|@floating>@ <|@
tid a1055 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2173 
=== Succesors ===
=== Usages ===
v2230 v2229 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2173  <|@  <|@
f <@~|@floating>@ <|@
tid v2230 <|@
result [v51|QWORD[.] + v45|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1055 
index: i100 
=== Succesors ===
=== Usages ===
v1097 i2183 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1055 index: i100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2183 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1492 
address: v2230 
=== Succesors ===
next: i2184 
=== Usages ===
i596 ?102 
=== Predecessor ===
v2265 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1492 address: v2230 #next: i2184  <|@  <|@
f <@~|@floating>@ <|@
tid v2229 <|@
result [v51|QWORD[.] + v44|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1055 
index: i2175 
=== Succesors ===
=== Usages ===
v1088 i2184 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1055 index: i2175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2184 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1488 
address: v2229 
=== Succesors ===
next: v1088 
=== Usages ===
i593 ?102 
=== Predecessor ===
i2183 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1488 address: v2229 #next: v1088  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1488 
address: v2229 
value: i2172 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1097 
=== Usages ===
=== Predecessor ===
i2184 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1488 address: v2229 value: i2172 stateAfter: - lastLocationAccess: - #next: v1097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1492 
address: v2230 
value: i22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2185 
=== Usages ===
=== Predecessor ===
v1088 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1492 address: v2230 value: i22 stateAfter: - lastLocationAccess: - #next: v2185  <|@  <|@
f <@~|@floating>@ <|@
tid v2261 <|@
result [v46|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2176 
=== Succesors ===
=== Usages ===
v2185 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2185 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2261 
=== Succesors ===
next: v134 
=== Usages ===
v2128 
=== Predecessor ===
v1097 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2261 #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid v2128 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2185 
y: v2127 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2185 y: v2127  <|@  <|@
f <@~|@floating>@ <|@
tid a1028 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2167 
=== Succesors ===
=== Usages ===
a587 ?102 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2167  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.7905664707988008
=== Inputs ===
condition: v2128 
=== Succesors ===
trueSuccessor: v127 
falseSuccessor: v133 
=== Usages ===
=== Predecessor ===
v2185 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2128 #trueSuccessor: v127 #falseSuccessor: v133  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOV [v51|QWORD[.] + v45|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOV [v51|QWORD[.] + v44|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + v44|DWORD * 4 + 16], y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + v45|DWORD * 4 + 16], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP [v46|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7905664707988008 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4576838579302148934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2186 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2186  <|@  <|@
f <@~|@floating>@ <|@
tid v2232 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2186 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.acceptMode
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2232 
=== Succesors ===
next: v1531 
=== Usages ===
v147 
=== Predecessor ===
v127 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2232 #next: v1531  <|@  <|@
f <@~|@floating>@ <|@
tid v147 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2186 
y: i28 
=== Succesors ===
=== Usages ===
v1531 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2186 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v1531 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v147 
=== Succesors ===
trueSuccessor: v1530 
falseSuccessor: v1528 
=== Usages ===
=== Predecessor ===
i2186 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v147 #trueSuccessor: v1530 #falseSuccessor: v1528  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2267 
=== Usages ===
=== Predecessor ===
v1531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2267  <|@  <|@
tid ?102 <|@
d <@d|@=== Debug Properties ===
bci: 63
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?110 
values: a1028 a2 i22 a4 i2172 i2184 i2183 
=== Succesors ===
=== Usages ===
v2267 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?110 values: a1028 a2 i22 a4 i2172 i2184 i2183  <|@  <|@
f <@*|@fixed>@ <|@
tid v2267 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1105
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?102 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1530 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?102  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -282899 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v54|QWORD[.] v1|QWORD[.] v11|DWORD v3|QWORD[.] v41|DWORD v53|DWORD v52|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 4576838579302148934
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1108 
=== Usages ===
=== Predecessor ===
v1531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1108  <|@  <|@
f <@~|@floating>@ <|@
tid v2233 <|@
result [v1|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1108 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1108 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3435) [bci: 20]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2233 
value: i22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2187 
=== Usages ===
=== Predecessor ===
v1528 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2233 value: i22 stateAfter: - lastLocationAccess: - #next: i2187  <|@  <|@
f <@~|@floating>@ <|@
tid v2234 <|@
result [v1|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2187 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.first
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 29]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2234 
=== Succesors ===
next: v1120 
=== Usages ===
v1120 
=== Predecessor ===
v1108 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2234 #next: v1120  <|@  <|@
f <@~|@floating>@ <|@
tid v2235 <|@
result [v42|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2173 
=== Succesors ===
=== Usages ===
v1120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1492 
address: v2235 
value: i2187 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1129 
=== Usages ===
=== Predecessor ===
i2187 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1492 address: v2235 value: i2187 stateAfter: - lastLocationAccess: - #next: v1129  <|@  <|@
f <@~|@floating>@ <|@
tid v2236 <|@
result [v42|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2173 
=== Succesors ===
=== Usages ===
v1129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2236 
value: i22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v634 
=== Usages ===
=== Predecessor ===
v1120 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2236 value: i22 stateAfter: - lastLocationAccess: - #next: v634  <|@  <|@
f <@*|@fixed>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 48]
stamp: void
=== Inputs ===
result: i28 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1129 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i28 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 32], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|DWORD[.] * 8 + 16], y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|DWORD[.] * 8 + 20], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B100" 
    xhandlers
    flags 
    probability 4568170562233623375
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v584  <|@  <|@
f <@~|@floating>@ <|@
tid a1100 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2176 
=== Succesors ===
=== Usages ===
a599 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2176  <|@  <|@
f <@*|@fixed>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
v133 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.], v41|DWORD, v53|DWORD, v52|DWORD, v56|QWORD[.]] destination: B79 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2066 
=== Usages ===
=== Predecessor ===
v1523 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2066  <|@  <|@
f <@~|@floating>@ <|@
tid i2067 <|@
result int[-291091|0xfffffffffffb8eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -291091
stableDimension: 0
stamp: i32 [-291091] â‡Š00000000fffb8eed â‡ˆ00000000fffb8eed
stampKind: i32
value: int[-291091|0xfffffffffffb8eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2035 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2066 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
v1522 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-291091|0xfffffffffffb8eed]] destination: B80 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2064 
=== Usages ===
=== Predecessor ===
v1519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2064  <|@  <|@
f <@~|@floating>@ <|@
tid i2065 <|@
result int[-293659|0xfffffffffffb84e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -293659
stableDimension: 0
stamp: i32 [-293659] â‡Š00000000fffb84e5 â‡ˆ00000000fffb84e5
stampKind: i32
value: int[-293659|0xfffffffffffb84e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2035 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2064 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
v1518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-293659|0xfffffffffffb84e5]] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2062 
=== Usages ===
=== Predecessor ===
v1511 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2062  <|@  <|@
f <@~|@floating>@ <|@
tid i2063 <|@
result int[-290867|0xfffffffffffb8fcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -290867
stableDimension: 0
stamp: i32 [-290867] â‡Š00000000fffb8fcd â‡ˆ00000000fffb8fcd
stampKind: i32
value: int[-290867|0xfffffffffffb8fcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2035 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2062 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
v1510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-290867|0xfffffffffffb8fcd]] destination: B82 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2054 
=== Usages ===
=== Predecessor ===
v1495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2054  <|@  <|@
f <@~|@floating>@ <|@
tid i2055 <|@
result int[-279323|0xfffffffffffbbce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -279323
stableDimension: 0
stamp: i32 [-279323] â‡Š00000000fffbbce5 â‡ˆ00000000fffbbce5
stampKind: i32
value: int[-279323|0xfffffffffffbbce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2035 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2054 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
v1494 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-279323|0xfffffffffffbbce5]] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2052 
=== Usages ===
=== Predecessor ===
v1491 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2052  <|@  <|@
f <@~|@floating>@ <|@
tid i2053 <|@
result int[-277019|0xfffffffffffbc5e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -277019
stableDimension: 0
stamp: i32 [-277019] â‡Š00000000fffbc5e5 â‡ˆ00000000fffbc5e5
stampKind: i32
value: int[-277019|0xfffffffffffbc5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2035 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2052 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
v1490 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-277019|0xfffffffffffbc5e5]] destination: B84 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2046 
=== Usages ===
=== Predecessor ===
v1479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2046  <|@  <|@
f <@~|@floating>@ <|@
tid i2047 <|@
result int[-267035|0xfffffffffffbece5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -267035
stableDimension: 0
stamp: i32 [-267035] â‡Š00000000fffbece5 â‡ˆ00000000fffbece5
stampKind: i32
value: int[-267035|0xfffffffffffbece5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2035 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2046 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
v1478 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-267035|0xfffffffffffbece5]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2042 
=== Usages ===
=== Predecessor ===
v1471 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2042  <|@  <|@
f <@~|@floating>@ <|@
tid i2043 <|@
result int[-263731|0xfffffffffffbf9cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -263731
stableDimension: 0
stamp: i32 [-263731] â‡Š00000000fffbf9cd â‡ˆ00000000fffbf9cd
stampKind: i32
value: int[-263731|0xfffffffffffbf9cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2035 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2042 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
v1470 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-263731|0xfffffffffffbf9cd]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B60" "B85" "B84" "B83" "B65" "B67" "B82" "B81" "B80" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2035 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-293659 - -262155] â‡Š00000000fffb80c5 â‡ˆ00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v2032 
values: i2043 i2045 i2047 i2053 i2055 i2057 i2061 i2063 i2065 i2067 
=== Succesors ===
=== Usages ===
v2037 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2032 values: i2043 i2045 i2047 i2053 i2055 i2057 i2061 i2063 i2065 i2067  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2032 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2042 v2044 v2046 v2052 v2054 v2056 v2060 v2062 v2064 v2066 
=== Succesors ===
next: v2037 
=== Usages ===
i2035 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2042 v2044 v2046 v2052 v2054 v2056 v2060 v2062 v2064 v2066 #next: v2037  <|@  <|@
f <@*|@fixed>@ <|@
tid v2037 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?792 
actionAndReason: i2035 
speculation: a1936 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2032 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?792 actionAndReason: i2035 speculation: a1936  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction DEOPT info [bci:8, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B89" 
    xhandlers
    flags 
    probability 4598171908865345136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v660  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
v189 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B51" "B13" "B20" 
    successors "B90" "B108" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i664 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] â‡ˆ0000000000000001
valueDescription: i32
=== Inputs ===
merge: v659 
values: i259 i28 i28 i28 
=== Succesors ===
=== Usages ===
?661 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v659 values: i259 i28 i28 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v660 v662 v720 v737 
=== Succesors ===
next: a2188 
=== Usages ===
i664 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v660 v662 v720 v737 #next: a2188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2188 <|@
result v59|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2221 
=== Succesors ===
next: v2189 
=== Usages ===
a1155 v2262 v2241 v2244 v2248 a2276 
=== Predecessor ===
v659 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2221 #next: v2189  <|@  <|@
tid ?661 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?197 
values: a1 i939 i664 
=== Succesors ===
=== Usages ===
v2015 v2189 i2191 i2195 v2198 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?197 values: a1 i939 i664  <|@  <|@
f <@~|@floating>@ <|@
tid v2262 <|@
result [v59|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2188 
=== Succesors ===
=== Usages ===
v2189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2189 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?661 
guard: - 
address: v2262 
=== Succesors ===
next: v1543 
=== Usages ===
v2129 
=== Predecessor ===
a2188 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?661 guard: - address: v2262 #next: v1543  <|@  <|@
f <@~|@floating>@ <|@
tid v2129 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2189 
y: v2122 
=== Succesors ===
=== Usages ===
v1543 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2189 y: v2122  <|@  <|@
f <@*|@fixed>@ <|@
tid v1543 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2129 
=== Succesors ===
trueSuccessor: v1540 
falseSuccessor: v1542 
=== Usages ===
=== Predecessor ===
v2189 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2129 #trueSuccessor: v1540 #falseSuccessor: v1542  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v58|DWORD 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction CMP [v59|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B107" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2190 
=== Usages ===
=== Predecessor ===
v1543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2190 <|@
result v60|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2222 
=== Succesors ===
next: i2191 
=== Usages ===
a1159 v2242 
=== Predecessor ===
v1540 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2222 #next: i2191  <|@  <|@
f <@~|@floating>@ <|@
tid v2242 <|@
result [v60|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2190 
=== Succesors ===
=== Usages ===
i2191 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2191 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?661 
guard: - 
address: v2242 
=== Succesors ===
next: i2192 
=== Usages ===
v1167 
=== Predecessor ===
a2190 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?661 guard: - address: v2242 #next: i2192  <|@  <|@
f <@~|@floating>@ <|@
tid v2241 <|@
result [v59|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2188 
=== Succesors ===
=== Usages ===
i2192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2192 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2241 
=== Succesors ===
next: v1551 
=== Usages ===
v2243 v1167 
=== Predecessor ===
i2191 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2241 #next: v1551  <|@  <|@
f <@~|@floating>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2192 
y: i2191 
=== Succesors ===
=== Usages ===
v1551 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2192 y: i2191  <|@  <|@
f <@*|@fixed>@ <|@
tid v1551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1167 
=== Succesors ===
trueSuccessor: v1548 
falseSuccessor: v1550 
=== Usages ===
=== Predecessor ===
i2192 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1167 #trueSuccessor: v1548 #falseSuccessor: v1550  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v58|DWORD 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction v61|DWORD = MOV [v60|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOV [v59|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v61|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B93" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2193 
=== Usages ===
i2193 
=== Predecessor ===
v1551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2193  <|@  <|@
f <@~|@floating>@ <|@
tid a1159 <|@
result v63|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2190 
=== Succesors ===
=== Usages ===
v2243 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2190  <|@  <|@
f <@~|@floating>@ <|@
tid v2243 <|@
result [v63|QWORD[.] + v62|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1159 
index: i2192 
=== Succesors ===
=== Usages ===
i2193 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1159 index: i2192  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2193 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1548 
address: v2243 
=== Succesors ===
next: v1555 
=== Usages ===
v612 v1210 i1931 ?622 
=== Predecessor ===
v1548 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1548 address: v2243 #next: v1555  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2193 
y: i15 
=== Succesors ===
=== Usages ===
v1555 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2193 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v612 
=== Succesors ===
trueSuccessor: v1554 
falseSuccessor: v1552 
=== Usages ===
=== Predecessor ===
i2193 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v612 #trueSuccessor: v1554 #falseSuccessor: v1552  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOV [v63|QWORD[.] + v62|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v64|DWORD, y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B109" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2020 
=== Usages ===
=== Predecessor ===
v1555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2020  <|@  <|@
f <@~|@floating>@ <|@
tid i2021 <|@
result int[-300819|0xfffffffffffb68ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -300819
stableDimension: 0
stamp: i32 [-300819] â‡Š00000000fffb68ed â‡ˆ00000000fffb68ed
stampKind: i32
value: int[-300819|0xfffffffffffb68ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2020 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2010 
=== Predecessor ===
v1554 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-300819|0xfffffffffffb68ed]] destination: B92 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B106" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2194 
=== Usages ===
=== Predecessor ===
v1555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2194 <|@
result v65|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v2226 
=== Succesors ===
next: i2195 
=== Usages ===
a1177 v2250 v2245 v2249 
=== Predecessor ===
v1552 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2226 #next: i2195  <|@  <|@
f <@~|@floating>@ <|@
tid v2245 <|@
result [v65|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2194 
=== Succesors ===
=== Usages ===
i2195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2195 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: ?661 
guard: - 
address: v2245 
=== Succesors ===
next: i2196 
=== Usages ===
v1203 v1212 
=== Predecessor ===
a2194 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?661 guard: - address: v2245 #next: i2196  <|@  <|@
f <@~|@floating>@ <|@
tid v2244 <|@
result [v59|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2188 
=== Succesors ===
=== Usages ===
i2196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2196 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2244 
=== Succesors ===
next: v1563 
=== Usages ===
v1203 v2246 i620 
=== Predecessor ===
i2195 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2244 #next: v1563  <|@  <|@
f <@~|@floating>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2196 
y: i2195 
=== Succesors ===
=== Usages ===
v1563 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2196 y: i2195  <|@  <|@
f <@*|@fixed>@ <|@
tid v1563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1203 
=== Succesors ===
trueSuccessor: v1560 
falseSuccessor: v1562 
=== Usages ===
=== Predecessor ===
i2196 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1203 #trueSuccessor: v1560 #falseSuccessor: v1562  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v58|DWORD 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction v66|DWORD = MOV [v65|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOV [v59|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B105" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1567 
=== Usages ===
i2200 v1210 
=== Predecessor ===
v1563 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1567  <|@  <|@
f <@~|@floating>@ <|@
tid i620 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: i32
=== Inputs ===
x: i2196 
y: i28 
=== Succesors ===
=== Usages ===
v1212 v2247 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2196 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid v1212 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i620 
y: i2195 
=== Succesors ===
=== Usages ===
v1567 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i620 y: i2195  <|@  <|@
f <@*|@fixed>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1212 
=== Succesors ===
trueSuccessor: v1564 
falseSuccessor: v1566 
=== Usages ===
=== Predecessor ===
v1560 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1212 #trueSuccessor: v1564 #falseSuccessor: v1566  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = INC v67|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|DWORD, y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B99" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2197 
=== Usages ===
v1233 v1219 i2199 
=== Predecessor ===
v1567 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2197  <|@  <|@
f <@~|@floating>@ <|@
tid v2248 <|@
result [v59|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2188 
=== Succesors ===
=== Usages ===
a2197 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2197 <|@
result v69|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2248 
=== Succesors ===
next: v2198 
=== Usages ===
a1222 v2263 
=== Predecessor ===
v1564 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2248 #next: v2198  <|@  <|@
f <@~|@floating>@ <|@
tid v2263 <|@
result [v69|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2197 
=== Succesors ===
=== Usages ===
v2198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2198 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?661 
guard: - 
address: v2263 
=== Succesors ===
next: i2199 
=== Usages ===
v2130 
=== Predecessor ===
a2197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?661 guard: - address: v2263 #next: i2199  <|@  <|@
f <@~|@floating>@ <|@
tid a1177 <|@
result v71|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a2194 
=== Succesors ===
=== Usages ===
v2247 v2246 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2194  <|@  <|@
f <@~|@floating>@ <|@
tid v2247 <|@
result [v71|QWORD[.] + v68|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1177 
index: i620 
=== Succesors ===
=== Usages ===
v1219 i2199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1177 index: i620  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2199 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1564 
address: v2247 
=== Succesors ===
next: i2200 
=== Usages ===
i596 ?622 
=== Predecessor ===
v2198 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1564 address: v2247 #next: i2200  <|@  <|@
f <@~|@floating>@ <|@
tid v2246 <|@
result [v71|QWORD[.] + v67|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1177 
index: i2196 
=== Succesors ===
=== Usages ===
v1210 i2200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1177 index: i2196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2200 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1560 
address: v2246 
=== Succesors ===
next: v1210 
=== Usages ===
i593 ?622 
=== Predecessor ===
i2199 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1560 address: v2246 #next: v1210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1210 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1560 
address: v2246 
value: i2193 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1219 
=== Usages ===
=== Predecessor ===
i2200 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1560 address: v2246 value: i2193 stateAfter: - lastLocationAccess: - #next: v1219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1564 
address: v2247 
value: i22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v1210 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1564 address: v2247 value: i22 stateAfter: - lastLocationAccess: - #next: v630  <|@  <|@
f <@~|@floating>@ <|@
tid v2130 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2198 
y: v2127 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2198 y: v2127  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.7905664707988008
=== Inputs ===
condition: v2130 
=== Succesors ===
trueSuccessor: v624 
falseSuccessor: v629 
=== Usages ===
=== Predecessor ===
v1219 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2130 #trueSuccessor: v624 #falseSuccessor: v629  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[.] = MOV [v59|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v58|DWORD 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction v70|DWORD = MOV [v69|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOV [v71|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOV [v71|QWORD[.] + v67|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v67|DWORD * 4 + 16], y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v68|DWORD * 4 + 16], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v70|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7905664707988008 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4605207181810611474
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2201 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2201  <|@  <|@
f <@~|@floating>@ <|@
tid v2283 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2201 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.acceptMode
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2283 
=== Succesors ===
next: v1575 
=== Usages ===
v893 
=== Predecessor ===
v624 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2283 #next: v1575  <|@  <|@
f <@~|@floating>@ <|@
tid v893 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2201 
y: i28 
=== Succesors ===
=== Usages ===
v1575 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2201 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v1575 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v893 
=== Succesors ===
trueSuccessor: v1574 
falseSuccessor: v1572 
=== Usages ===
=== Predecessor ===
i2201 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v893 #trueSuccessor: v1574 #falseSuccessor: v1572  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B96 -> B97 falseDestination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2268 
=== Usages ===
=== Predecessor ===
v1575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2268  <|@  <|@
f <@~|@floating>@ <|@
tid a2276 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2188 
=== Succesors ===
=== Usages ===
?622 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2188  <|@  <|@
tid ?622 <|@
d <@d|@=== Debug Properties ===
bci: 63
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?110 
values: a2276 a2 i22 a4 i2193 i2200 i2199 
=== Succesors ===
=== Usages ===
v2268 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?110 values: a2276 a2 i22 a4 i2193 i2200 i2199  <|@  <|@
f <@*|@fixed>@ <|@
tid v2268 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1225
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?622 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1574 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?622  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -313619 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v74|QWORD[.] v1|QWORD[.] v11|DWORD v3|QWORD[.] v64|DWORD v73|DWORD v72|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors 
    xhandlers
    flags 
    probability 4605207181810611474
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1226 
=== Usages ===
=== Predecessor ===
v1575 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1226  <|@  <|@
f <@~|@floating>@ <|@
tid v2282 <|@
result [v1|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3435) [bci: 20]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2282 
value: i22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2202 
=== Usages ===
=== Predecessor ===
v1572 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2282 value: i22 stateAfter: - lastLocationAccess: - #next: i2202  <|@  <|@
f <@~|@floating>@ <|@
tid v2281 <|@
result [v1|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2202 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.first
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 29]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2281 
=== Succesors ===
next: v1233 
=== Usages ===
v1233 
=== Predecessor ===
v1226 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2281 #next: v1233  <|@  <|@
f <@~|@floating>@ <|@
tid v2249 <|@
result [v65|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2194 
=== Succesors ===
=== Usages ===
v1233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1564 
address: v2249 
value: i2202 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1239 
=== Usages ===
=== Predecessor ===
i2202 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1564 address: v2249 value: i2202 stateAfter: - lastLocationAccess: - #next: v1239  <|@  <|@
f <@~|@floating>@ <|@
tid v2250 <|@
result [v65|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2194 
=== Succesors ===
=== Usages ===
v1239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2250 
value: i22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v903 
=== Usages ===
=== Predecessor ===
v1233 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2250 value: i22 stateAfter: - lastLocationAccess: - #next: v903  <|@  <|@
f <@*|@fixed>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 48]
stamp: void
=== Inputs ===
result: i28 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1239 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i28 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 32], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|DWORD[.] * 8 + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|DWORD[.] * 8 + 20], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B100" 
    xhandlers
    flags 
    probability 4596619531220163959
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid a1222 <|@
result v76|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2197 
=== Succesors ===
=== Usages ===
a599 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2197  <|@  <|@
f <@~|@floating>@ <|@
tid a1155 <|@
result v77|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2188 
=== Succesors ===
=== Usages ===
a587 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2188  <|@  <|@
f <@*|@fixed>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
v629 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.], v64|DWORD, v73|DWORD, v72|DWORD, v76|QWORD[.]] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B79" "B99" 
    successors "B101" "B104" 
    xhandlers
    flags 
    probability 4596713658403090692
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a587 <|@
result v78|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/regex/Pattern$GroupTail;
valueDescription: a -
=== Inputs ===
merge: v583 
values: a1028 a1155 
=== Succesors ===
=== Usages ===
?166 ?585 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v583 values: a1028 a1155  <|@  <|@
f <@~|@floating>@ <|@
tid i1931 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v583 
values: i2172 i2193 
=== Succesors ===
=== Usages ===
?585 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v583 values: i2172 i2193  <|@  <|@
f <@~|@floating>@ <|@
tid i593 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v583 
values: i2184 i2200 
=== Succesors ===
=== Usages ===
?166 ?585 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v583 values: i2184 i2200  <|@  <|@
f <@~|@floating>@ <|@
tid i596 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v583 
values: i2183 i2199 
=== Succesors ===
=== Usages ===
?166 ?585 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v583 values: i2183 i2199  <|@  <|@
f <@~|@floating>@ <|@
tid a599 <|@
result v82|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/regex/Pattern$Node;
valueDescription: a -
=== Inputs ===
merge: v583 
values: a1100 a1222 
=== Succesors ===
=== Usages ===
v2264 v2251 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v583 values: a1100 a1222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v584 v586 
=== Succesors ===
next: v2203 
=== Usages ===
a587 i1931 i593 i596 a599 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v584 v586 #next: v2203  <|@  <|@
f <@~|@floating>@ <|@
tid v2264 <|@
result [v82|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a599 
index: - 
=== Succesors ===
=== Usages ===
v2203 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a599 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2203 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2264 
=== Succesors ===
next: v1583 
=== Usages ===
v2132 
=== Predecessor ===
v583 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2264 #next: v1583  <|@  <|@
f <@~|@floating>@ <|@
tid v2131 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2132 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2132 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2203 
y: v2131 
=== Succesors ===
=== Usages ===
v1583 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2203 y: v2131  <|@  <|@
tid ?585 <|@
d <@d|@=== Debug Properties ===
bci: 63
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?110 
values: a587 a2 i22 a4 i1931 i593 i596 
=== Succesors ===
=== Usages ===
v1999 v2273 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?110 values: a587 a2 i22 a4 i1931 i593 i596  <|@  <|@
f <@*|@fixed>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BranchConn; target_method=match target_method_class=Ljava/util/regex/Pattern$BranchConn; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2132 
=== Succesors ===
trueSuccessor: v1580 
falseSuccessor: v1582 
=== Usages ===
=== Predecessor ===
v2203 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2132 #trueSuccessor: v1580 #falseSuccessor: v1582  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD[.], v79|DWORD, v80|DWORD, v81|DWORD, v82|QWORD[.]] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOV [v82|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v83|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4596713658403090692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BranchConn; target_method=match target_method_class=Ljava/util/regex/Pattern$BranchConn; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2204 
=== Usages ===
=== Predecessor ===
v1583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2204  <|@  <|@
f <@~|@floating>@ <|@
tid v2251 <|@
result [v82|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a599 
index: - 
=== Succesors ===
=== Usages ===
a2204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a599 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2204 <|@
result v84|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2251 
=== Succesors ===
next: v2273 
=== Usages ===
a1243 v2273 
=== Predecessor ===
v1580 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2251 #next: v2273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?585 
object: a2204 
=== Succesors ===
next: i163 
=== Usages ===
=== Predecessor ===
a2204 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?585 object: a2204 #next: i163  <|@  <|@
f <@~|@floating>@ <|@
tid a1243 <|@
result v85|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a2204 
=== Succesors ===
=== Usages ===
v1247 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2204  <|@  <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
returnStamp: i32 [0 - 1] â‡ˆ0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@12d96398
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a1243 a2 i22 a4 
=== Succesors ===
=== Usages ===
i163 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1243 a2 i22 a4  <|@  <|@
tid ?166 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?110 
values: a587 a2 - - - i593 i596 
=== Succesors ===
=== Usages ===
?164 ?1929 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?110 values: a587 a2 - - - i593 i596  <|@  <|@
tid ?1929 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<Pattern$BranchConn.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4570
stackSize: 0
=== Inputs ===
outerFrameState: ?166 
values: - - - - 
=== Succesors ===
=== Usages ===
i163 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?166 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i163 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 7
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
polymorphic: false
stamp: i32 [0 - 1] â‡ˆ0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1247 
stateDuring: ?1929 
=== Succesors ===
next: v1591 
=== Usages ===
v107 
=== Predecessor ===
v2273 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1247 stateDuring: ?1929 #next: v1591  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i163 
y: i15 
=== Succesors ===
=== Usages ===
v1591 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i163 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v107 
=== Succesors ===
trueSuccessor: v1590 
falseSuccessor: v1588 
=== Usages ===
=== Predecessor ===
i163 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v107 #trueSuccessor: v1590 #falseSuccessor: v1588  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[.] = MOV [v82|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v78|QWORD[.] v1|QWORD[.] v11|DWORD v3|QWORD[.] v79|DWORD v80|DWORD v81|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v84|DWORD[.] * 8] state [bci:63, 37] <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: v78|QWORD[.] v1|QWORD[.] - - - v80|DWORD v81|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:7, 70, 37] <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v86|DWORD, y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1589 
=== Usages ===
=== Predecessor ===
v1591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1589  <|@  <|@
tid ?164 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Pattern$BranchConn.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4570
stackSize: 1
=== Inputs ===
outerFrameState: ?166 
values: - - - - i15 
=== Succesors ===
=== Usages ===
v1589 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?166 values: - - - - i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1248
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?164 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1590 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?164  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -319507 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 10]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: v78|QWORD[.] v1|QWORD[.] - - - v80|DWORD v81|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 70, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors 
    xhandlers
    flags 
    probability 4596713658403090692
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v1591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v29  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 48]
stamp: void
=== Inputs ===
result: i28 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1588 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i28 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BranchConn; target_method=match target_method_class=Ljava/util/regex/Pattern$BranchConn; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1999 
=== Usages ===
=== Predecessor ===
v1583 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1999  <|@  <|@
f <@~|@floating>@ <|@
tid i2001 <|@
result int[-317491|0xfffffffffffb27cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -317491
stableDimension: 0
stamp: i32 [-317491] â‡Š00000000fffb27cd â‡ˆ00000000fffb27cd
stampKind: i32
value: int[-317491|0xfffffffffffb27cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1999 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1999 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?585 
actionAndReason: i2001 
speculation: a1936 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1582 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?585 actionAndReason: i2001 speculation: a1936  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -317491 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v78|QWORD[.] v1|QWORD[.] v11|DWORD v3|QWORD[.] v79|DWORD v80|DWORD v81|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B109" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2030 
=== Usages ===
=== Predecessor ===
v1567 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2030  <|@  <|@
f <@~|@floating>@ <|@
tid i2031 <|@
result int[-310555|0xfffffffffffb42e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -310555
stableDimension: 0
stamp: i32 [-310555] â‡Š00000000fffb42e5 â‡ˆ00000000fffb42e5
stampKind: i32
value: int[-310555|0xfffffffffffb42e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2030 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2010 
=== Predecessor ===
v1566 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-310555|0xfffffffffffb42e5]] destination: B105 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B109" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2028 
=== Usages ===
=== Predecessor ===
v1563 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2028  <|@  <|@
f <@~|@floating>@ <|@
tid i2029 <|@
result int[-308251|0xfffffffffffb4be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -308251
stableDimension: 0
stamp: i32 [-308251] â‡Š00000000fffb4be5 â‡ˆ00000000fffb4be5
stampKind: i32
value: int[-308251|0xfffffffffffb4be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2028 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2010 
=== Predecessor ===
v1562 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-308251|0xfffffffffffb4be5]] destination: B106 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B109" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2022 
=== Usages ===
=== Predecessor ===
v1551 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2022  <|@  <|@
f <@~|@floating>@ <|@
tid i2023 <|@
result int[-299035|0xfffffffffffb6fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -299035
stableDimension: 0
stamp: i32 [-299035] â‡Š00000000fffb6fe5 â‡ˆ00000000fffb6fe5
stampKind: i32
value: int[-299035|0xfffffffffffb6fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2022 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2010 
=== Predecessor ===
v1550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-299035|0xfffffffffffb6fe5]] destination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B109" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2018 
=== Usages ===
=== Predecessor ===
v1543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2018  <|@  <|@
f <@~|@floating>@ <|@
tid i2019 <|@
result int[-296243|0xfffffffffffb7acd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -296243
stableDimension: 0
stamp: i32 [-296243] â‡Š00000000fffb7acd â‡ˆ00000000fffb7acd
stampKind: i32
value: int[-296243|0xfffffffffffb7acd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2018 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2010 
=== Predecessor ===
v1542 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-296243|0xfffffffffffb7acd]] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" "B92" "B107" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2013 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-313099 - -295947] â‡Š00000000fffb00c5 â‡ˆ00000000fffb7ffd
valueDescription: i32
=== Inputs ===
merge: v2010 
values: i2019 i2021 i2023 i2029 i2031 
=== Succesors ===
=== Usages ===
v2015 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2010 values: i2019 i2021 i2023 i2029 i2031  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2010 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2018 v2020 v2022 v2028 v2030 
=== Succesors ===
next: v2015 
=== Usages ===
i2013 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2018 v2020 v2022 v2028 v2030 #next: v2015  <|@  <|@
f <@*|@fixed>@ <|@
tid v2015 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?661 
actionAndReason: i2013 
speculation: a1936 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2010 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?661 actionAndReason: i2013 speculation: a1936  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v58|DWORD 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction DEOPT info [bci:8, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1982 
=== Usages ===
=== Predecessor ===
v1435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1982  <|@  <|@
f <@~|@floating>@ <|@
tid i1983 <|@
result int[-251443|0xfffffffffffc29cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -251443
stableDimension: 0
stamp: i32 [-251443] â‡Š00000000fffc29cd â‡ˆ00000000fffc29cd
stampKind: i32
value: int[-251443|0xfffffffffffc29cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1982 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1434 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-251443|0xfffffffffffc29cd]] destination: B110 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1976 
=== Usages ===
=== Predecessor ===
v1423 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1976  <|@  <|@
f <@~|@floating>@ <|@
tid i1977 <|@
result int[-248883|0xfffffffffffc33cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -248883
stableDimension: 0
stamp: i32 [-248883] â‡Š00000000fffc33cd â‡ˆ00000000fffc33cd
stampKind: i32
value: int[-248883|0xfffffffffffc33cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1422 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-248883|0xfffffffffffc33cd]] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1970 
=== Usages ===
=== Predecessor ===
v1411 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1970  <|@  <|@
f <@~|@floating>@ <|@
tid i1971 <|@
result int[-246323|0xfffffffffffc3dcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -246323
stableDimension: 0
stamp: i32 [-246323] â‡Š00000000fffc3dcd â‡ˆ00000000fffc3dcd
stampKind: i32
value: int[-246323|0xfffffffffffc3dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1970 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1410 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-246323|0xfffffffffffc3dcd]] destination: B112 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1964 
=== Usages ===
=== Predecessor ===
v1399 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1964  <|@  <|@
f <@~|@floating>@ <|@
tid i1965 <|@
result int[-243763|0xfffffffffffc47cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -243763
stableDimension: 0
stamp: i32 [-243763] â‡Š00000000fffc47cd â‡ˆ00000000fffc47cd
stampKind: i32
value: int[-243763|0xfffffffffffc47cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1964 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1398 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-243763|0xfffffffffffc47cd]] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1958 
=== Usages ===
=== Predecessor ===
v1387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1958  <|@  <|@
f <@~|@floating>@ <|@
tid i1959 <|@
result int[-240947|0xfffffffffffc52cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -240947
stableDimension: 0
stamp: i32 [-240947] â‡Š00000000fffc52cd â‡ˆ00000000fffc52cd
stampKind: i32
value: int[-240947|0xfffffffffffc52cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1958 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-240947|0xfffffffffffc52cd]] destination: B114 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1956 
=== Usages ===
=== Predecessor ===
v1383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1956  <|@  <|@
f <@~|@floating>@ <|@
tid i1957 <|@
result int[-240659|0xfffffffffffc53ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -240659
stableDimension: 0
stamp: i32 [-240659] â‡Š00000000fffc53ed â‡ˆ00000000fffc53ed
stampKind: i32
value: int[-240659|0xfffffffffffc53ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1956 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1382 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-240659|0xfffffffffffc53ed]] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1954 
=== Usages ===
=== Predecessor ===
v1379 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1954  <|@  <|@
f <@~|@floating>@ <|@
tid i1955 <|@
result int[-238619|0xfffffffffffc5be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -238619
stableDimension: 0
stamp: i32 [-238619] â‡Š00000000fffc5be5 â‡ˆ00000000fffc5be5
stampKind: i32
value: int[-238619|0xfffffffffffc5be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1954 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1378 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-238619|0xfffffffffffc5be5]] destination: B116 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1952 
=== Usages ===
=== Predecessor ===
v1375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1952  <|@  <|@
f <@~|@floating>@ <|@
tid i1953 <|@
result int[-237843|0xfffffffffffc5eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -237843
stableDimension: 0
stamp: i32 [-237843] â‡Š00000000fffc5eed â‡ˆ00000000fffc5eed
stampKind: i32
value: int[-237843|0xfffffffffffc5eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1952 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-237843|0xfffffffffffc5eed]] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1946 
=== Usages ===
=== Predecessor ===
v1363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1946  <|@  <|@
f <@~|@floating>@ <|@
tid i1947 <|@
result int[-235059|0xfffffffffffc69cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -235059
stableDimension: 0
stamp: i32 [-235059] â‡Š00000000fffc69cd â‡ˆ00000000fffc69cd
stampKind: i32
value: int[-235059|0xfffffffffffc69cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1946 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1362 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-235059|0xfffffffffffc69cd]] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1942 
=== Usages ===
=== Predecessor ===
v1355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1942  <|@  <|@
f <@~|@floating>@ <|@
tid i1943 <|@
result int[-234515|0xfffffffffffc6bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -234515
stableDimension: 0
stamp: i32 [-234515] â‡Š00000000fffc6bed â‡ˆ00000000fffc6bed
stampKind: i32
value: int[-234515|0xfffffffffffc6bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1933 
=== Predecessor ===
v1354 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-234515|0xfffffffffffc6bed]] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B3" "B118" "B117" "B116" "B115" "B114" "B12" "B113" "B19" "B112" "B26" "B111" "B33" "B110" "B40" 
    successors 
    xhandlers
    flags 
    probability 2373397003624251392
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1937 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-253715 - -233227] â‡Š00000000fffc00c5 â‡ˆ00000000fffc7ffd
valueDescription: i32
=== Inputs ===
merge: v1933 
values: i1943 i1945 i1947 i1953 i1955 i1957 i1959 i1963 i1965 i1969 i1971 i1975 i1977 i1981 i1983 i1985 
=== Succesors ===
=== Usages ===
v1939 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1933 values: i1943 i1945 i1947 i1953 i1955 i1957 i1959 i1963 i1965 i1969 i1971 i1975 i1977 i1981 i1983 i1985  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1933 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1942 v1944 v1946 v1952 v1954 v1956 v1958 v1962 v1964 v1968 v1970 v1974 v1976 v1980 v1982 v1984 
=== Succesors ===
next: v1939 
=== Usages ===
i1937 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1942 v1944 v1946 v1952 v1954 v1956 v1958 v1962 v1964 v1968 v1970 v1974 v1976 v1980 v1982 v1984 #next: v1939  <|@  <|@
f <@*|@fixed>@ <|@
tid v1939 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i1937 
speculation: a1936 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1933 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i1937 speculation: a1936  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B119" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7acef4f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction CMP (x: v2|DWORD, y: [v1|QWORD[.] + 16]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B118" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B117" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B116" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B115" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSX [v6|QWORD[.] + v2|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: -10240 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B114" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v9|DWORD = MOV [v8|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVZX v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602679321447256704
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v8|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4602500749766030220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v8|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B89" 
    xhandlers
    flags 
    probability 4602500749766030220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B13 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B51" "B13" "B20" 
    successors "B90" "B108" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v58|DWORD 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction CMP [v59|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B107" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v58|DWORD 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction v61|DWORD = MOV [v60|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = MOV [v59|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v61|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B93" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v60|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOV [v63|QWORD[.] + v62|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v64|DWORD, y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B106" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v58|DWORD 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction v66|DWORD = MOV [v65|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOV [v59|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B105" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = INC v67|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|DWORD, y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B99" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[.] = MOV [v59|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v58|DWORD 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction v70|DWORD = MOV [v69|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOV [v71|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOV [v71|QWORD[.] + v67|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v67|DWORD * 4 + 16], y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v71|QWORD[.] + v68|DWORD * 4 + 16], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v70|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7905664707988008 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4605207181810611474
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B96 -> B97 falseDestination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors 
    xhandlers
    flags 
    probability 4605207181810611474
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 32], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|DWORD[.] * 8 + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|DWORD[.] * 8 + 20], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" "B113" 
    xhandlers
    flags 
    probability 4602677814623427328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4602677814623427328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v13|DWORD = MOV [v12|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598175219433241686
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v12|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597996165449052256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v12|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B89" 
    xhandlers
    flags 
    probability 4597996165449052256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B20 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B112" 
    xhandlers
    flags 
    probability 4598173210558871978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B28" 
    xhandlers
    flags 
    probability 4598173210558871978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v12|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v15|DWORD = MOV [v14|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v15|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4593670615256664101
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v14|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4593491581241894131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v14|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B55" 
    xhandlers
    flags 
    probability 4593491581241894131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B27 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" "B53" "B54" "B41" "B27" "B34" 
    successors "B56" "B88" 
    xhandlers
    flags 
    probability 4598219208763472101
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v34|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B89" 
    xhandlers
    flags 
    probability 4598171908865345136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|DWORD] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B100" 
    xhandlers
    flags 
    probability 4596619531220163959
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.], v64|DWORD, v73|DWORD, v72|DWORD, v76|QWORD[.]] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B79" "B99" 
    successors "B101" "B104" 
    xhandlers
    flags 
    probability 4596713658403090692
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|QWORD[.], v79|DWORD, v80|DWORD, v81|DWORD, v82|QWORD[.]] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOV [v82|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v83|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4596713658403090692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[.] = MOV [v82|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v78|QWORD[.] v1|QWORD[.] v11|DWORD v3|QWORD[.] v79|DWORD v80|DWORD v81|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v84|DWORD[.] * 8] state [bci:63, 37] <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: v78|QWORD[.] v1|QWORD[.] - - - v80|DWORD v81|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:7, 70, 37] <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v86|DWORD, y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors 
    xhandlers
    flags 
    probability 4596713658403090692
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" "B111" 
    xhandlers
    flags 
    probability 4593668606606338863
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v15|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4593668606606338863
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4589166011192121245
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v16|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4588986997144543599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v16|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588986997144543599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B34 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B110" 
    xhandlers
    flags 
    probability 4589164002765815489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v17|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B42" 
    xhandlers
    flags 
    probability 4589164002765815489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[.] = MOV [v16|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction v19|DWORD = MOV [v18|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v19|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4584661407239600622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v18|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4584482413156988411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v18|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 4584482413156988411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B41 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B54" 
    xhandlers
    flags 
    probability 4584659399037289364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v16|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v14|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v12|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:5, 5, 5, 5, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B55" 
    xhandlers
    flags 
    probability 4584569043370954236
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576883988367814258
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B10" 
    successors "B58" "B86" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v35|DWORD[.] * 8] state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction CMP [v36|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B85" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction v38|DWORD = MOV [v37|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV [v36|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV [v40|QWORD[.] + v39|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B84" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction v43|DWORD = MOV [v42|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV [v36|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B83" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B69" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[.] = MOV [v36|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v46|DWORD[.] * 8] state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOV [v35|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B70" "B82" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B81" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[.] = MOV [v35|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction CMP (x: v10|DWORD, y: [v48|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B80" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B71 -> B72 falseDestination: B71 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVZX v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOVZXB [v49|QWORD + v48|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v50|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B68" 
    successors "B76" "B79" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOV [v51|QWORD[.] + v45|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOV [v51|QWORD[.] + v44|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + v44|DWORD * 4 + 16], y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + v45|DWORD * 4 + 16], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP [v46|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7905664707988008 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4576838579302148934
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 4576838579302148934
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 32], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|DWORD[.] * 8 + 16], y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|DWORD[.] * 8 + 20], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v35|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: [v35|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B75" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B50" 
    xhandlers
    flags 
    probability 4572379749647744704
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B17" 
    successors "B55" 
    xhandlers
    flags 
    probability 4572408646700802489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[.] = MOV [v8|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v31|DWORD[.] * 8] state [bci:8, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD] destination: B50 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B100" 
    xhandlers
    flags 
    probability 4568170562233623375
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v46|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.], v41|DWORD, v53|DWORD, v52|DWORD, v56|QWORD[.]] destination: B79 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4567988925970962079
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4567875510998951477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B24" 
    successors "B49" "B51" 
    xhandlers
    flags 
    probability 4567904476561619772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[.] = MOV [v12|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v12|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v28|DWORD[.] * 8] state [bci:8, 5, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v30|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B89" 
    xhandlers
    flags 
    probability 4567846682455504201
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B51 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B46" 
    xhandlers
    flags 
    probability 4563371272421426627
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B31" 
    successors "B47" "B52" 
    xhandlers
    flags 
    probability 4563414528223827680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[.] = MOV [v14|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v14|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v12|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v25|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v12|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v27|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    probability 4563356597098491089
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B52 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558867033915162205
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B38" 
    successors "B45" "B53" 
    xhandlers
    flags 
    probability 4561758415237886310
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v16|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v16|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v14|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v12|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v22|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v14|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v12|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v8|DWORD[.] v10|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 5, 5, 18] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    probability 4561671903633084204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4554418386289649169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4538018870717512057
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4533532809550432117
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    probability 4531654368214683246
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-263731|0xfffffffffffbf9cd]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B60" "B85" "B84" "B83" "B65" "B67" "B82" "B81" "B80" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction DEOPT info [bci:8, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -262419 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-238619|0xfffffffffffc5be5]] destination: B116 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B3" "B118" "B117" "B116" "B115" "B114" "B12" "B113" "B19" "B112" "B26" "B111" "B33" "B110" "B40" 
    successors 
    xhandlers
    flags 
    probability 2373397003624251392
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-248595|0xfffffffffffc34ed]] destination: B26 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-290867|0xfffffffffffb8fcd]] destination: B82 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -313619 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v74|QWORD[.] v1|QWORD[.] v11|DWORD v3|QWORD[.] v64|DWORD v73|DWORD v72|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-279323|0xfffffffffffbbce5]] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-277019|0xfffffffffffbc5e5]] destination: B84 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-269075|0xfffffffffffbe4ed]] destination: B60 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-253715|0xfffffffffffc20ed]] destination: B40 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-267035|0xfffffffffffbece5]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B109" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-308251|0xfffffffffffb4be5]] destination: B106 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" "B92" "B107" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v58|DWORD 
locals: v0|QWORD[.] v10|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v10|DWORD 
>@ <|@ instruction DEOPT info [bci:8, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-251443|0xfffffffffffc29cd]] destination: B110 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-290323|0xfffffffffffb91ed]] destination: B65 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B109" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-300819|0xfffffffffffb68ed]] destination: B92 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-248883|0xfffffffffffc33cd]] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -317491 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v78|QWORD[.] v1|QWORD[.] v11|DWORD v3|QWORD[.] v79|DWORD v80|DWORD v81|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-293659|0xfffffffffffb84e5]] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B109" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-296243|0xfffffffffffb7acd]] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B109" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-310555|0xfffffffffffb42e5]] destination: B105 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B109" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-299035|0xfffffffffffb6fe5]] destination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-291091|0xfffffffffffb8eed]] destination: B80 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-246035|0xfffffffffffc3eed]] destination: B19 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-243763|0xfffffffffffc47cd]] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-240947|0xfffffffffffc52cd]] destination: B114 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-237843|0xfffffffffffc5eed]] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-251155|0xfffffffffffc2aed]] destination: B33 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-240659|0xfffffffffffc53ed]] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-290579|0xfffffffffffb90ed]] destination: B67 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-243475|0xfffffffffffc48ed]] destination: B12 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -319507 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 10]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: v78|QWORD[.] v1|QWORD[.] - - - v80|DWORD v81|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 70, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-235283|0xfffffffffffc68ed]] destination: B3 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-234515|0xfffffffffffc6bed]] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-246323|0xfffffffffffc3dcd]] destination: B112 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -282899 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v54|QWORD[.] v1|QWORD[.] v11|DWORD v3|QWORD[.] v41|DWORD v53|DWORD v52|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-235059|0xfffffffffffc69cd]] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #3          // java.util.regex.Matcher.to:int
     5: if_icmpge     49
     8: aload_3       
     9: iload_2       
    10: invokestatic  #4          // java.lang.Character.codePointAt:(java.lang.CharSequence, int)int
    13: istore        4
    15: aload_0       
    16: iload         4
    18: invokevirtual #5          // isSatisfiedBy:(int)boolean
    21: ifeq          47
    24: aload_0       
    25: getfield      #6          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    28: aload_1       
    29: iload_2       
    30: iload         4
    32: invokestatic  #7          // java.lang.Character.charCount:(int)int
    35: iadd          
    36: aload_3       
    37: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    40: ifeq          47
    43: iconst_1      
    44: goto          48
    47: iconst_0      
    48: ireturn       
    49: aload_1       
    50: iconst_1      
    51: putfield      #9          // java.util.regex.Matcher.hitEnd:boolean
    54: iconst_0      
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B119" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7acef4f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B118" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B117" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r10|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B116" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B115" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction r10|DWORD = MOVSX [r10|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction CMP r10|DWORD y: -10240 size: WORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B114" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r11:0, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r9|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOVZX r10|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction rdi|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr   72  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602679321447256704
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction CMP (x: rbx|DWORD, y: [r11|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4602500749766030220
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: rbx|DWORD, y: [r11|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B89" 
    xhandlers
    flags 
    probability 4602500749766030220
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  110  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B13 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B51" "B13" "B20" 
    successors "B90" "B108" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  828  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  830  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rax|DWORD 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18] <|@ <|@
      nr  832  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B107" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  836  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction rcx|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  840  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rax|DWORD 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr  842  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  844  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B93" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  850  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  854  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  856  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B106" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction rcx|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  870  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rax|DWORD 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr  872  <|@ instruction r9|DWORD = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  874  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  876  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B105" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  880  <|@ instruction rbx|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  882  <|@ instruction CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B99" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  888  <|@ instruction rdi|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  892  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0, r10:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rax|DWORD 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rbp|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18] <|@ <|@
      nr  894  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  896  <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  898  <|@ instruction r13|DWORD = MOV [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  900  <|@ instruction MOV (x: [rax|QWORD[.] + r9|DWORD * 4 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  902  <|@ instruction MOV (x: [rax|QWORD[.] + rbx|DWORD * 4 + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  904  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr  906  <|@ instruction BRANCH trueDestinationProbability: 0.7905664707988008 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4605207181810611474
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  910  <|@ instruction CMP [rdx|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr  912  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B96 -> B97 falseDestination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors 
    xhandlers
    flags 
    probability 4605207181810611474
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  926  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  928  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  930  <|@ instruction MOV (x: [rcx|DWORD[.] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  932  <|@ instruction MOV (x: [rcx|DWORD[.] * 8 + 20], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  934  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  936  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" "B113" 
    xhandlers
    flags 
    probability 4602677814623427328
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  124  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4602677814623427328
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction stack:60|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction r9|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r11:0, stack:36, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  134  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598175219433241686
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597996165449052256
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B89" 
    xhandlers
    flags 
    probability 4597996165449052256
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  176  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B20 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B112" 
    xhandlers
    flags 
    probability 4598173210558871978
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B28" 
    xhandlers
    flags 
    probability 4598173210558871978
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction stack:76|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction rax|DWORD[.] = MOV [r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  198  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r8:0, r9:0, stack:20, stack:36, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction rbp|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  200  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4593670615256664101
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction CMP (x: rbx|DWORD, y: [rax|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  208  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4593491581241894131
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction CMP (x: rbx|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  230  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B55" 
    xhandlers
    flags 
    probability 4593491581241894131
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  242  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B27 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" "B53" "B54" "B41" "B27" "B34" 
    successors "B56" "B88" 
    xhandlers
    flags 
    probability 4598219208763472101
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  536  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  538  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B89" 
    xhandlers
    flags 
    probability 4598171908865345136
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B100" 
    xhandlers
    flags 
    probability 4596619531220163959
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  940  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  942  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  944  <|@ instruction stack:40|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction stack:60|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B79" "B99" 
    successors "B101" "B104" 
    xhandlers
    flags 
    probability 4596713658403090692
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr  954  <|@ instruction rcx|DWORD = MOV [r8|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  956  <|@ instruction CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed} <|@ <|@
      nr  958  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4596713658403090692
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  962  <|@ instruction rcx|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  964  <|@ st <@st|@reference-map: [rcx:0, rdx:0, stack:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: stack:96|QWORD[.] rdx|QWORD[.] rdi|DWORD stack:48|QWORD[.] r11|DWORD stack:60|DWORD stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:63, 37] <|@ <|@
      nr  966  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  968  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  976  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ st <@st|@reference-map: [stack:0, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: stack:96|QWORD[.] stack:32|QWORD[.] - - - stack:60|DWORD stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:7, 70, 37] <|@ <|@
      nr  980  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  982  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors 
    xhandlers
    flags 
    probability 4596713658403090692
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1004  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" "B111" 
    xhandlers
    flags 
    probability 4593668606606338863
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4593668606606338863
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction stack:80|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  268  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbp:0, rsi:0, r8:0, stack:16, stack:20, stack:36, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r13|DWORD = MOV [rbp|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4589166011192121245
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction CMP (x: rbx|DWORD, y: [rbp|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4588986997144543599
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction CMP (x: rbx|DWORD, y: [rbp|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588986997144543599
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  312  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B34 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B110" 
    xhandlers
    flags 
    probability 4589164002765815489
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  330  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B42" 
    xhandlers
    flags 
    probability 4589164002765815489
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction r13|DWORD[.] = MOV [rbp|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  336  <|@ st <@st|@reference-map: [rdx:0, rbp:0, rsi:0, r8:0, r13:0, stack:16, stack:20, stack:36, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r14|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  338  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  340  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4584661407239600622
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction CMP (x: rbx|DWORD, y: [r13|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  346  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4584482413156988411
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction CMP (x: rbx|DWORD, y: [r13|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 4584482413156988411
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  380  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B41 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B54" 
    xhandlers
    flags 
    probability 4584659399037289364
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ instruction stack:84|DWORD[.] = MOVE rbp|DWORD[.] moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ st <@st|@reference-map: [stack:12, stack:16, stack:20, stack:24, stack:36, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:84|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:80|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:76|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:60|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:5, 5, 5, 5, 5, 18] <|@ <|@
      nr  418  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B55" 
    xhandlers
    flags 
    probability 4584569043370954236
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576883988367814258
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B10 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B10" 
    successors "B58" "B86" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:8, 18] <|@ <|@
      nr  554  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  556  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18] <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B85" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction r11|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  566  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r10:0, r11:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr  568  <|@ instruction r9|DWORD = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  570  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  572  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  580  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B84" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r8|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  596  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r8:0, r10:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr  598  <|@ instruction rcx|DWORD = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B83" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction rbx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  608  <|@ instruction CMP (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B69" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction r9|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  616  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:8, 18] <|@ <|@
      nr  618  <|@ instruction rbp|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  620  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B70" "B82" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr  658  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B81" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  666  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] rbp|DWORD 
>@ <|@ instruction CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18] <|@ <|@
      nr  668  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B80" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  672  <|@ instruction CMP stack:40|DWORD y: 256 size: WORD <|@ <|@
      nr  674  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B71 -> B72 falseDestination: B71 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction r13|QWORD = MOVZX stack:40|DWORD size: DWORD <|@ <|@
      nr  680  <|@ instruction rax|DWORD = MOVZXB [r13|QWORD + rax|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  682  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  696  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B68" 
    successors "B76" "B79" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  704  <|@ instruction rbp|DWORD = MOV [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  706  <|@ instruction MOV (x: [rax|QWORD[.] + rcx|DWORD * 4 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction MOV (x: [rax|QWORD[.] + rbx|DWORD * 4 + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  710  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  712  <|@ instruction CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr  714  <|@ instruction BRANCH trueDestinationProbability: 0.7905664707988008 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4576838579302148934
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  718  <|@ instruction CMP [rdx|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr  720  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 4576838579302148934
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  736  <|@ instruction MOV (x: [r8|DWORD[.] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [r8|DWORD[.] * 8 + 20], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  742  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  630  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  642  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B75" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B68 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B50" 
    xhandlers
    flags 
    probability 4572379749647744704
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B17 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B17" 
    successors "B55" 
    xhandlers
    flags 
    probability 4572408646700802489
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  498  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:24, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r11|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 18] <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ st <@st|@reference-map: [stack:24, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 18] <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B50 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B100" 
    xhandlers
    flags 
    probability 4568170562233623375
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  746  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction r8|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction stack:40|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  752  <|@ instruction stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B79 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4567988925970962079
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction rdi|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4567875510998951477
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B24" 
    successors "B49" "B51" 
    xhandlers
    flags 
    probability 4567904476561619772
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction rsi|DWORD[.] = MOV [r9|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  476  <|@ st <@st|@reference-map: [rsi:0, r9:0, stack:24, stack:36, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r9|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:60|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 18] <|@ <|@
      nr  478  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  480  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ st <@st|@reference-map: [stack:24, stack:36, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:60|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 18] <|@ <|@
      nr  484  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  486  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B89" 
    xhandlers
    flags 
    probability 4567846682455504201
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  512  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B51 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B46" 
    xhandlers
    flags 
    probability 4563371272421426627
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  284  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B31 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B31" 
    successors "B47" "B52" 
    xhandlers
    flags 
    probability 4563414528223827680
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  454  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:20, stack:24, stack:36, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rax|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:76|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:60|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18] <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  458  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ st <@st|@reference-map: [stack:20, stack:24, stack:36, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:76|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:60|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 5, 18] <|@ <|@
      nr  462  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    probability 4563356597098491089
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B52 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558867033915162205
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B38" 
    successors "B45" "B53" 
    xhandlers
    flags 
    probability 4561758415237886310
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction rsi|DWORD[.] = MOV [rbp|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  432  <|@ st <@st|@reference-map: [rbp:0, rsi:0, stack:16, stack:20, stack:24, stack:36, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rbp|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:80|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:76|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:60|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 18] <|@ <|@
      nr  434  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  436  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:36, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:80|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:76|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:60|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 5, 5, 18] <|@ <|@
      nr  440  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    probability 4561671903633084204
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4554418386289649169
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction rbp|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4538018870717512057
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4533532809550432117
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction r9|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    probability 4531654368214683246
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction rax|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction r10|DWORD = MOVE input: int[-263731|0xfffffffffffbf9cd] <|@ <|@
      nr  806  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  808  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B60" "B85" "B84" "B83" "B65" "B67" "B82" "B81" "B80" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  814  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  818  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:48]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:8, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction MOV [r15|QWORD + 668] y: -262419 size: DWORD <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  692  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:48]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1094  <|@ instruction r10|DWORD = MOVE input: int[-238619|0xfffffffffffc5be5] <|@ <|@
      nr 1096  <|@ instruction JUMP ~[] destination: B116 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B3" "B118" "B117" "B116" "B115" "B114" "B12" "B113" "B19" "B112" "B26" "B111" "B33" "B110" "B40" 
    successors 
    xhandlers
    flags 
    probability 2373397003624251392
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1118  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1120  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1122  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction r10|DWORD = MOVE input: int[-248595|0xfffffffffffc34ed] <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B26 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  772  <|@ instruction r10|DWORD = MOVE input: int[-290867|0xfffffffffffb8fcd] <|@ <|@
      nr  774  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B82 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  916  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  918  <|@ instruction MOV [r15|QWORD + 668] y: -313619 size: DWORD <|@ <|@
      nr  920  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  922  <|@ st <@st|@reference-map: [rdx:0, r10:0, stack:48]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: r10|QWORD[.] rdx|QWORD[.] rdi|DWORD stack:48|QWORD[.] r11|DWORD r13|DWORD rsi|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  780  <|@ instruction r10|DWORD = MOVE input: int[-279323|0xfffffffffffbbce5] <|@ <|@
      nr  782  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  784  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  788  <|@ instruction r10|DWORD = MOVE input: int[-277019|0xfffffffffffbc5e5] <|@ <|@
      nr  790  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B84 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction r10|DWORD = MOVE input: int[-269075|0xfffffffffffbe4ed] <|@ <|@
      nr  588  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B60 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction r10|DWORD = MOVE input: int[-253715|0xfffffffffffc20ed] <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B40 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction r10|DWORD = MOVE input: int[-267035|0xfffffffffffbece5] <|@ <|@
      nr  798  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B109" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1024  <|@ instruction r10|DWORD = MOVE input: int[-308251|0xfffffffffffb4be5] // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B106 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" "B92" "B107" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1050  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1052  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1054  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:48]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rax|DWORD 
locals: rsi|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:8, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1058  <|@ instruction r10|DWORD = MOVE input: int[-251443|0xfffffffffffc29cd] <|@ <|@
      nr 1060  <|@ instruction JUMP ~[] destination: B110 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  634  <|@ instruction r10|DWORD = MOVE input: int[-290323|0xfffffffffffb91ed] <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B65 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B109" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction r10|DWORD = MOVE input: int[-300819|0xfffffffffffb68ed] <|@ <|@
      nr  862  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B92 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1064  <|@ instruction r10|DWORD = MOVE input: int[-248883|0xfffffffffffc33cd] <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1008  <|@ instruction MOV [r15|QWORD + 668] y: -317491 size: DWORD <|@ <|@
      nr 1010  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1012  <|@ st <@st|@reference-map: [rdx:0, stack:0, stack:48]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: stack:96|QWORD[.] rdx|QWORD[.] rdi|DWORD stack:48|QWORD[.] r11|DWORD stack:60|DWORD stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-293659|0xfffffffffffb84e5] <|@ <|@
      nr  768  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B109" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1040  <|@ instruction r10|DWORD = MOVE input: int[-296243|0xfffffffffffb7acd] <|@ <|@
      nr 1042  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction JUMP ~[] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B109" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1016  <|@ instruction r10|DWORD = MOVE input: int[-310555|0xfffffffffffb42e5] <|@ <|@
      nr 1018  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1020  <|@ instruction JUMP ~[] destination: B105 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B109" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1032  <|@ instruction r10|DWORD = MOVE input: int[-299035|0xfffffffffffb6fe5] <|@ <|@
      nr 1034  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1036  <|@ instruction JUMP ~[] destination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction r10|DWORD = MOVE input: int[-291091|0xfffffffffffb8eed] <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B80 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction r10|DWORD = MOVE input: int[-246035|0xfffffffffffc3eed] <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B19 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1076  <|@ instruction r10|DWORD = MOVE input: int[-243763|0xfffffffffffc47cd] <|@ <|@
      nr 1078  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1082  <|@ instruction r10|DWORD = MOVE input: int[-240947|0xfffffffffffc52cd] <|@ <|@
      nr 1084  <|@ instruction JUMP ~[] destination: B114 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1100  <|@ instruction r10|DWORD = MOVE input: int[-237843|0xfffffffffffc5eed] <|@ <|@
      nr 1102  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction r10|DWORD = MOVE input: int[-251155|0xfffffffffffc2aed] <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B33 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1088  <|@ instruction r10|DWORD = MOVE input: int[-240659|0xfffffffffffc53ed] <|@ <|@
      nr 1090  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction r10|DWORD = MOVE input: int[-290579|0xfffffffffffb90ed] <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B67 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction r10|DWORD = MOVE input: int[-243475|0xfffffffffffc48ed] <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B12 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  986  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  988  <|@ instruction r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction r11|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction MOV [r15|QWORD + 668] y: -319507 size: DWORD <|@ <|@
      nr  996  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  998  <|@ st <@st|@reference-map: [rdx:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 10]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: r11|QWORD[.] rdx|QWORD[.] - - - r10|DWORD r8|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 70, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction r10|DWORD = MOVE input: int[-235283|0xfffffffffffc68ed] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B3 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1112  <|@ instruction r10|DWORD = MOVE input: int[-234515|0xfffffffffffc6bed] <|@ <|@
      nr 1114  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1070  <|@ instruction r10|DWORD = MOVE input: int[-246323|0xfffffffffffc3dcd] <|@ <|@
      nr 1072  <|@ instruction JUMP ~[] destination: B112 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction MOV [r15|QWORD + 668] y: -282899 size: DWORD <|@ <|@
      nr  726  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  728  <|@ st <@st|@reference-map: [rdx:0, r10:0, stack:48]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: r10|QWORD[.] rdx|QWORD[.] rdi|DWORD stack:48|QWORD[.] r11|DWORD rbp|DWORD rsi|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1106  <|@ instruction r10|DWORD = MOVE input: int[-235059|0xfffffffffffc69cd] <|@ <|@
      nr 1108  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #3          // java.util.regex.Matcher.to:int
     5: if_icmpge     49
     8: aload_3       
     9: iload_2       
    10: invokestatic  #4          // java.lang.Character.codePointAt:(java.lang.CharSequence, int)int
    13: istore        4
    15: aload_0       
    16: iload         4
    18: invokevirtual #5          // isSatisfiedBy:(int)boolean
    21: ifeq          47
    24: aload_0       
    25: getfield      #6          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    28: aload_1       
    29: iload_2       
    30: iload         4
    32: invokestatic  #7          // java.lang.Character.charCount:(int)int
    35: iadd          
    36: aload_3       
    37: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    40: ifeq          47
    43: iconst_1      
    44: goto          48
    47: iconst_0      
    48: ireturn       
    49: aload_1       
    50: iconst_1      
    51: putfield      #9          // java.util.regex.Matcher.hitEnd:boolean
    54: iconst_0      
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B119" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7acef4f slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B118" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B117" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r10|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B116" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B115" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction r10|DWORD = MOVSX [r10|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction CMP r10|DWORD y: -10240 size: WORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B114" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r11:0, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r9|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOVZX r10|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction rdi|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr   72  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602679321447256704
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction CMP (x: rbx|DWORD, y: [r11|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4602500749766030220
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction CMP (x: rbx|DWORD, y: [r11|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B89" 
    xhandlers
    flags 
    probability 4602500749766030220
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  110  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B13 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" "B51" "B13" "B20" 
    successors "B90" "B108" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  828  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  830  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rax|DWORD 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18] <|@ <|@
      nr  832  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" "B107" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  836  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction rcx|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  840  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rax|DWORD 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr  842  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  844  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B93" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  850  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  854  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  856  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B94" "B106" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction rcx|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  870  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rax|DWORD 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr  872  <|@ instruction r9|DWORD = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  874  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  876  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B105" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  880  <|@ instruction rbx|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  882  <|@ instruction CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B99" 
    xhandlers
    flags 
    probability 4607070059543018608
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  888  <|@ instruction rdi|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  892  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0, r10:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rax|DWORD 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rbp|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18] <|@ <|@
      nr  894  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  896  <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  898  <|@ instruction r13|DWORD = MOV [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  900  <|@ instruction MOV (x: [rax|QWORD[.] + r9|DWORD * 4 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  902  <|@ instruction MOV (x: [rax|QWORD[.] + rbx|DWORD * 4 + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  904  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr  906  <|@ instruction BRANCH trueDestinationProbability: 0.7905664707988008 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4605207181810611474
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  910  <|@ instruction CMP [rdx|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr  912  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B96 -> B97 falseDestination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors 
    xhandlers
    flags 
    probability 4605207181810611474
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  926  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  928  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  930  <|@ instruction MOV (x: [rcx|DWORD[.] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  932  <|@ instruction MOV (x: [rcx|DWORD[.] * 8 + 20], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  934  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  936  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B15" "B113" 
    xhandlers
    flags 
    probability 4602677814623427328
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  124  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4602677814623427328
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction stack:60|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction r9|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r11:0, stack:36, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  134  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598175219433241686
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4597996165449052256
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B89" 
    xhandlers
    flags 
    probability 4597996165449052256
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  176  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B20 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B112" 
    xhandlers
    flags 
    probability 4598173210558871978
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B112 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B28" 
    xhandlers
    flags 
    probability 4598173210558871978
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction stack:76|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction rax|DWORD[.] = MOV [r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  198  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r8:0, r9:0, stack:20, stack:36, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction rbp|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  200  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4593670615256664101
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction CMP (x: rbx|DWORD, y: [rax|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  208  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4593491581241894131
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction CMP (x: rbx|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  230  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B55" 
    xhandlers
    flags 
    probability 4593491581241894131
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  242  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  244  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  248  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B27 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B50" "B52" "B53" "B54" "B41" "B27" "B34" 
    successors "B56" "B88" 
    xhandlers
    flags 
    probability 4598219208763472101
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  536  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  538  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B89" 
    xhandlers
    flags 
    probability 4598171908865345136
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B100" 
    xhandlers
    flags 
    probability 4596619531220163959
    begin_IR
      LIR
      nr  938  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  940  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  942  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  944  <|@ instruction stack:40|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction stack:60|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B99 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B79" "B99" 
    successors "B101" "B104" 
    xhandlers
    flags 
    probability 4596713658403090692
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr  754  <|@ instruction stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rcx|DWORD = MOV [r8|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  956  <|@ instruction CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed} <|@ <|@
      nr  958  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4596713658403090692
    begin_IR
      LIR
      nr  960  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  962  <|@ instruction rcx|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  964  <|@ st <@st|@reference-map: [rcx:0, rdx:0, stack:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: stack:96|QWORD[.] rdx|QWORD[.] rdi|DWORD stack:48|QWORD[.] r11|DWORD stack:60|DWORD stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:63, 37] <|@ <|@
      nr  966  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  968  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  970  <|@ instruction r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  976  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  978  <|@ st <@st|@reference-map: [stack:0, stack:64]
live-base-pointers: []
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: stack:96|QWORD[.] stack:32|QWORD[.] - - - stack:60|DWORD stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:7, 70, 37] <|@ <|@
      nr  980  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  982  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors 
    xhandlers
    flags 
    probability 4596713658403090692
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1004  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" "B111" 
    xhandlers
    flags 
    probability 4593668606606338863
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4593668606606338863
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction stack:80|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  268  <|@ st <@st|@reference-map: [rax:0, rdx:0, rbp:0, rsi:0, r8:0, stack:16, stack:20, stack:36, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r13|DWORD = MOV [rbp|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4589166011192121245
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction CMP (x: rbx|DWORD, y: [rbp|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  278  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4588986997144543599
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction CMP (x: rbx|DWORD, y: [rbp|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588986997144543599
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  312  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B34 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B110" 
    xhandlers
    flags 
    probability 4589164002765815489
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  330  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B42" 
    xhandlers
    flags 
    probability 4589164002765815489
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction r13|DWORD[.] = MOV [rbp|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  336  <|@ st <@st|@reference-map: [rdx:0, rbp:0, rsi:0, r8:0, r13:0, stack:16, stack:20, stack:36, stack:64]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction r14|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr  338  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  340  <|@ instruction BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4584661407239600622
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction CMP (x: rbx|DWORD, y: [r13|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  346  <|@ instruction BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4584482413156988411
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction CMP (x: rbx|DWORD, y: [r13|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 4584482413156988411
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  380  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B41 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B43" "B54" 
    xhandlers
    flags 
    probability 4584659399037289364
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ instruction stack:84|DWORD[.] = MOVE rbp|DWORD[.] moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ st <@st|@reference-map: [stack:12, stack:16, stack:20, stack:24, stack:36, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:84|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:80|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:76|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:60|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:5, 5, 5, 5, 5, 18] <|@ <|@
      nr  418  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B55" 
    xhandlers
    flags 
    probability 4584569043370954236
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576883988367814258
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B10 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" "B10" 
    successors "B58" "B86" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:8, 18] <|@ <|@
      nr  554  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  556  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18] <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B85" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction r11|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  566  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r10:0, r11:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr  568  <|@ instruction r9|DWORD = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  570  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  572  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOV [r11|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  580  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B84" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r8|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  596  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r8:0, r10:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18] <|@ <|@
      nr  598  <|@ instruction rcx|DWORD = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  600  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B83" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  606  <|@ instruction rbx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  608  <|@ instruction CMP (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B69" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction r9|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  616  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:8, 18] <|@ <|@
      nr  618  <|@ instruction rbp|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  620  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B70" "B82" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr  658  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B81" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  666  <|@ st <@st|@reference-map: [rax:0, rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] rbp|DWORD 
>@ <|@ instruction CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18] <|@ <|@
      nr  668  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B80" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  672  <|@ instruction CMP stack:40|DWORD y: 256 size: WORD <|@ <|@
      nr  674  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B71 -> B72 falseDestination: B71 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B73" "B75" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction r13|QWORD = MOVZX stack:40|DWORD size: DWORD <|@ <|@
      nr  680  <|@ instruction rax|DWORD = MOVZXB [r13|QWORD + rax|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  682  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B72" "B66" 
    successors "B76" "B79" 
    xhandlers
    flags 
    probability 4578344614228976666
    begin_IR
      LIR
      nr  698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  700  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  704  <|@ instruction rbp|DWORD = MOV [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  706  <|@ instruction MOV (x: [rax|QWORD[.] + rcx|DWORD * 4 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction MOV (x: [rax|QWORD[.] + rbx|DWORD * 4 + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  710  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  712  <|@ instruction CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr  714  <|@ instruction BRANCH trueDestinationProbability: 0.7905664707988008 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4576838579302148934
    begin_IR
      LIR
      nr  716  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  718  <|@ instruction CMP [rdx|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr  720  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 4576838579302148934
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  734  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  736  <|@ instruction MOV (x: [r8|DWORD[.] * 8 + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [r8|DWORD[.] * 8 + 20], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  742  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  628  <|@ instruction CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  630  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B75" 
    xhandlers
    flags 
    probability 4573841014601606170
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  642  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B50" 
    xhandlers
    flags 
    probability 4572379749647744704
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B17 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B17" 
    successors "B55" 
    xhandlers
    flags 
    probability 4572408646700802489
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  498  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:24, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r11|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 18] <|@ <|@
      nr  500  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  502  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ st <@st|@reference-map: [stack:24, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 18] <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B50 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B100" 
    xhandlers
    flags 
    probability 4568170562233623375
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  746  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction r8|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction stack:40|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  752  <|@ instruction stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B79 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4567988925970962079
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction rdi|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B48" 
    xhandlers
    flags 
    probability 4567875510998951477
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  216  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B24 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B24" 
    successors "B49" "B51" 
    xhandlers
    flags 
    probability 4567904476561619772
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction rsi|DWORD[.] = MOV [r9|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  476  <|@ st <@st|@reference-map: [rsi:0, r9:0, stack:24, stack:36, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r9|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:60|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 18] <|@ <|@
      nr  478  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  480  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ st <@st|@reference-map: [stack:24, stack:36, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:60|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 18] <|@ <|@
      nr  484  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  486  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B89" 
    xhandlers
    flags 
    probability 4567846682455504201
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  512  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B51 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B46" 
    xhandlers
    flags 
    probability 4563371272421426627
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  284  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B31 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B31" 
    successors "B47" "B52" 
    xhandlers
    flags 
    probability 4563414528223827680
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  454  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:20, stack:24, stack:36, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rax|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:76|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:60|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18] <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  458  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ st <@st|@reference-map: [stack:20, stack:24, stack:36, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:76|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:60|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 5, 18] <|@ <|@
      nr  462  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B55" 
    xhandlers
    flags 
    probability 4563356597098491089
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B52 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    probability 4558867033915162205
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B38" 
    successors "B45" "B53" 
    xhandlers
    flags 
    probability 4561758415237886310
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction rsi|DWORD[.] = MOV [rbp|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  432  <|@ st <@st|@reference-map: [rbp:0, rsi:0, stack:16, stack:20, stack:24, stack:36, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rbp|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:80|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:76|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:60|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 18] <|@ <|@
      nr  434  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  436  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:24, stack:36, stack:48, stack:64]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:80|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:76|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:60|DWORD[.] stack:36|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:36|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:52|DWORD stack:48|QWORD[.] stack:36|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 5, 5, 18] <|@ <|@
      nr  440  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    probability 4561671903633084204
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4554418386289649169
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction rbp|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4538018870717512057
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4533532809550432117
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction r9|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    probability 4531654368214683246
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction rax|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction r10|DWORD = MOVE input: int[-263731|0xfffffffffffbf9cd] <|@ <|@
      nr  806  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  808  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B60" "B85" "B84" "B83" "B65" "B67" "B82" "B81" "B80" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  814  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  818  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:48]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:8, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction MOV [r15|QWORD + 668] y: -262419 size: DWORD <|@ <|@
      nr  690  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  692  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:48]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: int[0|0x0] 
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:21] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1094  <|@ instruction r10|DWORD = MOVE input: int[-238619|0xfffffffffffc5be5] <|@ <|@
      nr 1096  <|@ instruction JUMP ~[] destination: B116 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" "B3" "B118" "B117" "B116" "B115" "B114" "B12" "B113" "B19" "B112" "B26" "B111" "B33" "B110" "B40" 
    successors 
    xhandlers
    flags 
    probability 2373397003624251392
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1118  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1120  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1122  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction r10|DWORD = MOVE input: int[-248595|0xfffffffffffc34ed] <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B26 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  772  <|@ instruction r10|DWORD = MOVE input: int[-290867|0xfffffffffffb8fcd] <|@ <|@
      nr  774  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B82 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  916  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3 <|@ <|@
      nr  918  <|@ instruction MOV [r15|QWORD + 668] y: -313619 size: DWORD <|@ <|@
      nr  920  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  922  <|@ st <@st|@reference-map: [rdx:0, r10:0, stack:48]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: r10|QWORD[.] rdx|QWORD[.] rdi|DWORD stack:48|QWORD[.] r11|DWORD r13|DWORD rsi|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  780  <|@ instruction r10|DWORD = MOVE input: int[-279323|0xfffffffffffbbce5] <|@ <|@
      nr  782  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  784  <|@ instruction JUMP ~[] destination: B83 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  788  <|@ instruction r10|DWORD = MOVE input: int[-277019|0xfffffffffffbc5e5] <|@ <|@
      nr  790  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B84 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction r10|DWORD = MOVE input: int[-269075|0xfffffffffffbe4ed] <|@ <|@
      nr  588  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B60 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction r10|DWORD = MOVE input: int[-253715|0xfffffffffffc20ed] <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B40 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction r10|DWORD = MOVE input: int[-267035|0xfffffffffffbece5] <|@ <|@
      nr  798  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B109" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1024  <|@ instruction r10|DWORD = MOVE input: int[-308251|0xfffffffffffb4be5] // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction JUMP ~[] destination: B106 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" "B92" "B107" "B106" "B105" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1050  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1052  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1054  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:48]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rax|DWORD 
locals: rsi|QWORD[.] rbp|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rsi|QWORD[.] rdx|QWORD[.] stack:52|DWORD stack:48|QWORD[.] rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:8, 18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1058  <|@ instruction r10|DWORD = MOVE input: int[-251443|0xfffffffffffc29cd] <|@ <|@
      nr 1060  <|@ instruction JUMP ~[] destination: B110 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  634  <|@ instruction r10|DWORD = MOVE input: int[-290323|0xfffffffffffb91ed] <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B65 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B109" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction r10|DWORD = MOVE input: int[-300819|0xfffffffffffb68ed] <|@ <|@
      nr  862  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B92 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1064  <|@ instruction r10|DWORD = MOVE input: int[-248883|0xfffffffffffc33cd] <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B111 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1008  <|@ instruction MOV [r15|QWORD + 668] y: -317491 size: DWORD <|@ <|@
      nr 1010  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1012  <|@ st <@st|@reference-map: [rdx:0, stack:0, stack:48]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: stack:96|QWORD[.] rdx|QWORD[.] rdi|DWORD stack:48|QWORD[.] r11|DWORD stack:60|DWORD stack:40|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  766  <|@ instruction r10|DWORD = MOVE input: int[-293659|0xfffffffffffb84e5] <|@ <|@
      nr  768  <|@ instruction JUMP ~[] destination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B109" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1040  <|@ instruction r10|DWORD = MOVE input: int[-296243|0xfffffffffffb7acd] <|@ <|@
      nr 1042  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction JUMP ~[] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B109" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1016  <|@ instruction r10|DWORD = MOVE input: int[-310555|0xfffffffffffb42e5] <|@ <|@
      nr 1018  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1020  <|@ instruction JUMP ~[] destination: B105 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B109" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1032  <|@ instruction r10|DWORD = MOVE input: int[-299035|0xfffffffffffb6fe5] <|@ <|@
      nr 1034  <|@ instruction rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1036  <|@ instruction JUMP ~[] destination: B107 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction r10|DWORD = MOVE input: int[-291091|0xfffffffffffb8eed] <|@ <|@
      nr  762  <|@ instruction JUMP ~[] destination: B80 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction r10|DWORD = MOVE input: int[-246035|0xfffffffffffc3eed] <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B19 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1076  <|@ instruction r10|DWORD = MOVE input: int[-243763|0xfffffffffffc47cd] <|@ <|@
      nr 1078  <|@ instruction JUMP ~[] destination: B113 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1082  <|@ instruction r10|DWORD = MOVE input: int[-240947|0xfffffffffffc52cd] <|@ <|@
      nr 1084  <|@ instruction JUMP ~[] destination: B114 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1100  <|@ instruction r10|DWORD = MOVE input: int[-237843|0xfffffffffffc5eed] <|@ <|@
      nr 1102  <|@ instruction JUMP ~[] destination: B117 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction r10|DWORD = MOVE input: int[-251155|0xfffffffffffc2aed] <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B33 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1088  <|@ instruction r10|DWORD = MOVE input: int[-240659|0xfffffffffffc53ed] <|@ <|@
      nr 1090  <|@ instruction JUMP ~[] destination: B115 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction r10|DWORD = MOVE input: int[-290579|0xfffffffffffb90ed] <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B67 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction r10|DWORD = MOVE input: int[-243475|0xfffffffffffc48ed] <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B12 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  986  <|@ instruction r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  988  <|@ instruction r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction r11|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction MOV [r15|QWORD + 668] y: -319507 size: DWORD <|@ <|@
      nr  996  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  998  <|@ st <@st|@reference-map: [rdx:0, r11:0]
live-base-pointers: []
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 10]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: r11|QWORD[.] rdx|QWORD[.] - - - r10|DWORD r8|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 70, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction r10|DWORD = MOVE input: int[-235283|0xfffffffffffc68ed] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B3 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1112  <|@ instruction r10|DWORD = MOVE input: int[-234515|0xfffffffffffc6bed] <|@ <|@
      nr 1114  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1070  <|@ instruction r10|DWORD = MOVE input: int[-246323|0xfffffffffffc3dcd] <|@ <|@
      nr 1072  <|@ instruction JUMP ~[] destination: B112 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction MOV [r15|QWORD + 668] y: -282899 size: DWORD <|@ <|@
      nr  726  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  728  <|@ st <@st|@reference-map: [rdx:0, r10:0, stack:48]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: r10|QWORD[.] rdx|QWORD[.] rdi|DWORD stack:48|QWORD[.] r11|DWORD rbp|DWORD rsi|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1106  <|@ instruction r10|DWORD = MOVE input: int[-235059|0xfffffffffffc69cd] <|@ <|@
      nr 1108  <|@ instruction JUMP ~[] destination: B118 -> B120 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: aload_1       
     2: getfield      #3          // java.util.regex.Matcher.to:int
     5: if_icmpge     49
     8: aload_3       
     9: iload_2       
    10: invokestatic  #4          // java.lang.Character.codePointAt:(java.lang.CharSequence, int)int
    13: istore        4
    15: aload_0       
    16: iload         4
    18: invokevirtual #5          // isSatisfiedBy:(int)boolean
    21: ifeq          47
    24: aload_0       
    25: getfield      #6          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
    28: aload_1       
    29: iload_2       
    30: iload         4
    32: invokestatic  #7          // java.lang.Character.charCount:(int)int
    35: iadd          
    36: aload_3       
    37: invokevirtual #8          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    40: ifeq          47
    43: iconst_1      
    44: goto          48
    47: iconst_0      
    48: ireturn       
    49: aload_1       
    50: iconst_1      
    51: putfield      #9          // java.util.regex.Matcher.hitEnd:boolean
    54: iconst_0      
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c245048895424403b4a100f8df308000041817808addeadde0f851309000085c90f8cd2080000458b500c468b1cd50c000000443bd90f8e5b080000443bd90f86fb06000049c1e203450fbf544a10664181fa00d80f8352080000817e08addeadde0f8524080000448b5e10468b0cdd08000000410fb7da8bf9ffc74181f9addeadde0f8513010000423b1cdd100000000f8c73030000423b1cdd140000000f8f1e080000b801000000897c2428895c243c4c89442430894c242c448b560c42813cd508000000addeadde0f856b070000488b5424408b4a3c448b04cd0c000000468b1cd510000000453bc30f866a07000048c1e103468b5c99104585db0f8cfe0600008b4a34448b04cd0c000000468b0cd514000000453bc10f86ae060000418bd9ffc3443bc30f861f0700008b7c2428468b04d50c000000428b2cc5080000008bc148c1e0038b749810468b6c881046895c8810897c981081fdaddeadde0f8513010000837a18010f84fe050000897a208b421c8904cd10000000893ccd14000000b801000000488b6c24504883c458850500000000c5f877c34181f9addeadde0f85d806000044895c2424468b0cdd10000000428b04cd0800000081f8addeadde0f8537000000423b1ccd100000000f8ca8030000423b1ccd140000000f8f90060000b801000000897c2428895c243c4c89442430894c242ce9bafeffff81f8addeadde0f850207000044894c2414428b04cd100000008b2cc50800000081fdaddeadde0f85bb0000003b1cc5100000000f8cad0300003b1cc5140000000f8f13050000b801000000897c2428895c243c44895424384c89442430894c242c488974241885c00f846a030000488b742418e942feffff49c1e00349c1e2038974243844896c24244c891424418b480881f9addeadde0f857b050000418b480c418504cc48c1e103488bf14c8bca8bcf4c8b44243048b8ffffffffffffffff90e8000000009085c00f84fe050000b801000000488b6c24504883c458850500000000c5f877c381fdaddeadde0f851a050000894424108b2cc510000000448b2ced080000004181fdaddeadde0f853f0000003b1ced100000000f8c1e0300003b1ced140000000f8f74050000b801000000897c2428895c243c44895424384c89442430894c242c4889742418e914ffffff4181fdaddeadde0f858c040000448b2ced10000000468b34ed080000004181feaddeadde0f8541000000423b1ced100000000f8c07030000423b1ced140000000f8f1e040000b801000000897c2428895c243c44895424384c89442430894c242c4889742418e9a9feffff896c240c897c242844895424384c89442430894c242c488974241849c1e503498bf58bd3895c243c48b8ffffffffffffffff6690e8000000009085c00f84e2020000b801000000e95dfeffff895c243c44895424384c89442430894c242c8b4614418504c4448b560c42813cd508000000addeadde0f85cc020000488b542440448b5a3c468b04dd0c000000468b0cd510000000453bc10f866403000049c1e303478b5c8b104585db0f8c3b030000448b4234468b0cc50c000000428b0cd514000000443bc90f860f0300008bd9ffc3443bcb0f86f3020000468b0cd50c000000438504cc8b2cc50800000081fdaddeadde0f84ab00000081fdaddeadde0f85a00200008b6c243c8b04c5100000003b2cc50c0000000f835703000066817c243800010f8384030000440fb76c2438410fb644c51085c00f842d020000418bc048c1e0038b7498108b6c881044895c8810897c981049c1e20342813ccd08000000addeadde0f859c000000837a18010f84e7030000897a208b421c428904c51000000042893cc514000000b801000000488b6c24504883c458850500000000c5f877c38b6c243c3b2cc5100000000f8c850200003b2cc5140000007e80e938030000897c2428895c243c44895424384c89442430894c242c4889742418428b34dd14000000418504f448c1e6038b54243c48b8ffffffffffffffff90e80000000090e9a2fcffff49c1e1034d8bc189742438896c2424e9b1fcffff8b7c2428488b742418e935feffff897c2428895c243c44895424384c89442430894c242c4889742418428b34cd14000000418504f448c1e6038b54243c48b8ffffffffffffffff6690e8000000009085c00f84b8000000b801000000488b742418e97cfaffff897c2428895c243c44895424384c89442430894c242c48897424188b34c514000000418504f448c1e6038b54243c48b8ffffffffffffffff666690e8000000009085c00f846a000000b801000000e9d5fbffff897c2428895c243c44895424384c89442430894c242c48897424188b34ed14000000418504f448c1e6038b54243c48b8ffffffffffffffffe8000000009085c00f8424000000b801000000e985fbffff8b6c240cebc5448b5c2424e9a9feffff448b4c2414e906ffffff8b442410e955ffffff41bacdf9fbff8b6c243c488b5424404589979c0200004d89a7a8020000e8000000009041c7879c020000edfefbff4d89a7a8020000e8000000009041bae55bfcff4589979c0200004d89a7a8020000e8000000009041baed34fcffebe441bacd8ffbff8b6c243ceba649c1e20341c7879c020000ed36fbff4d89a7a8020000e8000000009041bae5bcfbff8b6c243ce97bffffff41bae5c5fbff8b6c243ce96cffffff41baede4fbff8b6c243ce95dffffff41baed20fcffeb8741bae5ecfbff8b6c243ce946ffffff41bae54bfbff8b6c243c4589979c0200004d89a7a8020000e8000000009041bacd29fcffe94fffffff41baed91fbffe912ffffff41baed68fbff8b6c243cebca41bacd33fcffe92dffffff41c7879c020000cd27fbff4d89a7a8020000e8000000009041bae584fbffe9d8feffff41bacd7afbff8b6c243c488b542440eb8b41bae542fbff8b6c243ce97cffffff41bae56ffbff8b6c243ce96dffffff41baed8efbffe99efeffff41baed3efcffe9c5feffff41bacd47fcffe9bafeffff41bacd52fcffe9affeffff41baed5efcffe9a4feffff41baed2afcffe999feffff41baed53fcffe98efeffff41baed90fbffe951feffff41baed48fcffe978feffff448b442438448b5424244c8b1c24488b54244041c7879c020000ed1ffbff4d89a7a8020000e8000000009041baed68fcffe942feffff41baed6bfcffe937feffff41bacd3dfcffe92cfeffff41c7879c020000edaefbff4d89a7a8020000e8000000009041bacd69fcffe909feffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7acef4f slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD state [bci:0]  <||@
  Comment 53 [rdx:0, rsi:0, r8:0, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 53 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 56 10 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B119  <||@
  Comment 62 block B1 null  <||@
  Comment 62 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 62 14 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0]  <||@
  Comment 62 [rdx:0, rsi:0, r8:0, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 62 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 62 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 70 16 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B118  <||@
  Comment 76 block B2 null  <||@
  Comment 76 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 76 20 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 78 22 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 84 block B4 null  <||@
  Comment 84 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 84 32 r10|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 88 34 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 88 [rdx:0, rsi:0, r8:0, r10:0, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 88 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 96 36 CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 99 38 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B117  <||@
  Comment 105 block B5 null  <||@
  Comment 105 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 42 CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 108 44 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B116  <||@
  Comment 114 block B6 null  <||@
  Comment 114 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 48 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 118 50 r10|DWORD = MOVSX [r10|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 124 52 CMP r10|DWORD y: -10240 size: WORD  <||@
  Comment 130 54 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B115  <||@
  Comment 136 block B7 null  <||@
  Comment 136 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 136 58 CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 136 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 143 60 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B114  <||@
  Comment 149 block B8 null  <||@
  Comment 149 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 149 64 r11|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 153 66 r9|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 153 [rdx:0, rsi:0, r8:0, r11:0, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 153 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 161 68 rbx|DWORD = MOVZX r10|DWORD size: DWORD  <||@
  Comment 165 70 rdi|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 169 72 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 169 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 176 74 BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B14  <||@
  Comment 182 block B9 null  <||@
  Comment 182 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 182 78 CMP (x: rbx|DWORD, y: [r11|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 190 80 BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 196 block B11 null  <||@
  Comment 196 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 196 96 CMP (x: rbx|DWORD, y: [r11|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 204 98 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 210 block B13 null  <||@
  Comment 210 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 210 108 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 215 110 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 219 112 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 223 114 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 228 116 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 232 118 JUMP ~[] destination: B13 -> B89  <||@
  Comment 232 block B89 null  <||@
  Comment 232 826 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 232 828 r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 236 830 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18]  <||@
  Comment 236 [rsi:0, r10:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |rax|DWORD     |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1                  |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 236 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 236 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 248 832 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B108  <||@
  Comment 254 block B90 null  <||@
  Comment 254 834 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 254 836 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 259 838 rcx|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 262 840 r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18]  <||@
  Comment 262 [rcx:0, rdx:0, rsi:0, r10:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |rax|DWORD     |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 262 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 270 842 r11|DWORD = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 278 844 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 281 846 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B107  <||@
  Comment 287 block B91 null  <||@
  Comment 287 848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 287 850 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 291 852 r11|DWORD = MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 296 854 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 299 856 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B91 -> B92 falseDestination: B91 -> B93  <||@
  Comment 305 block B93 null  <||@
  Comment 305 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 305 868 rcx|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD  <||@
  Comment 308 870 r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18]  <||@
  Comment 308 [rcx:0, rdx:0, rsi:0, r10:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |rax|DWORD     |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 308 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 316 872 r9|DWORD = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 324 874 CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 327 876 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B106  <||@
  Comment 333 block B94 null  <||@
  Comment 333 878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 333 880 rbx|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 338 882 CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 341 884 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B105  <||@
  Comment 347 block B95 null  <||@
  Comment 347 886 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 347 888 rdi|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 351 890 r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 359 892 rbp|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18]  <||@
  Comment 359 [rcx:0, rdx:0, rsi:0, r8:0, r10:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |rax|DWORD     |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 359 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 367 894 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 373 896 rsi|DWORD = MOV [rax|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 377 898 r13|DWORD = MOV [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 382 900 MOV (x: [rax|QWORD[.] + r9|DWORD * 4 + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 387 902 MOV (x: [rax|QWORD[.] + rbx|DWORD * 4 + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 391 904 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 391 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 397 906 BRANCH trueDestinationProbability: 0.7905664707988008 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B99  <||@
  Comment 403 block B96 null  <||@
  Comment 403 908 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 403 910 CMP [rdx|QWORD[.] + 24] y: 1 size: DWORD  <||@
  Comment 407 912 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B96 -> B97 falseDestination: B96 -> B98  <||@
  Comment 413 block B98 null  <||@
  Comment 413 924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 413 926 MOV (x: [rdx|QWORD[.] + 32], y: rdi|DWORD) size: DWORD  <||@
  Comment 416 928 rax|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 419 930 MOV (x: [rcx|DWORD[.] * 8 + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 426 932 MOV (x: [rcx|DWORD[.] * 8 + 20], y: rdi|DWORD) size: DWORD  <||@
  Comment 433 934 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 438 936 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 447 12  <||@
  Comment 457 block B14 null  <||@
  Comment 457 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 457 122 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 457 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 464 124 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B113  <||@
  Comment 470 block B15 null  <||@
  Comment 470 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 470 128 stack:60|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 475 130 r9|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 483 132 rax|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 483 [rdx:0, rsi:0, r8:0, r9:0, r11:0, stack:36, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 483 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 491 134 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 491 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 497 136 BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21  <||@
  Comment 503 block B16 null  <||@
  Comment 503 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 503 140 CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 511 142 BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 517 block B18 null  <||@
  Comment 517 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 517 162 CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 525 164 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 531 block B20 null  <||@
  Comment 531 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 531 174 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 536 176 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 540 178 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 544 180 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 549 182 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 553 184 JUMP ~[] destination: B20 -> B89  <||@
  Comment 558 block B21 null  <||@
  Comment 558 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 558 188 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 558 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 564 190 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B112  <||@
  Comment 570 block B22 null  <||@
  Comment 570 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 570 194 stack:76|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 575 196 rax|DWORD[.] = MOV [r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 583 198 rbp|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 583 [rax:0, rdx:0, rsi:0, r8:0, r9:0, stack:20, stack:36, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 583 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 590 200 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 590 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 596 202 BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B28  <||@
  Comment 602 block B23 null  <||@
  Comment 602 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 602 206 CMP (x: rbx|DWORD, y: [rax|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 609 208 BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 615 block B25 null  <||@
  Comment 615 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 615 228 CMP (x: rbx|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 622 230 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 628 block B27 null  <||@
  Comment 628 238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 628 240 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 633 242 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 637 244 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 641 246 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 646 248 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 651 250 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 655 252 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 660 254 JUMP ~[] destination: B27 -> B55  <||@
  Comment 660 block B55 null  <||@
  Comment 660 534 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 660 536 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 662 538 BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B88  <||@
  Comment 668 block B88 null  <||@
  Comment 668 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 668 822 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 673 824 JUMP ~[] destination: B88 -> B89  <||@
  Comment 678 block B99 null  <||@
  Comment 678 938 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 678 940 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 682 942 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 686 944 stack:40|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 690 946 stack:60|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 695 950 JUMP ~[] destination: B99 -> B100  <||@
  Comment 695 block B100 null  <||@
  Comment 695 952 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 695 754 stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 699 954 rcx|DWORD = MOV [r8|QWORD[.] + 8] size: DWORD  <||@
  Comment 703 956 CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed}  <||@
  Comment 703 {meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed}}  <||@
  Comment 709 958 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B104  <||@
  Comment 715 block B101 null  <||@
  Comment 715 960 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 715 962 rcx|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 719 964 NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:63, 37]  <||@
  Comment 719 [rcx:0, rdx:0, stack:0, stack:48, stack:64]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4          |5               |6              
     locals:  |stack:96|QWORD[.]  |rdx|QWORD[.]  |rdi|DWORD  |stack:48|QWORD[.]  |r11|DWORD  |stack:60|DWORD  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 719 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 723 966 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 727 968 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 730 970 r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 733 974 rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 735 976 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 740 978 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:7, 70, 37]  <||@
  Comment 740 7  <||@
  Comment 751 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 756 [stack:0, stack:64]at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4  |5               |6              
     locals:  |stack:96|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |stack:60|DWORD  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 757 980 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 759 982 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103  <||@
  Comment 765 block B103 null  <||@
  Comment 765 1000 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 765 1002 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 770 1004 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 779 12  <||@
  Comment 789 block B28 null  <||@
  Comment 789 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 789 258 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 789 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 795 260 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B111  <||@
  Comment 801 block B29 null  <||@
  Comment 801 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 801 264 stack:80|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 805 266 rbp|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 812 268 r13|DWORD = MOV [rbp|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 812 [rax:0, rdx:0, rbp:0, rsi:0, r8:0, stack:16, stack:20, stack:36, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 812 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 820 270 CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 820 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 827 272 BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35  <||@
  Comment 833 block B30 null  <||@
  Comment 833 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 833 276 CMP (x: rbx|DWORD, y: [rbp|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 840 278 BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 846 block B32 null  <||@
  Comment 846 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 846 298 CMP (x: rbx|DWORD, y: [rbp|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 853 300 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 859 block B34 null  <||@
  Comment 859 308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 859 310 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 864 312 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 868 314 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 872 316 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 877 318 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 882 320 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 886 322 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 891 324 JUMP ~[] destination: B34 -> B55  <||@
  Comment 896 block B35 null  <||@
  Comment 896 326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 896 328 CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 896 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 903 330 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B110  <||@
  Comment 909 block B36 null  <||@
  Comment 909 332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 909 334 r13|DWORD[.] = MOV [rbp|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 917 336 r14|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 917 [rdx:0, rbp:0, rsi:0, r8:0, r13:0, stack:16, stack:20, stack:36, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 917 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 925 338 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 925 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 932 340 BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B42  <||@
  Comment 938 block B37 null  <||@
  Comment 938 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 938 344 CMP (x: rbx|DWORD, y: [r13|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 946 346 BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39  <||@
  Comment 952 block B39 null  <||@
  Comment 952 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 952 366 CMP (x: rbx|DWORD, y: [r13|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 960 368 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41  <||@
  Comment 966 block B41 null  <||@
  Comment 966 376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 966 378 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 971 380 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 975 382 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 979 384 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 984 386 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 989 388 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 993 390 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 998 392 JUMP ~[] destination: B41 -> B55  <||@
  Comment 1003 block B42 null  <||@
  Comment 1003 394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1003 396 stack:84|DWORD[.] = MOVE rbp|DWORD[.] moveKind: DWORD  <||@
  Comment 1007 398 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1011 400 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1016 402 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1021 404 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1025 406 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1030 408 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 1034 410 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1037 412 rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1039 414 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1043 416 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:5, 5, 5, 5, 5, 18]  <||@
  Comment 1043 7  <||@
  Comment 1055 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1060 [stack:12, stack:16, stack:20, stack:24, stack:36, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:84|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:80|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:76|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:60|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1061 418 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1063 420 BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B54  <||@
  Comment 1069 block B54 null  <||@
  Comment 1069 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1069 530 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1074 532 JUMP ~[] destination: B54 -> B55  <||@
  Comment 1079 block B10 null  <||@
  Comment 1079 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1079 84 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1083 86 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1088 88 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1093 90 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1097 92 JUMP ~[] destination: B10 -> B57  <||@
  Comment 1097 block B57 null  <||@
  Comment 1097 548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1097 550 rax|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 1100 552 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:8, 18]  <||@
  Comment 1100 [rax:0, rsi:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1                  |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1100 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1104 554 r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 1108 556 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18]  <||@
  Comment 1108 [rax:0, rsi:0, r10:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1                  |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1108 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1108 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 1120 558 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B86  <||@
  Comment 1126 block B58 null  <||@
  Comment 1126 560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1126 562 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1131 564 r11|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 1135 566 r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18]  <||@
  Comment 1135 [rax:0, rdx:0, rsi:0, r10:0, r11:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1135 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1143 568 r9|DWORD = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1151 570 CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1154 572 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B85  <||@
  Comment 1160 block B59 null  <||@
  Comment 1160 574 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1160 576 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 1164 578 r11|DWORD = MOV [r11|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1169 580 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1172 582 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61  <||@
  Comment 1178 block B61 null  <||@
  Comment 1178 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1178 594 r8|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD  <||@
  Comment 1182 596 r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18]  <||@
  Comment 1182 [rax:0, rdx:0, rsi:0, r8:0, r10:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1182 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1190 598 rcx|DWORD = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1198 600 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1201 602 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B84  <||@
  Comment 1207 block B62 null  <||@
  Comment 1207 604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1207 606 rbx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 1211 608 CMP (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1214 610 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B83  <||@
  Comment 1220 block B63 null  <||@
  Comment 1220 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1220 614 r9|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1228 616 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:8, 18]  <||@
  Comment 1228 [rax:0, rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1228 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1232 618 rbp|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1239 620 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 1239 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 1245 622 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B69  <||@
  Comment 1251 block B69 null  <||@
  Comment 1251 654 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1251 656 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}  <||@
  Comment 1251 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 1257 658 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B82  <||@
  Comment 1263 block B70 null  <||@
  Comment 1263 660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1263 662 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1267 664 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1274 666 CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18]  <||@
  Comment 1274 [rax:0, rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |rbp|DWORD   <||@
  Comment 1274 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1281 668 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B81  <||@
  Comment 1287 block B71 null  <||@
  Comment 1287 670 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1287 672 CMP stack:40|DWORD y: 256 size: WORD  <||@
  Comment 1294 674 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B71 -> B72 falseDestination: B71 -> B80  <||@
  Comment 1300 block B72 null  <||@
  Comment 1300 676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1300 678 r13|QWORD = MOVZX stack:40|DWORD size: DWORD  <||@
  Comment 1306 680 rax|DWORD = MOVZXB [r13|QWORD + rax|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1312 682 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1314 684 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B75  <||@
  Comment 1320 block B75 null  <||@
  Comment 1320 698 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1320 700 rax|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 1327 702 rsi|DWORD = MOV [rax|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1331 704 rbp|DWORD = MOV [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1335 706 MOV (x: [rax|QWORD[.] + rcx|DWORD * 4 + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 1340 708 MOV (x: [rax|QWORD[.] + rbx|DWORD * 4 + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 1344 710 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 1348 712 CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 1348 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 1360 714 BRANCH trueDestinationProbability: 0.7905664707988008 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B79  <||@
  Comment 1366 block B76 null  <||@
  Comment 1366 716 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1366 718 CMP [rdx|QWORD[.] + 24] y: 1 size: DWORD  <||@
  Comment 1370 720 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 1376 block B78 null  <||@
  Comment 1376 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1376 732 MOV (x: [rdx|QWORD[.] + 32], y: rdi|DWORD) size: DWORD  <||@
  Comment 1379 734 rax|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 1382 736 MOV (x: [r8|DWORD[.] * 8 + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 1390 738 MOV (x: [r8|DWORD[.] * 8 + 20], y: rdi|DWORD) size: DWORD  <||@
  Comment 1398 740 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1403 742 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1412 12  <||@
  Comment 1422 block B64 null  <||@
  Comment 1422 624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1422 626 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1426 628 CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1433 630 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B66  <||@
  Comment 1439 block B66 null  <||@
  Comment 1439 638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1439 640 CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 1446 642 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B75  <||@
  Comment 1453 block B17 null  <||@
  Comment 1453 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1453 146 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1457 148 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1461 150 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1466 152 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1471 154 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1475 156 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1480 158 JUMP ~[] destination: B17 -> B50  <||@
  Comment 1480 block B50 null  <||@
  Comment 1480 494 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1480 496 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1488 498 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 18]  <||@
  Comment 1488 [rsi:0, r11:0, stack:24, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |r11|DWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1488 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1492 500 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 1496 502 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1500 504 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 18]  <||@
  Comment 1500 7  <||@
  Comment 1511 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1516 [stack:24, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1517 506 JUMP ~[] destination: B50 -> B55  <||@
  Comment 1522 block B79 null  <||@
  Comment 1522 744 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1522 746 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 1526 748 r8|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1529 750 stack:40|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1533 752 stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1537 756 JUMP ~[] destination: B79 -> B100  <||@
  Comment 1542 block B56 null  <||@
  Comment 1542 540 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1542 542 rdi|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1546 544 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1551 546 JUMP ~[] destination: B56 -> B57  <||@
  Comment 1556 block B24 null  <||@
  Comment 1556 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1556 212 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1560 214 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1564 216 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1569 218 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1574 220 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1578 222 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1583 224 JUMP ~[] destination: B24 -> B48  <||@
  Comment 1583 block B48 null  <||@
  Comment 1583 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1583 474 rsi|DWORD[.] = MOV [r9|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1591 476 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 18]  <||@
  Comment 1591 [rsi:0, r9:0, stack:24, stack:36, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0            |1              
     locals:  |r9|DWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]   |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:60|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1591 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1595 478 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 1599 480 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1603 482 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 18]  <||@
  Comment 1603 7  <||@
  Comment 1615 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1620 [stack:24, stack:36, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:60|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1621 484 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1623 486 BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B51  <||@
  Comment 1629 block B51 null  <||@
  Comment 1629 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1629 510 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1634 512 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1639 514 JUMP ~[] destination: B51 -> B89  <||@
  Comment 1644 block B31 null  <||@
  Comment 1644 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1644 282 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1648 284 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1652 286 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1657 288 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1662 290 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1666 292 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1671 294 JUMP ~[] destination: B31 -> B46  <||@
  Comment 1671 block B46 null  <||@
  Comment 1671 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1671 452 rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1678 454 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18]  <||@
  Comment 1678 [rax:0, rsi:0, stack:20, stack:24, stack:36, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rax|DWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:76|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:60|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1678 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1682 456 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 1686 458 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1690 460 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 5, 18]  <||@
  Comment 1690 7  <||@
  Comment 1703 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1708 [stack:20, stack:24, stack:36, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:76|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:60|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1709 462 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1711 464 BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B52  <||@
  Comment 1717 block B52 null  <||@
  Comment 1717 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1717 518 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1722 520 JUMP ~[] destination: B52 -> B55  <||@
  Comment 1727 block B38 null  <||@
  Comment 1727 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1727 350 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1731 352 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1735 354 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1740 356 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1745 358 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1749 360 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1754 362 JUMP ~[] destination: B38 -> B44  <||@
  Comment 1754 block B44 null  <||@
  Comment 1754 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1754 430 rsi|DWORD[.] = MOV [rbp|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1761 432 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 18]  <||@
  Comment 1761 [rbp:0, rsi:0, stack:16, stack:20, stack:24, stack:36, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rbp|DWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:80|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:76|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:60|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1761 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1765 434 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 1769 436 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1773 438 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 5, 5, 18]  <||@
  Comment 1773 7  <||@
  Comment 1783 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1788 [stack:16, stack:20, stack:24, stack:36, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:80|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:76|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:60|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1789 440 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1791 442 BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53  <||@
  Comment 1797 block B53 null  <||@
  Comment 1797 522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1797 524 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1802 526 JUMP ~[] destination: B53 -> B55  <||@
  Comment 1807 block B43 null  <||@
  Comment 1807 422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1807 424 rbp|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1811 426 JUMP ~[] destination: B43 -> B44  <||@
  Comment 1813 block B49 null  <||@
  Comment 1813 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1813 490 r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 1818 492 JUMP ~[] destination: B49 -> B50  <||@
  Comment 1823 block B47 null  <||@
  Comment 1823 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1823 468 r9|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 1828 470 JUMP ~[] destination: B47 -> B48  <||@
  Comment 1833 block B45 null  <||@
  Comment 1833 444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1833 446 rax|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 1837 448 JUMP ~[] destination: B45 -> B46  <||@
  Comment 1842 block B86 null  <||@
  Comment 1842 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1842 804 r10|DWORD = MOVE input: int[-263731|0xfffffffffffbf9cd]  <||@
  Comment 1848 806 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1852 808 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1857 810 JUMP ~[] destination: B86 -> B87  <||@
  Comment 1857 block B87 null  <||@
  Comment 1857 812 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1857 814 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1864 816 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1871 818 DEOPT info [bci:8, 18]  <||@
  Comment 1871 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1876 [rdx:0, rsi:0, stack:48]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |rbp|DWORD   <||@
  Comment 1877 block B73 null  <||@
  Comment 1877 686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1877 688 MOV [r15|QWORD + 668] y: -262419 size: DWORD  <||@
  Comment 1888 690 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1895 692 DEOPT info [bci:21]  <||@
  Comment 1895 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1900 [rdx:0, rsi:0, stack:48]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |              |                |                   |            <||@
  Comment 1901 block B116 null  <||@
  Comment 1901 1092 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1901 1094 r10|DWORD = MOVE input: int[-238619|0xfffffffffffc5be5]  <||@
  Comment 1907 1096 JUMP ~[] destination: B116 -> B120  <||@
  Comment 1907 block B120 null  <||@
  Comment 1907 1116 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1907 1118 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1914 1120 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1921 1122 DEOPT info [bci:0]  <||@
  Comment 1921 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1926 [rdx:0, rsi:0, r8:0]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 1927 block B26 null  <||@
  Comment 1927 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1927 234 r10|DWORD = MOVE input: int[-248595|0xfffffffffffc34ed]  <||@
  Comment 1933 236 JUMP ~[] destination: B26 -> B120  <||@
  Comment 1935 block B82 null  <||@
  Comment 1935 770 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1935 772 r10|DWORD = MOVE input: int[-290867|0xfffffffffffb8fcd]  <||@
  Comment 1941 774 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1945 776 JUMP ~[] destination: B82 -> B87  <||@
  Comment 1947 block B97 null  <||@
  Comment 1947 914 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1947 916 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 1951 918 MOV [r15|QWORD + 668] y: -313619 size: DWORD  <||@
  Comment 1962 920 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1969 922 DEOPT info [bci:63, 37]  <||@
  Comment 1969 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1974 [rdx:0, r10:0, stack:48]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0             |1             |2          |3                  |4          |5          |6         
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |rdi|DWORD  |stack:48|QWORD[.]  |r11|DWORD  |r13|DWORD  |rsi|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1975 block B83 null  <||@
  Comment 1975 778 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1975 780 r10|DWORD = MOVE input: int[-279323|0xfffffffffffbbce5]  <||@
  Comment 1981 782 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1985 784 JUMP ~[] destination: B83 -> B87  <||@
  Comment 1990 block B84 null  <||@
  Comment 1990 786 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1990 788 r10|DWORD = MOVE input: int[-277019|0xfffffffffffbc5e5]  <||@
  Comment 1996 790 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2000 792 JUMP ~[] destination: B84 -> B87  <||@
  Comment 2005 block B60 null  <||@
  Comment 2005 584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2005 586 r10|DWORD = MOVE input: int[-269075|0xfffffffffffbe4ed]  <||@
  Comment 2011 588 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2015 590 JUMP ~[] destination: B60 -> B87  <||@
  Comment 2020 block B40 null  <||@
  Comment 2020 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2020 372 r10|DWORD = MOVE input: int[-253715|0xfffffffffffc20ed]  <||@
  Comment 2026 374 JUMP ~[] destination: B40 -> B120  <||@
  Comment 2028 block B85 null  <||@
  Comment 2028 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2028 796 r10|DWORD = MOVE input: int[-267035|0xfffffffffffbece5]  <||@
  Comment 2034 798 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2038 800 JUMP ~[] destination: B85 -> B87  <||@
  Comment 2043 block B106 null  <||@
  Comment 2043 1022 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2043 1024 r10|DWORD = MOVE input: int[-308251|0xfffffffffffb4be5]  <||@
  Comment 2049 1026 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2053 1028 JUMP ~[] destination: B106 -> B109  <||@
  Comment 2053 block B109 null  <||@
  Comment 2053 1048 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2053 1050 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2060 1052 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2067 1054 DEOPT info [bci:8, 18]  <||@
  Comment 2067 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2072 [rdx:0, rsi:0, stack:48]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rbp|DWORD 
     stack:   |rax|DWORD     |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |rbp|DWORD   <||@
  Comment 2073 block B110 null  <||@
  Comment 2073 1056 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2073 1058 r10|DWORD = MOVE input: int[-251443|0xfffffffffffc29cd]  <||@
  Comment 2079 1060 JUMP ~[] destination: B110 -> B120  <||@
  Comment 2084 block B65 null  <||@
  Comment 2084 632 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2084 634 r10|DWORD = MOVE input: int[-290323|0xfffffffffffb91ed]  <||@
  Comment 2090 636 JUMP ~[] destination: B65 -> B87  <||@
  Comment 2095 block B92 null  <||@
  Comment 2095 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2095 860 r10|DWORD = MOVE input: int[-300819|0xfffffffffffb68ed]  <||@
  Comment 2101 862 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2105 864 JUMP ~[] destination: B92 -> B109  <||@
  Comment 2107 block B111 null  <||@
  Comment 2107 1062 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2107 1064 r10|DWORD = MOVE input: int[-248883|0xfffffffffffc33cd]  <||@
  Comment 2113 1066 JUMP ~[] destination: B111 -> B120  <||@
  Comment 2118 block B104 null  <||@
  Comment 2118 1006 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2118 1008 MOV [r15|QWORD + 668] y: -317491 size: DWORD  <||@
  Comment 2129 1010 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2136 1012 DEOPT info [bci:63, 37]  <||@
  Comment 2136 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2141 [rdx:0, stack:0, stack:48]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4          |5               |6              
     locals:  |stack:96|QWORD[.]  |rdx|QWORD[.]  |rdi|DWORD  |stack:48|QWORD[.]  |r11|DWORD  |stack:60|DWORD  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2142 block B81 null  <||@
  Comment 2142 764 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2142 766 r10|DWORD = MOVE input: int[-293659|0xfffffffffffb84e5]  <||@
  Comment 2148 768 JUMP ~[] destination: B81 -> B87  <||@
  Comment 2153 block B108 null  <||@
  Comment 2153 1038 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2153 1040 r10|DWORD = MOVE input: int[-296243|0xfffffffffffb7acd]  <||@
  Comment 2159 1042 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2163 1044 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2168 1046 JUMP ~[] destination: B108 -> B109  <||@
  Comment 2170 block B105 null  <||@
  Comment 2170 1014 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2170 1016 r10|DWORD = MOVE input: int[-310555|0xfffffffffffb42e5]  <||@
  Comment 2176 1018 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2180 1020 JUMP ~[] destination: B105 -> B109  <||@
  Comment 2185 block B107 null  <||@
  Comment 2185 1030 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2185 1032 r10|DWORD = MOVE input: int[-299035|0xfffffffffffb6fe5]  <||@
  Comment 2191 1034 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2195 1036 JUMP ~[] destination: B107 -> B109  <||@
  Comment 2200 block B80 null  <||@
  Comment 2200 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2200 760 r10|DWORD = MOVE input: int[-291091|0xfffffffffffb8eed]  <||@
  Comment 2206 762 JUMP ~[] destination: B80 -> B87  <||@
  Comment 2211 block B19 null  <||@
  Comment 2211 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2211 168 r10|DWORD = MOVE input: int[-246035|0xfffffffffffc3eed]  <||@
  Comment 2217 170 JUMP ~[] destination: B19 -> B120  <||@
  Comment 2222 block B113 null  <||@
  Comment 2222 1074 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2222 1076 r10|DWORD = MOVE input: int[-243763|0xfffffffffffc47cd]  <||@
  Comment 2228 1078 JUMP ~[] destination: B113 -> B120  <||@
  Comment 2233 block B114 null  <||@
  Comment 2233 1080 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2233 1082 r10|DWORD = MOVE input: int[-240947|0xfffffffffffc52cd]  <||@
  Comment 2239 1084 JUMP ~[] destination: B114 -> B120  <||@
  Comment 2244 block B117 null  <||@
  Comment 2244 1098 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2244 1100 r10|DWORD = MOVE input: int[-237843|0xfffffffffffc5eed]  <||@
  Comment 2250 1102 JUMP ~[] destination: B117 -> B120  <||@
  Comment 2255 block B33 null  <||@
  Comment 2255 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2255 304 r10|DWORD = MOVE input: int[-251155|0xfffffffffffc2aed]  <||@
  Comment 2261 306 JUMP ~[] destination: B33 -> B120  <||@
  Comment 2266 block B115 null  <||@
  Comment 2266 1086 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2266 1088 r10|DWORD = MOVE input: int[-240659|0xfffffffffffc53ed]  <||@
  Comment 2272 1090 JUMP ~[] destination: B115 -> B120  <||@
  Comment 2277 block B67 null  <||@
  Comment 2277 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2277 646 r10|DWORD = MOVE input: int[-290579|0xfffffffffffb90ed]  <||@
  Comment 2283 648 JUMP ~[] destination: B67 -> B87  <||@
  Comment 2288 block B12 null  <||@
  Comment 2288 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2288 102 r10|DWORD = MOVE input: int[-243475|0xfffffffffffc48ed]  <||@
  Comment 2294 104 JUMP ~[] destination: B12 -> B120  <||@
  Comment 2299 block B102 null  <||@
  Comment 2299 984 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2299 986 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2304 988 r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2309 990 r11|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 2313 992 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2318 994 MOV [r15|QWORD + 668] y: -319507 size: DWORD  <||@
  Comment 2329 996 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2336 998 DEOPT info [bci:10, 70, 37]  <||@
  Comment 2336 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2341 [rdx:0, r11:0]at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 10, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |  
  at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5          |6        
     locals:  |r11|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |r10|DWORD  |r8|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2342 block B3 null  <||@
  Comment 2342 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2342 26 r10|DWORD = MOVE input: int[-235283|0xfffffffffffc68ed]  <||@
  Comment 2348 28 JUMP ~[] destination: B3 -> B120  <||@
  Comment 2353 block B119 null  <||@
  Comment 2353 1110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2353 1112 r10|DWORD = MOVE input: int[-234515|0xfffffffffffc6bed]  <||@
  Comment 2359 1114 JUMP ~[] destination: B119 -> B120  <||@
  Comment 2364 block B112 null  <||@
  Comment 2364 1068 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2364 1070 r10|DWORD = MOVE input: int[-246323|0xfffffffffffc3dcd]  <||@
  Comment 2370 1072 JUMP ~[] destination: B112 -> B120  <||@
  Comment 2375 block B77 null  <||@
  Comment 2375 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2375 724 MOV [r15|QWORD + 668] y: -282899 size: DWORD  <||@
  Comment 2386 726 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2393 728 DEOPT info [bci:63, 37]  <||@
  Comment 2393 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2398 [rdx:0, r10:0, stack:48]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0             |1             |2          |3                  |4          |5          |6         
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |rdi|DWORD  |stack:48|QWORD[.]  |r11|DWORD  |rbp|DWORD  |rsi|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2399 block B118 null  <||@
  Comment 2399 1104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2399 1106 r10|DWORD = MOVE input: int[-235059|0xfffffffffffc69cd]  <||@
  Comment 2405 1108 JUMP ~[] destination: B118 -> B120  <||@
  Comment 2410 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2410 4  <||@
  Comment 2416 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 2416 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5315[java.util.regex.Pattern$CharProperty.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-5315[java.util.regex.Pattern$CharProperty.match(Matcher, int, CharSequence)]"
  date 1526687597930
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1199e94a0 448b560849c1e203493bc20f85afb901ff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c245048895424403b4a100f8df308000041817808da0200f80f851309000085c90f8cd2080000458b500c468b1cd50c000000443bd90f8e5b080000443bd90f86fb06000049c1e203450fbf544a10664181fa00d80f8352080000817e08ef3802f80f8524080000448b5e10468b0cdd08000000410fb7da8bf9ffc74181f9aa3802f80f8513010000423b1cdd100000000f8c73030000423b1cdd140000000f8f1e080000b801000000897c2428895c243c4c89442430894c242c448b560c42813cd508000000593702f80f856b070000488b5424408b4a3c448b04cd0c000000468b1cd510000000453bc30f866a07000048c1e103468b5c99104585db0f8cfe0600008b4a34448b04cd0c000000468b0cd514000000453bc10f86ae060000418bd9ffc3443bc30f861f0700008b7c2428468b04d50c000000428b2cc5080000008bc148c1e0038b749810468b6c881046895c8810897c981081fd46f600f80f8513010000837a18010f84fe050000897a208b421c8904cd10000000893ccd14000000b801000000488b6c24504883c4588505a1294ff0c5f877c34181f9ef3802f80f85d806000044895c2424468b0cdd10000000428b04cd0800000081f8aa3802f80f8537000000423b1ccd100000000f8ca8030000423b1ccd140000000f8f90060000b801000000897c2428895c243c4c89442430894c242ce9bafeffff81f8ef3802f80f850207000044894c2414428b04cd100000008b2cc50800000081fdaa3802f80f85bb0000003b1cc5100000000f8cad0300003b1cc5140000000f8f13050000b801000000897c2428895c243c44895424384c89442430894c242c488974241885c00f846a030000488b742418e942feffff49c1e00349c1e2038974243844896c24244c891424418b480881f9cbfa00f80f857b050000418b480c418504cc48c1e103488bf14c8bca8bcf4c8b44243048b8ffffffffffffffff90e84cbb01ff9085c00f84fe050000b801000000488b6c24504883c458850555284ff0c5f877c381fdef3802f80f851a050000894424108b2cc510000000448b2ced080000004181fdaa3802f80f853f0000003b1ced100000000f8c1e0300003b1ced140000000f8f74050000b801000000897c2428895c243c44895424384c89442430894c242c4889742418e914ffffff4181fdef3802f80f858c040000448b2ced10000000468b34ed080000004181feaa3802f80f8541000000423b1ced100000000f8c07030000423b1ced140000000f8f1e040000b801000000897c2428895c243c44895424384c89442430894c242c4889742418e9a9feffff896c240c897c242844895424384c89442430894c242c488974241849c1e503498bf58bd3895c243c48b8ffffffffffffffff6690e81cba01ff9085c00f84e2020000b801000000e95dfeffff895c243c44895424384c89442430894c242c8b4614418504c4448b560c42813cd508000000593702f80f85cc020000488b542440448b5a3c468b04dd0c000000468b0cd510000000453bc10f866403000049c1e303478b5c8b104585db0f8c3b030000448b4234468b0cc50c000000428b0cd514000000443bc90f860f0300008bd9ffc3443bcb0f86f3020000468b0cd50c000000438504cc8b2cc50800000081fdaa3802f80f84ab00000081fd643802f80f85a00200008b6c243c8b04c5100000003b2cc50c0000000f835703000066817c243800010f8384030000440fb76c2438410fb644c51085c00f842d020000418bc048c1e0038b7498108b6c881044895c8810897c981049c1e20342813ccd0800000046f600f80f859c000000837a18010f84e7030000897a208b421c428904c51000000042893cc514000000b801000000488b6c24504883c4588505dc254ff0c5f877c38b6c243c3b2cc5100000000f8c850200003b2cc5140000007e80e938030000897c2428895c243c44895424384c89442430894c242c4889742418428b34dd14000000418504f448c1e6038b54243c48b8ffffffffffffffff90e854b801ff90e9a2fcffff49c1e1034d8bc189742438896c2424e9b1fcffff8b7c2428488b742418e935feffff897c2428895c243c44895424384c89442430894c242c4889742418428b34cd14000000418504f448c1e6038b54243c48b8ffffffffffffffff6690e8ecb701ff9085c00f84b8000000b801000000488b742418e97cfaffff897c2428895c243c44895424384c89442430894c242c48897424188b34c514000000418504f448c1e6038b54243c48b8ffffffffffffffff666690e894b701ff9085c00f846a000000b801000000e9d5fbffff897c2428895c243c44895424384c89442430894c242c48897424188b34ed14000000418504f448c1e6038b54243c48b8ffffffffffffffffe844b701ff9085c00f8424000000b801000000e985fbffff8b6c240cebc5448b5c2424e9a9feffff448b4c2414e906ffffff8b442410e955ffffff41bacdf9fbff8b6c243c488b5424404589979c0200004d89a7a8020000e80aca01ff9041c7879c020000edfefbff4d89a7a8020000e8f2c901ff9041bae55bfcff4589979c0200004d89a7a8020000e8d8c901ff9041baed34fcffebe441bacd8ffbff8b6c243ceba649c1e20341c7879c020000ed36fbff4d89a7a8020000e8a8c901ff9041bae5bcfbff8b6c243ce97bffffff41bae5c5fbff8b6c243ce96cffffff41baede4fbff8b6c243ce95dffffff41baed20fcffeb8741bae5ecfbff8b6c243ce946ffffff41bae54bfbff8b6c243c4589979c0200004d89a7a8020000e846c901ff9041bacd29fcffe94fffffff41baed91fbffe912ffffff41baed68fbff8b6c243cebca41bacd33fcffe92dffffff41c7879c020000cd27fbff4d89a7a8020000e801c901ff9041bae584fbffe9d8feffff41bacd7afbff8b6c243c488b542440eb8b41bae542fbff8b6c243ce97cffffff41bae56ffbff8b6c243ce96dffffff41baed8efbffe99efeffff41baed3efcffe9c5feffff41bacd47fcffe9bafeffff41bacd52fcffe9affeffff41baed5efcffe9a4feffff41baed2afcffe999feffff41baed53fcffe98efeffff41baed90fbffe951feffff41baed48fcffe978feffff448b442438448b5424244c8b1c24488b54244041c7879c020000ed1ffbff4d89a7a8020000e839c801ff9041baed68fcffe942feffff41baed6bfcffe937feffff41bacd3dfcffe92cfeffff41c7879c020000edaefbff4d89a7a8020000e800c801ff9041bacd69fcffe909feffffe8915941ff90e8ebc601ff90f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@7acef4f slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD state [bci:0]  <||@
  Comment 53 [rdx:0, rsi:0, r8:0, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 53 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 56 10 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B119  <||@
  Comment 62 block B1 null  <||@
  Comment 62 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 62 14 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:0]  <||@
  Comment 62 [rdx:0, rsi:0, r8:0, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 62 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 62 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 70 16 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B118  <||@
  Comment 76 block B2 null  <||@
  Comment 76 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 76 20 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 78 22 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 84 block B4 null  <||@
  Comment 84 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 84 32 r10|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 88 34 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 88 [rdx:0, rsi:0, r8:0, r10:0, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 88 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 96 36 CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 99 38 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B117  <||@
  Comment 105 block B5 null  <||@
  Comment 105 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 42 CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 108 44 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B116  <||@
  Comment 114 block B6 null  <||@
  Comment 114 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 48 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 118 50 r10|DWORD = MOVSX [r10|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 124 52 CMP r10|DWORD y: -10240 size: WORD  <||@
  Comment 130 54 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B115  <||@
  Comment 136 block B7 null  <||@
  Comment 136 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 136 58 CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 136 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 143 60 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B114  <||@
  Comment 149 block B8 null  <||@
  Comment 149 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 149 64 r11|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 153 66 r9|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 153 [rdx:0, rsi:0, r8:0, r11:0, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 153 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 161 68 rbx|DWORD = MOVZX r10|DWORD size: DWORD  <||@
  Comment 165 70 rdi|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 169 72 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 169 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 176 74 BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B14  <||@
  Comment 182 block B9 null  <||@
  Comment 182 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 182 78 CMP (x: rbx|DWORD, y: [r11|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 190 80 BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 196 block B11 null  <||@
  Comment 196 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 196 96 CMP (x: rbx|DWORD, y: [r11|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 204 98 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 210 block B13 null  <||@
  Comment 210 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 210 108 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 215 110 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 219 112 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 223 114 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 228 116 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 232 118 JUMP ~[] destination: B13 -> B89  <||@
  Comment 232 block B89 null  <||@
  Comment 232 826 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 232 828 r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 236 830 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18]  <||@
  Comment 236 [rsi:0, r10:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |rax|DWORD     |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1                  |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 236 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 236 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 248 832 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B108  <||@
  Comment 254 block B90 null  <||@
  Comment 254 834 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 254 836 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 259 838 rcx|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 262 840 r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18]  <||@
  Comment 262 [rcx:0, rdx:0, rsi:0, r10:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |rax|DWORD     |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 262 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 270 842 r11|DWORD = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 278 844 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 281 846 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B90 -> B91 falseDestination: B90 -> B107  <||@
  Comment 287 block B91 null  <||@
  Comment 287 848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 287 850 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 291 852 r11|DWORD = MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 296 854 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 299 856 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B91 -> B92 falseDestination: B91 -> B93  <||@
  Comment 305 block B93 null  <||@
  Comment 305 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 305 868 rcx|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD  <||@
  Comment 308 870 r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18]  <||@
  Comment 308 [rcx:0, rdx:0, rsi:0, r10:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |rax|DWORD     |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 308 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 316 872 r9|DWORD = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 324 874 CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 327 876 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B106  <||@
  Comment 333 block B94 null  <||@
  Comment 333 878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 333 880 rbx|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 338 882 CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 341 884 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B105  <||@
  Comment 347 block B95 null  <||@
  Comment 347 886 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 347 888 rdi|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 351 890 r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 359 892 rbp|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18]  <||@
  Comment 359 [rcx:0, rdx:0, rsi:0, r8:0, r10:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |rax|DWORD     |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 359 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 367 894 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 373 896 rsi|DWORD = MOV [rax|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 377 898 r13|DWORD = MOV [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 382 900 MOV (x: [rax|QWORD[.] + r9|DWORD * 4 + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 387 902 MOV (x: [rax|QWORD[.] + rbx|DWORD * 4 + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 391 904 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 391 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 397 906 BRANCH trueDestinationProbability: 0.7905664707988008 condition: = trueDestination: B95 -> B96 falseDestination: B95 -> B99  <||@
  Comment 403 block B96 null  <||@
  Comment 403 908 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 403 910 CMP [rdx|QWORD[.] + 24] y: 1 size: DWORD  <||@
  Comment 407 912 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B96 -> B97 falseDestination: B96 -> B98  <||@
  Comment 413 block B98 null  <||@
  Comment 413 924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 413 926 MOV (x: [rdx|QWORD[.] + 32], y: rdi|DWORD) size: DWORD  <||@
  Comment 416 928 rax|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 419 930 MOV (x: [rcx|DWORD[.] * 8 + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 426 932 MOV (x: [rcx|DWORD[.] * 8 + 20], y: rdi|DWORD) size: DWORD  <||@
  Comment 433 934 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 438 936 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 447 12  <||@
  Comment 457 block B14 null  <||@
  Comment 457 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 457 122 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 457 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 464 124 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B113  <||@
  Comment 470 block B15 null  <||@
  Comment 470 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 470 128 stack:60|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 475 130 r9|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 483 132 rax|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 483 [rdx:0, rsi:0, r8:0, r9:0, r11:0, stack:36, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 483 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 491 134 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 491 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 497 136 BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21  <||@
  Comment 503 block B16 null  <||@
  Comment 503 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 503 140 CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 511 142 BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 517 block B18 null  <||@
  Comment 517 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 517 162 CMP (x: rbx|DWORD, y: [r9|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 525 164 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 531 block B20 null  <||@
  Comment 531 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 531 174 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 536 176 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 540 178 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 544 180 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 549 182 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 553 184 JUMP ~[] destination: B20 -> B89  <||@
  Comment 558 block B21 null  <||@
  Comment 558 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 558 188 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 558 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 564 190 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B112  <||@
  Comment 570 block B22 null  <||@
  Comment 570 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 570 194 stack:76|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 575 196 rax|DWORD[.] = MOV [r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 583 198 rbp|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 583 [rax:0, rdx:0, rsi:0, r8:0, r9:0, stack:20, stack:36, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 583 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 590 200 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 590 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 596 202 BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B28  <||@
  Comment 602 block B23 null  <||@
  Comment 602 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 602 206 CMP (x: rbx|DWORD, y: [rax|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 609 208 BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 615 block B25 null  <||@
  Comment 615 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 615 228 CMP (x: rbx|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 622 230 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 628 block B27 null  <||@
  Comment 628 238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 628 240 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 633 242 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 637 244 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 641 246 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 646 248 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 651 250 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 655 252 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 660 254 JUMP ~[] destination: B27 -> B55  <||@
  Comment 660 block B55 null  <||@
  Comment 660 534 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 660 536 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 662 538 BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B88  <||@
  Comment 668 block B88 null  <||@
  Comment 668 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 668 822 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 673 824 JUMP ~[] destination: B88 -> B89  <||@
  Comment 678 block B99 null  <||@
  Comment 678 938 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 678 940 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 682 942 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 686 944 stack:40|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 690 946 stack:60|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 695 950 JUMP ~[] destination: B99 -> B100  <||@
  Comment 695 block B100 null  <||@
  Comment 695 952 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 695 754 stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 699 954 rcx|DWORD = MOV [r8|QWORD[.] + 8] size: DWORD  <||@
  Comment 703 956 CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed}  <||@
  Comment 703 {meta{HotSpotType<Ljava/util/regex/Pattern$BranchConn;, resolved>;compressed}}  <||@
  Comment 709 958 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B104  <||@
  Comment 715 block B101 null  <||@
  Comment 715 960 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 715 962 rcx|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 719 964 NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:63, 37]  <||@
  Comment 719 [rcx:0, rdx:0, stack:0, stack:48, stack:64]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4          |5               |6              
     locals:  |stack:96|QWORD[.]  |rdx|QWORD[.]  |rdi|DWORD  |stack:48|QWORD[.]  |r11|DWORD  |stack:60|DWORD  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 719 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 723 966 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 727 968 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 730 970 r9|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 733 974 rcx|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 735 976 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 740 978 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:7, 70, 37]  <||@
  Comment 740 7  <||@
  Comment 751 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 756 [stack:0, stack:64]at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4  |5               |6              
     locals:  |stack:96|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |stack:60|DWORD  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 757 980 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 759 982 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B103  <||@
  Comment 765 block B103 null  <||@
  Comment 765 1000 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 765 1002 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 770 1004 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 779 12  <||@
  Comment 789 block B28 null  <||@
  Comment 789 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 789 258 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 789 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 795 260 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B111  <||@
  Comment 801 block B29 null  <||@
  Comment 801 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 801 264 stack:80|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 805 266 rbp|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 812 268 r13|DWORD = MOV [rbp|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 812 [rax:0, rdx:0, rbp:0, rsi:0, r8:0, stack:16, stack:20, stack:36, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 812 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 820 270 CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 820 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 827 272 BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35  <||@
  Comment 833 block B30 null  <||@
  Comment 833 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 833 276 CMP (x: rbx|DWORD, y: [rbp|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 840 278 BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 846 block B32 null  <||@
  Comment 846 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 846 298 CMP (x: rbx|DWORD, y: [rbp|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 853 300 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 859 block B34 null  <||@
  Comment 859 308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 859 310 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 864 312 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 868 314 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 872 316 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 877 318 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 882 320 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 886 322 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 891 324 JUMP ~[] destination: B34 -> B55  <||@
  Comment 896 block B35 null  <||@
  Comment 896 326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 896 328 CMP r13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 896 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 903 330 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B110  <||@
  Comment 909 block B36 null  <||@
  Comment 909 332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 909 334 r13|DWORD[.] = MOV [rbp|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 917 336 r14|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 917 [rdx:0, rbp:0, rsi:0, r8:0, r13:0, stack:16, stack:20, stack:36, stack:64]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 917 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 925 338 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 925 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 932 340 BRANCH trueDestinationProbability: 0.5000557636836476 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B42  <||@
  Comment 938 block B37 null  <||@
  Comment 938 342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 938 344 CMP (x: rbx|DWORD, y: [r13|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 946 346 BRANCH trueDestinationProbability: 0.01987898583705925 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39  <||@
  Comment 952 block B39 null  <||@
  Comment 952 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 952 366 CMP (x: rbx|DWORD, y: [r13|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 960 368 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41  <||@
  Comment 966 block B41 null  <||@
  Comment 966 376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 966 378 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 971 380 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 975 382 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 979 384 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 984 386 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 989 388 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 993 390 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 998 392 JUMP ~[] destination: B41 -> B55  <||@
  Comment 1003 block B42 null  <||@
  Comment 1003 394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1003 396 stack:84|DWORD[.] = MOVE rbp|DWORD[.] moveKind: DWORD  <||@
  Comment 1007 398 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1011 400 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1016 402 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1021 404 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1025 406 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1030 408 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 1034 410 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1037 412 rdx|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1039 414 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1043 416 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:5, 5, 5, 5, 5, 18]  <||@
  Comment 1043 7  <||@
  Comment 1055 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1060 [stack:12, stack:16, stack:20, stack:24, stack:36, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:84|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:80|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:76|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:60|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1061 418 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1063 420 BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B54  <||@
  Comment 1069 block B54 null  <||@
  Comment 1069 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1069 530 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1074 532 JUMP ~[] destination: B54 -> B55  <||@
  Comment 1079 block B10 null  <||@
  Comment 1079 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1079 84 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1083 86 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1088 88 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1093 90 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1097 92 JUMP ~[] destination: B10 -> B57  <||@
  Comment 1097 block B57 null  <||@
  Comment 1097 548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1097 550 rax|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 1100 552 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:8, 18]  <||@
  Comment 1100 [rax:0, rsi:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1                  |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1100 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1104 554 r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 1108 556 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18]  <||@
  Comment 1108 [rax:0, rsi:0, r10:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1                  |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1108 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1108 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 1120 558 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B86  <||@
  Comment 1126 block B58 null  <||@
  Comment 1126 560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1126 562 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1131 564 r11|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 1135 566 r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18]  <||@
  Comment 1135 [rax:0, rdx:0, rsi:0, r10:0, r11:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1135 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1143 568 r9|DWORD = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1151 570 CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1154 572 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B85  <||@
  Comment 1160 block B59 null  <||@
  Comment 1160 574 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1160 576 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 1164 578 r11|DWORD = MOV [r11|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1169 580 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1172 582 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61  <||@
  Comment 1178 block B61 null  <||@
  Comment 1178 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1178 594 r8|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD  <||@
  Comment 1182 596 r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18]  <||@
  Comment 1182 [rax:0, rdx:0, rsi:0, r8:0, r10:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1182 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1190 598 rcx|DWORD = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1198 600 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1201 602 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B61 -> B62 falseDestination: B61 -> B84  <||@
  Comment 1207 block B62 null  <||@
  Comment 1207 604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1207 606 rbx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 1211 608 CMP (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1214 610 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B62 -> B63 falseDestination: B62 -> B83  <||@
  Comment 1220 block B63 null  <||@
  Comment 1220 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1220 614 r9|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1228 616 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:8, 18]  <||@
  Comment 1228 [rax:0, rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|QWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4              
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1228 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1232 618 rbp|DWORD = MOV [rax|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1239 620 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 1239 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 1245 622 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B69  <||@
  Comment 1251 block B69 null  <||@
  Comment 1251 654 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1251 656 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}  <||@
  Comment 1251 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 1257 658 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B82  <||@
  Comment 1263 block B70 null  <||@
  Comment 1263 660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1263 662 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1267 664 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1274 666 CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18]  <||@
  Comment 1274 [rax:0, rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |rbp|DWORD   <||@
  Comment 1274 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1281 668 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B70 -> B71 falseDestination: B70 -> B81  <||@
  Comment 1287 block B71 null  <||@
  Comment 1287 670 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1287 672 CMP stack:40|DWORD y: 256 size: WORD  <||@
  Comment 1294 674 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B71 -> B72 falseDestination: B71 -> B80  <||@
  Comment 1300 block B72 null  <||@
  Comment 1300 676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1300 678 r13|QWORD = MOVZX stack:40|DWORD size: DWORD  <||@
  Comment 1306 680 rax|DWORD = MOVZXB [r13|QWORD + rax|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1312 682 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1314 684 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B75  <||@
  Comment 1320 block B75 null  <||@
  Comment 1320 698 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1320 700 rax|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 1327 702 rsi|DWORD = MOV [rax|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1331 704 rbp|DWORD = MOV [rax|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1335 706 MOV (x: [rax|QWORD[.] + rcx|DWORD * 4 + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 1340 708 MOV (x: [rax|QWORD[.] + rbx|DWORD * 4 + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 1344 710 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 1348 712 CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 1348 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 1360 714 BRANCH trueDestinationProbability: 0.7905664707988008 condition: = trueDestination: B75 -> B76 falseDestination: B75 -> B79  <||@
  Comment 1366 block B76 null  <||@
  Comment 1366 716 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1366 718 CMP [rdx|QWORD[.] + 24] y: 1 size: DWORD  <||@
  Comment 1370 720 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 1376 block B78 null  <||@
  Comment 1376 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1376 732 MOV (x: [rdx|QWORD[.] + 32], y: rdi|DWORD) size: DWORD  <||@
  Comment 1379 734 rax|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 1382 736 MOV (x: [r8|DWORD[.] * 8 + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 1390 738 MOV (x: [r8|DWORD[.] * 8 + 20], y: rdi|DWORD) size: DWORD  <||@
  Comment 1398 740 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1403 742 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 1412 12  <||@
  Comment 1422 block B64 null  <||@
  Comment 1422 624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1422 626 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1426 628 CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1433 630 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B64 -> B65 falseDestination: B64 -> B66  <||@
  Comment 1439 block B66 null  <||@
  Comment 1439 638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1439 640 CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 1446 642 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B75  <||@
  Comment 1453 block B17 null  <||@
  Comment 1453 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1453 146 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1457 148 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1461 150 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1466 152 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1471 154 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1475 156 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1480 158 JUMP ~[] destination: B17 -> B50  <||@
  Comment 1480 block B50 null  <||@
  Comment 1480 494 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1480 496 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1488 498 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 18]  <||@
  Comment 1488 [rsi:0, r11:0, stack:24, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |r11|DWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1488 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1492 500 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 1496 502 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1500 504 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 18]  <||@
  Comment 1500 7  <||@
  Comment 1511 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1516 [stack:24, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1517 506 JUMP ~[] destination: B50 -> B55  <||@
  Comment 1522 block B79 null  <||@
  Comment 1522 744 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1522 746 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 1526 748 r8|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1529 750 stack:40|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1533 752 stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1537 756 JUMP ~[] destination: B79 -> B100  <||@
  Comment 1542 block B56 null  <||@
  Comment 1542 540 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1542 542 rdi|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1546 544 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1551 546 JUMP ~[] destination: B56 -> B57  <||@
  Comment 1556 block B24 null  <||@
  Comment 1556 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1556 212 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1560 214 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1564 216 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1569 218 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1574 220 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1578 222 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1583 224 JUMP ~[] destination: B24 -> B48  <||@
  Comment 1583 block B48 null  <||@
  Comment 1583 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1583 474 rsi|DWORD[.] = MOV [r9|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1591 476 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 18]  <||@
  Comment 1591 [rsi:0, r9:0, stack:24, stack:36, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0            |1              
     locals:  |r9|DWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]   |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:60|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1591 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1595 478 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 1599 480 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1603 482 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 18]  <||@
  Comment 1603 7  <||@
  Comment 1615 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1620 [stack:24, stack:36, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:60|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1621 484 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1623 486 BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B51  <||@
  Comment 1629 block B51 null  <||@
  Comment 1629 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1629 510 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1634 512 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1639 514 JUMP ~[] destination: B51 -> B89  <||@
  Comment 1644 block B31 null  <||@
  Comment 1644 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1644 282 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1648 284 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1652 286 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1657 288 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1662 290 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1666 292 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1671 294 JUMP ~[] destination: B31 -> B46  <||@
  Comment 1671 block B46 null  <||@
  Comment 1671 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1671 452 rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1678 454 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18]  <||@
  Comment 1678 [rax:0, rsi:0, stack:20, stack:24, stack:36, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rax|DWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:76|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:60|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1678 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1682 456 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 1686 458 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1690 460 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 5, 18]  <||@
  Comment 1690 7  <||@
  Comment 1703 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1708 [stack:20, stack:24, stack:36, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:76|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:60|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1709 462 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1711 464 BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B52  <||@
  Comment 1717 block B52 null  <||@
  Comment 1717 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1717 518 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1722 520 JUMP ~[] destination: B52 -> B55  <||@
  Comment 1727 block B38 null  <||@
  Comment 1727 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1727 350 stack:56|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1731 352 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1735 354 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1740 356 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1745 358 stack:52|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1749 360 stack:72|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1754 362 JUMP ~[] destination: B38 -> B44  <||@
  Comment 1754 block B44 null  <||@
  Comment 1754 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1754 430 rsi|DWORD[.] = MOV [rbp|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1761 432 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 18]  <||@
  Comment 1761 [rbp:0, rsi:0, stack:16, stack:20, stack:24, stack:36, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rbp|DWORD[.]  |stack:36|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:80|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:76|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:60|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1761 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1765 434 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 1769 436 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1773 438 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:16, 5, 5, 5, 5, 18]  <||@
  Comment 1773 7  <||@
  Comment 1783 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 1788 [stack:16, stack:20, stack:24, stack:36, stack:48, stack:64]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:80|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:76|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:60|DWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:36|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |stack:36|DWORD   <||@
  Comment 1789 440 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1791 442 BRANCH trueDestinationProbability: 0.010037089919821551 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53  <||@
  Comment 1797 block B53 null  <||@
  Comment 1797 522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1797 524 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1802 526 JUMP ~[] destination: B53 -> B55  <||@
  Comment 1807 block B43 null  <||@
  Comment 1807 422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1807 424 rbp|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 1811 426 JUMP ~[] destination: B43 -> B44  <||@
  Comment 1813 block B49 null  <||@
  Comment 1813 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1813 490 r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 1818 492 JUMP ~[] destination: B49 -> B50  <||@
  Comment 1823 block B47 null  <||@
  Comment 1823 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1823 468 r9|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 1828 470 JUMP ~[] destination: B47 -> B48  <||@
  Comment 1833 block B45 null  <||@
  Comment 1833 444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1833 446 rax|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 1837 448 JUMP ~[] destination: B45 -> B46  <||@
  Comment 1842 block B86 null  <||@
  Comment 1842 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1842 804 r10|DWORD = MOVE input: int[-263731|0xfffffffffffbf9cd]  <||@
  Comment 1848 806 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1852 808 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1857 810 JUMP ~[] destination: B86 -> B87  <||@
  Comment 1857 block B87 null  <||@
  Comment 1857 812 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1857 814 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1864 816 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1871 818 DEOPT info [bci:8, 18]  <||@
  Comment 1871 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1876 [rdx:0, rsi:0, stack:48]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |rbp|DWORD   <||@
  Comment 1877 block B73 null  <||@
  Comment 1877 686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1877 688 MOV [r15|QWORD + 668] y: -262419 size: DWORD  <||@
  Comment 1888 690 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1895 692 DEOPT info [bci:21]  <||@
  Comment 1895 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1900 [rdx:0, rsi:0, stack:48]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |rbp|DWORD 
     stack:   |int[0|0x0]    |              |                |                   |            <||@
  Comment 1901 block B116 null  <||@
  Comment 1901 1092 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1901 1094 r10|DWORD = MOVE input: int[-238619|0xfffffffffffc5be5]  <||@
  Comment 1907 1096 JUMP ~[] destination: B116 -> B120  <||@
  Comment 1907 block B120 null  <||@
  Comment 1907 1116 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1907 1118 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1914 1120 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1921 1122 DEOPT info [bci:0]  <||@
  Comment 1921 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1926 [rdx:0, rsi:0, r8:0]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |-   <||@
  Comment 1927 block B26 null  <||@
  Comment 1927 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1927 234 r10|DWORD = MOVE input: int[-248595|0xfffffffffffc34ed]  <||@
  Comment 1933 236 JUMP ~[] destination: B26 -> B120  <||@
  Comment 1935 block B82 null  <||@
  Comment 1935 770 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1935 772 r10|DWORD = MOVE input: int[-290867|0xfffffffffffb8fcd]  <||@
  Comment 1941 774 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1945 776 JUMP ~[] destination: B82 -> B87  <||@
  Comment 1947 block B97 null  <||@
  Comment 1947 914 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1947 916 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5094183f encoding: base: 0 shift: 3  <||@
  Comment 1951 918 MOV [r15|QWORD + 668] y: -313619 size: DWORD  <||@
  Comment 1962 920 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1969 922 DEOPT info [bci:63, 37]  <||@
  Comment 1969 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 1974 [rdx:0, r10:0, stack:48]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0             |1             |2          |3                  |4          |5          |6         
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |rdi|DWORD  |stack:48|QWORD[.]  |r11|DWORD  |r13|DWORD  |rsi|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1975 block B83 null  <||@
  Comment 1975 778 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1975 780 r10|DWORD = MOVE input: int[-279323|0xfffffffffffbbce5]  <||@
  Comment 1981 782 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1985 784 JUMP ~[] destination: B83 -> B87  <||@
  Comment 1990 block B84 null  <||@
  Comment 1990 786 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1990 788 r10|DWORD = MOVE input: int[-277019|0xfffffffffffbc5e5]  <||@
  Comment 1996 790 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2000 792 JUMP ~[] destination: B84 -> B87  <||@
  Comment 2005 block B60 null  <||@
  Comment 2005 584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2005 586 r10|DWORD = MOVE input: int[-269075|0xfffffffffffbe4ed]  <||@
  Comment 2011 588 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2015 590 JUMP ~[] destination: B60 -> B87  <||@
  Comment 2020 block B40 null  <||@
  Comment 2020 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2020 372 r10|DWORD = MOVE input: int[-253715|0xfffffffffffc20ed]  <||@
  Comment 2026 374 JUMP ~[] destination: B40 -> B120  <||@
  Comment 2028 block B85 null  <||@
  Comment 2028 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2028 796 r10|DWORD = MOVE input: int[-267035|0xfffffffffffbece5]  <||@
  Comment 2034 798 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2038 800 JUMP ~[] destination: B85 -> B87  <||@
  Comment 2043 block B106 null  <||@
  Comment 2043 1022 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2043 1024 r10|DWORD = MOVE input: int[-308251|0xfffffffffffb4be5]  <||@
  Comment 2049 1026 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2053 1028 JUMP ~[] destination: B106 -> B109  <||@
  Comment 2053 block B109 null  <||@
  Comment 2053 1048 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2053 1050 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2060 1052 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2067 1054 DEOPT info [bci:8, 18]  <||@
  Comment 2067 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2072 [rdx:0, rsi:0, stack:48]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rbp|DWORD 
     stack:   |rax|DWORD     |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |stack:52|DWORD  |stack:48|QWORD[.]  |rbp|DWORD   <||@
  Comment 2073 block B110 null  <||@
  Comment 2073 1056 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2073 1058 r10|DWORD = MOVE input: int[-251443|0xfffffffffffc29cd]  <||@
  Comment 2079 1060 JUMP ~[] destination: B110 -> B120  <||@
  Comment 2084 block B65 null  <||@
  Comment 2084 632 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2084 634 r10|DWORD = MOVE input: int[-290323|0xfffffffffffb91ed]  <||@
  Comment 2090 636 JUMP ~[] destination: B65 -> B87  <||@
  Comment 2095 block B92 null  <||@
  Comment 2095 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2095 860 r10|DWORD = MOVE input: int[-300819|0xfffffffffffb68ed]  <||@
  Comment 2101 862 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2105 864 JUMP ~[] destination: B92 -> B109  <||@
  Comment 2107 block B111 null  <||@
  Comment 2107 1062 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2107 1064 r10|DWORD = MOVE input: int[-248883|0xfffffffffffc33cd]  <||@
  Comment 2113 1066 JUMP ~[] destination: B111 -> B120  <||@
  Comment 2118 block B104 null  <||@
  Comment 2118 1006 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2118 1008 MOV [r15|QWORD + 668] y: -317491 size: DWORD  <||@
  Comment 2129 1010 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2136 1012 DEOPT info [bci:63, 37]  <||@
  Comment 2136 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2141 [rdx:0, stack:0, stack:48]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4          |5               |6              
     locals:  |stack:96|QWORD[.]  |rdx|QWORD[.]  |rdi|DWORD  |stack:48|QWORD[.]  |r11|DWORD  |stack:60|DWORD  |stack:40|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2142 block B81 null  <||@
  Comment 2142 764 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2142 766 r10|DWORD = MOVE input: int[-293659|0xfffffffffffb84e5]  <||@
  Comment 2148 768 JUMP ~[] destination: B81 -> B87  <||@
  Comment 2153 block B108 null  <||@
  Comment 2153 1038 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2153 1040 r10|DWORD = MOVE input: int[-296243|0xfffffffffffb7acd]  <||@
  Comment 2159 1042 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2163 1044 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2168 1046 JUMP ~[] destination: B108 -> B109  <||@
  Comment 2170 block B105 null  <||@
  Comment 2170 1014 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2170 1016 r10|DWORD = MOVE input: int[-310555|0xfffffffffffb42e5]  <||@
  Comment 2176 1018 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2180 1020 JUMP ~[] destination: B105 -> B109  <||@
  Comment 2185 block B107 null  <||@
  Comment 2185 1030 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2185 1032 r10|DWORD = MOVE input: int[-299035|0xfffffffffffb6fe5]  <||@
  Comment 2191 1034 rbp|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2195 1036 JUMP ~[] destination: B107 -> B109  <||@
  Comment 2200 block B80 null  <||@
  Comment 2200 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2200 760 r10|DWORD = MOVE input: int[-291091|0xfffffffffffb8eed]  <||@
  Comment 2206 762 JUMP ~[] destination: B80 -> B87  <||@
  Comment 2211 block B19 null  <||@
  Comment 2211 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2211 168 r10|DWORD = MOVE input: int[-246035|0xfffffffffffc3eed]  <||@
  Comment 2217 170 JUMP ~[] destination: B19 -> B120  <||@
  Comment 2222 block B113 null  <||@
  Comment 2222 1074 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2222 1076 r10|DWORD = MOVE input: int[-243763|0xfffffffffffc47cd]  <||@
  Comment 2228 1078 JUMP ~[] destination: B113 -> B120  <||@
  Comment 2233 block B114 null  <||@
  Comment 2233 1080 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2233 1082 r10|DWORD = MOVE input: int[-240947|0xfffffffffffc52cd]  <||@
  Comment 2239 1084 JUMP ~[] destination: B114 -> B120  <||@
  Comment 2244 block B117 null  <||@
  Comment 2244 1098 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2244 1100 r10|DWORD = MOVE input: int[-237843|0xfffffffffffc5eed]  <||@
  Comment 2250 1102 JUMP ~[] destination: B117 -> B120  <||@
  Comment 2255 block B33 null  <||@
  Comment 2255 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2255 304 r10|DWORD = MOVE input: int[-251155|0xfffffffffffc2aed]  <||@
  Comment 2261 306 JUMP ~[] destination: B33 -> B120  <||@
  Comment 2266 block B115 null  <||@
  Comment 2266 1086 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2266 1088 r10|DWORD = MOVE input: int[-240659|0xfffffffffffc53ed]  <||@
  Comment 2272 1090 JUMP ~[] destination: B115 -> B120  <||@
  Comment 2277 block B67 null  <||@
  Comment 2277 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2277 646 r10|DWORD = MOVE input: int[-290579|0xfffffffffffb90ed]  <||@
  Comment 2283 648 JUMP ~[] destination: B67 -> B87  <||@
  Comment 2288 block B12 null  <||@
  Comment 2288 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2288 102 r10|DWORD = MOVE input: int[-243475|0xfffffffffffc48ed]  <||@
  Comment 2294 104 JUMP ~[] destination: B12 -> B120  <||@
  Comment 2299 block B102 null  <||@
  Comment 2299 984 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2299 986 r8|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2304 988 r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2309 990 r11|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 2313 992 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2318 994 MOV [r15|QWORD + 668] y: -319507 size: DWORD  <||@
  Comment 2329 996 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2336 998 DEOPT info [bci:10, 70, 37]  <||@
  Comment 2336 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2341 [rdx:0, r11:0]at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 10, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |  
  at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70, duringCall: true, rethrow: false]
              |0             |1             |2  |3  |4  |5          |6        
     locals:  |r11|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |r10|DWORD  |r8|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2342 block B3 null  <||@
  Comment 2342 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2342 26 r10|DWORD = MOVE input: int[-235283|0xfffffffffffc68ed]  <||@
  Comment 2348 28 JUMP ~[] destination: B3 -> B120  <||@
  Comment 2353 block B119 null  <||@
  Comment 2353 1110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2353 1112 r10|DWORD = MOVE input: int[-234515|0xfffffffffffc6bed]  <||@
  Comment 2359 1114 JUMP ~[] destination: B119 -> B120  <||@
  Comment 2364 block B112 null  <||@
  Comment 2364 1068 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2364 1070 r10|DWORD = MOVE input: int[-246323|0xfffffffffffc3dcd]  <||@
  Comment 2370 1072 JUMP ~[] destination: B112 -> B120  <||@
  Comment 2375 block B77 null  <||@
  Comment 2375 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2375 724 MOV [r15|QWORD + 668] y: -282899 size: DWORD  <||@
  Comment 2386 726 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2393 728 DEOPT info [bci:63, 37]  <||@
  Comment 2393 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 2398 [rdx:0, r10:0, stack:48]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0             |1             |2          |3                  |4          |5          |6         
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |rdi|DWORD  |stack:48|QWORD[.]  |r11|DWORD  |rbp|DWORD  |rsi|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2399 block B118 null  <||@
  Comment 2399 1104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2399 1106 r10|DWORD = MOVE input: int[-235059|0xfffffffffffc69cd]  <||@
  Comment 2405 1108 JUMP ~[] destination: B118 -> B120  <||@
  Comment 2410 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2410 4  <||@
  Comment 2416 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 2416 5  <||@
  HexCodeFile>>> <|@
end_nmethod
