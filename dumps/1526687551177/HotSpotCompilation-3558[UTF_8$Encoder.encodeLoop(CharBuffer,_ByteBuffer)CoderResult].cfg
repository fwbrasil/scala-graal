begin_compilation
  name " HotSpotCompilation-3558[sun.nio.cs.UTF_8$Encoder.encodeLoop(CharBuffer, ByteBuffer)]"
  method "HotSpotCompilation-3558[sun.nio.cs.UTF_8$Encoder.encodeLoop(CharBuffer, ByteBuffer)]"
  date 1526687585912
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a778 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a778  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/nio/cs/UTF_8$Encoder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?124 ?119 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/nio/HeapCharBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v800 v797 v449 ?124 ?119 v802 v801 v796 v815 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/nio/ByteBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v803 ?124 v799 ?119 v449 v805 v804 v798 v816 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 690
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 
=== Succesors ===
=== Usages ===
v684 a778 v819 i779 v820 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3  <|@  <|@
f <@~|@floating>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a778 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a778 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.hb
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v796 
=== Succesors ===
next: v819 
=== Usages ===
a352 v819 v808 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v796 #next: v819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a778 
=== Succesors ===
next: i779 
=== Usages ===
=== Predecessor ===
a778 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a778 #next: i779  <|@  <|@
f <@~|@floating>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i779 v494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i779 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 38]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v804 
=== Succesors ===
next: i780 
=== Usages ===
i70 
=== Predecessor ===
v819 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v804 #next: i780  <|@  <|@
f <@~|@floating>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i780 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i780 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 34]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v803 
=== Succesors ===
next: i781 
=== Usages ===
i70 i77 i285 
=== Predecessor ===
i779 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v803 #next: i781  <|@  <|@
f <@~|@floating>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i781 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i781 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 49]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v805 
=== Succesors ===
next: i782 
=== Usages ===
i77 v333 
=== Predecessor ===
i780 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v805 #next: i782  <|@  <|@
f <@~|@floating>@ <|@
tid v800 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i782 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i782 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.offset
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v800 
=== Succesors ===
next: i783 
=== Usages ===
i52 i59 i278 
=== Predecessor ===
i781 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v800 #next: i783  <|@  <|@
f <@~|@floating>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i783 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i783 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:587) [bci: 21]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v802 
=== Succesors ===
next: i784 
=== Usages ===
i59 v308 
=== Predecessor ===
i782 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v802 #next: i784  <|@  <|@
f <@~|@floating>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i784 v488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i784 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 10]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v801 
=== Succesors ===
next: i785 
=== Usages ===
i52 
=== Predecessor ===
i783 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v801 #next: i785  <|@  <|@
f <@~|@floating>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a778 
=== Succesors ===
=== Usages ===
i785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a778  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i785 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v808 
=== Succesors ===
next: v735 
=== Usages ===
v549 v572 j540 
=== Predecessor ===
i784 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v808 #next: v735  <|@  <|@
f <@~|@floating>@ <|@
tid j540 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i785 
=== Succesors ===
=== Usages ===
v548 v571 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i785  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 52]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i780 
y: i781 
=== Succesors ===
=== Usages ===
i79 i157 v137 ?119 ?124 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i780 y: i781  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 41]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i779 
y: i780 
=== Succesors ===
=== Usages ===
i87 i79 i83 v552 j556 v560 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i779 y: i780  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 66]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i77 
y: i70 
=== Succesors ===
=== Usages ===
i509 v265 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i77 y: i70  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:587) [bci: 24]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i782 
y: i783 
=== Succesors ===
=== Usages ===
?119 v125 v575 i78 ?124 i566 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i782 y: i783  <|@  <|@
f <@~|@floating>@ <|@
tid i52 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 13]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i782 
y: i784 
=== Succesors ===
=== Usages ===
i86 i78 j542 v549 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i782 y: i784  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 61]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i59 
y: i52 
=== Succesors ===
=== Usages ===
i509 v265 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i59 y: i52  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i79 
y: i78 
=== Succesors ===
=== Usages ===
i509 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i79 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i509 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v265 
trueValue: i79 
falseValue: i78 
=== Succesors ===
=== Usages ===
i83 j543 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v265 trueValue: i79 falseValue: i78  <|@  <|@
f <@~|@floating>@ <|@
tid j543 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i509 
=== Succesors ===
=== Usages ===
j545 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i509  <|@  <|@
f <@~|@floating>@ <|@
tid j544 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] â‡Šffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j545 j568 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j545 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j543 
y: j544 
=== Succesors ===
=== Usages ===
j546 j557 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j543 y: j544  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i70 
y: i509 
=== Succesors ===
=== Usages ===
v552 v89 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i70 y: i509  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i83 
=== Succesors ===
=== Usages ===
v735 v751 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i83  <|@  <|@
f <@~|@floating>@ <|@
tid a352 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a778 
=== Succesors ===
=== Usages ===
?124 v806 ?119 v809 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a778  <|@  <|@
f <@~|@floating>@ <|@
tid a693 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1968456509
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1968456509]
=== Inputs ===
=== Succesors ===
=== Usages ===
a683 a683 a683 a683 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v552 
=== Succesors ===
trueSuccessor: v734 
falseSuccessor: v731 
=== Usages ===
=== Predecessor ===
i785 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v552 #trueSuccessor: v734 #falseSuccessor: v731  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid j542 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i52 
=== Succesors ===
=== Usages ===
j546 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i52  <|@  <|@
f <@~|@floating>@ <|@
tid j546 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j542 
y: j545 
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j542 y: j545  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j546 
y: j540 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j546 y: j540  <|@  <|@
f <@~|@floating>@ <|@
tid i692 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -99867
stableDimension: 0
stamp: i32 [-99867] â‡Š00000000fffe79e5 â‡ˆ00000000fffe79e5
stampKind: i32
value: int[-99867|0xfffffffffffe79e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i682 i682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v548 
=== Succesors ===
trueSuccessor: v742 
falseSuccessor: v739 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v548 #trueSuccessor: v742 #falseSuccessor: v739  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v741 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v741  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i52 
y: i785 
=== Succesors ===
=== Usages ===
v741 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i52 y: i785  <|@  <|@
f <@*|@fixed>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v549 
=== Succesors ===
trueSuccessor: v732 
falseSuccessor: v740 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v549 #trueSuccessor: v732 #falseSuccessor: v740  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v730 
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v730  <|@  <|@
f <@*|@fixed>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
v732 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v817 
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v817  <|@  <|@
f <@*|@fixed>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
v740 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v691  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
v739 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v729  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
v731 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B3" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v729 v730 
=== Succesors ===
next: a786 
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v729 v730 #next: a786  <|@  <|@
f <@~|@floating>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a786 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a786 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v798 
=== Succesors ===
next: v820 
=== Usages ===
?124 v820 v807 v810 v811 v812 v813 v814 ?119 v821 
=== Predecessor ===
v728 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v798 #next: v820  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a786 
=== Succesors ===
next: v751 
=== Usages ===
=== Predecessor ===
a786 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a786 #next: v751  <|@  <|@
f <@*|@fixed>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v552 
=== Succesors ===
trueSuccessor: v750 
falseSuccessor: v747 
=== Usages ===
=== Predecessor ===
v820 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v552 #trueSuccessor: v750 #falseSuccessor: v747  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i787 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i787  <|@  <|@
f <@~|@floating>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a786 
=== Succesors ===
=== Usages ===
i787 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i787 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v821 
=== Succesors ===
next: v759 
=== Usages ===
j555 v560 
=== Predecessor ===
v750 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v821 #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid j556 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i70 
=== Succesors ===
=== Usages ===
j557 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i70  <|@  <|@
f <@~|@floating>@ <|@
tid j557 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j545 
y: j556 
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j545 y: j556  <|@  <|@
f <@~|@floating>@ <|@
tid j555 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i787 
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i787  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j557 
y: j555 
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j557 y: j555  <|@  <|@
f <@~|@floating>@ <|@
tid i695 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -106267
stableDimension: 0
stamp: i32 [-106267] â‡Š00000000fffe60e5 â‡ˆ00000000fffe60e5
stampKind: i32
value: int[-106267|0xfffffffffffe60e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i682 i682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v559 
=== Succesors ===
trueSuccessor: v758 
falseSuccessor: v755 
=== Usages ===
=== Predecessor ===
i787 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v559 #trueSuccessor: v758 #falseSuccessor: v755  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v757 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v757  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i787 
=== Succesors ===
=== Usages ===
v757 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i70 y: i787  <|@  <|@
f <@*|@fixed>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v560 
=== Succesors ===
trueSuccessor: v748 
falseSuccessor: v756 
=== Usages ===
=== Predecessor ===
v758 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v560 #trueSuccessor: v748 #falseSuccessor: v756  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v746 
=== Usages ===
=== Predecessor ===
v757 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v746  <|@  <|@
f <@*|@fixed>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
v748 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v818 
=== Usages ===
=== Predecessor ===
v757 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v818  <|@  <|@
f <@*|@fixed>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
v756 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
v755 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v745  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
v747 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v745 v746 
=== Succesors ===
next: i788 
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v745 v746 #next: i788  <|@  <|@
f <@~|@floating>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i788 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i788 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.isReadOnly
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v797 
=== Succesors ===
next: v610 
=== Usages ===
i357 
=== Predecessor ===
v744 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v797 #next: v610  <|@  <|@
f <@~|@floating>@ <|@
tid i357 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i788 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i788  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 v27 v335 v310 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i357 
y: i8 
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i357 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid a681 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v705 a683 a683 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v607 
falseSuccessor: v609 
=== Usages ===
=== Predecessor ===
i788 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v607 #falseSuccessor: v609  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i789 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i789  <|@  <|@
f <@~|@floating>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i789 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i789 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.isReadOnly
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v799 
=== Succesors ===
next: v614 
=== Usages ===
i366 
=== Predecessor ===
v607 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v799 #next: v614  <|@  <|@
f <@~|@floating>@ <|@
tid i366 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i789 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i789  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i366 
y: i8 
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i366 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v38 
=== Succesors ===
trueSuccessor: v611 
falseSuccessor: v613 
=== Usages ===
=== Predecessor ===
i789 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v38 #trueSuccessor: v611 #falseSuccessor: v613  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v614 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i111 i112 i144 i184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i499 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] â‡Š0000000000000080 â‡ˆ0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v611 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B18" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4628433835369920230
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i86 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v85 
values: i52 i112 
=== Succesors ===
=== Usages ===
j565 v575 v806 v572 i112 i566 ?119 i122 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v85 values: i52 i112  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v85 
values: i70 i111 
=== Succesors ===
=== Usages ===
v807 v89 ?119 i123 i111 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v85 values: i70 i111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 27.500198341781378
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v84 
=== Succesors ===
next: v95 
=== Usages ===
i86 i87 v91 v103 v118 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v84 #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i87 
y: i83 
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i87 y: i83  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.9638044768577462
=== Inputs ===
condition: v89 
=== Succesors ===
trueSuccessor: v90 
falseSuccessor: v91 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v89 #trueSuccessor: v90 #falseSuccessor: v91  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4628153659663266439
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 80]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i790 
=== Usages ===
v554 v564 
=== Predecessor ===
v95 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i790  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v728 v90 
=== Succesors ===
=== Usages ===
i790 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v728 v90  <|@  <|@
f <@~|@floating>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a352 
index: i86 
=== Succesors ===
=== Usages ===
i790 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a352 index: i86  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i790 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v554 
address: v806 
=== Succesors ===
next: v109 
=== Usages ===
v500 i502 
=== Predecessor ===
v90 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v554 address: v806 #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i790 
y: i499 
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i790 y: i499  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.9998258454311219
=== Inputs ===
condition: v500 
=== Succesors ===
trueSuccessor: v99 
falseSuccessor: v103 
=== Usages ===
=== Predecessor ===
i790 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v500 #trueSuccessor: v99 #falseSuccessor: v103  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4628152360393209574
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 90]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v422  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v744 v90 
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v744 v90  <|@  <|@
f <@~|@floating>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i87 
index: a786 
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i87 index: a786  <|@  <|@
f <@~|@floating>@ <|@
tid i502 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 104]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
resultBits: 8
stamp: i8
=== Inputs ===
value: i790 
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v564 
address: v807 
value: i502 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v118 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v564 address: v807 value: i502 stateAfter: - lastLocationAccess: - #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i87 
y: i110 
=== Succesors ===
=== Usages ===
i87 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i87 y: i110  <|@  <|@
f <@~|@floating>@ <|@
tid i112 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 100]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i86 
y: i110 
=== Succesors ===
=== Usages ===
i86 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i86 y: i110  <|@  <|@
f <@*|@fixed>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v85 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v85  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571971832306603830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v85 
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v85 #next: v102  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v103 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607140842158197713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v85 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v85 #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v91 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B29" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v100 v102 
=== Succesors ===
next: v767 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v100 v102 #next: v767  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i86 
y: i59 
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i86 y: i59  <|@  <|@
tid ?200 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 691
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
?124 ?674 ?119 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v575 
=== Succesors ===
trueSuccessor: v766 
falseSuccessor: v763 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v575 #trueSuccessor: v766 #falseSuccessor: v763  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v775 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v775  <|@  <|@
f <@~|@floating>@ <|@
tid j565 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i86 
=== Succesors ===
=== Usages ===
j569 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i86  <|@  <|@
f <@~|@floating>@ <|@
tid i566 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i32
=== Inputs ===
x: i59 
y: i86 
=== Succesors ===
=== Usages ===
j567 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i59 y: i86  <|@  <|@
f <@~|@floating>@ <|@
tid j567 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i566 
=== Succesors ===
=== Usages ===
j568 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i566  <|@  <|@
f <@~|@floating>@ <|@
tid j568 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j567 
y: j544 
=== Succesors ===
=== Usages ===
j569 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j567 y: j544  <|@  <|@
f <@~|@floating>@ <|@
tid j569 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j565 
y: j568 
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j565 y: j568  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j569 
y: j540 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j569 y: j540  <|@  <|@
f <@*|@fixed>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v571 
=== Succesors ===
trueSuccessor: v774 
falseSuccessor: v771 
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v571 #trueSuccessor: v774 #falseSuccessor: v771  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v773 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v773  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i86 
y: i785 
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i86 y: i785  <|@  <|@
f <@*|@fixed>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v572 
=== Succesors ===
trueSuccessor: v764 
falseSuccessor: v772 
=== Usages ===
=== Predecessor ===
v774 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v572 #trueSuccessor: v764 #falseSuccessor: v772  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v773 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v762  <|@  <|@
f <@*|@fixed>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v764 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v770 
=== Usages ===
=== Predecessor ===
v773 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v770  <|@  <|@
f <@*|@fixed>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v768 
=== Predecessor ===
v772 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v769 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v769  <|@  <|@
f <@*|@fixed>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v768 
=== Predecessor ===
v771 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v769 v770 
=== Succesors ===
next: v616 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v769 v770 #next: v616  <|@  <|@
tid ?119 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: ?200 
values: a1 a2 a3 a352 i86 i59 a786 i87 i77 - - - 
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?200 values: a1 a2 a3 a352 i86 i59 a786 i87 i77 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 428
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
reason: BoundsCheckException
speculation: Object[d.a@731952465]
stamp: void
=== Inputs ===
stateBefore: ?119 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v768 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?119  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v761  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v763 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v761 v762 
=== Succesors ===
next: v120 
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v761 v762 #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v760 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B35" "B45" 
    successors "B32" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607831838015576006
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i122 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v121 
values: i86 i184 i184 
=== Succesors ===
=== Usages ===
?124 v125 i184 v809 v449 i278 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v121 values: i86 i184 i184  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v121 
values: i87 i144 i198 
=== Succesors ===
=== Usages ===
?124 v457 v137 v449 i144 v810 i198 i157 v812 i197 i285 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v121 values: i87 i144 i198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.1442000331494329
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v120 
=== Succesors ===
next: v131 
=== Usages ===
i122 i123 v127 v139 v185 v199 v647 v622 v627 v632 v637 v642 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v120 #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i122 
y: i59 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i122 y: i59  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.12604763777083372
=== Inputs ===
condition: v125 
=== Succesors ===
trueSuccessor: v126 
falseSuccessor: v127 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v125 #trueSuccessor: v126 #falseSuccessor: v127  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594364227110853881
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 116]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i791 
=== Usages ===
v577 
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i791  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v760 v126 
=== Succesors ===
=== Usages ===
i791 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v760 v126  <|@  <|@
f <@~|@floating>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a352 
index: i122 
=== Succesors ===
=== Usages ===
i791 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a352 index: i122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i791 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v577 
address: v809 
=== Succesors ===
next: i792 
=== Usages ===
i435 
=== Predecessor ===
v126 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v577 address: v809 #next: i792  <|@  <|@
f <@~|@floating>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a786 
=== Succesors ===
=== Usages ===
i792 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i792 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v811 
=== Succesors ===
next: v136 
=== Usages ===
v457 v477 
=== Predecessor ===
i791 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v811 #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i123 
y: i792 
=== Succesors ===
=== Usages ===
v643 v623 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i123 y: i792  <|@  <|@
f <@~|@floating>@ <|@
tid i435 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
resultBits: 32
stamp: i32 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i791 
=== Succesors ===
=== Usages ===
v133 i145 i170 v150 i178 v292 i163 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i791  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 84]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] â‡Š0000000000000080 â‡ˆ0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i179 v133 i173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i435 
y: i97 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i435 y: i97  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i122 
y: i110 
=== Succesors ===
=== Usages ===
i122 i122 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i122 y: i110  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 151]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i123 
y: i110 
=== Succesors ===
=== Usages ===
i123 v813 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i123 y: i110  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.9463142341159088
=== Inputs ===
condition: v133 
=== Succesors ===
trueSuccessor: v134 
falseSuccessor: v135 
=== Usages ===
=== Predecessor ===
i792 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v133 #trueSuccessor: v134 #falseSuccessor: v135  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594085264768012946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i123 
y: i77 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i123 y: i77  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.9998265093684942
=== Inputs ===
condition: v137 
=== Succesors ===
trueSuccessor: v138 
falseSuccessor: v139 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v137 #trueSuccessor: v138 #falseSuccessor: v139  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594084411672163280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 147]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v623  <|@  <|@
f <@*|@fixed>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v457 
=== Succesors ===
trueSuccessor: v619 
falseSuccessor: v622 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v457 #trueSuccessor: v619 #falseSuccessor: v622  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594084411672163280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v448 
=== Usages ===
v448 
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v448  <|@  <|@
f <@~|@floating>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i123 
index: a786 
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i123 index: a786  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 156]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
resultBits: 8
stamp: i8
=== Inputs ===
value: i435 
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v619 
address: v810 
value: i145 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v619 address: v810 value: i145 stateAfter: - lastLocationAccess: - #next: v185  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v121 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v121  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid i707 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -112923
stableDimension: 0
stamp: i32 [-112923] â‡Š00000000fffe46e5 â‡ˆ00000000fffe46e5
stampKind: i32
value: int[-112923|0xfffffffffffe46e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v622 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4537609786335184560
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 137]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: a187 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: a187  <|@  <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
returnStamp: a# Ljava/nio/charset/CoderResult;
signature: [Ljdk.vm.ci.meta.JavaType;@251e6a59
stamp: void
targetMethod: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>
=== Inputs ===
arguments: a2 i122 a3 i123 
=== Succesors ===
=== Usages ===
a187 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 i122 a3 i123  <|@  <|@
tid ?674 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 602
stackSize: 0
=== Inputs ===
outerFrameState: ?200 
values: - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
a187 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?200 values: - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a187 <|@
d <@d|@=== Debug Properties ===
bci: 143
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
polymorphic: false
stamp: a# Ljava/nio/charset/CoderResult;
targetMethod: Direct#UTF_8$Encoder.overflow
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v449 
stateDuring: ?674 
=== Succesors ===
next: v346 
=== Usages ===
v346 
=== Predecessor ===
v139 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v449 stateDuring: ?674 #next: v346  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a187 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a187 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a187 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 161]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v628 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v628  <|@  <|@
f <@~|@floating>@ <|@
tid i149 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 163]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] â‡Š0000000000000800 â‡ˆ0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i435 
y: i149 
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i435 y: i149  <|@  <|@
f <@*|@fixed>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v150 
=== Succesors ===
trueSuccessor: v627 
falseSuccessor: v624 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v150 #trueSuccessor: v627 #falseSuccessor: v624  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: v708 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: v708  <|@  <|@
f <@~|@floating>@ <|@
tid i709 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -115219
stableDimension: 0
stamp: i32 [-115219] â‡Š00000000fffe3ded â‡ˆ00000000fffe3ded
stampKind: i32
value: int[-115219|0xfffffffffffe3ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v627 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v633 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v633  <|@  <|@
f <@~|@floating>@ <|@
tid i291 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] â‡Š000000000000d800 â‡ˆ000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i435 
y: i291 
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i435 y: i291  <|@  <|@
f <@*|@fixed>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v292 
=== Succesors ===
trueSuccessor: v629 
falseSuccessor: v632 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v292 #trueSuccessor: v629 #falseSuccessor: v632  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v638  <|@  <|@
f <@~|@floating>@ <|@
tid i157 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 398]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i77 
y: i123 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i77 y: i123  <|@  <|@
f <@~|@floating>@ <|@
tid i158 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 399]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] â‡Š0000000000000003 â‡ˆ0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v159 i198 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i157 
y: i158 
=== Succesors ===
=== Usages ===
v638 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i157 y: i158  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v159 
=== Succesors ===
trueSuccessor: v637 
falseSuccessor: v634 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v159 #trueSuccessor: v637 #falseSuccessor: v634  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid i713 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -115731
stableDimension: 0
stamp: i32 [-115731] â‡Š00000000fffe3bed â‡ˆ00000000fffe3bed
stampKind: i32
value: int[-115731|0xfffffffffffe3bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v637 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v643 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v643  <|@  <|@
f <@*|@fixed>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v457 
=== Succesors ===
trueSuccessor: v639 
falseSuccessor: v642 
=== Usages ===
=== Predecessor ===
v634 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v457 #trueSuccessor: v639 #falseSuccessor: v642  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v648 
=== Usages ===
v538 
=== Predecessor ===
v643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] â‡Š0000000000000002 â‡ˆ0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i197 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i197 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i123 
y: i196 
=== Succesors ===
=== Usages ===
v477 v814 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i123 y: i196  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i197 
y: i792 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i197 y: i792  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v477 
=== Succesors ===
trueSuccessor: v644 
falseSuccessor: v647 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v477 #trueSuccessor: v644 #falseSuccessor: v647  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v465 
=== Usages ===
v538 
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v644 v639 
=== Succesors ===
=== Usages ===
v465 v485 v475 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v644 v639  <|@  <|@
f <@~|@floating>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i123 
index: a786 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i123 index: a786  <|@  <|@
f <@~|@floating>@ <|@
tid i162 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 425]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] â‡Š000000000000000c â‡ˆ000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i163 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 427]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32 [0 - 15] â‡ˆ000000000000000f
=== Inputs ===
x: i435 
y: i162 
=== Succesors ===
=== Usages ===
i164 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i435 y: i162  <|@  <|@
f <@~|@floating>@ <|@
tid i161 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 420]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] â‡Š00000000000000e0 â‡ˆ00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 428]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32 [224 - 239] â‡Š00000000000000e0 â‡ˆ00000000000000ef
=== Inputs ===
x: i163 
y: i161 
=== Succesors ===
=== Usages ===
i165 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i163 y: i161  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 429]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
resultBits: 8
stamp: i8 [-32 - -17] â‡Š00000000000000e0 â‡ˆ00000000000000ef
=== Inputs ===
value: i164 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v538 
address: v812 
value: i165 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v538 address: v812 value: i165 stateAfter: - lastLocationAccess: - #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i144 
index: a786 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i144 index: a786  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 443]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] â‡Š0000000000000006 â‡ˆ0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i170 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 445]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32 [0 - 1023] â‡ˆ00000000000003ff
=== Inputs ===
x: i435 
y: i169 
=== Succesors ===
=== Usages ===
i172 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i435 y: i169  <|@  <|@
f <@~|@floating>@ <|@
tid i171 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 446]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] â‡Š000000000000003f â‡ˆ000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i172 i178 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 448]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32 [0 - 63] â‡ˆ000000000000003f
=== Inputs ===
x: i170 
y: i171 
=== Succesors ===
=== Usages ===
i173 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i170 y: i171  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 449]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32 [128 - 191] â‡Š0000000000000080 â‡ˆ00000000000000bf
=== Inputs ===
x: i172 
y: i97 
=== Succesors ===
=== Usages ===
i174 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i172 y: i97  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 450]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
resultBits: 8
stamp: i8 [-128 - -65] â‡Š0000000000000080 â‡ˆ00000000000000bf
=== Inputs ===
value: i173 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v538 
address: v813 
value: i174 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v538 address: v813 value: i174 stateAfter: - lastLocationAccess: - #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i197 
index: a786 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i197 index: a786  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 466]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32 [0 - 63] â‡ˆ000000000000003f
=== Inputs ===
x: i435 
y: i171 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i435 y: i171  <|@  <|@
f <@~|@floating>@ <|@
tid i179 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 467]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32 [128 - 191] â‡Š0000000000000080 â‡ˆ00000000000000bf
=== Inputs ===
x: i178 
y: i97 
=== Succesors ===
=== Usages ===
i180 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i178 y: i97  <|@  <|@
f <@~|@floating>@ <|@
tid i180 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 468]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
resultBits: 8
stamp: i8 [-128 - -65] â‡Š0000000000000080 â‡ˆ00000000000000bf
=== Inputs ===
value: i179 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v538 
address: v814 
value: i180 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v538 address: v814 value: i180 stateAfter: - lastLocationAccess: - #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid i198 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 456]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i123 
y: i158 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i123 y: i158  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v121 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v121  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: v716 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: v716  <|@  <|@
f <@~|@floating>@ <|@
tid i717 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -122395
stableDimension: 0
stamp: i32 [-122395] â‡Š00000000fffe21e5 â‡ˆ00000000fffe21e5
stampKind: i32
value: int[-122395|0xfffffffffffe21e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v647 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: v714 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: v714  <|@  <|@
f <@~|@floating>@ <|@
tid i715 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -117275
stableDimension: 0
stamp: i32 [-117275] â‡Š00000000fffe35e5 â‡ˆ00000000fffe35e5
stampKind: i32
value: int[-117275|0xfffffffffffe35e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v642 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: v710 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: v710  <|@  <|@
f <@~|@floating>@ <|@
tid i711 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -115475
stableDimension: 0
stamp: i32 [-115475] â‡Š00000000fffe3ced â‡ˆ00000000fffe3ced
stampKind: i32
value: int[-115475|0xfffffffffffe3ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v632 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 476]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: v652 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: v652  <|@  <|@
f <@~|@floating>@ <|@
tid i278 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 6]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i122 
y: i782 
=== Succesors ===
=== Usages ===
v316 v308 v310 v488 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i122 y: i782  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i783 
y: i278 
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i783 y: i278  <|@  <|@
f <@*|@fixed>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v308 
=== Succesors ===
trueSuccessor: v651 
falseSuccessor: v649 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v308 #trueSuccessor: v651 #falseSuccessor: v649  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid i702 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -124435
stableDimension: 0
stamp: i32 [-124435] â‡Š00000000fffe19ed â‡ˆ00000000fffe19ed
stampKind: i32
value: int[-124435|0xfffffffffffe19ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v651 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v656  <|@  <|@
f <@~|@floating>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i278 
y: i8 
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i278 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v310 
=== Succesors ===
trueSuccessor: v655 
falseSuccessor: v653 
=== Usages ===
=== Predecessor ===
v649 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v310 #trueSuccessor: v655 #falseSuccessor: v653  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v718 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v718  <|@  <|@
f <@~|@floating>@ <|@
tid i719 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -124691
stableDimension: 0
stamp: i32 [-124691] â‡Š00000000fffe18ed â‡ˆ00000000fffe18ed
stampKind: i32
value: int[-124691|0xfffffffffffe18ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v655 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i793 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i793  <|@  <|@
f <@~|@floating>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i793 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i793 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v815 
=== Succesors ===
next: v660 
=== Usages ===
v316 
=== Predecessor ===
v653 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v815 #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i278 
y: i793 
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i278 y: i793  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v316 
=== Succesors ===
trueSuccessor: v659 
falseSuccessor: v657 
=== Usages ===
=== Predecessor ===
i793 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v316 #trueSuccessor: v659 #falseSuccessor: v657  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v720 
=== Usages ===
=== Predecessor ===
v660 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v720  <|@  <|@
f <@~|@floating>@ <|@
tid i721 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -125715
stableDimension: 0
stamp: i32 [-125715] â‡Š00000000fffe14ed â‡ˆ00000000fffe14ed
stampKind: i32
value: int[-125715|0xfffffffffffe14ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v659 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v664 
=== Usages ===
=== Predecessor ===
v660 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v664  <|@  <|@
f <@~|@floating>@ <|@
tid i285 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 17]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i123 
y: i780 
=== Succesors ===
=== Usages ===
v341 v333 v335 v494 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i123 y: i780  <|@  <|@
f <@~|@floating>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i781 
y: i285 
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i781 y: i285  <|@  <|@
f <@*|@fixed>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v333 
=== Succesors ===
trueSuccessor: v663 
falseSuccessor: v661 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v333 #trueSuccessor: v663 #falseSuccessor: v661  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v722 
=== Usages ===
=== Predecessor ===
v664 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v722  <|@  <|@
f <@~|@floating>@ <|@
tid i723 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -125971
stableDimension: 0
stamp: i32 [-125971] â‡Š00000000fffe13ed â‡ˆ00000000fffe13ed
stampKind: i32
value: int[-125971|0xfffffffffffe13ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v663 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v664 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v668  <|@  <|@
f <@~|@floating>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i285 
y: i8 
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i285 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v335 
=== Succesors ===
trueSuccessor: v667 
falseSuccessor: v665 
=== Usages ===
=== Predecessor ===
v661 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v335 #trueSuccessor: v667 #falseSuccessor: v665  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v724 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v724  <|@  <|@
f <@~|@floating>@ <|@
tid i725 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -126227
stableDimension: 0
stamp: i32 [-126227] â‡Š00000000fffe12ed â‡ˆ00000000fffe12ed
stampKind: i32
value: int[-126227|0xfffffffffffe12ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v667 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B62" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i794 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i794  <|@  <|@
f <@~|@floating>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i794 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v816 
=== Succesors ===
next: v672 
=== Usages ===
v341 
=== Predecessor ===
v665 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v816 #next: v672  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i285 
y: i794 
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i285 y: i794  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v341 
=== Succesors ===
trueSuccessor: v671 
falseSuccessor: v669 
=== Usages ===
=== Predecessor ===
i794 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v341 #trueSuccessor: v671 #falseSuccessor: v669  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v726  <|@  <|@
f <@~|@floating>@ <|@
tid i727 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -127251
stableDimension: 0
stamp: i32 [-127251] â‡Š00000000fffe0eed â‡ˆ00000000fffe0eed
stampKind: i32
value: int[-127251|0xfffffffffffe0eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v671 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B50" "B36" "B39" "B48" "B42" "B47" "B46" "B52" "B54" "B56" "B58" "B60" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i703 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-127251 - -112923] â‡Š00000000fffe00e5 â‡ˆ00000000fffe7fed
valueDescription: i32
=== Inputs ===
merge: v700 
values: i702 i707 i709 i711 i713 i715 i717 i719 i721 i723 i725 i727 
=== Succesors ===
=== Usages ===
v705 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v700 values: i702 i707 i709 i711 i713 i715 i717 i719 i721 i723 i725 i727  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v701 v706 v708 v710 v712 v714 v716 v718 v720 v722 v724 v726 
=== Succesors ===
next: v705 
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v701 v706 v708 v710 v712 v714 v716 v718 v720 v722 v724 v726 #next: v705  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: ?200 
values: a1 a2 a3 a352 i122 i59 a786 i123 i77 - - - 
=== Succesors ===
=== Usages ===
v705 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?200 values: a1 a2 a3 a352 i122 i59 a786 i123 i77 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?124 
actionAndReason: i703 
speculation: a681 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?124 actionAndReason: i703 speculation: a681  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v801 
value: i278 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v801 value: i278 stateAfter: - lastLocationAccess: - #next: v494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v804 
value: i285 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v804 value: i285 stateAfter: - lastLocationAccess: - #next: v347  <|@  <|@
f <@~|@floating>@ <|@
tid a194 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:637) [bci: 485]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
rawvalue: CoderResult@872244084
stableDimension: 0
stamp: a!# Ljava/nio/charset/CoderResult;
stampKind: a -
value: Object[CoderResult@872244084]
=== Inputs ===
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a194 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a194 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v614 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v698  <|@  <|@
f <@~|@floating>@ <|@
tid i699 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -93971
stableDimension: 0
stamp: i32 [-93971] â‡Š00000000fffe90ed â‡ˆ00000000fffe90ed
stampKind: i32
value: int[-93971|0xfffffffffffe90ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
v613 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v696  <|@  <|@
f <@~|@floating>@ <|@
tid i697 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -91667
stableDimension: 0
stamp: i32 [-91667] â‡Š00000000fffe99ed â‡ˆ00000000fffe99ed
stampKind: i32
value: int[-91667|0xfffffffffffe99ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
v609 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" "B64" "B63" "B4" "B11" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i682 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-106267 - -89099] â‡Š00000000fffe00e5 â‡ˆ00000000fffefffd
valueDescription: i32
=== Inputs ===
merge: v678 
values: i692 i695 i697 i699 i692 i695 
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v678 values: i692 i695 i697 i699 i692 i695  <|@  <|@
f <@~|@floating>@ <|@
tid a683 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v678 
values: a693 a693 a681 a681 a693 a693 
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v678 values: a693 a693 a681 a681 a693 a693  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v691 v694 v696 v698 v817 v818 
=== Succesors ===
next: v684 
=== Usages ===
i682 a683 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v691 v694 v696 v698 v817 v818 #next: v684  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i682 
speculation: a683 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v678 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i682 speculation: a683  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a778 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a778  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/nio/cs/UTF_8$Encoder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?124 ?119 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/nio/HeapCharBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v800 v797 v449 ?124 ?119 v802 v801 v796 v815 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/nio/ByteBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v803 ?124 v799 ?119 v449 v805 v804 v798 v816 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 690
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 
=== Succesors ===
=== Usages ===
v684 a778 v819 i779 v820 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3  <|@  <|@
f <@~|@floating>@ <|@
tid v796 <|@
result [v1|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a778 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a778 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.hb
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v796 
=== Succesors ===
next: v819 
=== Usages ===
a352 v819 v808 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v796 #next: v819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a778 
=== Succesors ===
next: i779 
=== Usages ===
=== Predecessor ===
a778 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a778 #next: i779  <|@  <|@
f <@~|@floating>@ <|@
tid v804 <|@
result [v2|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i779 v494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i779 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 38]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v804 
=== Succesors ===
next: i780 
=== Usages ===
i70 
=== Predecessor ===
v819 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v804 #next: i780  <|@  <|@
f <@~|@floating>@ <|@
tid v803 <|@
result [v2|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i780 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i780 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 34]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v803 
=== Succesors ===
next: i781 
=== Usages ===
i70 i77 i285 
=== Predecessor ===
i779 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v803 #next: i781  <|@  <|@
f <@~|@floating>@ <|@
tid v805 <|@
result [v2|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i781 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i781 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 49]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v805 
=== Succesors ===
next: i782 
=== Usages ===
i77 v333 
=== Predecessor ===
i780 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v805 #next: i782  <|@  <|@
f <@~|@floating>@ <|@
tid v800 <|@
result [v1|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i782 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i782 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.offset
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v800 
=== Succesors ===
next: i783 
=== Usages ===
i52 i59 i278 
=== Predecessor ===
i781 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v800 #next: i783  <|@  <|@
f <@~|@floating>@ <|@
tid v802 <|@
result [v1|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i783 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i783 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:587) [bci: 21]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v802 
=== Succesors ===
next: i784 
=== Usages ===
i59 v308 
=== Predecessor ===
i782 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v802 #next: i784  <|@  <|@
f <@~|@floating>@ <|@
tid v801 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i784 v488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i784 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 10]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v801 
=== Succesors ===
next: i785 
=== Usages ===
i52 
=== Predecessor ===
i783 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v801 #next: i785  <|@  <|@
f <@~|@floating>@ <|@
tid v808 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a778 
=== Succesors ===
=== Usages ===
i785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a778  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i785 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v808 
=== Succesors ===
next: v735 
=== Usages ===
v549 v572 j540 
=== Predecessor ===
i784 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v808 #next: v735  <|@  <|@
f <@~|@floating>@ <|@
tid j540 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i785 
=== Succesors ===
=== Usages ===
v548 v571 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i785  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 52]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i780 
y: i781 
=== Succesors ===
=== Usages ===
i79 i157 v137 ?119 ?124 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i780 y: i781  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 41]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i779 
y: i780 
=== Succesors ===
=== Usages ===
i87 i79 i83 v552 j556 v560 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i779 y: i780  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 66]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i77 
y: i70 
=== Succesors ===
=== Usages ===
i509 v265 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i77 y: i70  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:587) [bci: 24]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i782 
y: i783 
=== Succesors ===
=== Usages ===
?119 v125 v575 i78 ?124 i566 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i782 y: i783  <|@  <|@
f <@~|@floating>@ <|@
tid i52 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 13]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i782 
y: i784 
=== Succesors ===
=== Usages ===
i86 i78 j542 v549 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i782 y: i784  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 61]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i59 
y: i52 
=== Succesors ===
=== Usages ===
i509 v265 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i59 y: i52  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i79 
y: i78 
=== Succesors ===
=== Usages ===
i509 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i79 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i509 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v265 
trueValue: i79 
falseValue: i78 
=== Succesors ===
=== Usages ===
i83 j543 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v265 trueValue: i79 falseValue: i78  <|@  <|@
f <@~|@floating>@ <|@
tid j543 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i509 
=== Succesors ===
=== Usages ===
j545 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i509  <|@  <|@
f <@~|@floating>@ <|@
tid j544 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] â‡Šffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j545 j568 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j545 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j543 
y: j544 
=== Succesors ===
=== Usages ===
j546 j557 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j543 y: j544  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i70 
y: i509 
=== Succesors ===
=== Usages ===
v552 v89 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i70 y: i509  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i83 
=== Succesors ===
=== Usages ===
v735 v751 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i83  <|@  <|@
f <@~|@floating>@ <|@
tid a352 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a778 
=== Succesors ===
=== Usages ===
?124 v806 ?119 v809 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a778  <|@  <|@
f <@~|@floating>@ <|@
tid a693 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1968456509
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1968456509]
=== Inputs ===
=== Succesors ===
=== Usages ===
a683 a683 a683 a683 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v552 
=== Succesors ===
trueSuccessor: v734 
falseSuccessor: v731 
=== Usages ===
=== Predecessor ===
i785 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v552 #trueSuccessor: v734 #falseSuccessor: v731  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4cfd8505 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
>@ <|@ instruction v3|DWORD[.] = MOV [v1|QWORD[.] + 44] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV [v2|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v2|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = ADD (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SUB (x: v12|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v15|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = CMOVE (falseValue: v17|DWORD, ~trueValue: v14|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = DEC v19|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v13|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b677a0c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1968456509] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid j542 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i52 
=== Succesors ===
=== Usages ===
j546 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i52  <|@  <|@
f <@~|@floating>@ <|@
tid j546 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j542 
y: j545 
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j542 y: j545  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j546 
y: j540 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j546 y: j540  <|@  <|@
f <@~|@floating>@ <|@
tid i692 <|@
result int[-99867|0xfffffffffffe79e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -99867
stableDimension: 0
stamp: i32 [-99867] â‡Š00000000fffe79e5 â‡ˆ00000000fffe79e5
stampKind: i32
value: int[-99867|0xfffffffffffe79e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i682 i682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v548 
=== Succesors ===
trueSuccessor: v742 
falseSuccessor: v739 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v548 #trueSuccessor: v742 #falseSuccessor: v739  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = ADD (x: v24|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v741 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v741  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i52 
y: i785 
=== Succesors ===
=== Usages ===
v741 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i52 y: i785  <|@  <|@
f <@*|@fixed>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v549 
=== Succesors ===
trueSuccessor: v732 
falseSuccessor: v740 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v549 #trueSuccessor: v732 #falseSuccessor: v740  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v730 
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v730  <|@  <|@
f <@*|@fixed>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
v732 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v817 
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v817  <|@  <|@
f <@*|@fixed>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
v740 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-99867|0xfffffffffffe79e5], v23|QWORD[.]] destination: B4 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v691  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
v739 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-99867|0xfffffffffffe79e5], v23|QWORD[.]] destination: B5 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v729  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
v731 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B3" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v729 v730 
=== Succesors ===
next: a786 
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v729 v730 #next: a786  <|@  <|@
f <@~|@floating>@ <|@
tid v798 <|@
result [v2|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a786 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a786 <|@
result v26|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v798 
=== Succesors ===
next: v820 
=== Usages ===
?124 v820 v807 v810 v811 v812 v813 v814 ?119 v821 
=== Predecessor ===
v728 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v798 #next: v820  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a786 
=== Succesors ===
next: v751 
=== Usages ===
=== Predecessor ===
a786 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a786 #next: v751  <|@  <|@
f <@*|@fixed>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v552 
=== Succesors ===
trueSuccessor: v750 
falseSuccessor: v747 
=== Usages ===
=== Predecessor ===
v820 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v552 #trueSuccessor: v750 #falseSuccessor: v747  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[.] = MOV [v2|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v26|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i787 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i787  <|@  <|@
f <@~|@floating>@ <|@
tid v821 <|@
result [v26|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a786 
=== Succesors ===
=== Usages ===
i787 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i787 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v821 
=== Succesors ===
next: v759 
=== Usages ===
j555 v560 
=== Predecessor ===
v750 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v821 #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid j556 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i70 
=== Succesors ===
=== Usages ===
j557 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i70  <|@  <|@
f <@~|@floating>@ <|@
tid j557 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j545 
y: j556 
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j545 y: j556  <|@  <|@
f <@~|@floating>@ <|@
tid j555 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i787 
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i787  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j557 
y: j555 
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j557 y: j555  <|@  <|@
f <@~|@floating>@ <|@
tid i695 <|@
result int[-106267|0xfffffffffffe60e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -106267
stableDimension: 0
stamp: i32 [-106267] â‡Š00000000fffe60e5 â‡ˆ00000000fffe60e5
stampKind: i32
value: int[-106267|0xfffffffffffe60e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i682 i682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v559 
=== Succesors ===
trueSuccessor: v758 
falseSuccessor: v755 
=== Usages ===
=== Predecessor ===
i787 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v559 #trueSuccessor: v758 #falseSuccessor: v755  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOV [v26|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = ADD (x: v28|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v757 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v757  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i787 
=== Succesors ===
=== Usages ===
v757 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i70 y: i787  <|@  <|@
f <@*|@fixed>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v560 
=== Succesors ===
trueSuccessor: v748 
falseSuccessor: v756 
=== Usages ===
=== Predecessor ===
v758 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v560 #trueSuccessor: v748 #falseSuccessor: v756  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v746 
=== Usages ===
=== Predecessor ===
v757 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v746  <|@  <|@
f <@*|@fixed>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
v748 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v818 
=== Usages ===
=== Predecessor ===
v757 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v818  <|@  <|@
f <@*|@fixed>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
v756 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-106267|0xfffffffffffe60e5], v23|QWORD[.]] destination: B11 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
v755 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-106267|0xfffffffffffe60e5], v23|QWORD[.]] destination: B12 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v745  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
v747 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v745 v746 
=== Succesors ===
next: i788 
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v745 v746 #next: i788  <|@  <|@
f <@~|@floating>@ <|@
tid v797 <|@
result [v1|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i788 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i788 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.isReadOnly
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v797 
=== Succesors ===
next: v610 
=== Usages ===
i357 
=== Predecessor ===
v744 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v797 #next: v610  <|@  <|@
f <@~|@floating>@ <|@
tid i357 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i788 
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i788  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 v27 v335 v310 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i357 
y: i8 
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i357 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid a681 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v705 a683 a683 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v607 
falseSuccessor: v609 
=== Usages ===
=== Predecessor ===
i788 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v607 #falseSuccessor: v609  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v31|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i789 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i789  <|@  <|@
f <@~|@floating>@ <|@
tid v799 <|@
result [v2|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i789 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i789 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.isReadOnly
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v799 
=== Succesors ===
next: v614 
=== Usages ===
i366 
=== Predecessor ===
v607 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v799 #next: v614  <|@  <|@
f <@~|@floating>@ <|@
tid i366 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i789 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i789  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i366 
y: i8 
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i366 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v38 
=== Succesors ===
trueSuccessor: v611 
falseSuccessor: v613 
=== Usages ===
=== Predecessor ===
i789 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v38 #trueSuccessor: v611 #falseSuccessor: v613  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVZXB [v2|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v32|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v614 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i111 i112 i144 i184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i499 <|@
result short[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] â‡Š0000000000000080 â‡ˆ0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
v611 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD, v13|DWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B18" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4628433835369920230
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i86 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v85 
values: i52 i112 
=== Succesors ===
=== Usages ===
j565 v575 v806 v572 i112 i566 ?119 i122 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v85 values: i52 i112  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v85 
values: i70 i111 
=== Succesors ===
=== Usages ===
v807 v89 ?119 i123 i111 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v85 values: i70 i111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 27.500198341781378
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v84 
=== Succesors ===
next: v95 
=== Usages ===
i86 i87 v91 v103 v118 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v84 #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i87 
y: i83 
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i87 y: i83  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.9638044768577462
=== Inputs ===
condition: v89 
=== Succesors ===
trueSuccessor: v90 
falseSuccessor: v91 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v89 #trueSuccessor: v90 #falseSuccessor: v91  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9638044768577462 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4628153659663266439
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 80]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i790 
=== Usages ===
v554 v564 
=== Predecessor ===
v95 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i790  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v728 v90 
=== Succesors ===
=== Usages ===
i790 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v728 v90  <|@  <|@
f <@~|@floating>@ <|@
tid v806 <|@
result [v22|QWORD[.] + v33|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a352 
index: i86 
=== Succesors ===
=== Usages ===
i790 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a352 index: i86  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i790 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v554 
address: v806 
=== Succesors ===
next: v109 
=== Usages ===
v500 i502 
=== Predecessor ===
v90 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v554 address: v806 #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i790 
y: i499 
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i790 y: i499  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.9998258454311219
=== Inputs ===
condition: v500 
=== Succesors ===
trueSuccessor: v99 
falseSuccessor: v103 
=== Usages ===
=== Predecessor ===
i790 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v500 #trueSuccessor: v99 #falseSuccessor: v103  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVSX [v22|QWORD[.] + v33|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v35|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998258454311219 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4628152360393209574
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 90]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v422  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v744 v90 
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v744 v90  <|@  <|@
f <@~|@floating>@ <|@
tid v807 <|@
result [v34|DWORD + v26|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i87 
index: a786 
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i87 index: a786  <|@  <|@
f <@~|@floating>@ <|@
tid i502 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 104]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
resultBits: 8
stamp: i8
=== Inputs ===
value: i790 
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v422 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v564 
address: v807 
value: i502 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v118 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v564 address: v807 value: i502 stateAfter: - lastLocationAccess: - #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i87 
y: i110 
=== Succesors ===
=== Usages ===
i87 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i87 y: i110  <|@  <|@
f <@~|@floating>@ <|@
tid i112 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 100]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i86 
y: i110 
=== Succesors ===
=== Usages ===
i86 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i86 y: i110  <|@  <|@
f <@*|@fixed>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v85 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v422 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v85  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v34|DWORD + v26|DWORD[.] * 8 + 16], y: v35|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = INC v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|DWORD, v36|DWORD] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571971832306603830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v85 
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v85 #next: v102  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v103 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607140842158197713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v85 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v85 #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v91 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B29" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v100 v102 
=== Succesors ===
next: v767 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v100 v102 #next: v767  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i86 
y: i59 
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i86 y: i59  <|@  <|@
tid ?200 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 691
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
?124 ?674 ?119 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v575 
=== Succesors ===
trueSuccessor: v766 
falseSuccessor: v763 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v575 #trueSuccessor: v766 #falseSuccessor: v763  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v775 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v775  <|@  <|@
f <@~|@floating>@ <|@
tid j565 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i86 
=== Succesors ===
=== Usages ===
j569 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i86  <|@  <|@
f <@~|@floating>@ <|@
tid i566 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
stamp: i32
=== Inputs ===
x: i59 
y: i86 
=== Succesors ===
=== Usages ===
j567 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i59 y: i86  <|@  <|@
f <@~|@floating>@ <|@
tid j567 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i566 
=== Succesors ===
=== Usages ===
j568 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i566  <|@  <|@
f <@~|@floating>@ <|@
tid j568 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j567 
y: j544 
=== Succesors ===
=== Usages ===
j569 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j567 y: j544  <|@  <|@
f <@~|@floating>@ <|@
tid j569 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j565 
y: j568 
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j565 y: j568  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j569 
y: j540 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j569 y: j540  <|@  <|@
f <@*|@fixed>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v571 
=== Succesors ===
trueSuccessor: v774 
falseSuccessor: v771 
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v571 #trueSuccessor: v774 #falseSuccessor: v771  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v33|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SUB (x: v15|DWORD, ~y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVSXD v39|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = DEC v40|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = ADD (x: v38|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v773 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v773  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i86 
y: i785 
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i86 y: i785  <|@  <|@
f <@*|@fixed>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v572 
=== Succesors ===
trueSuccessor: v764 
falseSuccessor: v772 
=== Usages ===
=== Predecessor ===
v774 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v572 #trueSuccessor: v764 #falseSuccessor: v772  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v773 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v762  <|@  <|@
f <@*|@fixed>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v764 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v770 
=== Usages ===
=== Predecessor ===
v773 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v770  <|@  <|@
f <@*|@fixed>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v768 
=== Predecessor ===
v772 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v769 
=== Usages ===
=== Predecessor ===
v775 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v769  <|@  <|@
f <@*|@fixed>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v768 
=== Predecessor ===
v771 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v769 v770 
=== Succesors ===
next: v616 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v769 v770 #next: v616  <|@  <|@
tid ?119 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: ?200 
values: a1 a2 a3 a352 i86 i59 a786 i87 i77 - - - 
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?200 values: a1 a2 a3 a352 i86 i59 a786 i87 i77 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 428
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
reason: BoundsCheckException
speculation: Object[d.a@731952465]
stamp: void
=== Inputs ===
stateBefore: ?119 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v768 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?119  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@731952465] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -109595 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v43|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v22|QWORD[.] v33|DWORD v15|DWORD v26|DWORD[.] v34|DWORD v12|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
>@ <|@ instruction DEOPT info [bci:109, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v761  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v763 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v761 v762 
=== Succesors ===
next: v120 
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v761 v762 #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v760 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD, v34|DWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B35" "B45" 
    successors "B32" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607831838015576006
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i122 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v121 
values: i86 i184 i184 
=== Succesors ===
=== Usages ===
?124 v125 i184 v809 v449 i278 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v121 values: i86 i184 i184  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v121 
values: i87 i144 i198 
=== Succesors ===
=== Usages ===
?124 v457 v137 v449 i144 v810 i198 i157 v812 i197 i285 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v121 values: i87 i144 i198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.1442000331494329
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v120 
=== Succesors ===
next: v131 
=== Usages ===
i122 i123 v127 v139 v185 v199 v647 v622 v627 v632 v637 v642 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v120 #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i122 
y: i59 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i122 y: i59  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.12604763777083372
=== Inputs ===
condition: v125 
=== Succesors ===
trueSuccessor: v126 
falseSuccessor: v127 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v125 #trueSuccessor: v126 #falseSuccessor: v127  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD, v45|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.12604763777083372 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594364227110853881
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 116]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i791 
=== Usages ===
v577 
=== Predecessor ===
v131 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i791  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v760 v126 
=== Succesors ===
=== Usages ===
i791 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v760 v126  <|@  <|@
f <@~|@floating>@ <|@
tid v809 <|@
result [v22|QWORD[.] + v44|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a352 
index: i122 
=== Succesors ===
=== Usages ===
i791 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a352 index: i122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i791 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v577 
address: v809 
=== Succesors ===
next: i792 
=== Usages ===
i435 
=== Predecessor ===
v126 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v577 address: v809 #next: i792  <|@  <|@
f <@~|@floating>@ <|@
tid v811 <|@
result [v26|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a786 
=== Succesors ===
=== Usages ===
i792 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i792 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v811 
=== Succesors ===
next: v136 
=== Usages ===
v457 v477 
=== Predecessor ===
i791 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v811 #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i123 
y: i792 
=== Succesors ===
=== Usages ===
v643 v623 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i123 y: i792  <|@  <|@
f <@~|@floating>@ <|@
tid i435 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
resultBits: 32
stamp: i32 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i791 
=== Succesors ===
=== Usages ===
v133 i145 i170 v150 i178 v292 i163 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i791  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
result int[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 84]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] â‡Š0000000000000080 â‡ˆ0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i179 v133 i173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i435 
y: i97 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i435 y: i97  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i122 
y: i110 
=== Succesors ===
=== Usages ===
i122 i122 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i122 y: i110  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 151]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i123 
y: i110 
=== Succesors ===
=== Usages ===
i123 v813 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i123 y: i110  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.9463142341159088
=== Inputs ===
condition: v133 
=== Succesors ===
trueSuccessor: v134 
falseSuccessor: v135 
=== Usages ===
=== Predecessor ===
i792 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v133 #trueSuccessor: v134 #falseSuccessor: v135  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVSX [v22|QWORD[.] + v44|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOV [v26|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZX v46|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = INC v45|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v48|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9463142341159088 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594085264768012946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i123 
y: i77 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i123 y: i77  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.9998265093684942
=== Inputs ===
condition: v137 
=== Succesors ===
trueSuccessor: v138 
falseSuccessor: v139 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v137 #trueSuccessor: v138 #falseSuccessor: v139  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998265093684942 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594084411672163280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 147]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v623  <|@  <|@
f <@*|@fixed>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v457 
=== Succesors ===
trueSuccessor: v619 
falseSuccessor: v622 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v457 #trueSuccessor: v619 #falseSuccessor: v622  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594084411672163280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v448 
=== Usages ===
v448 
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v448  <|@  <|@
f <@~|@floating>@ <|@
tid v810 <|@
result [v45|DWORD + v26|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i123 
index: a786 
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i123 index: a786  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 156]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
resultBits: 8
stamp: i8
=== Inputs ===
value: i435 
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v448 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v619 
address: v810 
value: i145 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v619 address: v810 value: i145 stateAfter: - lastLocationAccess: - #next: v185  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v121 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v121  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v45|DWORD + v26|DWORD[.] * 8 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD, v50|DWORD] destination: B35 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid i707 <|@
result int[-112923|0xfffffffffffe46e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -112923
stableDimension: 0
stamp: i32 [-112923] â‡Š00000000fffe46e5 â‡ˆ00000000fffe46e5
stampKind: i32
value: int[-112923|0xfffffffffffe46e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v622 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-112923|0xfffffffffffe46e5]] destination: B36 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4537609786335184560
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 137]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: a187 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: a187  <|@  <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
returnStamp: a# Ljava/nio/charset/CoderResult;
signature: [Ljdk.vm.ci.meta.JavaType;@251e6a59
stamp: void
targetMethod: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>
=== Inputs ===
arguments: a2 i122 a3 i123 
=== Succesors ===
=== Usages ===
a187 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 i122 a3 i123  <|@  <|@
tid ?674 <|@
d <@d|@=== Debug Properties ===
bci: 143
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: true
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 602
stackSize: 0
=== Inputs ===
outerFrameState: ?200 
values: - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
a187 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?200 values: - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a187 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 143
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
polymorphic: false
stamp: a# Ljava/nio/charset/CoderResult;
targetMethod: Direct#UTF_8$Encoder.overflow
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v449 
stateDuring: ?674 
=== Succesors ===
next: v346 
=== Usages ===
v346 
=== Predecessor ===
v139 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v449 stateDuring: ?674 #next: v346  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a187 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a187 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a187 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 17] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 161]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v628 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v628  <|@  <|@
f <@~|@floating>@ <|@
tid i149 <|@
result int[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 163]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] â‡Š0000000000000800 â‡ˆ0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i435 
y: i149 
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i435 y: i149  <|@  <|@
f <@*|@fixed>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v150 
=== Succesors ===
trueSuccessor: v627 
falseSuccessor: v624 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v150 #trueSuccessor: v627 #falseSuccessor: v624  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v48|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: v708 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: v708  <|@  <|@
f <@~|@floating>@ <|@
tid i709 <|@
result int[-115219|0xfffffffffffe3ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -115219
stableDimension: 0
stamp: i32 [-115219] â‡Š00000000fffe3ded â‡ˆ00000000fffe3ded
stampKind: i32
value: int[-115219|0xfffffffffffe3ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v627 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-115219|0xfffffffffffe3ded]] destination: B39 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v633 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v633  <|@  <|@
f <@~|@floating>@ <|@
tid i291 <|@
result int[55296|0xd800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] â‡Š000000000000d800 â‡ˆ000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i435 
y: i291 
=== Succesors ===
=== Usages ===
v633 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i435 y: i291  <|@  <|@
f <@*|@fixed>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v292 
=== Succesors ===
trueSuccessor: v629 
falseSuccessor: v632 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v292 #trueSuccessor: v629 #falseSuccessor: v632  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v48|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v638  <|@  <|@
f <@~|@floating>@ <|@
tid i157 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 398]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i77 
y: i123 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i77 y: i123  <|@  <|@
f <@~|@floating>@ <|@
tid i158 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 399]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] â‡Š0000000000000003 â‡ˆ0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v159 i198 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i157 
y: i158 
=== Succesors ===
=== Usages ===
v638 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i157 y: i158  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v159 
=== Succesors ===
trueSuccessor: v637 
falseSuccessor: v634 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v159 #trueSuccessor: v637 #falseSuccessor: v634  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SUB (x: v12|DWORD, ~y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v52|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid i713 <|@
result int[-115731|0xfffffffffffe3bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -115731
stableDimension: 0
stamp: i32 [-115731] â‡Š00000000fffe3bed â‡ˆ00000000fffe3bed
stampKind: i32
value: int[-115731|0xfffffffffffe3bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v637 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-115731|0xfffffffffffe3bed]] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v643 
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v643  <|@  <|@
f <@*|@fixed>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v457 
=== Succesors ===
trueSuccessor: v639 
falseSuccessor: v642 
=== Usages ===
=== Predecessor ===
v634 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v457 #trueSuccessor: v639 #falseSuccessor: v642  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v648 
=== Usages ===
v538 
=== Predecessor ===
v643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] â‡Š0000000000000002 â‡ˆ0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i197 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i197 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i123 
y: i196 
=== Succesors ===
=== Usages ===
v477 v814 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i123 y: i196  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i197 
y: i792 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i197 y: i792  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v477 
=== Succesors ===
trueSuccessor: v644 
falseSuccessor: v647 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v477 #trueSuccessor: v644 #falseSuccessor: v647  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = LEA [v45|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v465 
=== Usages ===
v538 
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v644 v639 
=== Succesors ===
=== Usages ===
v465 v485 v475 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v644 v639  <|@  <|@
f <@~|@floating>@ <|@
tid v812 <|@
result [v45|DWORD + v26|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i123 
index: a786 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i123 index: a786  <|@  <|@
f <@~|@floating>@ <|@
tid i162 <|@
result int[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 425]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] â‡Š000000000000000c â‡ˆ000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i163 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 427]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32 [0 - 15] â‡ˆ000000000000000f
=== Inputs ===
x: i435 
y: i162 
=== Succesors ===
=== Usages ===
i164 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i435 y: i162  <|@  <|@
f <@~|@floating>@ <|@
tid i161 <|@
result int[224|0xe0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 420]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] â‡Š00000000000000e0 â‡ˆ00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 428]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32 [224 - 239] â‡Š00000000000000e0 â‡ˆ00000000000000ef
=== Inputs ===
x: i163 
y: i161 
=== Succesors ===
=== Usages ===
i165 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i163 y: i161  <|@  <|@
f <@~|@floating>@ <|@
tid i165 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 429]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
resultBits: 8
stamp: i8 [-32 - -17] â‡Š00000000000000e0 â‡ˆ00000000000000ef
=== Inputs ===
value: i164 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v465 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v538 
address: v812 
value: i165 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v538 address: v812 value: i165 stateAfter: - lastLocationAccess: - #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid v813 <|@
result [v50|DWORD + v26|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i144 
index: a786 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i144 index: a786  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 443]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] â‡Š0000000000000006 â‡ˆ0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i170 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 445]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32 [0 - 1023] â‡ˆ00000000000003ff
=== Inputs ===
x: i435 
y: i169 
=== Succesors ===
=== Usages ===
i172 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i435 y: i169  <|@  <|@
f <@~|@floating>@ <|@
tid i171 <|@
result int[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 446]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] â‡Š000000000000003f â‡ˆ000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i172 i178 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 448]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32 [0 - 63] â‡ˆ000000000000003f
=== Inputs ===
x: i170 
y: i171 
=== Succesors ===
=== Usages ===
i173 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i170 y: i171  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 449]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32 [128 - 191] â‡Š0000000000000080 â‡ˆ00000000000000bf
=== Inputs ===
x: i172 
y: i97 
=== Succesors ===
=== Usages ===
i174 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i172 y: i97  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 450]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
resultBits: 8
stamp: i8 [-128 - -65] â‡Š0000000000000080 â‡ˆ00000000000000bf
=== Inputs ===
value: i173 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v475 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v538 
address: v813 
value: i174 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v538 address: v813 value: i174 stateAfter: - lastLocationAccess: - #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid v814 <|@
result [v53|DWORD + v26|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i197 
index: a786 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i197 index: a786  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 466]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32 [0 - 63] â‡ˆ000000000000003f
=== Inputs ===
x: i435 
y: i171 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i435 y: i171  <|@  <|@
f <@~|@floating>@ <|@
tid i179 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 467]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32 [128 - 191] â‡Š0000000000000080 â‡ˆ00000000000000bf
=== Inputs ===
x: i178 
y: i97 
=== Succesors ===
=== Usages ===
i180 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i178 y: i97  <|@  <|@
f <@~|@floating>@ <|@
tid i180 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 468]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
resultBits: 8
stamp: i8 [-128 - -65] â‡Š0000000000000080 â‡ˆ00000000000000bf
=== Inputs ===
value: i179 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v485 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v538 
address: v814 
value: i180 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v538 address: v814 value: i180 stateAfter: - lastLocationAccess: - #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid i198 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 456]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i123 
y: i158 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i123 y: i158  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v121 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v121  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = SHR v48|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = OR v54|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v45|DWORD + v26|DWORD[.] * 8 + 16], y: v55|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHR v48|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = AND v56|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = OR v57|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v50|DWORD + v26|DWORD[.] * 8 + 16], y: v58|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = AND v48|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = OR v59|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v53|DWORD + v26|DWORD[.] * 8 + 16], y: v60|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = LEA [v45|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD, v61|DWORD] destination: B45 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: v716 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: v716  <|@  <|@
f <@~|@floating>@ <|@
tid i717 <|@
result int[-122395|0xfffffffffffe21e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -122395
stableDimension: 0
stamp: i32 [-122395] â‡Š00000000fffe21e5 â‡ˆ00000000fffe21e5
stampKind: i32
value: int[-122395|0xfffffffffffe21e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v647 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-122395|0xfffffffffffe21e5]] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: v714 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: v714  <|@  <|@
f <@~|@floating>@ <|@
tid i715 <|@
result int[-117275|0xfffffffffffe35e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -117275
stableDimension: 0
stamp: i32 [-117275] â‡Š00000000fffe35e5 â‡ˆ00000000fffe35e5
stampKind: i32
value: int[-117275|0xfffffffffffe35e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v642 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-117275|0xfffffffffffe35e5]] destination: B47 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: v710 
=== Usages ===
=== Predecessor ===
v633 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: v710  <|@  <|@
f <@~|@floating>@ <|@
tid i711 <|@
result int[-115475|0xfffffffffffe3ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -115475
stableDimension: 0
stamp: i32 [-115475] â‡Š00000000fffe3ced â‡ˆ00000000fffe3ced
stampKind: i32
value: int[-115475|0xfffffffffffe3ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v632 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-115475|0xfffffffffffe3ced]] destination: B48 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 476]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: v652 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: v652  <|@  <|@
f <@~|@floating>@ <|@
tid i278 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 6]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i122 
y: i782 
=== Succesors ===
=== Usages ===
v316 v308 v310 v488 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i122 y: i782  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i783 
y: i278 
=== Succesors ===
=== Usages ===
v652 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i783 y: i278  <|@  <|@
f <@*|@fixed>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v308 
=== Succesors ===
trueSuccessor: v651 
falseSuccessor: v649 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v308 #trueSuccessor: v651 #falseSuccessor: v649  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = SUB (x: v44|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid i702 <|@
result int[-124435|0xfffffffffffe19ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -124435
stableDimension: 0
stamp: i32 [-124435] â‡Š00000000fffe19ed â‡ˆ00000000fffe19ed
stampKind: i32
value: int[-124435|0xfffffffffffe19ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v651 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-124435|0xfffffffffffe19ed]] destination: B50 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v656  <|@  <|@
f <@~|@floating>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i278 
y: i8 
=== Succesors ===
=== Usages ===
v656 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i278 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v310 
=== Succesors ===
trueSuccessor: v655 
falseSuccessor: v653 
=== Usages ===
=== Predecessor ===
v649 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v310 #trueSuccessor: v655 #falseSuccessor: v653  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v62|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v718 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v718  <|@  <|@
f <@~|@floating>@ <|@
tid i719 <|@
result int[-124691|0xfffffffffffe18ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -124691
stableDimension: 0
stamp: i32 [-124691] â‡Š00000000fffe18ed â‡ˆ00000000fffe18ed
stampKind: i32
value: int[-124691|0xfffffffffffe18ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v655 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-124691|0xfffffffffffe18ed]] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i793 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i793  <|@  <|@
f <@~|@floating>@ <|@
tid v815 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i793 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i793 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v815 
=== Succesors ===
next: v660 
=== Usages ===
v316 
=== Predecessor ===
v653 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v815 #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid v316 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i278 
y: i793 
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i278 y: i793  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v316 
=== Succesors ===
trueSuccessor: v659 
falseSuccessor: v657 
=== Usages ===
=== Predecessor ===
i793 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v316 #trueSuccessor: v659 #falseSuccessor: v657  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v720 
=== Usages ===
=== Predecessor ===
v660 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v720  <|@  <|@
f <@~|@floating>@ <|@
tid i721 <|@
result int[-125715|0xfffffffffffe14ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -125715
stableDimension: 0
stamp: i32 [-125715] â‡Š00000000fffe14ed â‡ˆ00000000fffe14ed
stampKind: i32
value: int[-125715|0xfffffffffffe14ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v659 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-125715|0xfffffffffffe14ed]] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v664 
=== Usages ===
=== Predecessor ===
v660 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v664  <|@  <|@
f <@~|@floating>@ <|@
tid i285 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$67/738647085@326f9d0b
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 17]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: i32
=== Inputs ===
x: i123 
y: i780 
=== Succesors ===
=== Usages ===
v341 v333 v335 v494 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i123 y: i780  <|@  <|@
f <@~|@floating>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i781 
y: i285 
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i781 y: i285  <|@  <|@
f <@*|@fixed>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v333 
=== Succesors ===
trueSuccessor: v663 
falseSuccessor: v661 
=== Usages ===
=== Predecessor ===
v657 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v333 #trueSuccessor: v663 #falseSuccessor: v661  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SUB (x: v45|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v722 
=== Usages ===
=== Predecessor ===
v664 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v722  <|@  <|@
f <@~|@floating>@ <|@
tid i723 <|@
result int[-125971|0xfffffffffffe13ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -125971
stableDimension: 0
stamp: i32 [-125971] â‡Š00000000fffe13ed â‡ˆ00000000fffe13ed
stampKind: i32
value: int[-125971|0xfffffffffffe13ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v663 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-125971|0xfffffffffffe13ed]] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v664 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v668  <|@  <|@
f <@~|@floating>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i285 
y: i8 
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i285 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v335 
=== Succesors ===
trueSuccessor: v667 
falseSuccessor: v665 
=== Usages ===
=== Predecessor ===
v661 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v335 #trueSuccessor: v667 #falseSuccessor: v665  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v724 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v724  <|@  <|@
f <@~|@floating>@ <|@
tid i725 <|@
result int[-126227|0xfffffffffffe12ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -126227
stableDimension: 0
stamp: i32 [-126227] â‡Š00000000fffe12ed â‡ˆ00000000fffe12ed
stampKind: i32
value: int[-126227|0xfffffffffffe12ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v667 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-126227|0xfffffffffffe12ed]] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B62" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: i794 
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i794  <|@  <|@
f <@~|@floating>@ <|@
tid v816 <|@
result [v2|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i794 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v816 
=== Succesors ===
next: v672 
=== Usages ===
v341 
=== Predecessor ===
v665 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v816 #next: v672  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i285 
y: i794 
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i285 y: i794  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v341 
=== Succesors ===
trueSuccessor: v671 
falseSuccessor: v669 
=== Usages ===
=== Predecessor ===
i794 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v341 #trueSuccessor: v671 #falseSuccessor: v669  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|DWORD, y: [v2|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v726  <|@  <|@
f <@~|@floating>@ <|@
tid i727 <|@
result int[-127251|0xfffffffffffe0eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -127251
stableDimension: 0
stamp: i32 [-127251] â‡Š00000000fffe0eed â‡ˆ00000000fffe0eed
stampKind: i32
value: int[-127251|0xfffffffffffe0eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v671 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-127251|0xfffffffffffe0eed]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B50" "B36" "B39" "B48" "B42" "B47" "B46" "B52" "B54" "B56" "B58" "B60" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i703 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-127251 - -112923] â‡Š00000000fffe00e5 â‡ˆ00000000fffe7fed
valueDescription: i32
=== Inputs ===
merge: v700 
values: i702 i707 i709 i711 i713 i715 i717 i719 i721 i723 i725 i727 
=== Succesors ===
=== Usages ===
v705 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v700 values: i702 i707 i709 i711 i713 i715 i717 i719 i721 i723 i725 i727  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v701 v706 v708 v710 v712 v714 v716 v718 v720 v722 v724 v726 
=== Succesors ===
next: v705 
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v701 v706 v708 v710 v712 v714 v716 v718 v720 v722 v724 v726 #next: v705  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: ?200 
values: a1 a2 a3 a352 i122 i59 a786 i123 i77 - - - 
=== Succesors ===
=== Usages ===
v705 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?200 values: a1 a2 a3 a352 i122 i59 a786 i123 i77 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?124 
actionAndReason: i703 
speculation: a681 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?124 actionAndReason: i703 speculation: a681  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v22|QWORD[.] v44|DWORD v15|DWORD v26|DWORD[.] v45|DWORD v12|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
>@ <|@ instruction DEOPT info [bci:109, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v801 
value: i278 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v801 value: i278 stateAfter: - lastLocationAccess: - #next: v494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v804 
value: i285 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v804 value: i285 stateAfter: - lastLocationAccess: - #next: v347  <|@  <|@
f <@~|@floating>@ <|@
tid a194 <|@
result v65|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:637) [bci: 485]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
rawvalue: CoderResult@872244084
stableDimension: 0
stamp: a!# Ljava/nio/charset/CoderResult;
stampKind: a -
value: Object[CoderResult@872244084]
=== Inputs ===
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a194 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a194 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + 24], y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@872244084] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v614 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v698  <|@  <|@
f <@~|@floating>@ <|@
tid i699 <|@
result int[-93971|0xfffffffffffe90ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -93971
stableDimension: 0
stamp: i32 [-93971] â‡Š00000000fffe90ed â‡ˆ00000000fffe90ed
stampKind: i32
value: int[-93971|0xfffffffffffe90ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
v613 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-93971|0xfffffffffffe90ed], Object[null]] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:970) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v696  <|@  <|@
f <@~|@floating>@ <|@
tid i697 <|@
result int[-91667|0xfffffffffffe99ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -91667
stableDimension: 0
stamp: i32 [-91667] â‡Š00000000fffe99ed â‡ˆ00000000fffe99ed
stampKind: i32
value: int[-91667|0xfffffffffffe99ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
v609 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91667|0xfffffffffffe99ed], Object[null]] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" "B64" "B63" "B4" "B11" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i682 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-106267 - -89099] â‡Š00000000fffe00e5 â‡ˆ00000000fffefffd
valueDescription: i32
=== Inputs ===
merge: v678 
values: i692 i695 i697 i699 i692 i695 
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v678 values: i692 i695 i697 i699 i692 i695  <|@  <|@
f <@~|@floating>@ <|@
tid a683 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v678 
values: a693 a693 a681 a681 a693 a693 
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v678 values: a693 a693 a681 a681 a693 a693  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v691 v694 v696 v698 v817 v818 
=== Succesors ===
next: v684 
=== Usages ===
i682 a683 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v691 v694 v696 v698 v817 v818 #next: v684  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i682 
speculation: a683 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v678 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i682 speculation: a683  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|DWORD, v67|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v67|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4cfd8505 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
>@ <|@ instruction v3|DWORD[.] = MOV [v1|QWORD[.] + 44] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV [v2|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v2|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = ADD (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SUB (x: v12|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v15|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = CMOVE (falseValue: v17|DWORD, ~trueValue: v14|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = DEC v19|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v13|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b677a0c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B3" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[.] = MOV [v2|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v26|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v31|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVZXB [v2|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v32|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD, v13|DWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4628153659663266439
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVSX [v22|QWORD[.] + v33|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v35|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998258454311219 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4628152360393209574
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v34|DWORD + v26|DWORD[.] * 8 + 16], y: v35|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = INC v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|DWORD, v36|DWORD] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B18" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4628433835369920230
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9638044768577462 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607140842158197713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B29" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD, v34|DWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B35" "B45" 
    successors "B32" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607831838015576006
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD, v45|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.12604763777083372 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594364227110853881
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVSX [v22|QWORD[.] + v44|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOV [v26|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = MOVZX v46|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = INC v45|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v48|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9463142341159088 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594085264768012946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998265093684942 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594084411672163280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594084411672163280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v45|DWORD + v26|DWORD[.] * 8 + 16], y: v48|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD, v50|DWORD] destination: B35 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v48|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v48|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SUB (x: v12|DWORD, ~y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v52|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = LEA [v45|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = SHR v48|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = OR v54|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v45|DWORD + v26|DWORD[.] * 8 + 16], y: v55|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = SHR v48|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = AND v56|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = OR v57|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v50|DWORD + v26|DWORD[.] * 8 + 16], y: v58|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = AND v48|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = OR v59|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v53|DWORD + v26|DWORD[.] * 8 + 16], y: v60|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = LEA [v45|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD, v61|DWORD] destination: B45 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = SUB (x: v44|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v62|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SUB (x: v45|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|DWORD, y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B62" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|DWORD, y: [v2|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + 24], y: v63|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@872244084] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v65|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = ADD (x: v24|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOV [v26|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = ADD (x: v28|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v33|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SUB (x: v15|DWORD, ~y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVSXD v39|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = DEC v40|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = ADD (x: v38|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571971832306603830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4537609786335184560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 17] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-122395|0xfffffffffffe21e5]] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B50" "B36" "B39" "B48" "B42" "B47" "B46" "B52" "B54" "B56" "B58" "B60" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v22|QWORD[.] v44|DWORD v15|DWORD v26|DWORD[.] v45|DWORD v12|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
>@ <|@ instruction DEOPT info [bci:109, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-124691|0xfffffffffffe18ed]] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1968456509] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-106267|0xfffffffffffe60e5], v69|QWORD[.]] destination: B11 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" "B64" "B63" "B4" "B11" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|DWORD, v67|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v67|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@731952465] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -109595 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v43|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v22|QWORD[.] v33|DWORD v15|DWORD v26|DWORD[.] v34|DWORD v12|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
>@ <|@ instruction DEOPT info [bci:109, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1968456509] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-106267|0xfffffffffffe60e5], v68|QWORD[.]] destination: B12 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1968456509] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-99867|0xfffffffffffe79e5], v70|QWORD[.]] destination: B5 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-127251|0xfffffffffffe0eed]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-125971|0xfffffffffffe13ed]] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-124435|0xfffffffffffe19ed]] destination: B50 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-125715|0xfffffffffffe14ed]] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1968456509] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-99867|0xfffffffffffe79e5], v71|QWORD[.]] destination: B4 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-115731|0xfffffffffffe3bed]] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-115219|0xfffffffffffe3ded]] destination: B39 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-126227|0xfffffffffffe12ed]] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-117275|0xfffffffffffe35e5]] destination: B47 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-93971|0xfffffffffffe90ed], Object[null]] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-115475|0xfffffffffffe3ced]] destination: B48 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-91667|0xfffffffffffe99ed], Object[null]] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-112923|0xfffffffffffe46e5]] destination: B36 -> B61 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #30         // java.nio.CharBuffer.hasArray:()boolean
     4: ifeq          21
     7: aload_2       
     8: invokevirtual #31         // java.nio.ByteBuffer.hasArray:()boolean
    11: ifeq          21
    14: aload_0       
    15: aload_1       
    16: aload_2       
    17: invokespecial #32         // encodeArrayLoop:(java.nio.CharBuffer, java.nio.ByteBuffer)java.nio.charset.CoderResult
    20: areturn       
    21: aload_0       
    22: aload_1       
    23: aload_2       
    24: invokespecial #33         // encodeBufferLoop:(java.nio.CharBuffer, java.nio.ByteBuffer)java.nio.charset.CoderResult
    27: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4cfd8505 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD state [bci:0] <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV [rcx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   16  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ instruction rbx|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   20  <|@ instruction rdi|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   22  <|@ instruction rbp|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction r13|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r14|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r11|DWORD = ADD (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction rdi|DWORD = ADD (x: rdi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction r10|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr   48  <|@ instruction rsi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction r10|DWORD = ADD (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b677a0c encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B3" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction rbx|DWORD[.] = MOV [rcx|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rbx:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr  118  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction stack:48|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  186  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rsi|DWORD = MOVZXB [rcx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  194  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction r9|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction r8|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4628153659663266439
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = MOVSX [rax|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  216  <|@ instruction CMP rsi|DWORD y: 128 size: WORD <|@ <|@
      nr  218  <|@ instruction BRANCH trueDestinationProbability: 0.9998258454311219 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4628152360393209574
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction MOVB (x: [r9|DWORD + rbx|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  224  <|@ instruction r9|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B18" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4628433835369920230
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  208  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction BRANCH trueDestinationProbability: 0.9638044768577462 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607140842158197713
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B29" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction r10|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction r8|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B35" "B45" 
    successors "B32" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607831838015576006
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  308  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 0.12604763777083372 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594364227110853881
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rsi|DWORD = MOVSX [rax|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  316  <|@ instruction r9|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  318  <|@ instruction rsi|DWORD = MOVZX rsi|DWORD size: DWORD <|@ <|@
      nr  320  <|@ instruction rdi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction rbp|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction CMP rsi|DWORD y: 128 size: DWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.9463142341159088 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594085264768012946
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.9998265093684942 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594084411672163280
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594084411672163280
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction MOVB (x: [r8|DWORD + rbx|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  344  <|@ instruction r8|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B35 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction CMP rsi|DWORD y: 2048 size: DWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction CMP rsi|DWORD y: 55296 size: DWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction r13|DWORD = LEA [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  408  <|@ instruction CMP (x: r9|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction r10|DWORD = SHR rsi|DWORD y: 12 size: DWORD <|@ <|@
      nr  416  <|@ instruction r10|DWORD = OR r10|DWORD y: 224 size: DWORD <|@ <|@
      nr  418  <|@ instruction MOVB (x: [r8|DWORD + rbx|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr  420  <|@ instruction r10|DWORD = SHR rsi|DWORD y: 6 size: DWORD <|@ <|@
      nr  422  <|@ instruction r10|DWORD = AND r10|DWORD y: 63 size: DWORD <|@ <|@
      nr  424  <|@ instruction r10|DWORD = OR r10|DWORD y: 128 size: DWORD <|@ <|@
      nr  426  <|@ instruction MOVB (x: [rbp|DWORD + rbx|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr  428  <|@ instruction rsi|DWORD = AND rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|DWORD = OR rsi|DWORD y: 128 size: DWORD <|@ <|@
      nr  432  <|@ instruction MOVB (x: [r13|DWORD + rbx|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  434  <|@ instruction r8|DWORD = LEA [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  436  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B45 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:52|DWORD) size: DWORD <|@ <|@
      nr  462  <|@ instruction CMP (x: rsi|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  476  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction CMP (x: rsi|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  488  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction r9|DWORD = SUB (x: r8|DWORD, ~y: stack:40|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction CMP (x: r9|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B62" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ instruction CMP (x: r9|DWORD, y: [rcx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  526  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  546  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: r9|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@872244084] <|@ <|@
      nr  550  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rbx|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: r13|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction CMP (x: rbp|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction stack:48|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction r9|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  130  <|@ instruction r14|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  132  <|@ instruction r14|QWORD = ADD (x: r14|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction rsi|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction CMP (x: rsi|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  144  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction rsi|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  248  <|@ instruction r10|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  252  <|@ instruction r10|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction CMP (x: r13|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction CMP (x: rbp|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4571971832306603830
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4537609786335184560
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 17] <|@ <|@
      nr  364  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction r9|DWORD = MOVE input: int[-122395|0xfffffffffffe21e5] <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B50" "B36" "B39" "B48" "B42" "B47" "B46" "B52" "B54" "B56" "B58" "B60" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  540  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rbx:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rax|QWORD[.] r10|DWORD r11|DWORD rbx|DWORD[.] r8|DWORD r14|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
>@ <|@ instruction DEOPT info [bci:109, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction r9|DWORD = MOVE input: int[-124691|0xfffffffffffe18ed] <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1968456509] <|@ <|@
      nr  154  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: int[-106267|0xfffffffffffe60e5] <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B11 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" "B64" "B63" "B4" "B11" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  574  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  576  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  578  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@731952465] <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 668] y: -109595 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  290  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rbx:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rax|QWORD[.] r8|DWORD r11|DWORD rbx|DWORD[.] r9|DWORD r14|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
>@ <|@ instruction DEOPT info [bci:109, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1968456509] <|@ <|@
      nr  166  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction r10|DWORD = MOVE input: int[-106267|0xfffffffffffe60e5] <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B12 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1968456509] <|@ <|@
      nr   98  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD = MOVE input: int[-99867|0xfffffffffffe79e5] <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B5 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction r9|DWORD = MOVE input: int[-127251|0xfffffffffffe0eed] <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction r9|DWORD = MOVE input: int[-125971|0xfffffffffffe13ed] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction r9|DWORD = MOVE input: int[-124435|0xfffffffffffe19ed] <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B50 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction r9|DWORD = MOVE input: int[-125715|0xfffffffffffe14ed] <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1968456509] <|@ <|@
      nr   86  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction r10|DWORD = MOVE input: int[-99867|0xfffffffffffe79e5] <|@ <|@
      nr   90  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B4 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction r9|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed] <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction r9|DWORD = MOVE input: int[-115219|0xfffffffffffe3ded] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B39 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction r9|DWORD = MOVE input: int[-126227|0xfffffffffffe12ed] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction r9|DWORD = MOVE input: int[-117275|0xfffffffffffe35e5] <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B47 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  554  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  556  <|@ instruction r10|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed] <|@ <|@
      nr  558  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction r9|DWORD = MOVE input: int[-115475|0xfffffffffffe3ced] <|@ <|@
      nr  456  <|@ instruction JUMP ~[] destination: B48 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  564  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  566  <|@ instruction r10|DWORD = MOVE input: int[-91667|0xfffffffffffe99ed] <|@ <|@
      nr  568  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction r9|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B36 -> B61 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #30         // java.nio.CharBuffer.hasArray:()boolean
     4: ifeq          21
     7: aload_2       
     8: invokevirtual #31         // java.nio.ByteBuffer.hasArray:()boolean
    11: ifeq          21
    14: aload_0       
    15: aload_1       
    16: aload_2       
    17: invokespecial #32         // encodeArrayLoop:(java.nio.CharBuffer, java.nio.ByteBuffer)java.nio.charset.CoderResult
    20: areturn       
    21: aload_0       
    22: aload_1       
    23: aload_2       
    24: invokespecial #33         // encodeBufferLoop:(java.nio.CharBuffer, java.nio.ByteBuffer)java.nio.charset.CoderResult
    27: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4cfd8505 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD state [bci:0] <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV [rcx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   16  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ instruction rbx|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   20  <|@ instruction rdi|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   22  <|@ instruction rbp|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction r13|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r14|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r11|DWORD = ADD (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction rdi|DWORD = ADD (x: rdi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction r10|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr   48  <|@ instruction rsi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction r10|DWORD = ADD (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b677a0c encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction rbx|DWORD[.] = MOV [rcx|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rbx:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr  118  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction stack:48|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B15" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  186  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rsi|DWORD = MOVZXB [rcx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  194  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction r9|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction r8|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4628153659663266439
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = MOVSX [rax|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  216  <|@ instruction CMP rsi|DWORD y: 128 size: WORD <|@ <|@
      nr  218  <|@ instruction BRANCH trueDestinationProbability: 0.9998258454311219 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4628152360393209574
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction MOVB (x: [r9|DWORD + rbx|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  224  <|@ instruction r9|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B18" "B22" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4628433835369920230
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  208  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction BRANCH trueDestinationProbability: 0.9638044768577462 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B23" "B30" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B31" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction r10|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction r8|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B35" "B45" 
    successors "B32" "B49" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607831838015576006
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  308  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 0.12604763777083372 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B38" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594364227110853881
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rsi|DWORD = MOVSX [rax|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  316  <|@ instruction r9|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  318  <|@ instruction rsi|DWORD = MOVZX rsi|DWORD size: DWORD <|@ <|@
      nr  320  <|@ instruction rdi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  322  <|@ instruction rbp|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction CMP rsi|DWORD y: 128 size: DWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.9463142341159088 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594085264768012946
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.9998265093684942 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4594084411672163280
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4594084411672163280
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction MOVB (x: [r8|DWORD + rbx|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  344  <|@ instruction r8|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B35 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction CMP rsi|DWORD y: 2048 size: DWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B48" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction CMP rsi|DWORD y: 55296 size: DWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B47" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction r13|DWORD = LEA [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  408  <|@ instruction CMP (x: r9|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4575576817124592859
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction r10|DWORD = SHR rsi|DWORD y: 12 size: DWORD <|@ <|@
      nr  416  <|@ instruction r10|DWORD = OR r10|DWORD y: 224 size: DWORD <|@ <|@
      nr  418  <|@ instruction MOVB (x: [r8|DWORD + rbx|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr  420  <|@ instruction r10|DWORD = SHR rsi|DWORD y: 6 size: DWORD <|@ <|@
      nr  422  <|@ instruction r10|DWORD = AND r10|DWORD y: 63 size: DWORD <|@ <|@
      nr  424  <|@ instruction r10|DWORD = OR r10|DWORD y: 128 size: DWORD <|@ <|@
      nr  426  <|@ instruction MOVB (x: [rbp|DWORD + rbx|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr  428  <|@ instruction rsi|DWORD = AND rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  430  <|@ instruction rsi|DWORD = OR rsi|DWORD y: 128 size: DWORD <|@ <|@
      nr  432  <|@ instruction MOVB (x: [r13|DWORD + rbx|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE <|@ <|@
      nr  434  <|@ instruction r8|DWORD = LEA [r8|DWORD + 3] size: DWORD <|@ <|@
      nr  436  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B45 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:52|DWORD) size: DWORD <|@ <|@
      nr  462  <|@ instruction CMP (x: rsi|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  476  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction CMP (x: rsi|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  488  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction r9|DWORD = SUB (x: r8|DWORD, ~y: stack:40|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction CMP (x: r9|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  514  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B62" 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ instruction CMP (x: r9|DWORD, y: [rcx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  526  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 4607182205526054990
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  546  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: r9|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@872244084] <|@ <|@
      nr  550  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rbx|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: r13|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction CMP (x: rbp|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B7 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction r9|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  130  <|@ instruction r14|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  132  <|@ instruction r14|QWORD = ADD (x: r14|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction rsi|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction CMP (x: rsi|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  144  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B14 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B28" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction rsi|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  248  <|@ instruction r10|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  252  <|@ instruction r10|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction CMP (x: r13|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" "B28" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction CMP (x: rbp|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B30 falseDestination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4537609786335184560
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143]
locals: - - - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 17] <|@ <|@
      nr  364  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction r9|DWORD = MOVE input: int[-122395|0xfffffffffffe21e5] <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B50" "B36" "B39" "B48" "B42" "B47" "B46" "B52" "B54" "B56" "B58" "B60" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  536  <|@ instruction MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  540  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rbx:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rax|QWORD[.] r10|DWORD r11|DWORD rbx|DWORD[.] r8|DWORD r14|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
>@ <|@ instruction DEOPT info [bci:109, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction r9|DWORD = MOVE input: int[-124691|0xfffffffffffe18ed] <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B52 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1968456509] <|@ <|@
      nr  154  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: int[-106267|0xfffffffffffe60e5] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B11 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" "B64" "B63" "B4" "B11" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  576  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  578  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B23" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  284  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@731952465] <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 668] y: -109595 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  290  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rbx:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rax|QWORD[.] r8|DWORD r11|DWORD rbx|DWORD[.] r9|DWORD r14|DWORD - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17]
locals: - - - 
>@ <|@ instruction DEOPT info [bci:109, 17] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1968456509] <|@ <|@
      nr  166  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction r10|DWORD = MOVE input: int[-106267|0xfffffffffffe60e5] <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B12 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1968456509] <|@ <|@
      nr   98  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD = MOVE input: int[-99867|0xfffffffffffe79e5] <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B5 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction r9|DWORD = MOVE input: int[-127251|0xfffffffffffe0eed] <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction r9|DWORD = MOVE input: int[-125971|0xfffffffffffe13ed] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B56 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction r9|DWORD = MOVE input: int[-124435|0xfffffffffffe19ed] <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B50 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction r9|DWORD = MOVE input: int[-125715|0xfffffffffffe14ed] <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B54 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1968456509] <|@ <|@
      nr   86  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction r10|DWORD = MOVE input: int[-99867|0xfffffffffffe79e5] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B4 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction r9|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed] <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B42 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction r9|DWORD = MOVE input: int[-115219|0xfffffffffffe3ded] <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B39 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction r9|DWORD = MOVE input: int[-126227|0xfffffffffffe12ed] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B58 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction r9|DWORD = MOVE input: int[-117275|0xfffffffffffe35e5] <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B47 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  554  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  556  <|@ instruction r10|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed] <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction r9|DWORD = MOVE input: int[-115475|0xfffffffffffe3ced] <|@ <|@
      nr  456  <|@ instruction JUMP ~[] destination: B48 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B65" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  564  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  566  <|@ instruction r10|DWORD = MOVE input: int[-91667|0xfffffffffffe99ed] <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction r9|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5] <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B36 -> B61 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #30         // java.nio.CharBuffer.hasArray:()boolean
     4: ifeq          21
     7: aload_2       
     8: invokevirtual #31         // java.nio.ByteBuffer.hasArray:()boolean
    11: ifeq          21
    14: aload_0       
    15: aload_1       
    16: aload_2       
    17: invokespecial #32         // encodeArrayLoop:(java.nio.CharBuffer, java.nio.ByteBuffer)java.nio.charset.CoderResult
    20: areturn       
    21: aload_0       
    22: aload_1       
    23: aload_2       
    24: invokespecial #33         // encodeBufferLoop:(java.nio.CharBuffer, java.nio.ByteBuffer)java.nio.charset.CoderResult
    27: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24308b422c418504c4448b4118448b5124448b591c448b4a248b5a1c8b7a188b2cc50c000000448bed458bf24503f34503c24889742420418bf6412bf044895c241c458bd94403db4103f94489542418458bd3442bd7443bd6440f4fd64963f248ffce4503d048c1e003453bd00f8fcc010000895c24148b592c418504dc453bd0448974241044894c240c0f8fce0100000fb6722885f60f85640300000fb6712885f60f8538030000458bc8448bc7e92a0000000f1f80000000000f1f8000000000420fbf7440106681fe80000f8310000000418874d91041ffc141ffc0453bd17fdf453bd80f8f9b010000458bd0448b742410458bc16666660f1f840000000000453bda0f8ec8000000420fbf745010448b0cdd0c0000000fb7f6418bfaffc7418be8ffc581fe800000000f831f000000453bf00f8e75010000453bc80f86d2020000418874d810448bc5448bd7ebb181fe000800000f826302000081fe00d800000f838d020000458bee452be84183fd030f8c3c020000453bc80f8654020000458d6802453bcd0f8643010000448bd641c1ea0c4181cae0000000458854d810448bd641c1ea064183e23f4181ca80000000448854dd1083e63f81ce80000000418874dd10458d4003448bd7e92fffffff418bf22b74240c3b7424140f8fa301000085f60f8c000100003b720c0f8c9d010000458bc8442b4c2418443b4c241c0f8f740100004585c90f8cba010000443b490c0f8c560100008972184489491848b8addeaddeaddeadde488b6c24304883c438850500000000c5f877c3895c24144863df4803de4c3beb0f860a0100003bef0f871dfeffffe93e010000448b0cdd0c0000004d63f04c03f6418bf1493bf60f86ce000000453bc80f870ffeffffe96d0000004963f0458bd3452bd04d63d249ffca4903f24c3bee0f867e000000413be80f8741feffffe970000000488bf2418bd2666690e80000000090488b6c24304883c438850500000000c5f877c341b9e521feff45898f9c0200004d89a7a8020000e8000000009041b9ed18feffebe449baaddeaddeaddeadde4d8bda41bae560feff488b7424204589979c0200004d899fa8020000e80000000090448b74241049baaddeaddeaddeadde41c7879c020000e553feff4d8997a8020000e8000000009049baaddeaddeaddeadde4d8bda41bae560feffebab49baaddeaddeaddeadde4d8bda41bae579feffeb9641b9ed0efeffe95cffffff41b9ed13feffe951ffffff41b9ed19feffe946ffffff41b9ed14feffe93bffffff49baaddeaddeaddeadde4d8bda41bae579feffe952ffffff41b9ed3bfeffe918ffffff41b9ed3dfeffe90dffffff41b9ed12feffe902ffffff41b9e535feffe9f7feffff49bb000000000000000041baed90feffe911ffffff41b9ed3cfeffe9d7feffff49bb000000000000000041baed99feffe9f1feffff41b9e546feffe9b7feffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4cfd8505 slotKind: QWORD  <||@
  Comment 48 6 rax|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD state [bci:0]  <||@
  Comment 48 [rcx:0, rdx:0, rsi:0]at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 51 8 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0]  <||@
  Comment 51 [rax:0, rcx:0, rdx:0, rsi:0]at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 55 10 r8|DWORD = MOV [rcx|QWORD[.] + 24] size: DWORD state [bci:0]  <||@
  Comment 55 [rax:0, rcx:0, rdx:0, rsi:0]at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 55 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 12 r10|DWORD = MOV [rcx|QWORD[.] + 36] size: DWORD  <||@
  Comment 63 14 r11|DWORD = MOV [rcx|QWORD[.] + 28] size: DWORD  <||@
  Comment 67 16 r9|DWORD = MOV [rdx|QWORD[.] + 36] size: DWORD  <||@
  Comment 71 18 rbx|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 74 20 rdi|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 77 22 rbp|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 84 24 r13|QWORD = MOV rbp|DWORD size: DWORD  <||@
  Comment 87 26 r14|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 93 28 r8|DWORD = ADD (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 96 30 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 101 32 rsi|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 107 34 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 112 36 r11|DWORD = ADD (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 118 38 rdi|DWORD = ADD (x: rdi|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 121 40 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 126 42 r10|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 132 44 CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 135 46 r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rsi|DWORD) condition: >  <||@
  Comment 139 48 rsi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 142 50 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 145 52 r10|DWORD = ADD (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 148 54 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b677a0c encoding: base: 0 shift: 3  <||@
  Comment 152 56 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 155 58 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B6  <||@
  Comment 161 block B6 null  <||@
  Comment 161 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 161 108 stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 165 110 JUMP ~[] destination: B6 -> B7  <||@
  Comment 165 block B7 null  <||@
  Comment 165 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 165 114 rbx|DWORD[.] = MOV [rcx|QWORD[.] + 44] size: DWORD  <||@
  Comment 168 116 NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:0]  <||@
  Comment 168 [rax:0, rcx:0, rdx:0, rbx:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2            
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 168 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 172 118 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 175 124 stack:48|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 180 126 stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 185 120 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B14  <||@
  Comment 191 block B14 null  <||@
  Comment 191 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 191 184 rsi|DWORD = MOVZXB [rdx|QWORD[.] + 40] size: DWORD  <||@
  Comment 195 186 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 197 188 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B64  <||@
  Comment 203 block B15 null  <||@
  Comment 203 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 203 192 rsi|DWORD = MOVZXB [rcx|QWORD[.] + 40] size: DWORD  <||@
  Comment 207 194 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 209 196 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B63  <||@
  Comment 215 block B16 null  <||@
  Comment 215 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 215 200 r9|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 218 202 r8|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 221 204 JUMP ~[] destination: B16 -> B17  <||@
  Comment 226 block B18 loop 0 depth 1 header:85|LoopBegin  <||@
  Comment 226 212 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 240 214 rsi|DWORD = MOVSX [rax|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD  <||@
  Comment 246 216 CMP rsi|DWORD y: 128 size: WORD  <||@
  Comment 251 218 BRANCH trueDestinationProbability: 0.9998258454311219 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B22  <||@
  Comment 257 block B19 loop 0 depth 1 header:85|LoopBegin  <||@
  Comment 257 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 257 222 MOVB (x: [r9|DWORD + rbx|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 262 224 r9|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 265 226 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 268 228 JUMP ~[] destination: B19 -> B17  <||@
  Comment 268 block B17 loop 0 depth 1 header:85|LoopBegin  <||@
  Comment 268 206 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 268 208 CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 271 210 BRANCH trueDestinationProbability: 0.9638044768577462 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B22  <||@
  Comment 273 block B22 null  <||@
  Comment 273 238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 273 240 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 276 242 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B30  <||@
  Comment 282 block B30 null  <||@
  Comment 282 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 282 298 r10|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 285 300 r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 290 302 r8|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 293 304 JUMP ~[] destination: B30 -> B31  <||@
  Comment 293 block B31 loop 1 depth 1 header:121|LoopBegin  <||@
  Comment 293 306 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 304 308 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 307 310 BRANCH trueDestinationProbability: 0.12604763777083372 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B49  <||@
  Comment 313 block B32 loop 1 depth 1 header:121|LoopBegin  <||@
  Comment 313 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 313 314 rsi|DWORD = MOVSX [rax|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 319 316 r9|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 327 318 rsi|DWORD = MOVZX rsi|DWORD size: DWORD  <||@
  Comment 330 320 rdi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 335 322 rbp|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 340 324 CMP rsi|DWORD y: 128 size: DWORD  <||@
  Comment 346 326 BRANCH trueDestinationProbability: 0.9463142341159088 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B38  <||@
  Comment 352 block B33 loop 1 depth 1 header:121|LoopBegin  <||@
  Comment 352 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 352 330 CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 355 332 BRANCH trueDestinationProbability: 0.9998265093684942 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B37  <||@
  Comment 361 block B34 loop 1 depth 1 header:121|LoopBegin  <||@
  Comment 361 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 361 336 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 364 338 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36  <||@
  Comment 370 block B35 loop 1 depth 1 header:121|LoopBegin  <||@
  Comment 370 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 370 342 MOVB (x: [r8|DWORD + rbx|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 375 344 r8|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 378 346 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 381 348 JUMP ~[] destination: B35 -> B31  <||@
  Comment 383 block B38 loop 1 depth 1 header:121|LoopBegin  <||@
  Comment 383 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 383 368 CMP rsi|DWORD y: 2048 size: DWORD  <||@
  Comment 389 370 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 395 block B40 loop 1 depth 1 header:121|LoopBegin  <||@
  Comment 395 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 395 380 CMP rsi|DWORD y: 55296 size: DWORD  <||@
  Comment 401 382 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B48  <||@
  Comment 407 block B41 loop 1 depth 1 header:121|LoopBegin  <||@
  Comment 407 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 407 386 r13|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 413 388 CMP r13|DWORD y: 3 size: DWORD  <||@
  Comment 417 390 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43  <||@
  Comment 423 block B43 loop 1 depth 1 header:121|LoopBegin  <||@
  Comment 423 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 423 400 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 426 402 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B47  <||@
  Comment 432 block B44 loop 1 depth 1 header:121|LoopBegin  <||@
  Comment 432 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 432 406 r13|DWORD = LEA [r8|DWORD + 2] size: DWORD  <||@
  Comment 436 408 CMP (x: r9|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 439 410 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 445 block B45 loop 1 depth 1 header:121|LoopBegin  <||@
  Comment 445 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 445 414 r10|DWORD = SHR rsi|DWORD y: 12 size: DWORD  <||@
  Comment 452 416 r10|DWORD = OR r10|DWORD y: 224 size: DWORD  <||@
  Comment 459 418 MOVB (x: [r8|DWORD + rbx|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 464 420 r10|DWORD = SHR rsi|DWORD y: 6 size: DWORD  <||@
  Comment 471 422 r10|DWORD = AND r10|DWORD y: 63 size: DWORD  <||@
  Comment 475 424 r10|DWORD = OR r10|DWORD y: 128 size: DWORD  <||@
  Comment 482 426 MOVB (x: [rbp|DWORD + rbx|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 487 428 rsi|DWORD = AND rsi|DWORD y: 63 size: DWORD  <||@
  Comment 490 430 rsi|DWORD = OR rsi|DWORD y: 128 size: DWORD  <||@
  Comment 496 432 MOVB (x: [r13|DWORD + rbx|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 501 434 r8|DWORD = LEA [r8|DWORD + 3] size: DWORD  <||@
  Comment 505 436 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 508 438 JUMP ~[] destination: B45 -> B31  <||@
  Comment 513 block B49 null  <||@
  Comment 513 458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 513 460 rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:52|DWORD) size: DWORD  <||@
  Comment 520 462 CMP (x: rsi|DWORD, y: stack:44|DWORD) size: DWORD  <||@
  Comment 524 464 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51  <||@
  Comment 530 block B51 null  <||@
  Comment 530 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 530 474 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 532 476 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53  <||@
  Comment 538 block B53 null  <||@
  Comment 538 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 538 486 CMP (x: rsi|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 541 488 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55  <||@
  Comment 547 block B55 null  <||@
  Comment 547 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 547 498 r9|DWORD = SUB (x: r8|DWORD, ~y: stack:40|DWORD) size: DWORD  <||@
  Comment 555 500 CMP (x: r9|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 560 502 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 566 block B57 null  <||@
  Comment 566 510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 566 512 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 569 514 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59  <||@
  Comment 575 block B59 null  <||@
  Comment 575 522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 575 524 CMP (x: r9|DWORD, y: [rcx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 579 526 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B62  <||@
  Comment 585 block B62 null  <||@
  Comment 585 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 585 544 MOV (x: [rdx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD  <||@
  Comment 588 546 MOV (x: [rcx|QWORD[.] + 24], y: r9|DWORD) size: DWORD  <||@
  Comment 592 548 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@872244084]  <||@
  Comment 592 {Object[CoderResult@872244084]}  <||@
  Comment 602 550 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 611 12  <||@
  Comment 621 block B1 null  <||@
  Comment 621 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 621 62 stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 625 64 rbx|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 628 66 rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 631 68 CMP (x: r13|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 634 70 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5  <||@
  Comment 640 block B2 null  <||@
  Comment 640 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 640 74 CMP (x: rbp|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 642 76 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B7 falseDestination: B2 -> B4  <||@
  Comment 653 block B8 null  <||@
  Comment 653 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 653 128 r9|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 661 130 r14|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 664 132 r14|QWORD = ADD (x: r14|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 667 134 rsi|QWORD = MOV r9|DWORD size: DWORD  <||@
  Comment 670 136 CMP (x: rsi|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 673 138 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12  <||@
  Comment 679 block B9 null  <||@
  Comment 679 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 679 142 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 682 144 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B14 falseDestination: B9 -> B11  <||@
  Comment 693 block B23 null  <||@
  Comment 693 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 693 246 rsi|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 696 248 r10|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 702 250 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 705 252 r10|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 708 254 rsi|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 711 256 CMP (x: r13|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 714 258 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B28  <||@
  Comment 720 block B24 null  <||@
  Comment 720 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 720 262 CMP (x: rbp|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 723 264 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B30 falseDestination: B24 -> B28  <||@
  Comment 734 block B37 null  <||@
  Comment 734 356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 734 358 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 737 360 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 740 362 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 17]  <||@
  Comment 740 8  <||@
  Comment 743 {HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>}  <||@
  Comment 748 []at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 749 364 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 758 12  <||@
  Comment 768 block B46 null  <||@
  Comment 768 440 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 768 442 r9|DWORD = MOVE input: int[-122395|0xfffffffffffe21e5]  <||@
  Comment 774 444 JUMP ~[] destination: B46 -> B61  <||@
  Comment 774 block B61 null  <||@
  Comment 774 534 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 774 536 MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD  <||@
  Comment 781 538 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 788 540 DEOPT info [bci:109, 17]  <||@
  Comment 788 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 793 [rax:0, rcx:0, rdx:0, rbx:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4          |5          |6             |7         |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |rax|QWORD[.]  |r10|DWORD  |r11|DWORD  |rbx|DWORD[.]  |r8|DWORD  |r14|DWORD  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 794 block B52 null  <||@
  Comment 794 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 794 480 r9|DWORD = MOVE input: int[-124691|0xfffffffffffe18ed]  <||@
  Comment 800 482 JUMP ~[] destination: B52 -> B61  <||@
  Comment 802 block B11 null  <||@
  Comment 802 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 802 152 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1968456509]  <||@
  Comment 802 {Object[d.a@1968456509]}  <||@
  Comment 812 154 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 815 156 r10|DWORD = MOVE input: int[-106267|0xfffffffffffe60e5]  <||@
  Comment 821 160 JUMP ~[] destination: B11 -> B65  <||@
  Comment 821 block B65 null  <||@
  Comment 821 572 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 821 102 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 826 574 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 833 576 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 840 578 DEOPT info [bci:0]  <||@
  Comment 840 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 845 [rcx:0, rdx:0, rsi:0]at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 846 block B28 null  <||@
  Comment 846 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 846 278 r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 851 284 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@731952465]  <||@
  Comment 851 {Object[d.a@731952465]}  <||@
  Comment 861 286 MOV [r15|QWORD + 668] y: -109595 size: DWORD  <||@
  Comment 872 288 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 879 290 DEOPT info [bci:109, 17]  <||@
  Comment 879 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 884 [rax:0, rcx:0, rdx:0, rbx:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5          |6             |7         |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |rax|QWORD[.]  |r8|DWORD  |r11|DWORD  |rbx|DWORD[.]  |r9|DWORD  |r14|DWORD  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 885 block B12 null  <||@
  Comment 885 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 885 164 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1968456509]  <||@
  Comment 885 {Object[d.a@1968456509]}  <||@
  Comment 895 166 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 898 168 r10|DWORD = MOVE input: int[-106267|0xfffffffffffe60e5]  <||@
  Comment 904 172 JUMP ~[] destination: B12 -> B65  <||@
  Comment 906 block B5 null  <||@
  Comment 906 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 906 96 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1968456509]  <||@
  Comment 906 {Object[d.a@1968456509]}  <||@
  Comment 916 98 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 919 100 r10|DWORD = MOVE input: int[-99867|0xfffffffffffe79e5]  <||@
  Comment 925 104 JUMP ~[] destination: B5 -> B65  <||@
  Comment 927 block B60 null  <||@
  Comment 927 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 927 530 r9|DWORD = MOVE input: int[-127251|0xfffffffffffe0eed]  <||@
  Comment 933 532 JUMP ~[] destination: B60 -> B61  <||@
  Comment 938 block B56 null  <||@
  Comment 938 504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 938 506 r9|DWORD = MOVE input: int[-125971|0xfffffffffffe13ed]  <||@
  Comment 944 508 JUMP ~[] destination: B56 -> B61  <||@
  Comment 949 block B50 null  <||@
  Comment 949 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 949 468 r9|DWORD = MOVE input: int[-124435|0xfffffffffffe19ed]  <||@
  Comment 955 470 JUMP ~[] destination: B50 -> B61  <||@
  Comment 960 block B54 null  <||@
  Comment 960 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 960 492 r9|DWORD = MOVE input: int[-125715|0xfffffffffffe14ed]  <||@
  Comment 966 494 JUMP ~[] destination: B54 -> B61  <||@
  Comment 971 block B4 null  <||@
  Comment 971 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 971 84 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1968456509]  <||@
  Comment 971 {Object[d.a@1968456509]}  <||@
  Comment 981 86 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 984 88 r10|DWORD = MOVE input: int[-99867|0xfffffffffffe79e5]  <||@
  Comment 990 92 JUMP ~[] destination: B4 -> B65  <||@
  Comment 995 block B42 null  <||@
  Comment 995 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 995 394 r9|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed]  <||@
  Comment 1001 396 JUMP ~[] destination: B42 -> B61  <||@
  Comment 1006 block B39 null  <||@
  Comment 1006 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1006 374 r9|DWORD = MOVE input: int[-115219|0xfffffffffffe3ded]  <||@
  Comment 1012 376 JUMP ~[] destination: B39 -> B61  <||@
  Comment 1017 block B58 null  <||@
  Comment 1017 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1017 518 r9|DWORD = MOVE input: int[-126227|0xfffffffffffe12ed]  <||@
  Comment 1023 520 JUMP ~[] destination: B58 -> B61  <||@
  Comment 1028 block B47 null  <||@
  Comment 1028 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1028 448 r9|DWORD = MOVE input: int[-117275|0xfffffffffffe35e5]  <||@
  Comment 1034 450 JUMP ~[] destination: B47 -> B61  <||@
  Comment 1039 block B63 null  <||@
  Comment 1039 552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1039 554 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1049 556 r10|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed]  <||@
  Comment 1055 560 JUMP ~[] destination: B63 -> B65  <||@
  Comment 1060 block B48 null  <||@
  Comment 1060 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1060 454 r9|DWORD = MOVE input: int[-115475|0xfffffffffffe3ced]  <||@
  Comment 1066 456 JUMP ~[] destination: B48 -> B61  <||@
  Comment 1071 block B64 null  <||@
  Comment 1071 562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1071 564 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1081 566 r10|DWORD = MOVE input: int[-91667|0xfffffffffffe99ed]  <||@
  Comment 1087 570 JUMP ~[] destination: B64 -> B65  <||@
  Comment 1092 block B36 null  <||@
  Comment 1092 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1092 352 r9|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5]  <||@
  Comment 1098 354 JUMP ~[] destination: B36 -> B61  <||@
  Comment 1103 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1103 4  <||@
  Comment 1109 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 1109 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-3558[sun.nio.cs.UTF_8$Encoder.encodeLoop(CharBuffer, ByteBuffer)]"
  method "HotSpotCompilation-3558[sun.nio.cs.UTF_8$Encoder.encodeLoop(CharBuffer, ByteBuffer)]"
  date 1526687586256
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 119909dc0 448b560849c1e203493bc20f858fb00fff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24308b422c418504c4448b4118448b5124448b591c448b4a248b5a1c8b7a188b2cc50c000000448bed458bf24503f34503c24889742420418bf6412bf044895c241c458bd94403db4103f94489542418458bd3442bd7443bd6440f4fd64963f248ffce4503d048c1e003453bd00f8fcc010000895c24148b592c418504dc453bd0448974241044894c240c0f8fce0100000fb6722885f60f85640300000fb6712885f60f8538030000458bc8448bc7e92a0000000f1f80000000000f1f8000000000420fbf7440106681fe80000f8310000000418874d91041ffc141ffc0453bd17fdf453bd80f8f9b010000458bd0448b742410458bc16666660f1f840000000000453bda0f8ec8000000420fbf745010448b0cdd0c0000000fb7f6418bfaffc7418be8ffc581fe800000000f831f000000453bf00f8e75010000453bc80f86d2020000418874d810448bc5448bd7ebb181fe000800000f826302000081fe00d800000f838d020000458bee452be84183fd030f8c3c020000453bc80f8654020000458d6802453bcd0f8643010000448bd641c1ea0c4181cae0000000458854d810448bd641c1ea064183e23f4181ca80000000448854dd1083e63f81ce80000000418874dd10458d4003448bd7e92fffffff418bf22b74240c3b7424140f8fa301000085f60f8c000100003b720c0f8c9d010000458bc8442b4c2418443b4c241c0f8f740100004585c90f8cba010000443b490c0f8c560100008972184489491848b8c81400c006000000488b6c24304883c4388505dd1f5df0c5f877c3895c24144863df4803de4c3beb0f860a0100003bef0f871dfeffffe93e010000448b0cdd0c0000004d63f04c03f6418bf1493bf60f86ce000000453bc80f870ffeffffe96d0000004963f0458bd3452bd04d63d249ffca4903f24c3bee0f867e000000413be80f8741feffffe970000000488bf2418bd2666690e874b40fff90488b6c24304883c43885054a1f5df0c5f877c341b9e521feff45898f9c0200004d89a7a8020000e825c50fff9041b9ed18feffebe449ba1809e16b070000004d8bda41bae560feff488b7424204589979c0200004d899fa8020000e8f1c40fff90448b74241049ba906ce16b0700000041c7879c020000e553feff4d8997a8020000e8cac40fff9049ba1809e16b070000004d8bda41bae560feffebab49ba1809e16b070000004d8bda41bae579feffeb9641b9ed0efeffe95cffffff41b9ed13feffe951ffffff41b9ed19feffe946ffffff41b9ed14feffe93bffffff49ba1809e16b070000004d8bda41bae579feffe952ffffff41b9ed3bfeffe918ffffff41b9ed3dfeffe90dffffff41b9ed12feffe902ffffff41b9e535feffe9f7feffff49bb000000000000000041baed90feffe911ffffff41b9ed3cfeffe9d7feffff49bb000000000000000041baed99feffe9f1feffff41b9e546feffe9b7feffffe88c554fff90e8e6c20fff90f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4cfd8505 slotKind: QWORD  <||@
  Comment 48 6 rax|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD state [bci:0]  <||@
  Comment 48 [rcx:0, rdx:0, rsi:0]at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 51 8 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0]  <||@
  Comment 51 [rax:0, rcx:0, rdx:0, rsi:0]at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 55 10 r8|DWORD = MOV [rcx|QWORD[.] + 24] size: DWORD state [bci:0]  <||@
  Comment 55 [rax:0, rcx:0, rdx:0, rsi:0]at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 55 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 12 r10|DWORD = MOV [rcx|QWORD[.] + 36] size: DWORD  <||@
  Comment 63 14 r11|DWORD = MOV [rcx|QWORD[.] + 28] size: DWORD  <||@
  Comment 67 16 r9|DWORD = MOV [rdx|QWORD[.] + 36] size: DWORD  <||@
  Comment 71 18 rbx|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 74 20 rdi|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 77 22 rbp|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 84 24 r13|QWORD = MOV rbp|DWORD size: DWORD  <||@
  Comment 87 26 r14|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 93 28 r8|DWORD = ADD (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 96 30 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 101 32 rsi|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 107 34 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 112 36 r11|DWORD = ADD (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 118 38 rdi|DWORD = ADD (x: rdi|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 121 40 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 126 42 r10|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 132 44 CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 135 46 r10|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rsi|DWORD) condition: >  <||@
  Comment 139 48 rsi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 142 50 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 145 52 r10|DWORD = ADD (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 148 54 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1b677a0c encoding: base: 0 shift: 3  <||@
  Comment 152 56 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 155 58 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B6  <||@
  Comment 161 block B6 null  <||@
  Comment 161 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 161 108 stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 165 110 JUMP ~[] destination: B6 -> B7  <||@
  Comment 165 block B7 null  <||@
  Comment 165 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 165 114 rbx|DWORD[.] = MOV [rcx|QWORD[.] + 44] size: DWORD  <||@
  Comment 168 116 NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:0]  <||@
  Comment 168 [rax:0, rcx:0, rdx:0, rbx:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2            
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 168 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 172 118 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 175 124 stack:48|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 180 126 stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 185 120 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B14  <||@
  Comment 191 block B14 null  <||@
  Comment 191 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 191 184 rsi|DWORD = MOVZXB [rdx|QWORD[.] + 40] size: DWORD  <||@
  Comment 195 186 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 197 188 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B64  <||@
  Comment 203 block B15 null  <||@
  Comment 203 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 203 192 rsi|DWORD = MOVZXB [rcx|QWORD[.] + 40] size: DWORD  <||@
  Comment 207 194 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 209 196 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B63  <||@
  Comment 215 block B16 null  <||@
  Comment 215 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 215 200 r9|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 218 202 r8|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 221 204 JUMP ~[] destination: B16 -> B17  <||@
  Comment 226 block B18 loop 0 depth 1 header:85|LoopBegin  <||@
  Comment 226 212 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 240 214 rsi|DWORD = MOVSX [rax|QWORD[.] + r8|DWORD * 2 + 16] size: DWORD  <||@
  Comment 246 216 CMP rsi|DWORD y: 128 size: WORD  <||@
  Comment 251 218 BRANCH trueDestinationProbability: 0.9998258454311219 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B22  <||@
  Comment 257 block B19 loop 0 depth 1 header:85|LoopBegin  <||@
  Comment 257 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 257 222 MOVB (x: [r9|DWORD + rbx|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 262 224 r9|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 265 226 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 268 228 JUMP ~[] destination: B19 -> B17  <||@
  Comment 268 block B17 loop 0 depth 1 header:85|LoopBegin  <||@
  Comment 268 206 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 268 208 CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 271 210 BRANCH trueDestinationProbability: 0.9638044768577462 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B22  <||@
  Comment 273 block B22 null  <||@
  Comment 273 238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 273 240 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 276 242 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B30  <||@
  Comment 282 block B30 null  <||@
  Comment 282 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 282 298 r10|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 285 300 r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 290 302 r8|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 293 304 JUMP ~[] destination: B30 -> B31  <||@
  Comment 293 block B31 loop 1 depth 1 header:121|LoopBegin  <||@
  Comment 293 306 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 304 308 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 307 310 BRANCH trueDestinationProbability: 0.12604763777083372 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B49  <||@
  Comment 313 block B32 loop 1 depth 1 header:121|LoopBegin  <||@
  Comment 313 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 313 314 rsi|DWORD = MOVSX [rax|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 319 316 r9|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 327 318 rsi|DWORD = MOVZX rsi|DWORD size: DWORD  <||@
  Comment 330 320 rdi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 335 322 rbp|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 340 324 CMP rsi|DWORD y: 128 size: DWORD  <||@
  Comment 346 326 BRANCH trueDestinationProbability: 0.9463142341159088 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B38  <||@
  Comment 352 block B33 loop 1 depth 1 header:121|LoopBegin  <||@
  Comment 352 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 352 330 CMP (x: r14|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 355 332 BRANCH trueDestinationProbability: 0.9998265093684942 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B37  <||@
  Comment 361 block B34 loop 1 depth 1 header:121|LoopBegin  <||@
  Comment 361 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 361 336 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 364 338 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36  <||@
  Comment 370 block B35 loop 1 depth 1 header:121|LoopBegin  <||@
  Comment 370 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 370 342 MOVB (x: [r8|DWORD + rbx|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 375 344 r8|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 378 346 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 381 348 JUMP ~[] destination: B35 -> B31  <||@
  Comment 383 block B38 loop 1 depth 1 header:121|LoopBegin  <||@
  Comment 383 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 383 368 CMP rsi|DWORD y: 2048 size: DWORD  <||@
  Comment 389 370 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 395 block B40 loop 1 depth 1 header:121|LoopBegin  <||@
  Comment 395 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 395 380 CMP rsi|DWORD y: 55296 size: DWORD  <||@
  Comment 401 382 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B40 -> B41 falseDestination: B40 -> B48  <||@
  Comment 407 block B41 loop 1 depth 1 header:121|LoopBegin  <||@
  Comment 407 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 407 386 r13|DWORD = SUB (x: r14|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 413 388 CMP r13|DWORD y: 3 size: DWORD  <||@
  Comment 417 390 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43  <||@
  Comment 423 block B43 loop 1 depth 1 header:121|LoopBegin  <||@
  Comment 423 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 423 400 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 426 402 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B43 -> B44 falseDestination: B43 -> B47  <||@
  Comment 432 block B44 loop 1 depth 1 header:121|LoopBegin  <||@
  Comment 432 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 432 406 r13|DWORD = LEA [r8|DWORD + 2] size: DWORD  <||@
  Comment 436 408 CMP (x: r9|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 439 410 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 445 block B45 loop 1 depth 1 header:121|LoopBegin  <||@
  Comment 445 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 445 414 r10|DWORD = SHR rsi|DWORD y: 12 size: DWORD  <||@
  Comment 452 416 r10|DWORD = OR r10|DWORD y: 224 size: DWORD  <||@
  Comment 459 418 MOVB (x: [r8|DWORD + rbx|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 464 420 r10|DWORD = SHR rsi|DWORD y: 6 size: DWORD  <||@
  Comment 471 422 r10|DWORD = AND r10|DWORD y: 63 size: DWORD  <||@
  Comment 475 424 r10|DWORD = OR r10|DWORD y: 128 size: DWORD  <||@
  Comment 482 426 MOVB (x: [rbp|DWORD + rbx|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 487 428 rsi|DWORD = AND rsi|DWORD y: 63 size: DWORD  <||@
  Comment 490 430 rsi|DWORD = OR rsi|DWORD y: 128 size: DWORD  <||@
  Comment 496 432 MOVB (x: [r13|DWORD + rbx|DWORD[.] * 8 + 16], y: rsi|DWORD) size: BYTE  <||@
  Comment 501 434 r8|DWORD = LEA [r8|DWORD + 3] size: DWORD  <||@
  Comment 505 436 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 508 438 JUMP ~[] destination: B45 -> B31  <||@
  Comment 513 block B49 null  <||@
  Comment 513 458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 513 460 rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:52|DWORD) size: DWORD  <||@
  Comment 520 462 CMP (x: rsi|DWORD, y: stack:44|DWORD) size: DWORD  <||@
  Comment 524 464 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51  <||@
  Comment 530 block B51 null  <||@
  Comment 530 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 530 474 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 532 476 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53  <||@
  Comment 538 block B53 null  <||@
  Comment 538 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 538 486 CMP (x: rsi|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 541 488 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55  <||@
  Comment 547 block B55 null  <||@
  Comment 547 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 547 498 r9|DWORD = SUB (x: r8|DWORD, ~y: stack:40|DWORD) size: DWORD  <||@
  Comment 555 500 CMP (x: r9|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 560 502 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 566 block B57 null  <||@
  Comment 566 510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 566 512 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 569 514 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B59  <||@
  Comment 575 block B59 null  <||@
  Comment 575 522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 575 524 CMP (x: r9|DWORD, y: [rcx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 579 526 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B62  <||@
  Comment 585 block B62 null  <||@
  Comment 585 542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 585 544 MOV (x: [rdx|QWORD[.] + 24], y: rsi|DWORD) size: DWORD  <||@
  Comment 588 546 MOV (x: [rcx|QWORD[.] + 24], y: r9|DWORD) size: DWORD  <||@
  Comment 592 548 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@872244084]  <||@
  Comment 592 {Object[CoderResult@872244084]}  <||@
  Comment 602 550 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 611 12  <||@
  Comment 621 block B1 null  <||@
  Comment 621 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 621 62 stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 625 64 rbx|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 628 66 rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 631 68 CMP (x: r13|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 634 70 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5  <||@
  Comment 640 block B2 null  <||@
  Comment 640 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 640 74 CMP (x: rbp|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 642 76 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B7 falseDestination: B2 -> B4  <||@
  Comment 653 block B8 null  <||@
  Comment 653 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 653 128 r9|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 661 130 r14|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 664 132 r14|QWORD = ADD (x: r14|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 667 134 rsi|QWORD = MOV r9|DWORD size: DWORD  <||@
  Comment 670 136 CMP (x: rsi|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 673 138 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12  <||@
  Comment 679 block B9 null  <||@
  Comment 679 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 679 142 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 682 144 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B14 falseDestination: B9 -> B11  <||@
  Comment 693 block B23 null  <||@
  Comment 693 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 693 246 rsi|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 696 248 r10|DWORD = SUB (x: r11|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 702 250 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 705 252 r10|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 708 254 rsi|QWORD = ADD (x: rsi|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 711 256 CMP (x: r13|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 714 258 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B28  <||@
  Comment 720 block B24 null  <||@
  Comment 720 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 720 262 CMP (x: rbp|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 723 264 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B30 falseDestination: B24 -> B28  <||@
  Comment 734 block B37 null  <||@
  Comment 734 356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 734 358 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 737 360 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 740 362 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD] [] callTarget: HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:143, 17]  <||@
  Comment 740 8  <||@
  Comment 743 {HotSpotMethod<UTF_8$Encoder.overflow(CharBuffer, int, ByteBuffer, int)>}  <||@
  Comment 748 []at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:602) [bci: 143, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 749 364 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 758 12  <||@
  Comment 768 block B46 null  <||@
  Comment 768 440 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 768 442 r9|DWORD = MOVE input: int[-122395|0xfffffffffffe21e5]  <||@
  Comment 774 444 JUMP ~[] destination: B46 -> B61  <||@
  Comment 774 block B61 null  <||@
  Comment 774 534 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 774 536 MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD  <||@
  Comment 781 538 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 788 540 DEOPT info [bci:109, 17]  <||@
  Comment 788 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 793 [rax:0, rcx:0, rdx:0, rbx:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4          |5          |6             |7         |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |rax|QWORD[.]  |r10|DWORD  |r11|DWORD  |rbx|DWORD[.]  |r8|DWORD  |r14|DWORD  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 794 block B52 null  <||@
  Comment 794 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 794 480 r9|DWORD = MOVE input: int[-124691|0xfffffffffffe18ed]  <||@
  Comment 800 482 JUMP ~[] destination: B52 -> B61  <||@
  Comment 802 block B11 null  <||@
  Comment 802 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 802 152 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1968456509]  <||@
  Comment 802 {Object[d.a@1968456509]}  <||@
  Comment 812 154 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 815 156 r10|DWORD = MOVE input: int[-106267|0xfffffffffffe60e5]  <||@
  Comment 821 160 JUMP ~[] destination: B11 -> B65  <||@
  Comment 821 block B65 null  <||@
  Comment 821 572 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 821 102 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 826 574 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 833 576 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 840 578 DEOPT info [bci:0]  <||@
  Comment 840 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 845 [rcx:0, rdx:0, rsi:0]at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:690) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]   <||@
  Comment 846 block B28 null  <||@
  Comment 846 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 846 278 r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 851 284 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@731952465]  <||@
  Comment 851 {Object[d.a@731952465]}  <||@
  Comment 861 286 MOV [r15|QWORD + 668] y: -109595 size: DWORD  <||@
  Comment 872 288 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 879 290 DEOPT info [bci:109, 17]  <||@
  Comment 879 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 884 [rax:0, rcx:0, rdx:0, rbx:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4         |5          |6             |7         |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |rax|QWORD[.]  |r8|DWORD  |r11|DWORD  |rbx|DWORD[.]  |r9|DWORD  |r14|DWORD  |-  |-   |-  
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 885 block B12 null  <||@
  Comment 885 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 885 164 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1968456509]  <||@
  Comment 885 {Object[d.a@1968456509]}  <||@
  Comment 895 166 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 898 168 r10|DWORD = MOVE input: int[-106267|0xfffffffffffe60e5]  <||@
  Comment 904 172 JUMP ~[] destination: B12 -> B65  <||@
  Comment 906 block B5 null  <||@
  Comment 906 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 906 96 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1968456509]  <||@
  Comment 906 {Object[d.a@1968456509]}  <||@
  Comment 916 98 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 919 100 r10|DWORD = MOVE input: int[-99867|0xfffffffffffe79e5]  <||@
  Comment 925 104 JUMP ~[] destination: B5 -> B65  <||@
  Comment 927 block B60 null  <||@
  Comment 927 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 927 530 r9|DWORD = MOVE input: int[-127251|0xfffffffffffe0eed]  <||@
  Comment 933 532 JUMP ~[] destination: B60 -> B61  <||@
  Comment 938 block B56 null  <||@
  Comment 938 504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 938 506 r9|DWORD = MOVE input: int[-125971|0xfffffffffffe13ed]  <||@
  Comment 944 508 JUMP ~[] destination: B56 -> B61  <||@
  Comment 949 block B50 null  <||@
  Comment 949 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 949 468 r9|DWORD = MOVE input: int[-124435|0xfffffffffffe19ed]  <||@
  Comment 955 470 JUMP ~[] destination: B50 -> B61  <||@
  Comment 960 block B54 null  <||@
  Comment 960 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 960 492 r9|DWORD = MOVE input: int[-125715|0xfffffffffffe14ed]  <||@
  Comment 966 494 JUMP ~[] destination: B54 -> B61  <||@
  Comment 971 block B4 null  <||@
  Comment 971 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 971 84 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1968456509]  <||@
  Comment 971 {Object[d.a@1968456509]}  <||@
  Comment 981 86 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 984 88 r10|DWORD = MOVE input: int[-99867|0xfffffffffffe79e5]  <||@
  Comment 990 92 JUMP ~[] destination: B4 -> B65  <||@
  Comment 995 block B42 null  <||@
  Comment 995 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 995 394 r9|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed]  <||@
  Comment 1001 396 JUMP ~[] destination: B42 -> B61  <||@
  Comment 1006 block B39 null  <||@
  Comment 1006 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1006 374 r9|DWORD = MOVE input: int[-115219|0xfffffffffffe3ded]  <||@
  Comment 1012 376 JUMP ~[] destination: B39 -> B61  <||@
  Comment 1017 block B58 null  <||@
  Comment 1017 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1017 518 r9|DWORD = MOVE input: int[-126227|0xfffffffffffe12ed]  <||@
  Comment 1023 520 JUMP ~[] destination: B58 -> B61  <||@
  Comment 1028 block B47 null  <||@
  Comment 1028 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1028 448 r9|DWORD = MOVE input: int[-117275|0xfffffffffffe35e5]  <||@
  Comment 1034 450 JUMP ~[] destination: B47 -> B61  <||@
  Comment 1039 block B63 null  <||@
  Comment 1039 552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1039 554 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1049 556 r10|DWORD = MOVE input: int[-93971|0xfffffffffffe90ed]  <||@
  Comment 1055 560 JUMP ~[] destination: B63 -> B65  <||@
  Comment 1060 block B48 null  <||@
  Comment 1060 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1060 454 r9|DWORD = MOVE input: int[-115475|0xfffffffffffe3ced]  <||@
  Comment 1066 456 JUMP ~[] destination: B48 -> B61  <||@
  Comment 1071 block B64 null  <||@
  Comment 1071 562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1071 564 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1081 566 r10|DWORD = MOVE input: int[-91667|0xfffffffffffe99ed]  <||@
  Comment 1087 570 JUMP ~[] destination: B64 -> B65  <||@
  Comment 1092 block B36 null  <||@
  Comment 1092 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1092 352 r9|DWORD = MOVE input: int[-112923|0xfffffffffffe46e5]  <||@
  Comment 1098 354 JUMP ~[] destination: B36 -> B61  <||@
  Comment 1103 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1103 4  <||@
  Comment 1109 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 1109 5  <||@
  HexCodeFile>>> <|@
end_nmethod
