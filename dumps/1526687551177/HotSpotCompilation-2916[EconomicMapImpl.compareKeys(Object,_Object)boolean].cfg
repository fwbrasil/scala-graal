begin_compilation
  name " HotSpotCompilation-2916[org.graalvm.collections.EconomicMapImpl.compareKeys(Object, Object)]"
  method "HotSpotCompilation-2916[org.graalvm.collections.EconomicMapImpl.compareKeys(Object, Object)]"
  date 1526687571172
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v8 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 v5 v53 v57 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v5 v53 v57 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a3 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
stamp: void
trueSuccessorProbability: 0.1419345695355706
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v6 
falseSuccessor: v7 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v6 #falseSuccessor: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4594281752086306524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v10 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 6]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v6 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605903985851074633
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a69 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a69  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v71 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a69 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a69 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v71 
=== Succesors ===
next: v16 
=== Usages ===
a49 v54 v59 v61 
=== Predecessor ===
v7 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v71 #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
stamp: void
=== Inputs ===
value: a69 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a69  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v45 v44 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
stamp: void
trueSuccessorProbability: 0.9227148519608432
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v15 
=== Usages ===
=== Predecessor ===
a69 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v14 #falseSuccessor: v15  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4605306667002970971
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v44  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
stamp: void
=== Inputs ===
result: i42 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i42 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4589442971447994223
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid a60 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
rawvalue: Equivalence$1@1531265431
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1531265431]
=== Inputs ===
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a69 
y: a60 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a69 y: a60  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
stamp: void
trueSuccessorProbability: 0.789781669481964
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v23 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v29 #falseSuccessor: v23  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587708844668888092
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid a70 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 255
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a70 a3 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a70 a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a2 
=== Succesors ===
next: i33 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a2 #next: i33  <|@  <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@174bbc91
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a3 
=== Succesors ===
=== Usages ===
i33 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a3  <|@  <|@
tid ?67 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 260
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
i33 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
bci: 36
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v53 
stateDuring: ?67 
=== Succesors ===
next: v35 
=== Usages ===
v35 
=== Predecessor ===
v72 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v53 stateDuring: ?67 #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 39]
stamp: void
=== Inputs ===
result: i33 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i33 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i33 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4579189933527313159
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid a58 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
rawvalue: Equivalence$3@1032552445
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1032552445]
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a69 
y: a58 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a69 y: a58  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
stamp: void
trueSuccessorProbability: 0.006430404479733385
=== Inputs ===
condition: v59 
=== Succesors ===
trueSuccessor: v24 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v59 #trueSuccessor: v24 #falseSuccessor: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4546243046476331330
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v45  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
stamp: void
=== Inputs ===
result: i42 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i42 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4579138256792259476
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: i38 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i38  <|@  <|@
f <@~|@floating>@ <|@
tid a49 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a69 
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a69  <|@  <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@3b0e07c7
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a49 a2 a3 
=== Succesors ===
=== Usages ===
i38 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a49 a2 a3  <|@  <|@
tid ?68 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
i38 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
bci: 46
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Equivalence.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v57 
stateDuring: ?68 
=== Succesors ===
next: v40 
=== Usages ===
v40 
=== Predecessor ===
v30 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v57 stateDuring: ?68 #next: v40  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 49]
stamp: void
=== Inputs ===
result: i38 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i38 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i38 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v8 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 v5 v53 v57 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v5 v53 v57 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a3 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
stamp: void
trueSuccessorProbability: 0.1419345695355706
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v6 
falseSuccessor: v7 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v6 #falseSuccessor: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@51147eb7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1419345695355706 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4594281752086306524
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v10 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 6]
stamp: void
=== Inputs ===
result: i9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v6 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i9 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605903985851074633
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a69 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a69  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v71 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v71 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a69 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a69 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v71 
=== Succesors ===
next: v16 
=== Usages ===
a49 v54 v59 v61 
=== Predecessor ===
v7 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v71 #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
stamp: void
=== Inputs ===
value: a69 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a69  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v45 v44 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
stamp: void
trueSuccessorProbability: 0.9227148519608432
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v15 
=== Usages ===
=== Predecessor ===
a69 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v14 #falseSuccessor: v15  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9227148519608432 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4605306667002970971
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v44  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
stamp: void
=== Inputs ===
result: i42 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i42 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4589442971447994223
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid a60 <|@
result NarrowOop[Equivalence$1@1531265431] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
rawvalue: Equivalence$1@1531265431
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1531265431]
=== Inputs ===
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a69 
y: a60 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a69 y: a60  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
stamp: void
trueSuccessorProbability: 0.789781669481964
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v23 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v29 #falseSuccessor: v23  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1531265431] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.789781669481964 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587708844668888092
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid a70 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 255
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a70 a3 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a70 a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a2 
=== Succesors ===
next: i33 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a2 #next: i33  <|@  <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@174bbc91
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a3 
=== Succesors ===
=== Usages ===
i33 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a3  <|@  <|@
tid ?67 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 260
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
i33 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i33 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 36
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v53 
stateDuring: ?67 
=== Succesors ===
next: v35 
=== Usages ===
v35 
=== Predecessor ===
v72 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v53 stateDuring: ?67 #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 39]
stamp: void
=== Inputs ===
result: i33 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i33 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i33 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4579189933527313159
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid a58 <|@
result NarrowOop[Equivalence$3@1032552445] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
rawvalue: Equivalence$3@1032552445
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1032552445]
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a69 
y: a58 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a69 y: a58  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
stamp: void
trueSuccessorProbability: 0.006430404479733385
=== Inputs ===
condition: v59 
=== Succesors ===
trueSuccessor: v24 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v59 #trueSuccessor: v24 #falseSuccessor: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.006430404479733385 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4546243046476331330
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v45  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
stamp: void
=== Inputs ===
result: i42 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i42 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4579138256792259476
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: i38 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i38  <|@  <|@
f <@~|@floating>@ <|@
tid a49 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a69 
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a69  <|@  <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@3b0e07c7
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a49 a2 a3 
=== Succesors ===
=== Usages ===
i38 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a49 a2 a3  <|@  <|@
tid ?68 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
i38 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i38 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 46
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Equivalence.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v57 
stateDuring: ?68 
=== Succesors ===
next: v40 
=== Usages ===
v40 
=== Predecessor ===
v30 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v57 stateDuring: ?68 #next: v40  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 49]
stamp: void
=== Inputs ===
result: i38 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i38 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i38 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2cfcadd3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:46] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@51147eb7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1419345695355706 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605903985851074633
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9227148519608432 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4605306667002970971
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4594281752086306524
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4589442971447994223
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1531265431] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.789781669481964 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587708844668888092
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4579189933527313159
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.006430404479733385 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4579138256792259476
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2cfcadd3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:46] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4546243046476331330
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #31         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #32         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #33         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #34         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@51147eb7 slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: rcx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.1419345695355706 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605903985851074633
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   20  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.9227148519608432 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4605306667002970971
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   28  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4594281752086306524
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   34  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4589442971447994223
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1531265431] <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.789781669481964 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587708844668888092
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   46  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:36] <|@ <|@
      nr   56  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4579189933527313159
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445] <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 0.006430404479733385 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4579138256792259476
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2cfcadd3 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:46] <|@ <|@
      nr   80  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4546243046476331330
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   86  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #31         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #32         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #33         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #34         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@51147eb7 slotKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: rcx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.1419345695355706 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4605903985851074633
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   20  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   22  <|@ instruction BRANCH trueDestinationProbability: 0.9227148519608432 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4605306667002970971
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   28  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4594281752086306524
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   34  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4589442971447994223
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1531265431] <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.789781669481964 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4587708844668888092
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|QWORD[.] 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   46  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:36] <|@ <|@
      nr   56  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4579189933527313159
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445] <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 0.006430404479733385 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4579138256792259476
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2cfcadd3 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:46] <|@ <|@
      nr   80  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4546243046476331330
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   86  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_2       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_0       
     8: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    11: ifnull        50
    14: aload_0       
    15: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    18: getstatic     #31         // org.graalvm.collections.Equivalence.IDENTITY_WITH_SYSTEM_HASHCODE:org.graalvm.collections.Equivalence
    21: if_acmpeq     50
    24: aload_0       
    25: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    28: getstatic     #32         // org.graalvm.collections.Equivalence.DEFAULT:org.graalvm.collections.Equivalence
    31: if_acmpne     40
    34: aload_1       
    35: aload_2       
    36: invokevirtual #33         // java.lang.Object.equals:(java.lang.Object)boolean
    39: ireturn       
    40: aload_0       
    41: getfield      #13         // strategy:org.graalvm.collections.Equivalence
    44: aload_1       
    45: aload_2       
    46: invokevirtual #34         // org.graalvm.collections.Equivalence.equals:(java.lang.Object, java.lang.Object)boolean
    49: ireturn       
    50: iconst_0      
    51: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410483bca0f8425000000448b56204585d20f8530000000b800000000488b6c24104883c418850500000000c5f877c3b801000000488b6c24104883c418850500000000c5f877c34181faaddeadde0f852d0000008502488bf2488bd148b8ffffffffffffffff6690e80000000090488b6c24104883c418850500000000c5f877c34181faaddeadde0f842b00000049c1e203498bf248b8ffffffffffffffff90e80000000090488b6c24104883c418850500000000c5f877c3b800000000488b6c24104883c418850500000000c5f877c3e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@51147eb7 slotKind: QWORD  <||@
  Comment 48 12 CMP (x: rcx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 51 14 BRANCH trueDestinationProbability: 0.1419345695355706 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 57 block B2 null  <||@
  Comment 57 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 57 18 r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 61 20 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 64 22 BRANCH trueDestinationProbability: 0.9227148519608432 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 70 block B3 null  <||@
  Comment 70 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 70 26 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 75 28 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 84 12  <||@
  Comment 94 block B1 null  <||@
  Comment 94 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 94 32 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 99 34 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 108 12  <||@
  Comment 118 block B4 null  <||@
  Comment 118 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 118 38 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1531265431]  <||@
  Comment 118 {NarrowOop[Equivalence$1@1531265431]}  <||@
  Comment 125 40 BRANCH trueDestinationProbability: 0.789781669481964 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 131 block B5 null  <||@
  Comment 131 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 131 44 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 131 [rcx:0, rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |Object[null]  |rcx|QWORD[.]   <||@
  Comment 131 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 133 46 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 136 48 rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 139 50 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:36]  <||@
  Comment 139 7  <||@
  Comment 151 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 156 []at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 157 56 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 166 12  <||@
  Comment 176 block B6 null  <||@
  Comment 176 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 176 60 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445]  <||@
  Comment 176 {NarrowOop[Equivalence$3@1032552445]}  <||@
  Comment 183 62 BRANCH trueDestinationProbability: 0.006430404479733385 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 189 block B8 null  <||@
  Comment 189 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 189 66 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2cfcadd3 encoding: base: 0 shift: 3  <||@
  Comment 193 68 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 196 74 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:46]  <||@
  Comment 196 7  <||@
  Comment 207 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 212 []at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 213 80 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 222 12  <||@
  Comment 232 block B7 null  <||@
  Comment 232 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 232 84 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 237 86 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 246 12  <||@
  Comment 256 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 256 4  <||@
  Comment 262 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 262 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-2916[org.graalvm.collections.EconomicMapImpl.compareKeys(Object, Object)]"
  method "HotSpotCompilation-2916[org.graalvm.collections.EconomicMapImpl.compareKeys(Object, Object)]"
  date 1526687571223
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 11973b700 448b560849c1e203493bc20f854f972cff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410483bca0f8425000000448b56204585d20f8530000000b800000000488b6c24104883c4188505ac087af0c5f877c3b801000000488b6c24104883c418850594087af0c5f877c34181fade8902d80f852d0000008502488bf2488bd148b8ffffffffffffffff6690e8449b2cff90488b6c24104883c41885055a087af0c5f877c34181fadfbd03d80f842b00000049c1e203498bf248b8ffffffffffffffff90e80c9b2cff90488b6c24104883c418850522087af0c5f877c3b800000000488b6c24104883c41885050a087af0c5f877c3e89b3f6cff90e8f5ac2cff90f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@51147eb7 slotKind: QWORD  <||@
  Comment 48 12 CMP (x: rcx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 51 14 BRANCH trueDestinationProbability: 0.1419345695355706 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 57 block B2 null  <||@
  Comment 57 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 57 18 r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 61 20 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 64 22 BRANCH trueDestinationProbability: 0.9227148519608432 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 70 block B3 null  <||@
  Comment 70 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 70 26 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 75 28 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 84 12  <||@
  Comment 94 block B1 null  <||@
  Comment 94 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 94 32 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 99 34 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 108 12  <||@
  Comment 118 block B4 null  <||@
  Comment 118 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 118 38 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1531265431]  <||@
  Comment 118 {NarrowOop[Equivalence$1@1531265431]}  <||@
  Comment 125 40 BRANCH trueDestinationProbability: 0.789781669481964 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 131 block B5 null  <||@
  Comment 131 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 131 44 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 131 [rcx:0, rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |Object[null]  |rcx|QWORD[.]   <||@
  Comment 131 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 133 46 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 136 48 rdx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 139 50 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:36]  <||@
  Comment 139 7  <||@
  Comment 151 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 156 []at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 157 56 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 166 12  <||@
  Comment 176 block B6 null  <||@
  Comment 176 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 176 60 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1032552445]  <||@
  Comment 176 {NarrowOop[Equivalence$3@1032552445]}  <||@
  Comment 183 62 BRANCH trueDestinationProbability: 0.006430404479733385 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 189 block B8 null  <||@
  Comment 189 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 189 66 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2cfcadd3 encoding: base: 0 shift: 3  <||@
  Comment 193 68 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 196 74 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b state [bci:46]  <||@
  Comment 196 7  <||@
  Comment 207 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 212 []at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 213 80 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 222 12  <||@
  Comment 232 block B7 null  <||@
  Comment 232 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 232 84 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 237 86 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 246 12  <||@
  Comment 256 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 256 4  <||@
  Comment 262 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 262 5  <||@
  HexCodeFile>>> <|@
end_nmethod
