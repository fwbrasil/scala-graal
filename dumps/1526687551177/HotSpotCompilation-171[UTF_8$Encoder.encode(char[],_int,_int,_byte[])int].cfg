begin_compilation
  name " HotSpotCompilation-171[sun.nio.cs.UTF_8$Encoder.encode(char[], int, int, byte[])]"
  method "HotSpotCompilation-171[sun.nio.cs.UTF_8$Encoder.encode(char[], int, int, byte[])]"
  date 1526687556704
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v295 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/nio/cs/UTF_8$Encoder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 ?55 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v422 ?55 v141 v420 v419 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i7 i16 j261 v268 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i7 i242 v120 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: a# [B
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v424 ?55 v423 v418 v421 v425 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encode(char[], int, int, byte[])>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 704
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 a5 - - - - - 
=== Succesors ===
=== Usages ===
v353 i412 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 a5 - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v141 
=== Succesors ===
trueSuccessor: v294 
falseSuccessor: v292 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v141 #trueSuccessor: v294 #falseSuccessor: v292  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid a350 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1349654251
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1349654251]
=== Inputs ===
=== Succesors ===
=== Usages ===
a352 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i349 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -36363
stableDimension: 0
stamp: i32 [-36363] ⇊00000000ffff71f5 ⇈00000000ffff71f5
stampKind: i32
value: int[-36363|0xffffffffffff71f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
v294 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: i412 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i412  <|@  <|@
f <@~|@floating>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: - 
=== Succesors ===
=== Usages ===
i412 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i412 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:706) [bci: 13]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v418 
=== Succesors ===
next: v387 
=== Usages ===
i242 v120 v288 v222 v202 v212 j274 
=== Predecessor ===
v292 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v418 #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:706) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i412 
y: i4 
=== Succesors ===
=== Usages ===
i242 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i412 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i242 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v120 
trueValue: i412 
falseValue: i4 
=== Succesors ===
=== Usages ===
v285 v19 j262 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v120 trueValue: i412 falseValue: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j262 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i242 
=== Succesors ===
=== Usages ===
j264 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i242  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j264 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j264 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j262 
y: j263 
=== Succesors ===
=== Usages ===
j265 v277 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j262 y: j263  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 40]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i42 i43 i63 i69 v285 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i242 
y: i41 
=== Succesors ===
=== Usages ===
v403 v387 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i242 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid a359 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@392874974
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@392874974]
=== Inputs ===
=== Succesors ===
=== Usages ===
a352 a352 a352 a352 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i413 i415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v285 
=== Succesors ===
trueSuccessor: v383 
falseSuccessor: v386 
=== Usages ===
=== Predecessor ===
i412 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v285 #trueSuccessor: v383 #falseSuccessor: v386  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v381  <|@  <|@
f <@*|@fixed>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v383 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B40" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: i413 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i413  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i413 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v419 
=== Succesors ===
next: v395 
=== Usages ===
v268 j259 
=== Predecessor ===
v386 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v419 #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid j261 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
j265 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid j265 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j261 
y: j264 
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j261 y: j264  <|@  <|@
f <@~|@floating>@ <|@
tid j259 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i413 
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i413  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j265 
y: j259 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j265 y: j259  <|@  <|@
f <@~|@floating>@ <|@
tid i358 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -37659
stableDimension: 0
stamp: i32 [-37659] ⇊00000000ffff6ce5 ⇈00000000ffff6ce5
stampKind: i32
value: int[-37659|0xffffffffffff6ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i351 i351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v267 
=== Succesors ===
trueSuccessor: v394 
falseSuccessor: v391 
=== Usages ===
=== Predecessor ===
i413 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v267 #trueSuccessor: v394 #falseSuccessor: v391  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v393 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i413 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i413  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v268 
=== Succesors ===
trueSuccessor: v384 
falseSuccessor: v392 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v268 #trueSuccessor: v384 #falseSuccessor: v392  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v382  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v384 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v381 v382 
=== Succesors ===
next: v403 
=== Usages ===
v273 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v381 v382 #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:705) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i17 v288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v285 
=== Succesors ===
trueSuccessor: v399 
falseSuccessor: v402 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v285 #trueSuccessor: v399 #falseSuccessor: v402  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v399 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B38" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid j274 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i412 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i412  <|@  <|@
f <@~|@floating>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j264 
y: j274 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j264 y: j274  <|@  <|@
f <@~|@floating>@ <|@
tid i361 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -43035
stableDimension: 0
stamp: i32 [-43035] ⇊00000000ffff57e5 ⇈00000000ffff57e5
stampKind: i32
value: int[-43035|0xffffffffffff57e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i351 i351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v277 
=== Succesors ===
trueSuccessor: v410 
falseSuccessor: v407 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v277 #trueSuccessor: v410 #falseSuccessor: v407  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v409  <|@  <|@
f <@~|@floating>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i412 
y: i8 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i412 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v288 
=== Succesors ===
trueSuccessor: v408 
falseSuccessor: v400 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v288 #trueSuccessor: v408 #falseSuccessor: v400  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v427  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
v408 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v398  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v400 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v397 v398 
=== Succesors ===
next: v14 
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v397 v398 #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid i232 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 33]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v396 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4632096214568281154
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v15 
values: i3 i43 
=== Succesors ===
=== Usages ===
i43 i53 v420 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v15 values: i3 i43  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v15 
values: i8 i42 
=== Succesors ===
=== Usages ===
v421 v19 i42 i54 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v15 values: i8 i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 49.02316603350529
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 20]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v14 
=== Succesors ===
next: v26 
=== Usages ===
i16 i17 v22 v34 v49 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v14 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i17 
y: i242 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i17 y: i242  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 24]
stamp: void
trueSuccessorProbability: 0.9801483173192863
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v22 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v20 #falseSuccessor: v22  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4631959249923211633
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: i414 
=== Usages ===
v273 v282 
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i414  <|@  <|@
f <@~|@floating>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v380 v20 
=== Succesors ===
=== Usages ===
i414 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v380 v20  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i16 
=== Succesors ===
=== Usages ===
i414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i16  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v273 
address: v420 
=== Succesors ===
next: v40 
=== Usages ===
v233 i235 
=== Predecessor ===
v20 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v273 address: v420 #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 33]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i414 
y: i232 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i414 y: i232  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 33]
stamp: void
trueSuccessorProbability: 0.999442087854871
=== Inputs ===
condition: v233 
=== Succesors ===
trueSuccessor: v30 
falseSuccessor: v34 
=== Usages ===
=== Predecessor ===
i414 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v233 #trueSuccessor: v30 #falseSuccessor: v34  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4631955477079925826
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v175  <|@  <|@
f <@~|@floating>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v396 v20 
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v396 v20  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: i17 
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 49]
resultBits: 8
stamp: i8
=== Inputs ===
value: i414 
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v282 
address: v421 
value: i235 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v282 address: v421 value: i235 stateAfter: - lastLocationAccess: - #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 40]
stamp: i32
=== Inputs ===
x: i17 
y: i41 
=== Succesors ===
=== Usages ===
i17 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i17 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 45]
stamp: i32
=== Inputs ===
x: i16 
y: i41 
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i16 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 20]
stamp: void
=== Inputs ===
loopBegin: v15 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v15  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4583384004457755851
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v33  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v34 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606940956829725786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v22 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v31 v33 
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v31 v33 #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 2]
stamp: i32
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
v56 ?55 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
v32 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B24" "B30" 
    successors "B21" "B37" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4610971008313374101
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i53 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v52 
values: i16 i63 i63 
=== Succesors ===
=== Usages ===
?55 v56 i63 v422 v180 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v52 values: i16 i63 i63  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v52 
values: i17 i69 i118 
=== Succesors ===
=== Usages ===
?55 v114 i69 v202 i118 v423 i116 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v52 values: i17 i69 i118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.8412358617164035
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v51 
=== Succesors ===
next: v62 
=== Usages ===
i53 i54 v59 v113 v119 v341 v336 v316 v321 v326 v331 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v51 #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i7 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i53 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 57]
stamp: void
trueSuccessorProbability: 0.45688652888403003
=== Inputs ===
condition: v56 
=== Succesors ===
trueSuccessor: v57 
falseSuccessor: v59 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v56 #trueSuccessor: v57 #falseSuccessor: v59  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B35" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605752398571989802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: i415 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v419 
=== Succesors ===
next: v317 
=== Usages ===
v180 
=== Predecessor ===
v57 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v419 #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i415 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i53 y: i415  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v313 
falseSuccessor: v316 
=== Usages ===
=== Predecessor ===
i415 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v313 #falseSuccessor: v316  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605752398571989802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
i416 
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i54 
y: i412 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i54 y: i412  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v202 
=== Succesors ===
trueSuccessor: v318 
falseSuccessor: v321 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v202 #trueSuccessor: v318 #falseSuccessor: v321  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605752398571989802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
stamp: void
=== Inputs ===
=== Succesors ===
next: i416 
=== Usages ===
v210 v198 
=== Predecessor ===
v322 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i416  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i53 
=== Succesors ===
=== Usages ===
i416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i53  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i416 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v313 
address: v422 
=== Succesors ===
next: v68 
=== Usages ===
i188 
=== Predecessor ===
v318 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v313 address: v422 #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i416 
=== Succesors ===
=== Usages ===
v65 i70 i93 v76 i102 v131 i85 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i416  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 30]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i103 v65 i96 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:714) [bci: 73]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i188 
y: i28 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i188 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 62]
stamp: i32
=== Inputs ===
x: i53 
y: i41 
=== Succesors ===
=== Usages ===
i53 i53 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i53 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 80]
stamp: i32
=== Inputs ===
x: i54 
y: i41 
=== Succesors ===
=== Usages ===
v212 v424 i54 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i54 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: i54 
=== Succesors ===
=== Usages ===
v210 v198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:714) [bci: 73]
stamp: void
trueSuccessorProbability: 0.9439401420486916
=== Inputs ===
condition: v65 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v67 
=== Usages ===
=== Predecessor ===
i416 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v65 #trueSuccessor: v66 #falseSuccessor: v67  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4605327622992080616
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 85]
resultBits: 8
stamp: i8
=== Inputs ===
value: i188 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 86]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v318 
address: v423 
value: i70 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v318 address: v423 value: i70 stateAfter: - lastLocationAccess: - #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
loopBegin: v52 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v52  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586957230314341404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 92]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] ⇊0000000000000800 ⇈0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i188 
y: i75 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i188 y: i75  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v76 
=== Succesors ===
trueSuccessor: v326 
falseSuccessor: v323 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v76 #trueSuccessor: v326 #falseSuccessor: v323  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v372  <|@  <|@
f <@~|@floating>@ <|@
tid i373 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -50963
stableDimension: 0
stamp: i32 [-50963] ⇊00000000ffff38ed ⇈00000000ffff38ed
stampKind: i32
value: int[-50963|0xffffffffffff38ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
v326 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586957230314341404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
stamp: void
=== Inputs ===
=== Succesors ===
next: v332 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v332  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] ⇊000000000000d800 ⇈000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i188 
y: i130 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i188 y: i130  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v131 
=== Succesors ===
trueSuccessor: v328 
falseSuccessor: v331 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v131 #trueSuccessor: v328 #falseSuccessor: v331  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586957230314341404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i69 
y: i412 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i69 y: i412  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v212 
=== Succesors ===
trueSuccessor: v333 
falseSuccessor: v336 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v212 #trueSuccessor: v333 #falseSuccessor: v336  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586957230314341404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
stamp: void
=== Inputs ===
=== Succesors ===
next: v342 
=== Usages ===
v220 
=== Predecessor ===
v337 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 318]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 318]
stamp: i32
=== Inputs ===
x: i54 
y: i115 
=== Succesors ===
=== Usages ===
v222 v425 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i54 y: i115  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i116 
y: i412 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i116 y: i412  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v338 
falseSuccessor: v341 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v338 #falseSuccessor: v341  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586957230314341404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
stamp: void
=== Inputs ===
=== Succesors ===
next: v210 
=== Usages ===
v230 
=== Predecessor ===
v342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v210  <|@  <|@
f <@~|@floating>@ <|@
tid i84 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 308]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i85 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i85 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 310]
stamp: i32 [0 - 15] ⇈000000000000000f
=== Inputs ===
x: i188 
y: i84 
=== Succesors ===
=== Usages ===
i86 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i188 y: i84  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 303]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] ⇊00000000000000e0 ⇈00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i86 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i86 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 311]
stamp: i32 [224 - 239] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
x: i85 
y: i83 
=== Succesors ===
=== Usages ===
i87 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i85 y: i83  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 312]
resultBits: 8
stamp: i8 [-32 - -17] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
value: i86 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i86  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v318 
address: v423 
value: i87 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v318 address: v423 value: i87 stateAfter: - lastLocationAccess: - #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: i69 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: i69  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 326]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i93 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 328]
stamp: i32 [0 - 1023] ⇈00000000000003ff
=== Inputs ===
x: i188 
y: i92 
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i188 y: i92  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 329]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i95 i102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 331]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i93 
y: i94 
=== Succesors ===
=== Usages ===
i96 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i93 y: i94  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 332]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i95 
y: i28 
=== Succesors ===
=== Usages ===
i97 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i95 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 333]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i96 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i96  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v333 
address: v424 
value: i97 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v333 address: v424 value: i97 stateAfter: - lastLocationAccess: - #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: i116 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: i116  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 349]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i188 
y: i94 
=== Succesors ===
=== Usages ===
i103 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i188 y: i94  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 350]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i102 
y: i28 
=== Succesors ===
=== Usages ===
i104 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i102 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 351]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i103 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v338 
address: v425 
value: i104 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v338 address: v425 value: i104 stateAfter: - lastLocationAccess: - #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 339]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i118 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 339]
stamp: i32
=== Inputs ===
x: i54 
y: i117 
=== Succesors ===
=== Usages ===
i54 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i54 y: i117  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:742) [bci: 353]
stamp: void
=== Inputs ===
loopBegin: v52 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v52  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid i379 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -57115
stableDimension: 0
stamp: i32 [-57115] ⇊00000000ffff20e5 ⇈00000000ffff20e5
stampKind: i32
value: int[-57115|0xffffffffffff20e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
v341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v376 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -54555
stableDimension: 0
stamp: i32 [-54555] ⇊00000000ffff2ae5 ⇈00000000ffff2ae5
stampKind: i32
value: int[-54555|0xffffffffffff2ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
v336 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid i375 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -51219
stableDimension: 0
stamp: i32 [-51219] ⇊00000000ffff37ed ⇈00000000ffff37ed
stampKind: i32
value: int[-51219|0xffffffffffff37ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
v331 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v370  <|@  <|@
f <@~|@floating>@ <|@
tid i371 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -64283
stableDimension: 0
stamp: i32 [-64283] ⇊00000000ffff04e5 ⇈00000000ffff04e5
stampKind: i32
value: int[-64283|0xffffffffffff04e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
v321 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid i369 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -46363
stableDimension: 0
stamp: i32 [-46363] ⇊00000000ffff4ae5 ⇈00000000ffff4ae5
stampKind: i32
value: int[-46363|0xffffffffffff4ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
v316 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B26" "B33" "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i365 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-64283 - -46363] ⇊00000000ffff00e5 ⇈00000000ffff7fed
valueDescription: i32
=== Inputs ===
merge: v362 
values: i369 i371 i373 i375 i377 i379 
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v362 values: i369 i371 i373 i375 i377 i379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v368 v370 v372 v374 v376 v378 
=== Succesors ===
next: v367 
=== Usages ===
i365 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v368 v370 v372 v374 v376 v378 #next: v367  <|@  <|@
tid ?55 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encode(char[], int, int, byte[])>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 712
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i53 - a5 i7 i54 - - - 
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i53 - a5 i7 i54 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a356 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?55 
actionAndReason: i365 
speculation: a356 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?55 actionAndReason: i365 speculation: a356  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:743) [bci: 356]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v114  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:743) [bci: 358]
stamp: void
=== Inputs ===
result: i54 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i54 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v360 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v360  <|@  <|@
f <@*|@fixed>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
v407 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v426  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
v392 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v357  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
v391 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B1" "B40" "B38" "B39" "B11" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i351 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-43035 - -34827] ⇊00000000ffff40e5 ⇈00000000ffff7ff5
valueDescription: i32
=== Inputs ===
merge: v347 
values: i349 i358 i361 i358 i361 
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v347 values: i349 i358 i361 i358 i361  <|@  <|@
f <@~|@floating>@ <|@
tid a352 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v347 
values: a350 a359 a359 a359 a359 
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v347 values: a350 a359 a359 a359 a359  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v348 v357 v360 v426 v427 
=== Succesors ===
next: v353 
=== Usages ===
i351 a352 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v348 v357 v360 v426 v427 #next: v353  <|@  <|@
f <@*|@fixed>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i351 
speculation: a352 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v347 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i351 speculation: a352  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v295 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/nio/cs/UTF_8$Encoder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 ?55 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# [C
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v422 ?55 v141 v420 v419 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i7 i16 j261 v268 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i7 i242 v120 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: a# [B
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v424 ?55 v423 v418 v421 v425 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encode(char[], int, int, byte[])>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 704
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 a5 - - - - - 
=== Succesors ===
=== Usages ===
v353 i412 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4 a5 - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v141 
=== Succesors ===
trueSuccessor: v294 
falseSuccessor: v292 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v141 #trueSuccessor: v294 #falseSuccessor: v292  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@35ea81b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid a350 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1349654251
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1349654251]
=== Inputs ===
=== Succesors ===
=== Usages ===
a352 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i349 <|@
result int[-36363|0xffffffffffff71f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -36363
stableDimension: 0
stamp: i32 [-36363] ⇊00000000ffff71f5 ⇈00000000ffff71f5
stampKind: i32
value: int[-36363|0xffffffffffff71f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
v294 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1349654251] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-36363|0xffffffffffff71f5], v5|QWORD[.]] destination: B1 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: i412 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i412  <|@  <|@
f <@~|@floating>@ <|@
tid v418 <|@
result [v4|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: - 
=== Succesors ===
=== Usages ===
i412 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i412 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:706) [bci: 13]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?6 
guard: - 
address: v418 
=== Succesors ===
next: v387 
=== Usages ===
i242 v120 v288 v222 v202 v212 j274 
=== Predecessor ===
v292 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?6 guard: - address: v418 #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:706) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i412 
y: i4 
=== Succesors ===
=== Usages ===
i242 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i412 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i242 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v120 
trueValue: i412 
falseValue: i4 
=== Succesors ===
=== Usages ===
v285 v19 j262 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v120 trueValue: i412 falseValue: i4  <|@  <|@
f <@~|@floating>@ <|@
tid j262 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i242 
=== Succesors ===
=== Usages ===
j264 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i242  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j264 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j264 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j262 
y: j263 
=== Succesors ===
=== Usages ===
j265 v277 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j262 y: j263  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 40]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i42 i43 i63 i69 v285 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i242 
y: i41 
=== Succesors ===
=== Usages ===
v403 v387 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i242 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid a359 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@392874974
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@392874974]
=== Inputs ===
=== Succesors ===
=== Usages ===
a352 a352 a352 a352 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v419 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i413 i415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v285 
=== Succesors ===
trueSuccessor: v383 
falseSuccessor: v386 
=== Usages ===
=== Predecessor ===
i412 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v285 #trueSuccessor: v383 #falseSuccessor: v386  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV [v4|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v6|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVSXD v7|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = DEC v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@392874974] <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v381  <|@  <|@
f <@*|@fixed>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v383 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B40" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: i413 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i413  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i413 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v419 
=== Succesors ===
next: v395 
=== Usages ===
v268 j259 
=== Predecessor ===
v386 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v419 #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid j261 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1211358735@6c5529b1
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/530496849@1dd44dbb
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3 
=== Succesors ===
=== Usages ===
j265 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3  <|@  <|@
f <@~|@floating>@ <|@
tid j265 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j261 
y: j264 
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j261 y: j264  <|@  <|@
f <@~|@floating>@ <|@
tid j259 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i413 
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i413  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j265 
y: j259 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j265 y: j259  <|@  <|@
f <@~|@floating>@ <|@
tid i358 <|@
result int[-37659|0xffffffffffff6ce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -37659
stableDimension: 0
stamp: i32 [-37659] ⇊00000000ffff6ce5 ⇈00000000ffff6ce5
stampKind: i32
value: int[-37659|0xffffffffffff6ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i351 i351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v267 
=== Succesors ===
trueSuccessor: v394 
falseSuccessor: v391 
=== Usages ===
=== Predecessor ===
i413 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v267 #trueSuccessor: v394 #falseSuccessor: v391  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVSXD v2|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v393 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i413 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i413  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v268 
=== Succesors ===
trueSuccessor: v384 
falseSuccessor: v392 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v268 #trueSuccessor: v384 #falseSuccessor: v392  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v382  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
v384 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v381 v382 
=== Succesors ===
next: v403 
=== Usages ===
v273 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v381 v382 #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:705) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i17 v288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v285 
=== Succesors ===
trueSuccessor: v399 
falseSuccessor: v402 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v285 #trueSuccessor: v399 #falseSuccessor: v402  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v399 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B38" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid j274 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i412 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i412  <|@  <|@
f <@~|@floating>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j264 
y: j274 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j264 y: j274  <|@  <|@
f <@~|@floating>@ <|@
tid i361 <|@
result int[-43035|0xffffffffffff57e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -43035
stableDimension: 0
stamp: i32 [-43035] ⇊00000000ffff57e5 ⇈00000000ffff57e5
stampKind: i32
value: int[-43035|0xffffffffffff57e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i351 i351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v277 
=== Succesors ===
trueSuccessor: v410 
falseSuccessor: v407 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v277 #trueSuccessor: v410 #falseSuccessor: v407  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v409  <|@  <|@
f <@~|@floating>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i412 
y: i8 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i412 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v288 
=== Succesors ===
trueSuccessor: v408 
falseSuccessor: v400 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v288 #trueSuccessor: v408 #falseSuccessor: v400  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v427  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
v408 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-43035|0xffffffffffff57e5], v10|QWORD[.]] destination: B11 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v398  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v400 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v397 v398 
=== Succesors ===
next: v14 
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v397 v398 #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid i232 <|@
result short[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 33]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v396 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|DWORD, int[0|0x0]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4632096214568281154
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i16 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v15 
values: i3 i43 
=== Succesors ===
=== Usages ===
i43 i53 v420 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v15 values: i3 i43  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v15 
values: i8 i42 
=== Succesors ===
=== Usages ===
v421 v19 i42 i54 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v15 values: i8 i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 49.02316603350529
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 20]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v14 
=== Succesors ===
next: v26 
=== Usages ===
i16 i17 v22 v34 v49 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v14 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i17 
y: i242 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i17 y: i242  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 24]
stamp: void
trueSuccessorProbability: 0.9801483173192863
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v22 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v20 #falseSuccessor: v22  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD, v17|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9801483173192863 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4631959249923211633
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: i414 
=== Usages ===
v273 v282 
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i414  <|@  <|@
f <@~|@floating>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v380 v20 
=== Succesors ===
=== Usages ===
i414 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v380 v20  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
result [v1|QWORD[.] + v16|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i16 
=== Succesors ===
=== Usages ===
i414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i16  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i414 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v273 
address: v420 
=== Succesors ===
next: v40 
=== Usages ===
v233 i235 
=== Predecessor ===
v20 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v273 address: v420 #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 33]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i414 
y: i232 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i414 y: i232  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 33]
stamp: void
trueSuccessorProbability: 0.999442087854871
=== Inputs ===
condition: v233 
=== Succesors ===
trueSuccessor: v30 
falseSuccessor: v34 
=== Usages ===
=== Predecessor ===
i414 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v233 #trueSuccessor: v30 #falseSuccessor: v34  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVSX [v1|QWORD[.] + v16|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.999442087854871 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4631955477079925826
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v175  <|@  <|@
f <@~|@floating>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v396 v20 
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v396 v20  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
result [v4|QWORD[.] + v17|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: i17 
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 49]
resultBits: 8
stamp: i8
=== Inputs ===
value: i414 
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v175 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v282 
address: v421 
value: i235 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v282 address: v421 value: i235 stateAfter: - lastLocationAccess: - #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 40]
stamp: i32
=== Inputs ===
x: i17 
y: i41 
=== Succesors ===
=== Usages ===
i17 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i17 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i43 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 45]
stamp: i32
=== Inputs ===
x: i16 
y: i41 
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i16 y: i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 20]
stamp: void
=== Inputs ===
loopBegin: v15 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v15  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[.] + v17|DWORD * 1 + 16], y: v18|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = INC v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD, v19|DWORD] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4583384004457755851
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v33  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v34 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606940956829725786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v22 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v31 v33 
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v31 v33 #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 2]
stamp: i32
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
v56 ?55 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
v32 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD, v17|DWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B24" "B30" 
    successors "B21" "B37" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4610971008313374101
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i53 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v52 
values: i16 i63 i63 
=== Succesors ===
=== Usages ===
?55 v56 i63 v422 v180 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v52 values: i16 i63 i63  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v52 
values: i17 i69 i118 
=== Succesors ===
=== Usages ===
?55 v114 i69 v202 i118 v423 i116 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v52 values: i17 i69 i118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.8412358617164035
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v51 
=== Succesors ===
next: v62 
=== Usages ===
i53 i54 v59 v113 v119 v341 v336 v316 v321 v326 v331 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v51 #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@33a89f26
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i7 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i53 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 57]
stamp: void
trueSuccessorProbability: 0.45688652888403003
=== Inputs ===
condition: v56 
=== Succesors ===
trueSuccessor: v57 
falseSuccessor: v59 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v56 #trueSuccessor: v57 #falseSuccessor: v59  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD, v23|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.45688652888403003 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B35" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605752398571989802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: i415 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i415 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v419 
=== Succesors ===
next: v317 
=== Usages ===
v180 
=== Predecessor ===
v57 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v419 #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i415 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i53 y: i415  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v313 
falseSuccessor: v316 
=== Usages ===
=== Predecessor ===
i415 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v313 #falseSuccessor: v316  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605752398571989802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
stamp: void
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
i416 
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i54 
y: i412 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i54 y: i412  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v202 
=== Succesors ===
trueSuccessor: v318 
falseSuccessor: v321 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v202 #trueSuccessor: v318 #falseSuccessor: v321  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605752398571989802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
stamp: void
=== Inputs ===
=== Succesors ===
next: i416 
=== Usages ===
v210 v198 
=== Predecessor ===
v322 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i416  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
result [v1|QWORD[.] + v22|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2 
index: i53 
=== Succesors ===
=== Usages ===
i416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i53  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i416 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v313 
address: v422 
=== Succesors ===
next: v68 
=== Usages ===
i188 
=== Predecessor ===
v318 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v313 address: v422 #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$15/2011963623@36917038
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/707624722@2015da8e
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i416 
=== Succesors ===
=== Usages ===
v65 i70 i93 v76 i102 v131 i85 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i416  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result int[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 30]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i103 v65 i96 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:714) [bci: 73]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i188 
y: i28 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i188 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 62]
stamp: i32
=== Inputs ===
x: i53 
y: i41 
=== Succesors ===
=== Usages ===
i53 i53 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i53 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 80]
stamp: i32
=== Inputs ===
x: i54 
y: i41 
=== Succesors ===
=== Usages ===
v212 v424 i54 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i54 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
result [v4|QWORD[.] + v23|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: i54 
=== Succesors ===
=== Usages ===
v210 v198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: i54  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:714) [bci: 73]
stamp: void
trueSuccessorProbability: 0.9439401420486916
=== Inputs ===
condition: v65 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v67 
=== Usages ===
=== Predecessor ===
i416 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v65 #trueSuccessor: v66 #falseSuccessor: v67  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVZX [v1|QWORD[.] + v22|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9439401420486916 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4605327622992080616
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 85]
resultBits: 8
stamp: i8
=== Inputs ===
value: i188 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:716) [bci: 86]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v318 
address: v423 
value: i70 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v318 address: v423 value: i70 stateAfter: - lastLocationAccess: - #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
stamp: void
=== Inputs ===
loopBegin: v52 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v52  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[.] + v23|DWORD * 1 + 16], y: v24|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD, v26|DWORD] destination: B24 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586957230314341404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
result int[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 92]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] ⇊0000000000000800 ⇈0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i188 
y: i75 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i188 y: i75  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v76 
=== Succesors ===
trueSuccessor: v326 
falseSuccessor: v323 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v76 #trueSuccessor: v326 #falseSuccessor: v323  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v372  <|@  <|@
f <@~|@floating>@ <|@
tid i373 <|@
result int[-50963|0xffffffffffff38ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -50963
stableDimension: 0
stamp: i32 [-50963] ⇊00000000ffff38ed ⇈00000000ffff38ed
stampKind: i32
value: int[-50963|0xffffffffffff38ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
v326 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-50963|0xffffffffffff38ed]] destination: B26 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586957230314341404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:717) [bci: 95]
stamp: void
=== Inputs ===
=== Succesors ===
next: v332 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v332  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
result int[55296|0xd800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] ⇊000000000000d800 ⇈000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i188 
y: i130 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i188 y: i130  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v131 
=== Succesors ===
trueSuccessor: v328 
falseSuccessor: v331 
=== Usages ===
=== Predecessor ===
v323 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v131 #trueSuccessor: v328 #falseSuccessor: v331  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586957230314341404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i69 
y: i412 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i69 y: i412  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v212 
=== Succesors ===
trueSuccessor: v333 
falseSuccessor: v336 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v212 #trueSuccessor: v333 #falseSuccessor: v336  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586957230314341404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
stamp: void
=== Inputs ===
=== Succesors ===
next: v342 
=== Usages ===
v220 
=== Predecessor ===
v337 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 318]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 318]
stamp: i32
=== Inputs ===
x: i54 
y: i115 
=== Succesors ===
=== Usages ===
v222 v425 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i54 y: i115  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1872153e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i116 
y: i412 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i116 y: i412  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v338 
falseSuccessor: v341 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v338 #falseSuccessor: v341  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA [v23|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586957230314341404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
stamp: void
=== Inputs ===
=== Succesors ===
next: v210 
=== Usages ===
v230 
=== Predecessor ===
v342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v210  <|@  <|@
f <@~|@floating>@ <|@
tid i84 <|@
result int[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 308]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] ⇊000000000000000c ⇈000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i85 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i85 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 310]
stamp: i32 [0 - 15] ⇈000000000000000f
=== Inputs ===
x: i188 
y: i84 
=== Succesors ===
=== Usages ===
i86 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i188 y: i84  <|@  <|@
f <@~|@floating>@ <|@
tid i83 <|@
result int[224|0xe0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 303]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] ⇊00000000000000e0 ⇈00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i86 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i86 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 311]
stamp: i32 [224 - 239] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
x: i85 
y: i83 
=== Succesors ===
=== Usages ===
i87 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i85 y: i83  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 312]
resultBits: 8
stamp: i8 [-32 - -17] ⇊00000000000000e0 ⇈00000000000000ef
=== Inputs ===
value: i86 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i86  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v210 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v318 
address: v423 
value: i87 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v318 address: v423 value: i87 stateAfter: - lastLocationAccess: - #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
result [v4|QWORD[.] + v26|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: i69 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: i69  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 326]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i93 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$72/635589000@473d8a0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 328]
stamp: i32 [0 - 1023] ⇈00000000000003ff
=== Inputs ===
x: i188 
y: i92 
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i188 y: i92  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
result int[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 329]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i95 i102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 331]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i93 
y: i94 
=== Succesors ===
=== Usages ===
i96 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i93 y: i94  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 332]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i95 
y: i28 
=== Succesors ===
=== Usages ===
i97 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i95 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i97 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 333]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i96 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i96  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v220 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v333 
address: v424 
value: i97 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v333 address: v424 value: i97 stateAfter: - lastLocationAccess: - #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
result [v4|QWORD[.] + v27|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a5 
index: i116 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a5 index: i116  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$74/1321632771@2944b61f
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 349]
stamp: i32 [0 - 63] ⇈000000000000003f
=== Inputs ===
x: i188 
y: i94 
=== Succesors ===
=== Usages ===
i103 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i188 y: i94  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$73/559731038@2cacb542
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 350]
stamp: i32 [128 - 191] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
x: i102 
y: i28 
=== Succesors ===
=== Usages ===
i104 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i102 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i104 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$70/1632585903@17fcd199
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$71/755805331@23b4c6b0
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 351]
resultBits: 8
stamp: i8 [-128 - -65] ⇊0000000000000080 ⇈00000000000000bf
=== Inputs ===
value: i103 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@edc8f610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v338 
address: v425 
value: i104 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v338 address: v425 value: i104 stateAfter: - lastLocationAccess: - #next: v119  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 339]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i118 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/1311929813@11e0ee5a
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 339]
stamp: i32
=== Inputs ===
x: i54 
y: i117 
=== Succesors ===
=== Usages ===
i54 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i54 y: i117  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:742) [bci: 353]
stamp: void
=== Inputs ===
loopBegin: v52 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v52  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHR v24|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = OR v28|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[.] + v23|DWORD * 1 + 16], y: v29|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SHR v24|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = AND v30|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = OR v31|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[.] + v26|DWORD * 1 + 16], y: v32|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = AND v24|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = OR v33|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[.] + v27|DWORD * 1 + 16], y: v34|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA [v23|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD, v35|DWORD] destination: B30 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:740) [bci: 352]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid i379 <|@
result int[-57115|0xffffffffffff20e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -57115
stableDimension: 0
stamp: i32 [-57115] ⇊00000000ffff20e5 ⇈00000000ffff20e5
stampKind: i32
value: int[-57115|0xffffffffffff20e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
v341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-57115|0xffffffffffff20e5]] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:739) [bci: 334]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v376 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
result int[-54555|0xffffffffffff2ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -54555
stableDimension: 0
stamp: i32 [-54555] ⇊00000000ffff2ae5 ⇈00000000ffff2ae5
stampKind: i32
value: int[-54555|0xffffffffffff2ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
v336 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-54555|0xffffffffffff2ae5]] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:721) [bci: 139]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid i375 <|@
result int[-51219|0xffffffffffff37ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -51219
stableDimension: 0
stamp: i32 [-51219] ⇊00000000ffff37ed ⇈00000000ffff37ed
stampKind: i32
value: int[-51219|0xffffffffffff37ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
v331 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51219|0xffffffffffff37ed]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:738) [bci: 313]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v322 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v370  <|@  <|@
f <@~|@floating>@ <|@
tid i371 <|@
result int[-64283|0xffffffffffff04e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -64283
stableDimension: 0
stamp: i32 [-64283] ⇊00000000ffff04e5 ⇈00000000ffff04e5
stampKind: i32
value: int[-64283|0xffffffffffff04e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
v321 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-64283|0xffffffffffff04e5]] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:713) [bci: 65]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid i369 <|@
result int[-46363|0xffffffffffff4ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -46363
stableDimension: 0
stamp: i32 [-46363] ⇊00000000ffff4ae5 ⇈00000000ffff4ae5
stampKind: i32
value: int[-46363|0xffffffffffff4ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
v316 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-46363|0xffffffffffff4ae5]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B26" "B33" "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i365 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-64283 - -46363] ⇊00000000ffff00e5 ⇈00000000ffff7fed
valueDescription: i32
=== Inputs ===
merge: v362 
values: i369 i371 i373 i375 i377 i379 
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v362 values: i369 i371 i373 i375 i377 i379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v368 v370 v372 v374 v376 v378 
=== Succesors ===
next: v367 
=== Usages ===
i365 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v368 v370 v372 v374 v376 v378 #next: v367  <|@  <|@
tid ?55 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encode(char[], int, int, byte[])>
duringCall: false
localsSize: 10
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 712
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i53 - a5 i7 i54 - - - 
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i53 - a5 i7 i54 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid a356 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?55 
actionAndReason: i365 
speculation: a356 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?55 actionAndReason: i365 speculation: a356  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v22|DWORD - v4|QWORD[.] v21|DWORD v23|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:54] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:743) [bci: 356]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v52 
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v52 #next: v114  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:743) [bci: 358]
stamp: void
=== Inputs ===
result: i54 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i54 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:710) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v360 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v360  <|@  <|@
f <@*|@fixed>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
v407 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-43035|0xffffffffffff57e5], v10|QWORD[.]] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v426  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
v392 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-37659|0xffffffffffff6ce5], v10|QWORD[.]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:709) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v357  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
v391 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-37659|0xffffffffffff6ce5], v10|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B1" "B40" "B38" "B39" "B11" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i351 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-43035 - -34827] ⇊00000000ffff40e5 ⇈00000000ffff7ff5
valueDescription: i32
=== Inputs ===
merge: v347 
values: i349 i358 i361 i358 i361 
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v347 values: i349 i358 i361 i358 i361  <|@  <|@
f <@~|@floating>@ <|@
tid a352 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v347 
values: a350 a359 a359 a359 a359 
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v347 values: a350 a359 a359 a359 a359  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v348 v357 v360 v426 v427 
=== Succesors ===
next: v353 
=== Usages ===
i351 a352 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v348 v357 v360 v426 v427 #next: v353  <|@  <|@
f <@*|@fixed>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i351 
speculation: a352 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v347 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i351 speculation: a352  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@35ea81b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - - - - 
>@ <|@ instruction v6|DWORD = MOV [v4|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v6|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVSXD v7|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = DEC v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B40" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVSXD v2|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = ADD (x: v12|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B38" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|DWORD, int[0|0x0]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4631959249923211633
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVSX [v1|QWORD[.] + v16|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.999442087854871 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4631955477079925826
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[.] + v17|DWORD * 1 + 16], y: v18|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = INC v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = INC v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|DWORD, v19|DWORD] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4632096214568281154
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD, v17|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9801483173192863 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606940956829725786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD, v17|DWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B24" "B30" 
    successors "B21" "B37" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4610971008313374101
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD, v23|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v22|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.45688652888403003 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B35" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605752398571989802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605752398571989802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605752398571989802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVZX [v1|QWORD[.] + v22|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = INC v23|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9439401420486916 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4605327622992080616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[.] + v23|DWORD * 1 + 16], y: v24|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD, v26|DWORD] destination: B24 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586957230314341404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586957230314341404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586957230314341404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586957230314341404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA [v23|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586957230314341404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHR v24|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = OR v28|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[.] + v23|DWORD * 1 + 16], y: v29|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SHR v24|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = AND v30|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = OR v31|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[.] + v26|DWORD * 1 + 16], y: v32|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = AND v24|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = OR v33|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[.] + v27|DWORD * 1 + 16], y: v34|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA [v23|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD, v35|DWORD] destination: B30 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4583384004457755851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@392874974] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-43035|0xffffffffffff57e5], v40|QWORD[.]] destination: B11 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B1" "B40" "B38" "B39" "B11" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD v4|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@392874974] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-43035|0xffffffffffff57e5], v39|QWORD[.]] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-50963|0xffffffffffff38ed]] destination: B26 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B26" "B33" "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: v0|QWORD[.] v1|QWORD[.] v22|DWORD - v4|QWORD[.] v21|DWORD v23|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:54] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-51219|0xffffffffffff37ed]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-46363|0xffffffffffff4ae5]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-54555|0xffffffffffff2ae5]] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@392874974] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-37659|0xffffffffffff6ce5], v41|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@392874974] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-37659|0xffffffffffff6ce5], v42|QWORD[.]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-64283|0xffffffffffff04e5]] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1349654251] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-36363|0xffffffffffff71f5], v5|QWORD[.]] destination: B1 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-57115|0xffffffffffff20e5]] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: iadd          
     3: istore        5
     5: iconst_0      
     6: istore        6
     8: iload         6
    10: iload_3       
    11: aload         4
    13: arraylength   
    14: invokestatic  #16         // java.lang.Math.min:(int, int)int
    17: iadd          
    18: istore        7
    20: iload         6
    22: iload         7
    24: if_icmpge     54
    27: aload_1       
    28: iload_2       
    29: caload        
    30: sipush        128
    33: if_icmpge     54
    36: aload         4
    38: iload         6
    40: iinc          
    43: aload_1       
    44: iload_2       
    45: iinc          
    48: caload        
    49: i2b           
    50: bastore       
    51: goto          20
    54: iload_2       
    55: iload         5
    57: if_icmpge     356
    60: aload_1       
    61: iload_2       
    62: iinc          
    65: caload        
    66: istore        8
    68: iload         8
    70: sipush        128
    73: if_icmpge     90
    76: aload         4
    78: iload         6
    80: iinc          
    83: iload         8
    85: i2b           
    86: bastore       
    87: goto          353
    90: iload         8
    92: sipush        2048
    95: if_icmpge     137
    98: aload         4
   100: iload         6
   102: iinc          
   105: sipush        192
   108: iload         8
   110: bipush        6
   112: ishr          
   113: ior           
   114: i2b           
   115: bastore       
   116: aload         4
   118: iload         6
   120: iinc          
   123: sipush        128
   126: iload         8
   128: bipush        63
   130: iand          
   131: ior           
   132: i2b           
   133: bastore       
   134: goto          353
   137: iload         8
   139: invokestatic  #3          // java.lang.Character.isSurrogate:(char)boolean
   142: ifeq          296
   145: aload_0       
   146: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   149: ifnonnull     163
   152: aload_0       
   153: new           #22         // sun.nio.cs.Surrogate$Parser
   156: dup           
   157: invokespecial #19         // sun.nio.cs.Surrogate$Parser.<init>:()void
   160: putfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   163: aload_0       
   164: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   167: iload         8
   169: aload_1       
   170: iload_2       
   171: iconst_1      
   172: isub          
   173: iload         5
   175: invokevirtual #20         // sun.nio.cs.Surrogate$Parser.parse:(char, char[], int, int)int
   178: istore        9
   180: iload         9
   182: ifge          212
   185: aload_0       
   186: invokevirtual #34         // java.nio.charset.CharsetEncoder.malformedInputAction:()java.nio.charset.CodingErrorAction
   189: getstatic     #35         // java.nio.charset.CodingErrorAction.REPLACE:java.nio.charset.CodingErrorAction
   192: if_acmpeq     197
   195: iconst_m1     
   196: ireturn       
   197: aload         4
   199: iload         6
   201: iinc          
   204: aload_0       
   205: getfield      #2          // repl:byte
   208: bastore       
   209: goto          293
   212: aload         4
   214: iload         6
   216: iinc          
   219: sipush        240
   222: iload         9
   224: bipush        18
   226: ishr          
   227: ior           
   228: i2b           
   229: bastore       
   230: aload         4
   232: iload         6
   234: iinc          
   237: sipush        128
   240: iload         9
   242: bipush        12
   244: ishr          
   245: bipush        63
   247: iand          
   248: ior           
   249: i2b           
   250: bastore       
   251: aload         4
   253: iload         6
   255: iinc          
   258: sipush        128
   261: iload         9
   263: bipush        6
   265: ishr          
   266: bipush        63
   268: iand          
   269: ior           
   270: i2b           
   271: bastore       
   272: aload         4
   274: iload         6
   276: iinc          
   279: sipush        128
   282: iload         9
   284: bipush        63
   286: iand          
   287: ior           
   288: i2b           
   289: bastore       
   290: iinc          
   293: goto          353
   296: aload         4
   298: iload         6
   300: iinc          
   303: sipush        224
   306: iload         8
   308: bipush        12
   310: ishr          
   311: ior           
   312: i2b           
   313: bastore       
   314: aload         4
   316: iload         6
   318: iinc          
   321: sipush        128
   324: iload         8
   326: bipush        6
   328: ishr          
   329: bipush        63
   331: iand          
   332: ior           
   333: i2b           
   334: bastore       
   335: aload         4
   337: iload         6
   339: iinc          
   342: sipush        128
   345: iload         8
   347: bipush        63
   349: iand          
   350: ior           
   351: i2b           
   352: bastore       
   353: goto          54
   356: iload         6
   358: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@35ea81b7 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV [r9|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   24  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr   28  <|@ instruction r11|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr   32  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B40" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rbx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction rdi|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   42  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction rbp|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP (x: rbp|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B38" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4631959249923211633
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  104  <|@ instruction rdi|DWORD = MOVSX [rdx|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP rdi|DWORD y: 128 size: WORD <|@ <|@
      nr  108  <|@ instruction BRANCH trueDestinationProbability: 0.999442087854871 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4631955477079925826
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction MOVB (x: [r9|QWORD[.] + rbx|DWORD * 1 + 16], y: rdi|DWORD) size: BYTE <|@ <|@
      nr  114  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4632096214568281154
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.9801483173192863 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606940956829725786
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B24" "B30" 
    successors "B21" "B37" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4610971008313374101
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  132  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 0.45688652888403003 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B35" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605752398571989802
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction CMP (x: r11|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605752398571989802
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605752398571989802
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rax|DWORD = MOVZX [rdx|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  152  <|@ instruction rbx|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  154  <|@ instruction rdi|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  156  <|@ instruction CMP rax|DWORD y: 128 size: DWORD <|@ <|@
      nr  158  <|@ instruction BRANCH trueDestinationProbability: 0.9439401420486916 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4605327622992080616
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction MOVB (x: [r9|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B24 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586957230314341404
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction CMP rax|DWORD y: 2048 size: DWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586957230314341404
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction CMP rax|DWORD y: 55296 size: DWORD <|@ <|@
      nr  176  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586957230314341404
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586957230314341404
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction rbp|DWORD = LEA [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  188  <|@ instruction CMP (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586957230314341404
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction r11|DWORD = SHR rax|DWORD y: 12 size: DWORD <|@ <|@
      nr  196  <|@ instruction r11|DWORD = OR r11|DWORD y: 224 size: DWORD <|@ <|@
      nr  198  <|@ instruction MOVB (x: [r9|QWORD[.] + r8|DWORD * 1 + 16], y: r11|DWORD) size: BYTE <|@ <|@
      nr  200  <|@ instruction r11|DWORD = SHR rax|DWORD y: 6 size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = AND r11|DWORD y: 63 size: DWORD <|@ <|@
      nr  204  <|@ instruction r11|DWORD = OR r11|DWORD y: 128 size: DWORD <|@ <|@
      nr  206  <|@ instruction MOVB (x: [r9|QWORD[.] + rdi|DWORD * 1 + 16], y: r11|DWORD) size: BYTE <|@ <|@
      nr  208  <|@ instruction rax|DWORD = AND rax|DWORD y: 63 size: DWORD <|@ <|@
      nr  210  <|@ instruction rax|DWORD = OR rax|DWORD y: 128 size: DWORD <|@ <|@
      nr  212  <|@ instruction MOVB (x: [r9|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  214  <|@ instruction r8|DWORD = LEA [r8|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B30 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4583384004457755851
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@392874974] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-43035|0xffffffffffff57e5] // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B11 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B1" "B40" "B38" "B39" "B11" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  296  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@392874974] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-43035|0xffffffffffff57e5] // MoveResolver resolve mapping <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-50963|0xffffffffffff38ed] // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B26 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B26" "B33" "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD - r9|QWORD[.] rcx|DWORD r8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:54] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-51219|0xffffffffffff37ed] // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-46363|0xffffffffffff4ae5] // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54555|0xffffffffffff2ae5] // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@392874974] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-37659|0xffffffffffff6ce5] // MoveResolver resolve mapping <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@392874974] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-37659|0xffffffffffff6ce5] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-64283|0xffffffffffff04e5] // MoveResolver resolve mapping <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1349654251] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-36363|0xffffffffffff71f5] // MoveResolver resolve mapping <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B1 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-57115|0xffffffffffff20e5] // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: iadd          
     3: istore        5
     5: iconst_0      
     6: istore        6
     8: iload         6
    10: iload_3       
    11: aload         4
    13: arraylength   
    14: invokestatic  #16         // java.lang.Math.min:(int, int)int
    17: iadd          
    18: istore        7
    20: iload         6
    22: iload         7
    24: if_icmpge     54
    27: aload_1       
    28: iload_2       
    29: caload        
    30: sipush        128
    33: if_icmpge     54
    36: aload         4
    38: iload         6
    40: iinc          
    43: aload_1       
    44: iload_2       
    45: iinc          
    48: caload        
    49: i2b           
    50: bastore       
    51: goto          20
    54: iload_2       
    55: iload         5
    57: if_icmpge     356
    60: aload_1       
    61: iload_2       
    62: iinc          
    65: caload        
    66: istore        8
    68: iload         8
    70: sipush        128
    73: if_icmpge     90
    76: aload         4
    78: iload         6
    80: iinc          
    83: iload         8
    85: i2b           
    86: bastore       
    87: goto          353
    90: iload         8
    92: sipush        2048
    95: if_icmpge     137
    98: aload         4
   100: iload         6
   102: iinc          
   105: sipush        192
   108: iload         8
   110: bipush        6
   112: ishr          
   113: ior           
   114: i2b           
   115: bastore       
   116: aload         4
   118: iload         6
   120: iinc          
   123: sipush        128
   126: iload         8
   128: bipush        63
   130: iand          
   131: ior           
   132: i2b           
   133: bastore       
   134: goto          353
   137: iload         8
   139: invokestatic  #3          // java.lang.Character.isSurrogate:(char)boolean
   142: ifeq          296
   145: aload_0       
   146: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   149: ifnonnull     163
   152: aload_0       
   153: new           #22         // sun.nio.cs.Surrogate$Parser
   156: dup           
   157: invokespecial #19         // sun.nio.cs.Surrogate$Parser.<init>:()void
   160: putfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   163: aload_0       
   164: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   167: iload         8
   169: aload_1       
   170: iload_2       
   171: iconst_1      
   172: isub          
   173: iload         5
   175: invokevirtual #20         // sun.nio.cs.Surrogate$Parser.parse:(char, char[], int, int)int
   178: istore        9
   180: iload         9
   182: ifge          212
   185: aload_0       
   186: invokevirtual #34         // java.nio.charset.CharsetEncoder.malformedInputAction:()java.nio.charset.CodingErrorAction
   189: getstatic     #35         // java.nio.charset.CodingErrorAction.REPLACE:java.nio.charset.CodingErrorAction
   192: if_acmpeq     197
   195: iconst_m1     
   196: ireturn       
   197: aload         4
   199: iload         6
   201: iinc          
   204: aload_0       
   205: getfield      #2          // repl:byte
   208: bastore       
   209: goto          293
   212: aload         4
   214: iload         6
   216: iinc          
   219: sipush        240
   222: iload         9
   224: bipush        18
   226: ishr          
   227: ior           
   228: i2b           
   229: bastore       
   230: aload         4
   232: iload         6
   234: iinc          
   237: sipush        128
   240: iload         9
   242: bipush        12
   244: ishr          
   245: bipush        63
   247: iand          
   248: ior           
   249: i2b           
   250: bastore       
   251: aload         4
   253: iload         6
   255: iinc          
   258: sipush        128
   261: iload         9
   263: bipush        6
   265: ishr          
   266: bipush        63
   268: iand          
   269: ior           
   270: i2b           
   271: bastore       
   272: aload         4
   274: iload         6
   276: iinc          
   279: sipush        128
   282: iload         9
   284: bipush        63
   286: iand          
   287: ior           
   288: i2b           
   289: bastore       
   290: iinc          
   293: goto          353
   296: aload         4
   298: iload         6
   300: iinc          
   303: sipush        224
   306: iload         8
   308: bipush        12
   310: ishr          
   311: ior           
   312: i2b           
   313: bastore       
   314: aload         4
   316: iload         6
   318: iinc          
   321: sipush        128
   324: iload         8
   326: bipush        6
   328: ishr          
   329: bipush        63
   331: iand          
   332: ior           
   333: i2b           
   334: bastore       
   335: aload         4
   337: iload         6
   339: iinc          
   342: sipush        128
   345: iload         8
   347: bipush        63
   349: iand          
   350: ior           
   351: i2b           
   352: bastore       
   353: goto          54
   356: iload         6
   358: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@35ea81b7 slotKind: QWORD <|@ <|@
      nr   16  <|@ instruction TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV [r9|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   24  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction rax|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr   28  <|@ instruction r11|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr   30  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr   32  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B7 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B40" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rbx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction rdi|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr   42  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction rbp|QWORD = MOV rbx|DWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP (x: rbp|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B13" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B13 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B38" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B13" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4631959249923211633
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  104  <|@ instruction rdi|DWORD = MOVSX [rdx|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  106  <|@ instruction CMP rdi|DWORD y: 128 size: WORD <|@ <|@
      nr  108  <|@ instruction BRANCH trueDestinationProbability: 0.999442087854871 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4631955477079925826
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction MOVB (x: [r9|QWORD[.] + rbx|DWORD * 1 + 16], y: rdi|DWORD) size: BYTE <|@ <|@
      nr  114  <|@ instruction rbx|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr  116  <|@ instruction r11|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4632096214568281154
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   98  <|@ instruction CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.9801483173192863 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B24" "B30" 
    successors "B21" "B37" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4610971008313374101
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  132  <|@ instruction CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 0.45688652888403003 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B35" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605752398571989802
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction CMP (x: r11|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B34" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605752398571989802
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605752398571989802
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rax|DWORD = MOVZX [rdx|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  152  <|@ instruction rbx|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  154  <|@ instruction rdi|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  156  <|@ instruction CMP rax|DWORD y: 128 size: DWORD <|@ <|@
      nr  158  <|@ instruction BRANCH trueDestinationProbability: 0.9439401420486916 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4605327622992080616
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction MOVB (x: [r9|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B24 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586957230314341404
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction CMP rax|DWORD y: 2048 size: DWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B33" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586957230314341404
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction CMP rax|DWORD y: 55296 size: DWORD <|@ <|@
      nr  176  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B32" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586957230314341404
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4586957230314341404
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction rbp|DWORD = LEA [r8|DWORD + 2] size: DWORD <|@ <|@
      nr  188  <|@ instruction CMP (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B20" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4586957230314341404
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction r11|DWORD = SHR rax|DWORD y: 12 size: DWORD <|@ <|@
      nr  196  <|@ instruction r11|DWORD = OR r11|DWORD y: 224 size: DWORD <|@ <|@
      nr  198  <|@ instruction MOVB (x: [r9|QWORD[.] + r8|DWORD * 1 + 16], y: r11|DWORD) size: BYTE <|@ <|@
      nr  200  <|@ instruction r11|DWORD = SHR rax|DWORD y: 6 size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = AND r11|DWORD y: 63 size: DWORD <|@ <|@
      nr  204  <|@ instruction r11|DWORD = OR r11|DWORD y: 128 size: DWORD <|@ <|@
      nr  206  <|@ instruction MOVB (x: [r9|QWORD[.] + rdi|DWORD * 1 + 16], y: r11|DWORD) size: BYTE <|@ <|@
      nr  208  <|@ instruction rax|DWORD = AND rax|DWORD y: 63 size: DWORD <|@ <|@
      nr  210  <|@ instruction rax|DWORD = OR rax|DWORD y: 128 size: DWORD <|@ <|@
      nr  212  <|@ instruction MOVB (x: [r9|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  214  <|@ instruction r8|DWORD = LEA [r8|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B30 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@392874974] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-43035|0xffffffffffff57e5] // MoveResolver resolve mapping <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B11 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B1" "B40" "B38" "B39" "B11" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  296  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD r9|QWORD[.] - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@392874974] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-43035|0xffffffffffff57e5] // MoveResolver resolve mapping <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-50963|0xffffffffffff38ed] // MoveResolver resolve mapping <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B26 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" "B26" "B33" "B32" "B31" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  266  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  268  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  270  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54]
locals: rsi|QWORD[.] rdx|QWORD[.] r11|DWORD - r9|QWORD[.] rcx|DWORD r8|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:54] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-51219|0xffffffffffff37ed] // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-46363|0xffffffffffff4ae5] // MoveResolver resolve mapping <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54555|0xffffffffffff2ae5] // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B32 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@392874974] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-37659|0xffffffffffff6ce5] // MoveResolver resolve mapping <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@392874974] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-37659|0xffffffffffff6ce5] // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-64283|0xffffffffffff04e5] // MoveResolver resolve mapping <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1349654251] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-36363|0xffffffffffff71f5] // MoveResolver resolve mapping <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B1 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-57115|0xffffffffffff20e5] // MoveResolver resolve mapping <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B31 -> B36 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: iload_3       
     2: iadd          
     3: istore        5
     5: iconst_0      
     6: istore        6
     8: iload         6
    10: iload_3       
    11: aload         4
    13: arraylength   
    14: invokestatic  #16         // java.lang.Math.min:(int, int)int
    17: iadd          
    18: istore        7
    20: iload         6
    22: iload         7
    24: if_icmpge     54
    27: aload_1       
    28: iload_2       
    29: caload        
    30: sipush        128
    33: if_icmpge     54
    36: aload         4
    38: iload         6
    40: iinc          
    43: aload_1       
    44: iload_2       
    45: iinc          
    48: caload        
    49: i2b           
    50: bastore       
    51: goto          20
    54: iload_2       
    55: iload         5
    57: if_icmpge     356
    60: aload_1       
    61: iload_2       
    62: iinc          
    65: caload        
    66: istore        8
    68: iload         8
    70: sipush        128
    73: if_icmpge     90
    76: aload         4
    78: iload         6
    80: iinc          
    83: iload         8
    85: i2b           
    86: bastore       
    87: goto          353
    90: iload         8
    92: sipush        2048
    95: if_icmpge     137
    98: aload         4
   100: iload         6
   102: iinc          
   105: sipush        192
   108: iload         8
   110: bipush        6
   112: ishr          
   113: ior           
   114: i2b           
   115: bastore       
   116: aload         4
   118: iload         6
   120: iinc          
   123: sipush        128
   126: iload         8
   128: bipush        63
   130: iand          
   131: ior           
   132: i2b           
   133: bastore       
   134: goto          353
   137: iload         8
   139: invokestatic  #3          // java.lang.Character.isSurrogate:(char)boolean
   142: ifeq          296
   145: aload_0       
   146: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   149: ifnonnull     163
   152: aload_0       
   153: new           #22         // sun.nio.cs.Surrogate$Parser
   156: dup           
   157: invokespecial #19         // sun.nio.cs.Surrogate$Parser.<init>:()void
   160: putfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   163: aload_0       
   164: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   167: iload         8
   169: aload_1       
   170: iload_2       
   171: iconst_1      
   172: isub          
   173: iload         5
   175: invokevirtual #20         // sun.nio.cs.Surrogate$Parser.parse:(char, char[], int, int)int
   178: istore        9
   180: iload         9
   182: ifge          212
   185: aload_0       
   186: invokevirtual #34         // java.nio.charset.CharsetEncoder.malformedInputAction:()java.nio.charset.CodingErrorAction
   189: getstatic     #35         // java.nio.charset.CodingErrorAction.REPLACE:java.nio.charset.CodingErrorAction
   192: if_acmpeq     197
   195: iconst_m1     
   196: ireturn       
   197: aload         4
   199: iload         6
   201: iinc          
   204: aload_0       
   205: getfield      #2          // repl:byte
   208: bastore       
   209: goto          293
   212: aload         4
   214: iload         6
   216: iinc          
   219: sipush        240
   222: iload         9
   224: bipush        18
   226: ishr          
   227: ior           
   228: i2b           
   229: bastore       
   230: aload         4
   232: iload         6
   234: iinc          
   237: sipush        128
   240: iload         9
   242: bipush        12
   244: ishr          
   245: bipush        63
   247: iand          
   248: ior           
   249: i2b           
   250: bastore       
   251: aload         4
   253: iload         6
   255: iinc          
   258: sipush        128
   261: iload         9
   263: bipush        6
   265: ishr          
   266: bipush        63
   268: iand          
   269: ior           
   270: i2b           
   271: bastore       
   272: aload         4
   274: iload         6
   276: iinc          
   279: sipush        128
   282: iload         9
   284: bipush        63
   286: iand          
   287: ior           
   288: i2b           
   289: bastore       
   290: iinc          
   293: goto          353
   296: aload         4
   298: iload         6
   300: iinc          
   303: sipush        224
   306: iload         8
   308: bipush        12
   310: ishr          
   311: ior           
   312: i2b           
   313: bastore       
   314: aload         4
   316: iload         6
   318: iinc          
   321: sipush        128
   324: iload         8
   326: bipush        6
   328: ishr          
   329: bipush        63
   331: iand          
   332: ior           
   333: i2b           
   334: bastore       
   335: aload         4
   337: iload         6
   339: iinc          
   342: sipush        128
   345: iload         8
   347: bipush        63
   349: iand          
   350: ior           
   351: i2b           
   352: bastore       
   353: goto          54
   356: iload         6
   358: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104885d20f8407020000458b510c453bc2418bc0410f4fc24c63d849ffcb83f8010f8c1c0000008b5a0c4863f94903fb8beb483bef0f86a10100003bd90f86ae01000083f8010f8c15000000418bda493bdb0f863d0100004585d20f840d010000bb00000000448bd9e91e000000666690420fbf7c5a106681ff80000f830e00000041887c1910ffc341ffc33bc37fe14103c8448bc36666660f1f840000000000413bcb0f8eae000000443b5a0c0f8318010000453bd00f864c010000420fb7445a10418bdbffc3418bf8ffc781f8800000000f830d0000004388440110448bc7448bdbebbb81f8000800000f82b800000081f800d800000f83c6000000443bd70f86cd000000418d6802443bd50f8615010000448bd841c1eb0c4181cbe000000047885c0110448bd841c1eb064183e33f4181cb8000000045885c391083e03f81c8800000004188442910458d4003448bdbe949ffffff418bc0488b6c24104883c418850500000000c5f877c349baaddeaddeaddeadde4d8bda41bae557ffff4589979c0200004d899fa8020000e8000000009049baaddeaddeaddeadde4d8bda41bae557ffffebd741baed38ffff4589979c0200004d89a7a8020000e8000000009041baed37ffffebe441bae54affffebdc41bae52affffebd449baaddeaddeaddeadde4d8bda41bae56cffffeb9049baaddeaddeaddeadde4d8bda41bae56cffffe978ffffff41bae504ffffeb9f49baaddeaddeaddeadde4d8bda41baf571ffffe958ffffff41bae520ffffe97cffffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@35ea81b7 slotKind: QWORD  <||@
  Comment 48 16 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 51 18 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 57 block B2 null  <||@
  Comment 57 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 57 22 r10|DWORD = MOV [r9|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 57 [rdx:0, rsi:0, r9:0]at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 57 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 61 24 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 64 26 rax|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: >  <||@
  Comment 71 28 r11|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 74 30 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 77 32 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 80 34 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B7 falseDestination: B2 -> B4  <||@
  Comment 86 block B4 null  <||@
  Comment 86 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 38 rbx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 89 40 rdi|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 92 42 rdi|QWORD = ADD (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 95 44 rbp|QWORD = MOV rbx|DWORD size: DWORD  <||@
  Comment 97 46 CMP (x: rbp|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 100 48 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B40  <||@
  Comment 106 block B5 null  <||@
  Comment 106 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 106 52 CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 108 54 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B39  <||@
  Comment 114 block B7 null  <||@
  Comment 114 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 66 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 117 68 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B13 falseDestination: B7 -> B9  <||@
  Comment 123 block B9 null  <||@
  Comment 123 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 72 rbx|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 126 74 CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 129 76 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B38  <||@
  Comment 135 block B10 null  <||@
  Comment 135 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 80 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 138 82 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13  <||@
  Comment 144 block B13 null  <||@
  Comment 144 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 144 -1 rbx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 149 -1 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 152 94 JUMP ~[] destination: B13 -> B14  <||@
  Comment 157 block B15 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 157 102 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 104 rdi|DWORD = MOVSX [rdx|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD  <||@
  Comment 166 106 CMP rdi|DWORD y: 128 size: WORD  <||@
  Comment 171 108 BRANCH trueDestinationProbability: 0.999442087854871 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B19  <||@
  Comment 177 block B16 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 177 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 177 112 MOVB (x: [r9|QWORD[.] + rbx|DWORD * 1 + 16], y: rdi|DWORD) size: BYTE  <||@
  Comment 182 114 rbx|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 184 116 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 187 118 JUMP ~[] destination: B16 -> B14  <||@
  Comment 187 block B14 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 187 96 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 187 98 CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 189 100 BRANCH trueDestinationProbability: 0.9801483173192863 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B19  <||@
  Comment 191 block B19 null  <||@
  Comment 191 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 191 126 rcx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 194 -1 r8|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 197 128 JUMP ~[] destination: B19 -> B20  <||@
  Comment 197 block B20 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 197 130 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 208 132 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 211 134 BRANCH trueDestinationProbability: 0.45688652888403003 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B37  <||@
  Comment 217 block B21 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 217 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 217 138 CMP (x: r11|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 221 140 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B35  <||@
  Comment 227 block B22 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 227 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 227 144 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 230 146 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B34  <||@
  Comment 236 block B23 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 236 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 236 150 rax|DWORD = MOVZX [rdx|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD  <||@
  Comment 242 152 rbx|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 247 154 rdi|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 252 156 CMP rax|DWORD y: 128 size: DWORD  <||@
  Comment 258 158 BRANCH trueDestinationProbability: 0.9439401420486916 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 264 block B24 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 264 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 264 162 MOVB (x: [r9|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 269 -1 r8|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 272 -1 r11|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 275 164 JUMP ~[] destination: B24 -> B20  <||@
  Comment 277 block B25 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 277 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 277 168 CMP rax|DWORD y: 2048 size: DWORD  <||@
  Comment 283 170 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 289 block B27 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 289 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 289 174 CMP rax|DWORD y: 55296 size: DWORD  <||@
  Comment 295 176 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B33  <||@
  Comment 301 block B28 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 301 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 301 180 CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 304 182 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B32  <||@
  Comment 310 block B29 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 310 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 310 186 rbp|DWORD = LEA [r8|DWORD + 2] size: DWORD  <||@
  Comment 314 188 CMP (x: r10|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 317 190 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 323 block B30 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 323 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 323 194 r11|DWORD = SHR rax|DWORD y: 12 size: DWORD  <||@
  Comment 330 196 r11|DWORD = OR r11|DWORD y: 224 size: DWORD  <||@
  Comment 337 198 MOVB (x: [r9|QWORD[.] + r8|DWORD * 1 + 16], y: r11|DWORD) size: BYTE  <||@
  Comment 342 200 r11|DWORD = SHR rax|DWORD y: 6 size: DWORD  <||@
  Comment 349 202 r11|DWORD = AND r11|DWORD y: 63 size: DWORD  <||@
  Comment 353 204 r11|DWORD = OR r11|DWORD y: 128 size: DWORD  <||@
  Comment 360 206 MOVB (x: [r9|QWORD[.] + rdi|DWORD * 1 + 16], y: r11|DWORD) size: BYTE  <||@
  Comment 365 208 rax|DWORD = AND rax|DWORD y: 63 size: DWORD  <||@
  Comment 368 210 rax|DWORD = OR rax|DWORD y: 128 size: DWORD  <||@
  Comment 374 212 MOVB (x: [r9|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 379 214 r8|DWORD = LEA [r8|DWORD + 3] size: DWORD  <||@
  Comment 383 -1 r11|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 386 216 JUMP ~[] destination: B30 -> B20  <||@
  Comment 391 block B37 null  <||@
  Comment 391 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 391 220 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 394 222 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 403 12  <||@
  Comment 413 block B11 null  <||@
  Comment 413 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 413 230 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@392874974]  <||@
  Comment 413 {Object[d.a@392874974]}  <||@
  Comment 423 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 426 -1 r10|DWORD = MOVE input: int[-43035|0xffffffffffff57e5]  <||@
  Comment 432 232 JUMP ~[] destination: B11 -> B41  <||@
  Comment 432 block B41 null  <||@
  Comment 432 290 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 432 292 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 439 294 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 446 296 DEOPT info [bci:0]  <||@
  Comment 446 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 451 [rdx:0, rsi:0, r9:0]at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 452 block B38 null  <||@
  Comment 452 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 452 274 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@392874974]  <||@
  Comment 452 {Object[d.a@392874974]}  <||@
  Comment 462 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 465 -1 r10|DWORD = MOVE input: int[-43035|0xffffffffffff57e5]  <||@
  Comment 471 276 JUMP ~[] destination: B38 -> B41  <||@
  Comment 473 block B26 null  <||@
  Comment 473 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 473 -1 r10|DWORD = MOVE input: int[-50963|0xffffffffffff38ed]  <||@
  Comment 479 248 JUMP ~[] destination: B26 -> B36  <||@
  Comment 479 block B36 null  <||@
  Comment 479 264 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 479 266 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 486 268 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 493 270 DEOPT info [bci:54]  <||@
  Comment 493 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 498 [rdx:0, rsi:0, r9:0]at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4            |5          |6         |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |-  |r9|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-   <||@
  Comment 499 block B33 null  <||@
  Comment 499 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 499 -1 r10|DWORD = MOVE input: int[-51219|0xffffffffffff37ed]  <||@
  Comment 505 244 JUMP ~[] destination: B33 -> B36  <||@
  Comment 507 block B35 null  <||@
  Comment 507 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 507 -1 r10|DWORD = MOVE input: int[-46363|0xffffffffffff4ae5]  <||@
  Comment 513 262 JUMP ~[] destination: B35 -> B36  <||@
  Comment 515 block B32 null  <||@
  Comment 515 238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 515 -1 r10|DWORD = MOVE input: int[-54555|0xffffffffffff2ae5]  <||@
  Comment 521 240 JUMP ~[] destination: B32 -> B36  <||@
  Comment 523 block B40 null  <||@
  Comment 523 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 523 280 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@392874974]  <||@
  Comment 523 {Object[d.a@392874974]}  <||@
  Comment 533 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 536 -1 r10|DWORD = MOVE input: int[-37659|0xffffffffffff6ce5]  <||@
  Comment 542 282 JUMP ~[] destination: B40 -> B41  <||@
  Comment 544 block B39 null  <||@
  Comment 544 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 544 256 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@392874974]  <||@
  Comment 544 {Object[d.a@392874974]}  <||@
  Comment 554 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 557 -1 r10|DWORD = MOVE input: int[-37659|0xffffffffffff6ce5]  <||@
  Comment 563 258 JUMP ~[] destination: B39 -> B41  <||@
  Comment 568 block B34 null  <||@
  Comment 568 250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 568 -1 r10|DWORD = MOVE input: int[-64283|0xffffffffffff04e5]  <||@
  Comment 574 252 JUMP ~[] destination: B34 -> B36  <||@
  Comment 576 block B1 null  <||@
  Comment 576 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 576 286 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1349654251]  <||@
  Comment 576 {Object[d.a@1349654251]}  <||@
  Comment 586 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 589 -1 r10|DWORD = MOVE input: int[-36363|0xffffffffffff71f5]  <||@
  Comment 595 288 JUMP ~[] destination: B1 -> B41  <||@
  Comment 600 block B31 null  <||@
  Comment 600 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 600 -1 r10|DWORD = MOVE input: int[-57115|0xffffffffffff20e5]  <||@
  Comment 606 236 JUMP ~[] destination: B31 -> B36  <||@
  Comment 611 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 611 4  <||@
  Comment 617 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 617 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-171[sun.nio.cs.UTF_8$Encoder.encode(char[], int, int, byte[])]"
  method "HotSpotCompilation-171[sun.nio.cs.UTF_8$Encoder.encode(char[], int, int, byte[])]"
  date 1526687556911
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 119436820 448b560849c1e203493bc20f852fe65cff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104885d20f8407020000458b510c453bc2418bc0410f4fc24c63d849ffcb83f8010f8c1c0000008b5a0c4863f94903fb8beb483bef0f86a10100003bd90f86ae01000083f8010f8c15000000418bda493bdb0f863d0100004585d20f840d010000bb00000000448bd9e91e000000666690420fbf7c5a106681ff80000f830e00000041887c1910ffc341ffc33bc37fe14103c8448bc36666660f1f840000000000413bcb0f8eae000000443b5a0c0f8318010000453bd00f864c010000420fb7445a10418bdbffc3418bf8ffc781f8800000000f830d0000004388440110448bc7448bdbebbb81f8000800000f82b800000081f800d800000f83c6000000443bd70f86cd000000418d6802443bd50f8615010000448bd841c1eb0c4181cbe000000047885c0110448bd841c1eb064183e33f4181cb8000000045885c391083e03f81c8800000004188442910458d4003448bdbe949ffffff418bc0488b6c24104883c41885054d56aaf0c5f877c349bac8cde670070000004d8bda41bae557ffff4589979c0200004d899fa8020000e81bfc5cff9049bac8cde670070000004d8bda41bae557ffffebd741baed38ffff4589979c0200004d89a7a8020000e8ecfb5cff9041baed37ffffebe441bae54affffebdc41bae52affffebd449bac8cde670070000004d8bda41bae56cffffeb9049bac8cde670070000004d8bda41bae56cffffe978ffffff41bae504ffffeb9f49ba58cce670070000004d8bda41baf571ffffe958ffffff41bae520ffffe97cffffffe8188d9cff90e872fa5cff90f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10b0a1f78, value=0x118a04e60]:0x118a04e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@35ea81b7 slotKind: QWORD  <||@
  Comment 48 16 TEST (x: rdx|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 51 18 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 57 block B2 null  <||@
  Comment 57 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 57 22 r10|DWORD = MOV [r9|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 57 [rdx:0, rsi:0, r9:0]at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 57 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 61 24 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 64 26 rax|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: >  <||@
  Comment 71 28 r11|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 74 30 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 77 32 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 80 34 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B7 falseDestination: B2 -> B4  <||@
  Comment 86 block B4 null  <||@
  Comment 86 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 38 rbx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 89 40 rdi|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 92 42 rdi|QWORD = ADD (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 95 44 rbp|QWORD = MOV rbx|DWORD size: DWORD  <||@
  Comment 97 46 CMP (x: rbp|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 100 48 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B40  <||@
  Comment 106 block B5 null  <||@
  Comment 106 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 106 52 CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 108 54 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B5 -> B7 falseDestination: B5 -> B39  <||@
  Comment 114 block B7 null  <||@
  Comment 114 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 66 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 117 68 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B13 falseDestination: B7 -> B9  <||@
  Comment 123 block B9 null  <||@
  Comment 123 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 72 rbx|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 126 74 CMP (x: rbx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 129 76 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B38  <||@
  Comment 135 block B10 null  <||@
  Comment 135 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 80 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 138 82 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B13  <||@
  Comment 144 block B13 null  <||@
  Comment 144 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 144 -1 rbx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 149 -1 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 152 94 JUMP ~[] destination: B13 -> B14  <||@
  Comment 157 block B15 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 157 102 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 104 rdi|DWORD = MOVSX [rdx|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD  <||@
  Comment 166 106 CMP rdi|DWORD y: 128 size: WORD  <||@
  Comment 171 108 BRANCH trueDestinationProbability: 0.999442087854871 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B19  <||@
  Comment 177 block B16 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 177 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 177 112 MOVB (x: [r9|QWORD[.] + rbx|DWORD * 1 + 16], y: rdi|DWORD) size: BYTE  <||@
  Comment 182 114 rbx|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 184 116 r11|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 187 118 JUMP ~[] destination: B16 -> B14  <||@
  Comment 187 block B14 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 187 96 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 187 98 CMP (x: rax|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 189 100 BRANCH trueDestinationProbability: 0.9801483173192863 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B19  <||@
  Comment 191 block B19 null  <||@
  Comment 191 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 191 126 rcx|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 194 -1 r8|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 197 128 JUMP ~[] destination: B19 -> B20  <||@
  Comment 197 block B20 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 197 130 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 208 132 CMP (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 211 134 BRANCH trueDestinationProbability: 0.45688652888403003 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B37  <||@
  Comment 217 block B21 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 217 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 217 138 CMP (x: r11|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 221 140 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B21 -> B22 falseDestination: B21 -> B35  <||@
  Comment 227 block B22 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 227 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 227 144 CMP (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 230 146 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B34  <||@
  Comment 236 block B23 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 236 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 236 150 rax|DWORD = MOVZX [rdx|QWORD[.] + r11|DWORD * 2 + 16] size: DWORD  <||@
  Comment 242 152 rbx|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 247 154 rdi|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 252 156 CMP rax|DWORD y: 128 size: DWORD  <||@
  Comment 258 158 BRANCH trueDestinationProbability: 0.9439401420486916 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 264 block B24 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 264 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 264 162 MOVB (x: [r9|QWORD[.] + r8|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 269 -1 r8|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 272 -1 r11|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 275 164 JUMP ~[] destination: B24 -> B20  <||@
  Comment 277 block B25 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 277 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 277 168 CMP rax|DWORD y: 2048 size: DWORD  <||@
  Comment 283 170 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 289 block B27 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 289 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 289 174 CMP rax|DWORD y: 55296 size: DWORD  <||@
  Comment 295 176 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B33  <||@
  Comment 301 block B28 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 301 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 301 180 CMP (x: r10|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 304 182 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B32  <||@
  Comment 310 block B29 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 310 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 310 186 rbp|DWORD = LEA [r8|DWORD + 2] size: DWORD  <||@
  Comment 314 188 CMP (x: r10|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 317 190 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 323 block B30 loop 1 depth 1 header:52|LoopBegin  <||@
  Comment 323 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 323 194 r11|DWORD = SHR rax|DWORD y: 12 size: DWORD  <||@
  Comment 330 196 r11|DWORD = OR r11|DWORD y: 224 size: DWORD  <||@
  Comment 337 198 MOVB (x: [r9|QWORD[.] + r8|DWORD * 1 + 16], y: r11|DWORD) size: BYTE  <||@
  Comment 342 200 r11|DWORD = SHR rax|DWORD y: 6 size: DWORD  <||@
  Comment 349 202 r11|DWORD = AND r11|DWORD y: 63 size: DWORD  <||@
  Comment 353 204 r11|DWORD = OR r11|DWORD y: 128 size: DWORD  <||@
  Comment 360 206 MOVB (x: [r9|QWORD[.] + rdi|DWORD * 1 + 16], y: r11|DWORD) size: BYTE  <||@
  Comment 365 208 rax|DWORD = AND rax|DWORD y: 63 size: DWORD  <||@
  Comment 368 210 rax|DWORD = OR rax|DWORD y: 128 size: DWORD  <||@
  Comment 374 212 MOVB (x: [r9|QWORD[.] + rbp|DWORD * 1 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 379 214 r8|DWORD = LEA [r8|DWORD + 3] size: DWORD  <||@
  Comment 383 -1 r11|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 386 216 JUMP ~[] destination: B30 -> B20  <||@
  Comment 391 block B37 null  <||@
  Comment 391 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 391 220 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 394 222 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@69d7a7b  <||@
  Comment 403 12  <||@
  Comment 413 block B11 null  <||@
  Comment 413 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 413 230 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@392874974]  <||@
  Comment 413 {Object[d.a@392874974]}  <||@
  Comment 423 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 426 -1 r10|DWORD = MOVE input: int[-43035|0xffffffffffff57e5]  <||@
  Comment 432 232 JUMP ~[] destination: B11 -> B41  <||@
  Comment 432 block B41 null  <||@
  Comment 432 290 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 432 292 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 439 294 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 446 296 DEOPT info [bci:0]  <||@
  Comment 446 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 451 [rdx:0, rsi:0, r9:0]at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:704) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4            |5  |6  |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |r9|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 452 block B38 null  <||@
  Comment 452 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 452 274 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@392874974]  <||@
  Comment 452 {Object[d.a@392874974]}  <||@
  Comment 462 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 465 -1 r10|DWORD = MOVE input: int[-43035|0xffffffffffff57e5]  <||@
  Comment 471 276 JUMP ~[] destination: B38 -> B41  <||@
  Comment 473 block B26 null  <||@
  Comment 473 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 473 -1 r10|DWORD = MOVE input: int[-50963|0xffffffffffff38ed]  <||@
  Comment 479 248 JUMP ~[] destination: B26 -> B36  <||@
  Comment 479 block B36 null  <||@
  Comment 479 264 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 479 266 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 486 268 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 493 270 DEOPT info [bci:54]  <||@
  Comment 493 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10b0a1f90, value=0x118a065fe]:0x118a065fe}  <||@
  Comment 498 [rdx:0, rsi:0, r9:0]at sun.nio.cs.UTF_8$Encoder.encode(UTF_8.java:712) [bci: 54, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4            |5          |6         |7  |8  |9 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r11|DWORD  |-  |r9|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-   <||@
  Comment 499 block B33 null  <||@
  Comment 499 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 499 -1 r10|DWORD = MOVE input: int[-51219|0xffffffffffff37ed]  <||@
  Comment 505 244 JUMP ~[] destination: B33 -> B36  <||@
  Comment 507 block B35 null  <||@
  Comment 507 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 507 -1 r10|DWORD = MOVE input: int[-46363|0xffffffffffff4ae5]  <||@
  Comment 513 262 JUMP ~[] destination: B35 -> B36  <||@
  Comment 515 block B32 null  <||@
  Comment 515 238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 515 -1 r10|DWORD = MOVE input: int[-54555|0xffffffffffff2ae5]  <||@
  Comment 521 240 JUMP ~[] destination: B32 -> B36  <||@
  Comment 523 block B40 null  <||@
  Comment 523 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 523 280 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@392874974]  <||@
  Comment 523 {Object[d.a@392874974]}  <||@
  Comment 533 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 536 -1 r10|DWORD = MOVE input: int[-37659|0xffffffffffff6ce5]  <||@
  Comment 542 282 JUMP ~[] destination: B40 -> B41  <||@
  Comment 544 block B39 null  <||@
  Comment 544 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 544 256 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@392874974]  <||@
  Comment 544 {Object[d.a@392874974]}  <||@
  Comment 554 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 557 -1 r10|DWORD = MOVE input: int[-37659|0xffffffffffff6ce5]  <||@
  Comment 563 258 JUMP ~[] destination: B39 -> B41  <||@
  Comment 568 block B34 null  <||@
  Comment 568 250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 568 -1 r10|DWORD = MOVE input: int[-64283|0xffffffffffff04e5]  <||@
  Comment 574 252 JUMP ~[] destination: B34 -> B36  <||@
  Comment 576 block B1 null  <||@
  Comment 576 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 576 286 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1349654251]  <||@
  Comment 576 {Object[d.a@1349654251]}  <||@
  Comment 586 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 589 -1 r10|DWORD = MOVE input: int[-36363|0xffffffffffff71f5]  <||@
  Comment 595 288 JUMP ~[] destination: B1 -> B41  <||@
  Comment 600 block B31 null  <||@
  Comment 600 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 600 -1 r10|DWORD = MOVE input: int[-57115|0xffffffffffff20e5]  <||@
  Comment 606 236 JUMP ~[] destination: B31 -> B36  <||@
  Comment 611 {Stub<ExceptionHandlerStub.exceptionHandler>@0x118dff7a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 611 4  <||@
  Comment 617 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10b0a1f88, value=0x118a06500]:0x118a06500}  <||@
  Comment 617 5  <||@
  HexCodeFile>>> <|@
end_nmethod
