begin_compilation
  name " HotSpotCompilation-1245[bench.Fusing._notFused(Fusing$List)]"
  method "HotSpotCompilation-1245[bench.Fusing._notFused(Fusing$List)]"
  date 1527270488390
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a928 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a928  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Lbench/Fusing$List;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?30 v941 v943 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Fusing._notFused(Fusing$List)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 147
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 
=== Succesors ===
=== Usages ===
v395 a436 a928 i930 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2  <|@  <|@
f <@~|@floating>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a928 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a928 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fusing$List.$outer
nullCheck: true
stamp: n Lbench/Fusing;
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v943 
=== Succesors ===
next: v235 
=== Usages ===
?112 v162 v574 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v943 #next: v235  <|@  <|@
f <@~|@floating>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a928 
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a928  <|@  <|@
f <@*|@fixed>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v162 
=== Succesors ===
trueSuccessor: v234 
falseSuccessor: v232 
=== Usages ===
=== Predecessor ===
a928 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v162 #trueSuccessor: v234 #falseSuccessor: v232  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid a398 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1310046811
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1310046811]
=== Inputs ===
=== Succesors ===
=== Usages ===
a394 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i397 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -38163
stableDimension: 0
stamp: i32 [-38163] ⇊00000000ffff6aed ⇈00000000ffff6aed
stampKind: i32
value: int[-38163|0xffffffffffff6aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i393 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a929 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a929  <|@  <|@
f <@~|@floating>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a929 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a929 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fusing$List.a
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v941 
=== Succesors ===
next: i930 
=== Usages ===
v944 v942 
=== Predecessor ===
v232 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v941 #next: i930  <|@  <|@
f <@~|@floating>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a929 
=== Succesors ===
=== Usages ===
i930 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a929  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i930 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v942 
=== Succesors ===
next: v243 
=== Usages ===
v482 i181 j178 v216 i475 v214 v462 v516 a436 a497 
=== Predecessor ===
a929 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v942 #next: v243  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i930 
y: i213 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i930 y: i213  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v214 
=== Succesors ===
trueSuccessor: v242 
falseSuccessor: v240 
=== Usages ===
=== Predecessor ===
i930 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v214 #trueSuccessor: v242 #falseSuccessor: v240  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid a403 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1049778166
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1049778166]
=== Inputs ===
=== Succesors ===
=== Usages ===
a394 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i402 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -45188
stableDimension: 0
stamp: i32 [-45188] ⇊00000000ffff4f7c ⇈00000000ffff4f7c
stampKind: i32
value: int[-45188|0xffffffffffff4f7c]
=== Inputs ===
=== Succesors ===
=== Usages ===
i393 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v242 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v919 
=== Usages ===
j196 
=== Predecessor ===
v243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v919  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v216 a436 a497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i930 
y: i24 
=== Succesors ===
=== Usages ===
v925 v917 v636 v691 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i930 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i894 j215 i181 i182 a542 i891 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i32
=== Inputs ===
x: i930 
y: i62 
=== Succesors ===
=== Usages ===
i182 i369 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i930 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$157/1691541296@58f983d1
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
x: i181 
y: i62 
=== Succesors ===
=== Usages ===
j183 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i181 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid j183 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2037498028@6a321c92
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/1145582474@39d5d5f3
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i182 
=== Succesors ===
=== Usages ===
j186 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i182  <|@  <|@
f <@~|@floating>@ <|@
tid j185 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j186 j829 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j186 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j183 
y: j185 
=== Succesors ===
=== Usages ===
j215 v756 v758 v774 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j183 y: j185  <|@  <|@
f <@~|@floating>@ <|@
tid j215 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$15/785716787@45f2d8c7
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j186 
y: i62 
=== Succesors ===
=== Usages ===
v189 j196 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j186 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid j178 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2037498028@6a321c92
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/1145582474@39d5d5f3
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i930 
=== Succesors ===
=== Usages ===
v189 v197 j829 j826 j816 j822 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i930  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@5c0982dc
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j215 
y: j178 
=== Succesors ===
=== Usages ===
v919 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j215 y: j178  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v189 
=== Succesors ===
trueSuccessor: v915 
falseSuccessor: v918 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v189 #trueSuccessor: v915 #falseSuccessor: v918  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v913 
=== Usages ===
=== Predecessor ===
v919 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v913  <|@  <|@
f <@*|@fixed>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
v915 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B75" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v917 
=== Usages ===
=== Predecessor ===
v919 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v917  <|@  <|@
f <@*|@fixed>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v216 
=== Succesors ===
trueSuccessor: v916 
falseSuccessor: v250 
=== Usages ===
=== Predecessor ===
v918 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v216 #trueSuccessor: v916 #falseSuccessor: v250  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v914 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v914  <|@  <|@
f <@*|@fixed>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
v916 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v913 v914 
=== Succesors ===
next: j415 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v913 v914 #next: j415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j415 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j459 
=== Usages ===
v949 v950 
=== Predecessor ===
v912 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j459  <|@  <|@
f <@~|@floating>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j415 
index: - 
=== Succesors ===
=== Usages ===
j459 v461 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j415 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j459 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v949 
=== Succesors ===
next: j460 
=== Usages ===
j419 v951 v952 a435 v957 v953 v954 v955 v956 
=== Predecessor ===
j415 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v949 #next: j460  <|@  <|@
f <@~|@floating>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j415 
index: - 
=== Succesors ===
=== Usages ===
j460 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j415 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j460 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v950 
=== Succesors ===
next: v424 
=== Usages ===
v425 
=== Predecessor ===
j459 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v950 #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid i411 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a542 i475 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i475 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$15/785716787@45f2d8c7
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i930 
y: i411 
=== Succesors ===
=== Usages ===
i504 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i930 y: i411  <|@  <|@
f <@~|@floating>@ <|@
tid i443 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i504 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i504 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i475 
y: i443 
=== Succesors ===
=== Usages ===
i414 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i475 y: i443  <|@  <|@
f <@~|@floating>@ <|@
tid i413 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i414 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i414 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$111/1684394068@3b95ba0e
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i504 
y: i413 
=== Succesors ===
=== Usages ===
j418 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i504 y: i413  <|@  <|@
f <@~|@floating>@ <|@
tid j418 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$13/1789970631@69334e5d
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$14/1537580341@31af5f51
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i414 
=== Succesors ===
=== Usages ===
j419 j481 v953 v954 v955 v956 v962 v963 v964 v965 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i414  <|@  <|@
f <@~|@floating>@ <|@
tid i420 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@5c0982dc
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i930 
y: i420 
=== Succesors ===
=== Usages ===
v485 v424 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i930 y: i420  <|@  <|@
f <@~|@floating>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a436 a542 a497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 v520 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j410 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v463 v517 j755 j773 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v482 
=== Succesors ===
trueSuccessor: v423 
falseSuccessor: v422 
=== Usages ===
=== Predecessor ===
j460 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v482 #trueSuccessor: v423 #falseSuccessor: v422  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v431  <|@  <|@
f <@~|@floating>@ <|@
tid j419 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64
=== Inputs ===
x: j418 
y: j459 
=== Succesors ===
=== Usages ===
v425 v461 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j418 y: j459  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@5c0982dc
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j460 
y: j419 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j460 y: j419  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v425 
=== Succesors ===
trueSuccessor: v430 
falseSuccessor: v429 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v425 #trueSuccessor: v430 #falseSuccessor: v429  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v428  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v461 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v461  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v949 
value: j419 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v949 value: j419 stateAfter: - lastLocationAccess: - #next: v448  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j418 
index: j459 
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: j459  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v953 
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v461 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v953 #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j418 
index: j459 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: j459  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v954 
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v954 #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j418 
index: j459 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: j459  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v955 
=== Succesors ===
next: v457 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v955 #next: v457  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j418 
index: j459 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: j459  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v956 
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v956 #next: v462  <|@  <|@
f <@~|@floating>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j459 
index: - 
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j459 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v951 
value: i930 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v951 value: i930 stateAfter: - lastLocationAccess: - #next: v463  <|@  <|@
f <@~|@floating>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j459 
index: - 
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j459 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v952 
value: j410 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v952 value: j410 stateAfter: - lastLocationAccess: - #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j459 
index: - 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j459 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
value: v575 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v957 value: v575 stateAfter: - lastLocationAccess: - #next: v434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a435 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a435 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j459 
=== Succesors ===
next: v437 
=== Usages ===
a440 
=== Predecessor ===
v434 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j459 #next: v437  <|@  <|@
f <@*|@fixed>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
a435 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v426  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
v422 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v426 v428 
=== Succesors ===
next: a436 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v426 v428 #next: a436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a436 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@379d1825
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v409 i930 i24 
=== Succesors ===
next: v439 
=== Usages ===
a440 
=== Predecessor ===
v427 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v409 i930 i24 #next: v439  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
a436 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a440 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v438 
values: a435 a436 
=== Succesors ===
=== Usages ===
v947 a373 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v438 values: a435 a436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v437 v439 
=== Succesors ===
next: v777 
=== Usages ===
a440 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v437 v439 #next: v777  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v636 
=== Usages ===
j778 j780 
=== Predecessor ===
v438 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v636  <|@  <|@
f <@~|@floating>@ <|@
tid j829 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j178 
y: j185 
=== Succesors ===
=== Usages ===
v830 v875 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j178 y: j185  <|@  <|@
f <@~|@floating>@ <|@
tid j825 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j826 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j826 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64 [-2 - 2147483645]
=== Inputs ===
x: j178 
y: j825 
=== Succesors ===
=== Usages ===
v827 v873 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j178 y: j825  <|@  <|@
f <@~|@floating>@ <|@
tid j821 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j822 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j822 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64 [-4 - 2147483643]
=== Inputs ===
x: j178 
y: j821 
=== Succesors ===
=== Usages ===
v823 v871 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j178 y: j821  <|@  <|@
f <@~|@floating>@ <|@
tid j815 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j816 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j816 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64 [-8 - 2147483639]
=== Inputs ===
x: j178 
y: j815 
=== Succesors ===
=== Usages ===
v817 v819 v869 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j178 y: j815  <|@  <|@
f <@~|@floating>@ <|@
tid j257 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v817 j807 j799 j861 j746 v756 j853 j765 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466a6f0e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j816 
y: j257 
=== Succesors ===
=== Usages ===
v694 v639 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j816 y: j257  <|@  <|@
f <@~|@floating>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a929 
=== Succesors ===
=== Usages ===
j778 j743 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a929  <|@  <|@
f <@~|@floating>@ <|@
tid j797 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j798 j852 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j783 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j806 j860 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j465 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j868 j814 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v216 
=== Succesors ===
trueSuccessor: v634 
falseSuccessor: v635 
=== Usages ===
=== Predecessor ===
v777 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v216 #trueSuccessor: v634 #falseSuccessor: v635  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v653 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v653  <|@  <|@
f <@*|@fixed>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
v634 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v639 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v639  <|@  <|@
f <@~|@floating>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a440 
index: - 
=== Succesors ===
=== Usages ===
j780 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a440 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j780 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v777 
address: v947 
=== Succesors ===
=== Usages ===
v979 v981 v983 v985 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v777 address: v947  <|@  <|@
f <@~|@floating>@ <|@
tid j778 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v777 
address: v944 
=== Succesors ===
=== Usages ===
v980 v982 v984 v986 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v777 address: v944  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v817 
=== Succesors ===
trueSuccessor: v637 
falseSuccessor: v638 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v817 #trueSuccessor: v637 #falseSuccessor: v638  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v649 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v649  <|@  <|@
f <@*|@fixed>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
v637 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v640 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v640  <|@  <|@
f <@*|@fixed>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
v638 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B74" 
    successors "B20" "B74" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j807 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v641 
values: j257 j814 
=== Succesors ===
=== Usages ===
v986 j814 v985 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v641 values: j257 j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v640 
=== Succesors ===
next: v931 
=== Usages ===
v931 v645 v646 j807 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v640 #next: v931  <|@  <|@
f <@~|@floating>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j778 
index: j807 
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: j807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32,i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v641 
address: v986 
=== Succesors ===
next: v903 
=== Usages ===
v903 
=== Predecessor ===
v641 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v641 address: v986 #next: v903  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j780 
index: j807 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: j807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v985 
value: v931 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v985 value: v931 stateAfter: - lastLocationAccess: - #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid j814 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64
=== Inputs ===
x: j807 
y: j465 
=== Succesors ===
=== Usages ===
j799 j807 v819 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j807 y: j465  <|@  <|@
f <@~|@floating>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466a6f0e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j816 
y: j814 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j816 y: j814  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v819 
=== Succesors ===
trueSuccessor: v645 
falseSuccessor: v647 
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v819 #trueSuccessor: v645 #falseSuccessor: v647  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v641 
=== Succesors ===
next: v651 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v641 #next: v651  <|@  <|@
f <@*|@fixed>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
v645 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j799 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v650 
values: j257 j814 
=== Succesors ===
=== Usages ===
v984 j806 j790 v823 v983 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v650 values: j257 j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v649 v651 
=== Succesors ===
next: v669 
=== Usages ===
j799 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v649 v651 #next: v669  <|@  <|@
f <@~|@floating>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466a6f0e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j822 
y: j799 
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j822 y: j799  <|@  <|@
f <@*|@fixed>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v823 
=== Succesors ===
trueSuccessor: v668 
falseSuccessor: v667 
=== Usages ===
=== Predecessor ===
v650 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v823 #trueSuccessor: v668 #falseSuccessor: v667  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v672 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v672  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v668 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v932 
=== Usages ===
v932 
=== Predecessor ===
v669 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v932  <|@  <|@
f <@~|@floating>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j778 
index: j799 
=== Succesors ===
=== Usages ===
v932 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: j799  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v667 
address: v984 
=== Succesors ===
next: v901 
=== Usages ===
v901 
=== Predecessor ===
v667 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v667 address: v984 #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j780 
index: j799 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: j799  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v983 
value: v932 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v983 value: v932 stateAfter: - lastLocationAccess: - #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid j806 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64
=== Inputs ===
x: j799 
y: j783 
=== Succesors ===
=== Usages ===
j790 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j799 y: j783  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v901 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j790 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v661 
values: j806 j799 
=== Succesors ===
=== Usages ===
v982 j798 j781 v827 v981 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v661 values: j806 j799  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v660 v672 
=== Succesors ===
next: v675 
=== Usages ===
j790 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v660 v672 #next: v675  <|@  <|@
f <@~|@floating>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466a6f0e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j826 
y: j790 
=== Succesors ===
=== Usages ===
v675 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j826 y: j790  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v827 
=== Succesors ===
trueSuccessor: v674 
falseSuccessor: v673 
=== Usages ===
=== Predecessor ===
v661 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v827 #trueSuccessor: v674 #falseSuccessor: v673  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v678 
=== Usages ===
=== Predecessor ===
v675 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v678  <|@  <|@
f <@*|@fixed>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
v674 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v933 
=== Usages ===
v933 
=== Predecessor ===
v675 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v933  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j778 
index: j790 
=== Succesors ===
=== Usages ===
v933 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: j790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32>
=== Inputs ===
stateBefore: - 
guard: v673 
address: v982 
=== Succesors ===
next: v899 
=== Usages ===
v899 
=== Predecessor ===
v673 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v673 address: v982 #next: v899  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j780 
index: j790 
=== Succesors ===
=== Usages ===
v899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: j790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v981 
value: v933 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v933 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v981 value: v933 stateAfter: - lastLocationAccess: - #next: v663  <|@  <|@
f <@~|@floating>@ <|@
tid j798 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64
=== Inputs ===
x: j790 
y: j797 
=== Succesors ===
=== Usages ===
j781 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j790 y: j797  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
v899 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j781 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v664 
values: j798 j790 
=== Succesors ===
=== Usages ===
v980 v830 v979 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v664 values: j798 j790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v663 v678 
=== Succesors ===
next: v681 
=== Usages ===
j781 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v663 v678 #next: v681  <|@  <|@
f <@~|@floating>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466a6f0e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j829 
y: j781 
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j829 y: j781  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v830 
=== Succesors ===
trueSuccessor: v680 
falseSuccessor: v679 
=== Usages ===
=== Predecessor ===
v664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v830 #trueSuccessor: v680 #falseSuccessor: v679  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v684  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
v680 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i934 
=== Usages ===
i934 
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i934  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j778 
index: j781 
=== Succesors ===
=== Usages ===
i934 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: j781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i934 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v679 
address: v980 
=== Succesors ===
next: v897 
=== Usages ===
v897 
=== Predecessor ===
v679 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v679 address: v980 #next: v897  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j780 
index: j781 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: j781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v979 
value: i934 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v666 
=== Usages ===
=== Predecessor ===
i934 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v979 value: i934 stateAfter: - lastLocationAccess: - #next: v666  <|@  <|@
f <@*|@fixed>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
v897 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B15" "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v653 v666 v684 
=== Succesors ===
next: a373 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v653 v666 v684 #next: a373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a373 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a440 
=== Succesors ===
next: v742 
=== Usages ===
v945 ?30 ?112 
=== Predecessor ===
v654 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a440 #next: v742  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v590 
=== Usages ===
j743 j745 
=== Predecessor ===
a373 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v590  <|@  <|@
f <@~|@floating>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a373 
index: - 
=== Succesors ===
=== Usages ===
j834 j745 j762 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a373 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466a6f0e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j186 
y: j257 
=== Succesors ===
=== Usages ===
v612 v590 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j186 y: j257  <|@  <|@
f <@*|@fixed>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v756 
=== Succesors ===
trueSuccessor: v588 
falseSuccessor: v589 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v756 #trueSuccessor: v588 #falseSuccessor: v589  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v590 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v595  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
v588 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v591 
=== Usages ===
=== Predecessor ===
v590 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v591  <|@  <|@
f <@~|@floating>@ <|@
tid j745 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v742 
address: v945 
=== Succesors ===
=== Usages ===
v975 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v742 address: v945  <|@  <|@
f <@~|@floating>@ <|@
tid j743 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v742 
address: v944 
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v742 address: v944  <|@  <|@
f <@*|@fixed>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
v589 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B73" 
    successors "B34" "B73" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j746 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v592 
values: j257 j755 
=== Succesors ===
=== Usages ===
v976 j755 v975 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v592 values: j257 j755  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v591 
=== Succesors ===
next: i935 
=== Usages ===
i935 v598 v600 j746 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v591 #next: i935  <|@  <|@
f <@~|@floating>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j743 
index: j746 
=== Succesors ===
=== Usages ===
i935 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j743 index: j746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i935 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v592 
address: v976 
=== Succesors ===
next: v892 
=== Usages ===
i891 
=== Predecessor ===
v592 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v592 address: v976 #next: v892  <|@  <|@
f <@~|@floating>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j745 
index: j746 
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j745 index: j746  <|@  <|@
f <@~|@floating>@ <|@
tid i891 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i32
=== Inputs ===
x: i935 
y: i62 
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i935 y: i62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v975 
value: i891 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v602 
=== Usages ===
=== Predecessor ===
i935 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v975 value: i891 stateAfter: - lastLocationAccess: - #next: v602  <|@  <|@
f <@~|@floating>@ <|@
tid j755 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64
=== Inputs ===
x: j746 
y: j410 
=== Succesors ===
=== Usages ===
v758 j746 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j746 y: j410  <|@  <|@
f <@~|@floating>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466a6f0e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j186 
y: j755 
=== Succesors ===
=== Usages ===
v602 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j186 y: j755  <|@  <|@
f <@*|@fixed>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v758 
=== Succesors ===
trueSuccessor: v598 
falseSuccessor: v601 
=== Usages ===
=== Predecessor ===
v892 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v758 #trueSuccessor: v598 #falseSuccessor: v601  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v592 
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v592 #next: v597  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
v598 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v595 v597 
=== Succesors ===
next: v927 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v595 v597 #next: v927  <|@  <|@
tid ?52 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<Fusing._notFused(Fusing$List)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 147
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
?30 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid a7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Fusing$$Lambda$26/947584453@1971198489
stableDimension: 0
stamp: a!# Lbench/Fusing$$Lambda$26/947584453;
stampKind: a -
value: Object[Fusing$$Lambda$26/947584453@1971198489]
=== Inputs ===
=== Succesors ===
=== Usages ===
?30 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i368 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i369 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i369 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$111/1684394068@3b95ba0e
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i181 
y: i368 
=== Succesors ===
=== Usages ===
?30 ?77 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i181 y: i368  <|@  <|@
tid ?30 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Fusing$List.map(Function1)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 0
=== Inputs ===
outerFrameState: ?52 
values: a2 a7 a373 i369 
=== Succesors ===
=== Usages ===
a497 v253 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?52 values: a2 a7 a373 i369  <|@  <|@
f <@~|@floating>@ <|@
tid j196 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
guard: v240 
object: j215 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@GuardedValue|@org.graalvm.compiler.nodes.GuardedValueNode>@ guard: v240 object: j215  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@5c0982dc
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j196 
y: j178 
=== Succesors ===
=== Usages ===
v927 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j196 y: j178  <|@  <|@
f <@*|@fixed>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v197 
=== Succesors ===
trueSuccessor: v923 
falseSuccessor: v926 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v197 #trueSuccessor: v923 #falseSuccessor: v926  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v921 
=== Usages ===
=== Predecessor ===
v927 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v921  <|@  <|@
f <@*|@fixed>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
v923 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B72" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v925 
=== Usages ===
=== Predecessor ===
v927 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v925  <|@  <|@
f <@*|@fixed>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v216 
=== Succesors ===
trueSuccessor: v924 
falseSuccessor: v254 
=== Usages ===
=== Predecessor ===
v926 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v216 #trueSuccessor: v924 #falseSuccessor: v254  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v922 
=== Usages ===
=== Predecessor ===
v925 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v922  <|@  <|@
f <@*|@fixed>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
v924 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v921 v922 
=== Succesors ===
next: j477 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v921 v922 #next: j477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j477 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j513 
=== Usages ===
v958 v959 
=== Predecessor ===
v920 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j513  <|@  <|@
f <@~|@floating>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j477 
index: - 
=== Succesors ===
=== Usages ===
j513 v515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j477 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j513 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
=== Succesors ===
next: j514 
=== Usages ===
j481 v960 v961 a496 v966 v962 v963 v964 v965 
=== Predecessor ===
j477 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v958 #next: j514  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j477 
index: - 
=== Succesors ===
=== Usages ===
j514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j477 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j514 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v959 
=== Succesors ===
next: v485 
=== Usages ===
v486 
=== Predecessor ===
j513 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v959 #next: v485  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v482 
=== Succesors ===
trueSuccessor: v484 
falseSuccessor: v483 
=== Usages ===
=== Predecessor ===
j514 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v482 #trueSuccessor: v484 #falseSuccessor: v483  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v492 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v492  <|@  <|@
f <@~|@floating>@ <|@
tid j481 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64
=== Inputs ===
x: j418 
y: j513 
=== Succesors ===
=== Usages ===
v486 v515 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j418 y: j513  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@5c0982dc
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j514 
y: j481 
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j514 y: j481  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v486 
=== Succesors ===
trueSuccessor: v491 
falseSuccessor: v490 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v486 #trueSuccessor: v491 #falseSuccessor: v490  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v489  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
v491 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v515 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v515  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
value: j481 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v958 value: j481 stateAfter: - lastLocationAccess: - #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j418 
index: j513 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: j513  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v962 
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v962 #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j418 
index: j513 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: j513  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v963 
=== Succesors ===
next: v510 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v963 #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j418 
index: j513 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: j513  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v964 
=== Succesors ===
next: v512 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v964 #next: v512  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j418 
index: j513 
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: j513  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v965 
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v965 #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j513 
index: - 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j513 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v960 
value: i930 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v960 value: i930 stateAfter: - lastLocationAccess: - #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j513 
index: - 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j513 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v961 
value: j410 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v961 value: j410 stateAfter: - lastLocationAccess: - #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j513 
index: - 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j513 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v966 
value: v575 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v966 value: v575 stateAfter: - lastLocationAccess: - #next: v495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a496 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a496  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a496 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j513 
=== Succesors ===
next: v498 
=== Usages ===
a501 
=== Predecessor ===
v495 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j513 #next: v498  <|@  <|@
f <@*|@fixed>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
a496 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v487 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v487  <|@  <|@
f <@*|@fixed>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
v483 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v487 v489 
=== Succesors ===
next: a497 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v487 v489 #next: a497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a497 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@379d1825
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?30 
arguments: v409 i930 i24 
=== Succesors ===
next: v500 
=== Usages ===
a501 
=== Predecessor ===
v488 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?30 arguments: v409 i930 i24 #next: v500  <|@  <|@
f <@*|@fixed>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
a497 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a501 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v499 
values: a496 a497 
=== Succesors ===
=== Usages ===
v948 a377 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v499 values: a496 a497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v498 v500 
=== Succesors ===
next: v833 
=== Usages ===
a501 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v498 v500 #next: v833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v691 
=== Usages ===
j834 j836 
=== Predecessor ===
v499 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v691  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v216 
=== Succesors ===
trueSuccessor: v689 
falseSuccessor: v690 
=== Usages ===
=== Predecessor ===
v833 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v216 #trueSuccessor: v689 #falseSuccessor: v690  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v707 
=== Usages ===
=== Predecessor ===
v691 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v707  <|@  <|@
f <@*|@fixed>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v708 
=== Predecessor ===
v689 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v691 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a501 
index: - 
=== Succesors ===
=== Usages ===
j836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a501 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j836 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v833 
address: v948 
=== Succesors ===
=== Usages ===
v987 v989 v991 v993 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v833 address: v948  <|@  <|@
f <@~|@floating>@ <|@
tid j834 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v833 
address: v945 
=== Succesors ===
=== Usages ===
v988 v990 v992 v994 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v833 address: v945  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v817 
=== Succesors ===
trueSuccessor: v692 
falseSuccessor: v693 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v817 #trueSuccessor: v692 #falseSuccessor: v693  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v703 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v703  <|@  <|@
f <@*|@fixed>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v692 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v695  <|@  <|@
f <@*|@fixed>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
v693 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B71" 
    successors "B51" "B71" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j861 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v696 
values: j257 j868 
=== Succesors ===
=== Usages ===
v994 j868 v993 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v696 values: j257 j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v695 
=== Succesors ===
next: v936 
=== Usages ===
v936 v699 v700 j861 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v695 #next: v936  <|@  <|@
f <@~|@floating>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j834 
index: j861 
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j834 index: j861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32,i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v696 
address: v994 
=== Succesors ===
next: v911 
=== Usages ===
v911 
=== Predecessor ===
v696 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v696 address: v994 #next: v911  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j836 
index: j861 
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j836 index: j861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v993 
value: v936 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v702 
=== Usages ===
=== Predecessor ===
v936 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v993 value: v936 stateAfter: - lastLocationAccess: - #next: v702  <|@  <|@
f <@~|@floating>@ <|@
tid j868 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64
=== Inputs ===
x: j861 
y: j465 
=== Succesors ===
=== Usages ===
j853 j861 v869 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j861 y: j465  <|@  <|@
f <@~|@floating>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466a6f0e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j816 
y: j868 
=== Succesors ===
=== Usages ===
v702 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j816 y: j868  <|@  <|@
f <@*|@fixed>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v869 
=== Succesors ===
trueSuccessor: v699 
falseSuccessor: v701 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v869 #trueSuccessor: v699 #falseSuccessor: v701  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v696 
=== Succesors ===
next: v705 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v696 #next: v705  <|@  <|@
f <@*|@fixed>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v699 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j853 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v704 
values: j257 j868 
=== Succesors ===
=== Usages ===
v992 j860 j845 v871 v991 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v704 values: j257 j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v703 v705 
=== Succesors ===
next: v723 
=== Usages ===
j853 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v703 v705 #next: v723  <|@  <|@
f <@~|@floating>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466a6f0e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j822 
y: j853 
=== Succesors ===
=== Usages ===
v723 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j822 y: j853  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v871 
=== Succesors ===
trueSuccessor: v722 
falseSuccessor: v721 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v871 #trueSuccessor: v722 #falseSuccessor: v721  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v726  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
v722 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v937 
=== Usages ===
v937 
=== Predecessor ===
v723 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v937  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j834 
index: j853 
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j834 index: j853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v721 
address: v992 
=== Succesors ===
next: v909 
=== Usages ===
v909 
=== Predecessor ===
v721 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v721 address: v992 #next: v909  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j836 
index: j853 
=== Succesors ===
=== Usages ===
v909 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j836 index: j853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v991 
value: v937 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v714 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v991 value: v937 stateAfter: - lastLocationAccess: - #next: v714  <|@  <|@
f <@~|@floating>@ <|@
tid j860 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64
=== Inputs ===
x: j853 
y: j783 
=== Succesors ===
=== Usages ===
j845 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j853 y: j783  <|@  <|@
f <@*|@fixed>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
v909 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j845 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v715 
values: j860 j853 
=== Succesors ===
=== Usages ===
v990 j852 j837 v873 v989 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v715 values: j860 j853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v714 v726 
=== Succesors ===
next: v729 
=== Usages ===
j845 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v714 v726 #next: v729  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466a6f0e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j826 
y: j845 
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j826 y: j845  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v873 
=== Succesors ===
trueSuccessor: v728 
falseSuccessor: v727 
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v873 #trueSuccessor: v728 #falseSuccessor: v727  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v732 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v732  <|@  <|@
f <@*|@fixed>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v718 
=== Predecessor ===
v728 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v938 
=== Usages ===
v938 
=== Predecessor ===
v729 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v938  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j834 
index: j845 
=== Succesors ===
=== Usages ===
v938 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j834 index: j845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32>
=== Inputs ===
stateBefore: - 
guard: v727 
address: v990 
=== Succesors ===
next: v907 
=== Usages ===
v907 
=== Predecessor ===
v727 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v727 address: v990 #next: v907  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j836 
index: j845 
=== Succesors ===
=== Usages ===
v907 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j836 index: j845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v989 
value: v938 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v938 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v989 value: v938 stateAfter: - lastLocationAccess: - #next: v717  <|@  <|@
f <@~|@floating>@ <|@
tid j852 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64
=== Inputs ===
x: j845 
y: j797 
=== Succesors ===
=== Usages ===
j837 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j845 y: j797  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v718 
=== Predecessor ===
v907 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j837 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v718 
values: j852 j845 
=== Succesors ===
=== Usages ===
v988 v875 v987 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v718 values: j852 j845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v717 v732 
=== Succesors ===
next: v735 
=== Usages ===
j837 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v717 v732 #next: v735  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466a6f0e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j829 
y: j837 
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j829 y: j837  <|@  <|@
f <@*|@fixed>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v875 
=== Succesors ===
trueSuccessor: v734 
falseSuccessor: v733 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v875 #trueSuccessor: v734 #falseSuccessor: v733  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v738 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v738  <|@  <|@
f <@*|@fixed>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v708 
=== Predecessor ===
v734 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i939 
=== Usages ===
i939 
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i939  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j834 
index: j837 
=== Succesors ===
=== Usages ===
i939 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j834 index: j837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i939 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v733 
address: v988 
=== Succesors ===
next: v905 
=== Usages ===
v905 
=== Predecessor ===
v733 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v733 address: v988 #next: v905  <|@  <|@
f <@~|@floating>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j836 
index: j837 
=== Succesors ===
=== Usages ===
v905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j836 index: j837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v987 
value: i939 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v720 
=== Usages ===
=== Predecessor ===
i939 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v987 value: i939 stateAfter: - lastLocationAccess: - #next: v720  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v708 
=== Predecessor ===
v905 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B46" "B60" "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v707 v720 v738 
=== Succesors ===
next: a377 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v707 v720 v738 #next: a377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a377 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a501 
=== Succesors ===
next: v761 
=== Usages ===
a262 ?77 v946 
=== Predecessor ===
v708 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a501 #next: v761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v612 
=== Usages ===
j762 j764 
=== Predecessor ===
a377 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v612  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v756 
=== Succesors ===
trueSuccessor: v610 
falseSuccessor: v611 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v756 #trueSuccessor: v610 #falseSuccessor: v611  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v617  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
v610 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v613 
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v613  <|@  <|@
f <@~|@floating>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a377 
index: - 
=== Succesors ===
=== Usages ===
j764 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a377 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j764 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v761 
address: v946 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v761 address: v946  <|@  <|@
f <@~|@floating>@ <|@
tid j762 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v761 
address: v945 
=== Succesors ===
=== Usages ===
v978 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v761 address: v945  <|@  <|@
f <@*|@fixed>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
v611 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B70" 
    successors "B65" "B70" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j765 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v614 
values: j257 j773 
=== Succesors ===
=== Usages ===
v978 j773 v977 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v614 values: j257 j773  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v613 
=== Succesors ===
next: i940 
=== Usages ===
i940 v620 v622 j765 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v613 #next: i940  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j762 
index: j765 
=== Succesors ===
=== Usages ===
i940 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j762 index: j765  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i940 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v614 
address: v978 
=== Succesors ===
next: v895 
=== Usages ===
i894 
=== Predecessor ===
v614 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v614 address: v978 #next: v895  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j764 
index: j765 
=== Succesors ===
=== Usages ===
v895 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j764 index: j765  <|@  <|@
f <@~|@floating>@ <|@
tid i894 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i32
=== Inputs ===
x: i940 
y: i62 
=== Succesors ===
=== Usages ===
v895 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i940 y: i62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v977 
value: i894 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v624 
=== Usages ===
=== Predecessor ===
i940 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v977 value: i894 stateAfter: - lastLocationAccess: - #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid j773 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64
=== Inputs ===
x: j765 
y: j410 
=== Succesors ===
=== Usages ===
v774 j765 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j765 y: j410  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466a6f0e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j186 
y: j773 
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j186 y: j773  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v774 
=== Succesors ===
trueSuccessor: v620 
falseSuccessor: v623 
=== Usages ===
=== Predecessor ===
v895 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v774 #trueSuccessor: v620 #falseSuccessor: v623  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v614 
=== Succesors ===
next: v619 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v614 #next: v619  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
v620 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v617 v619 
=== Succesors ===
next: j530 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v617 v619 #next: j530  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j530 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j546 
=== Usages ===
v967 v968 
=== Predecessor ===
v618 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j546  <|@  <|@
f <@~|@floating>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j530 
index: - 
=== Succesors ===
=== Usages ===
j546 v548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j530 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j546 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v967 
=== Succesors ===
next: j547 
=== Usages ===
j577 j552 v972 
=== Predecessor ===
j530 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v967 #next: j547  <|@  <|@
f <@~|@floating>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j530 
index: - 
=== Succesors ===
=== Usages ===
j547 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j530 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j547 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v968 
=== Succesors ===
next: v538 
=== Usages ===
v535 
=== Predecessor ===
j546 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v968 #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid j576 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j577 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64
=== Inputs ===
x: j546 
y: j576 
=== Succesors ===
=== Usages ===
v535 v548 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j546 y: j576  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@5c0982dc
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j547 
y: j577 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j547 y: j577  <|@  <|@
f <@*|@fixed>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v535 
=== Succesors ===
trueSuccessor: v536 
falseSuccessor: v537 
=== Usages ===
=== Predecessor ===
j547 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v535 #trueSuccessor: v536 #falseSuccessor: v537  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a542 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a542  <|@  <|@
tid ?98 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<Fusing._notFused(Fusing$List)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 147
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
?77 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
tid a66 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@6577eafc
hasIdentity: true
objectId: -1
stamp: a!# Lbench/Fusing$List;
type: HotSpotType<Lbench/Fusing$List;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?112 ?77 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Fusing$$Lambda$28/39597091@1201907975
stableDimension: 0
stamp: a!# Lbench/Fusing$$Lambda$28/39597091;
stampKind: a -
value: Object[Fusing$$Lambda$28/39597091@1201907975]
=== Inputs ===
=== Succesors ===
=== Usages ===
?77 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?112 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a66 
values: a373 a928 
=== Succesors ===
=== Usages ===
?77 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a66 values: a373 a928  <|@  <|@
tid ?77 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Fusing$List.map(Function1)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 0
=== Inputs ===
outerFrameState: ?98 
values: a66 a13 a377 i369 
virtualObjectMappings: ?112 
=== Succesors ===
=== Usages ===
a542 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?98 values: a66 a13 a377 i369 virtualObjectMappings: ?112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a542 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@379d1825
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?77 
arguments: v409 i411 i62 
=== Succesors ===
next: j543 
=== Usages ===
j543 
=== Predecessor ===
v536 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?77 arguments: v409 i411 i62 #next: j543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j543 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a542 
=== Succesors ===
next: v553 
=== Usages ===
j552 
=== Predecessor ===
a542 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a542 #next: v553  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
j543 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v548 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v967 
value: j577 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v967 value: j577 stateAfter: - lastLocationAccess: - #next: v545  <|@  <|@
f <@~|@floating>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j546 
index: - 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j546 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v972 
=== Succesors ===
next: v551 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v972 #next: v551  <|@  <|@
f <@*|@fixed>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
v545 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j552 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v550 
values: j546 j543 
=== Succesors ===
=== Usages ===
v971 v970 a259 v973 v974 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: j546 j543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v551 v553 
=== Succesors ===
next: a259 
=== Usages ===
j552 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v551 v553 #next: a259  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a259 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j552 
=== Succesors ===
next: j564 
=== Usages ===
a266 
=== Predecessor ===
v550 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j552 #next: j564  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lbench/Fusing$List;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lbench/Fusing$List;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j559 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j559 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v558 
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v558  <|@  <|@
f <@~|@floating>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j559 
index: - 
=== Succesors ===
=== Usages ===
j564 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j559 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j564 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v969 
=== Succesors ===
next: v565 
=== Usages ===
v565 
=== Predecessor ===
a259 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v969 #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j552 
index: - 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j552 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v970 
value: j564 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
j564 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v970 value: j564 stateAfter: - lastLocationAccess: - #next: v568  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j552 
index: - 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j552 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v971 
value: v581 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v572 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v971 value: v581 stateAfter: - lastLocationAccess: - #next: v572  <|@  <|@
f <@~|@floating>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j552 
index: - 
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j552 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a262 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a377 
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v973 
value: a262 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v574 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v973 value: a262 stateAfter: - lastLocationAccess: - #next: v574  <|@  <|@
f <@~|@floating>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j552 
index: - 
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j552 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v974 
value: a928 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a266 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v974 value: a928 stateAfter: - lastLocationAccess: - #next: a266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a266 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a259 
=== Succesors ===
next: v267 
=== Usages ===
v17 
=== Predecessor ===
v574 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a259 #next: v267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
a266 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v17  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a266 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a266 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B64" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4612248968380809216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v622 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v622  <|@  <|@
f <@*|@fixed>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v614 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v614  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B50" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v700 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v700  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v696 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v696  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v925 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 151
reason: BoundsCheckException
speculation: Object[d.a@824747228]
stamp: void
=== Inputs ===
stateBefore: ?30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612248968380809216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v600  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v592 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v592  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v646 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v646  <|@  <|@
f <@*|@fixed>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v641 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v641  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid a408 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@824747228
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@824747228]
=== Inputs ===
=== Succesors ===
=== Usages ===
a394 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i407 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -33307
stableDimension: 0
stamp: i32 [-33307] ⇊00000000ffff7de5 ⇈00000000ffff7de5
stampKind: i32
value: int[-33307|0xffffffffffff7de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i393 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v250 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B75" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i393 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-45188 - -30219] ⇊00000000ffff0064 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v389 
values: i397 i402 i407 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v389 values: i397 i402 i407  <|@  <|@
f <@~|@floating>@ <|@
tid a394 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v389 
values: a398 a403 a408 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v389 values: a398 a403 a408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v396 v401 v406 
=== Succesors ===
next: v395 
=== Usages ===
i393 a394 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v396 v401 v406 #next: v395  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i393 
speculation: a394 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i393 speculation: a394  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a928 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a928  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Lbench/Fusing$List;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?30 v941 v943 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Fusing._notFused(Fusing$List)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 147
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 
=== Succesors ===
=== Usages ===
v395 a436 a928 i930 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2  <|@  <|@
f <@~|@floating>@ <|@
tid v943 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a928 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a928 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fusing$List.$outer
nullCheck: true
stamp: n Lbench/Fusing;
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v943 
=== Succesors ===
next: v235 
=== Usages ===
?112 v162 v574 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v943 #next: v235  <|@  <|@
f <@~|@floating>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a928 
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a928  <|@  <|@
f <@*|@fixed>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v162 
=== Succesors ===
trueSuccessor: v234 
falseSuccessor: v232 
=== Usages ===
=== Predecessor ===
a928 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v162 #trueSuccessor: v234 #falseSuccessor: v232  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@e0117ff slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing._notFused(Bench.scala:147) [bci: 0]
locals: - v0|QWORD[.] 
>@ <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD[.], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v396 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid a398 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1310046811
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1310046811]
=== Inputs ===
=== Succesors ===
=== Usages ===
a394 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i397 <|@
result int[-38163|0xffffffffffff6aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -38163
stableDimension: 0
stamp: i32 [-38163] ⇊00000000ffff6aed ⇈00000000ffff6aed
stampKind: i32
value: int[-38163|0xffffffffffff6aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i393 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1310046811] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-38163|0xffffffffffff6aed], v2|QWORD[.]] destination: B1 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a929 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a929  <|@  <|@
f <@~|@floating>@ <|@
tid v941 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a929 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a929 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fusing$List.a
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v941 
=== Succesors ===
next: i930 
=== Usages ===
v944 v942 
=== Predecessor ===
v232 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v941 #next: i930  <|@  <|@
f <@~|@floating>@ <|@
tid v942 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a929 
=== Succesors ===
=== Usages ===
i930 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a929  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i930 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v942 
=== Succesors ===
next: v243 
=== Usages ===
v482 i181 j178 v216 i475 v214 v462 v516 a436 a497 
=== Predecessor ===
a929 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v942 #next: v243  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
result int[2147483647|0x7fffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i930 
y: i213 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i930 y: i213  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v214 
=== Succesors ===
trueSuccessor: v242 
falseSuccessor: v240 
=== Usages ===
=== Predecessor ===
i930 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v214 #trueSuccessor: v242 #falseSuccessor: v240  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing._notFused(Bench.scala:147) [bci: 0]
locals: - v0|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid a403 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1049778166
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1049778166]
=== Inputs ===
=== Succesors ===
=== Usages ===
a394 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i402 <|@
result int[-45188|0xffffffffffff4f7c] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -45188
stableDimension: 0
stamp: i32 [-45188] ⇊00000000ffff4f7c ⇈00000000ffff4f7c
stampKind: i32
value: int[-45188|0xffffffffffff4f7c]
=== Inputs ===
=== Succesors ===
=== Usages ===
i393 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v242 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1049778166] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-45188|0xffffffffffff4f7c], v5|QWORD[.]] destination: B3 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v919 
=== Usages ===
j196 
=== Predecessor ===
v243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v919  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v216 a436 a497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i930 
y: i24 
=== Succesors ===
=== Usages ===
v925 v917 v636 v691 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i930 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i894 j215 i181 i182 a542 i891 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i32
=== Inputs ===
x: i930 
y: i62 
=== Succesors ===
=== Usages ===
i182 i369 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i930 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$157/1691541296@58f983d1
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
x: i181 
y: i62 
=== Succesors ===
=== Usages ===
j183 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i181 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid j183 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2037498028@6a321c92
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/1145582474@39d5d5f3
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i182 
=== Succesors ===
=== Usages ===
j186 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i182  <|@  <|@
f <@~|@floating>@ <|@
tid j185 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j186 j829 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j186 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j183 
y: j185 
=== Succesors ===
=== Usages ===
j215 v756 v758 v774 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j183 y: j185  <|@  <|@
f <@~|@floating>@ <|@
tid j215 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$15/785716787@45f2d8c7
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j186 
y: i62 
=== Succesors ===
=== Usages ===
v189 j196 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j186 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid j178 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2037498028@6a321c92
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/1145582474@39d5d5f3
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i930 
=== Succesors ===
=== Usages ===
v189 v197 j829 j826 j816 j822 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i930  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@5c0982dc
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j215 
y: j178 
=== Succesors ===
=== Usages ===
v919 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j215 y: j178  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v189 
=== Succesors ===
trueSuccessor: v915 
falseSuccessor: v918 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v189 #trueSuccessor: v915 #falseSuccessor: v918  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = DEC v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHL v9|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v913 
=== Usages ===
=== Predecessor ===
v919 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v913  <|@  <|@
f <@*|@fixed>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
v915 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B75" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v917 
=== Usages ===
=== Predecessor ===
v919 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v917  <|@  <|@
f <@*|@fixed>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v216 
=== Succesors ===
trueSuccessor: v916 
falseSuccessor: v250 
=== Usages ===
=== Predecessor ===
v918 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v216 #trueSuccessor: v916 #falseSuccessor: v250  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v914 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v914  <|@  <|@
f <@*|@fixed>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
v916 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v913 v914 
=== Succesors ===
next: j415 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v913 v914 #next: j415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j415 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j459 
=== Usages ===
v949 v950 
=== Predecessor ===
v912 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j459  <|@  <|@
f <@~|@floating>@ <|@
tid v949 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j415 
index: - 
=== Succesors ===
=== Usages ===
j459 v461 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j415 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j459 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v949 
=== Succesors ===
next: j460 
=== Usages ===
j419 v951 v952 a435 v957 v953 v954 v955 v956 
=== Predecessor ===
j415 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v949 #next: j460  <|@  <|@
f <@~|@floating>@ <|@
tid v950 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j415 
index: - 
=== Succesors ===
=== Usages ===
j460 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j415 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j460 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v950 
=== Succesors ===
next: v424 
=== Usages ===
v425 
=== Predecessor ===
j459 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v950 #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid i411 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a542 i475 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i475 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$15/785716787@45f2d8c7
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i930 
y: i411 
=== Succesors ===
=== Usages ===
i504 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i930 y: i411  <|@  <|@
f <@~|@floating>@ <|@
tid i443 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i504 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i504 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i475 
y: i443 
=== Succesors ===
=== Usages ===
i414 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i475 y: i443  <|@  <|@
f <@~|@floating>@ <|@
tid i413 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i414 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i414 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$111/1684394068@3b95ba0e
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i504 
y: i413 
=== Succesors ===
=== Usages ===
j418 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i504 y: i413  <|@  <|@
f <@~|@floating>@ <|@
tid j418 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$13/1789970631@69334e5d
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$14/1537580341@31af5f51
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i414 
=== Succesors ===
=== Usages ===
j419 j481 v953 v954 v955 v956 v962 v963 v964 v965 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i414  <|@  <|@
f <@~|@floating>@ <|@
tid i420 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@5c0982dc
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i930 
y: i420 
=== Succesors ===
=== Usages ===
v485 v424 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i930 y: i420  <|@  <|@
f <@~|@floating>@ <|@
tid v409 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a436 a542 a497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
result meta{HotSpotType<[I, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 v520 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j410 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v463 v517 j755 j773 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v482 
=== Succesors ===
trueSuccessor: v423 
falseSuccessor: v422 
=== Usages ===
=== Predecessor ===
j460 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v482 #trueSuccessor: v423 #falseSuccessor: v422  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SHL v4|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = LEA [v14|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = AND v15|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v431  <|@  <|@
f <@~|@floating>@ <|@
tid j419 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64
=== Inputs ===
x: j418 
y: j459 
=== Succesors ===
=== Usages ===
v425 v461 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j418 y: j459  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@5c0982dc
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j460 
y: j419 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j460 y: j419  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v425 
=== Succesors ===
trueSuccessor: v430 
falseSuccessor: v429 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v425 #trueSuccessor: v430 #falseSuccessor: v429  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = ADD (x: v17|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v428  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v461 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v461  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v949 
value: j419 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v949 value: j419 stateAfter: - lastLocationAccess: - #next: v448  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
result [v17|QWORD + v12|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j418 
index: j459 
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: j459  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v953 
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v461 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v953 #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid v954 <|@
result [v17|QWORD + v12|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j418 
index: j459 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: j459  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v954 
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v954 #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
result [v17|QWORD + v12|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j418 
index: j459 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: j459  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v955 
=== Succesors ===
next: v457 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v955 #next: v457  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
result [v17|QWORD + v12|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j418 
index: j459 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: j459  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v956 
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v956 #next: v462  <|@  <|@
f <@~|@floating>@ <|@
tid v951 <|@
result [v12|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j459 
index: - 
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j459 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v951 
value: i930 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v951 value: i930 stateAfter: - lastLocationAccess: - #next: v463  <|@  <|@
f <@~|@floating>@ <|@
tid v952 <|@
result [v12|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j459 
index: - 
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j459 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v952 
value: j410 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v952 value: j410 stateAfter: - lastLocationAccess: - #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid v957 <|@
result [v12|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j459 
index: - 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j459 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
value: v575 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v957 value: v575 stateAfter: - lastLocationAccess: - #next: v434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a435 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a435 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j459 
=== Succesors ===
next: v437 
=== Usages ===
a440 
=== Predecessor ===
v434 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j459 #next: v437  <|@  <|@
f <@*|@fixed>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
a435 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v12|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v12|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v12|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v12|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v426  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
v422 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v426 v428 
=== Succesors ===
next: a436 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v426 v428 #next: a436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a436 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@379d1825
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v409 i930 i24 
=== Succesors ===
next: v439 
=== Usages ===
a440 
=== Predecessor ===
v427 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v409 i930 i24 #next: v439  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
a436 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing._notFused(Bench.scala:147) [bci: 0]
locals: - v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115d1aa20:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a440 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v438 
values: a435 a436 
=== Succesors ===
=== Usages ===
v947 a373 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v438 values: a435 a436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v437 v439 
=== Succesors ===
next: v777 
=== Usages ===
a440 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v437 v439 #next: v777  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v636 
=== Usages ===
j778 j780 
=== Predecessor ===
v438 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v636  <|@  <|@
f <@~|@floating>@ <|@
tid j829 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j178 
y: j185 
=== Succesors ===
=== Usages ===
v830 v875 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j178 y: j185  <|@  <|@
f <@~|@floating>@ <|@
tid j825 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j826 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j826 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64 [-2 - 2147483645]
=== Inputs ===
x: j178 
y: j825 
=== Succesors ===
=== Usages ===
v827 v873 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j178 y: j825  <|@  <|@
f <@~|@floating>@ <|@
tid j821 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j822 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j822 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64 [-4 - 2147483643]
=== Inputs ===
x: j178 
y: j821 
=== Succesors ===
=== Usages ===
v823 v871 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j178 y: j821  <|@  <|@
f <@~|@floating>@ <|@
tid j815 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j816 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j816 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64 [-8 - 2147483639]
=== Inputs ===
x: j178 
y: j815 
=== Succesors ===
=== Usages ===
v817 v819 v869 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j178 y: j815  <|@  <|@
f <@~|@floating>@ <|@
tid j257 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v817 j807 j799 j861 j746 v756 j853 j765 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466a6f0e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j816 
y: j257 
=== Succesors ===
=== Usages ===
v694 v639 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j816 y: j257  <|@  <|@
f <@~|@floating>@ <|@
tid v944 <|@
result [v3|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a929 
=== Succesors ===
=== Usages ===
j778 j743 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a929  <|@  <|@
f <@~|@floating>@ <|@
tid j797 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j798 j852 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j783 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j806 j860 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j465 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j868 j814 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v216 
=== Succesors ===
trueSuccessor: v634 
falseSuccessor: v635 
=== Usages ===
=== Predecessor ===
v777 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v216 #trueSuccessor: v634 #falseSuccessor: v635  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = DEC v11|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v11|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v11|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v11|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v653 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v653  <|@  <|@
f <@*|@fixed>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
v634 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v639 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v639  <|@  <|@
f <@~|@floating>@ <|@
tid v947 <|@
result [v22|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a440 
index: - 
=== Succesors ===
=== Usages ===
j780 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a440 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j780 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v777 
address: v947 
=== Succesors ===
=== Usages ===
v979 v981 v983 v985 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v777 address: v947  <|@  <|@
f <@~|@floating>@ <|@
tid j778 <|@
result v28|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v777 
address: v944 
=== Succesors ===
=== Usages ===
v980 v982 v984 v986 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v777 address: v944  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v817 
=== Succesors ===
trueSuccessor: v637 
falseSuccessor: v638 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v817 #trueSuccessor: v637 #falseSuccessor: v638  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = LEA [v22|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v26|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v649 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v649  <|@  <|@
f <@*|@fixed>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
v637 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v640 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v640  <|@  <|@
f <@*|@fixed>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
v638 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B74" 
    successors "B20" "B74" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j807 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v641 
values: j257 j814 
=== Succesors ===
=== Usages ===
v986 j814 v985 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v641 values: j257 j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v640 
=== Succesors ===
next: v931 
=== Usages ===
v931 v645 v646 j807 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v640 #next: v931  <|@  <|@
f <@~|@floating>@ <|@
tid v986 <|@
result [v28|QWORD[*] + v29|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j778 
index: j807 
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: j807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v931 <|@
result v30|V256_DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32,i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v641 
address: v986 
=== Succesors ===
next: v903 
=== Usages ===
v903 
=== Predecessor ===
v641 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v641 address: v986 #next: v903  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
result [v27|QWORD[.] + v29|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j780 
index: j807 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: j807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v985 
value: v931 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v985 value: v931 stateAfter: - lastLocationAccess: - #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid j814 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64
=== Inputs ===
x: j807 
y: j465 
=== Succesors ===
=== Usages ===
j799 j807 v819 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j807 y: j465  <|@  <|@
f <@~|@floating>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466a6f0e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j816 
y: j814 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j816 y: j814  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v819 
=== Succesors ===
trueSuccessor: v645 
falseSuccessor: v647 
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v819 #trueSuccessor: v645 #falseSuccessor: v647  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|V256_DWORD = H [v28|QWORD[*] + v29|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v29|QWORD * 4], input: v30|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v29|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v641 
=== Succesors ===
next: v651 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v641 #next: v651  <|@  <|@
f <@*|@fixed>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
v645 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j799 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v650 
values: j257 j814 
=== Succesors ===
=== Usages ===
v984 j806 j790 v823 v983 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v650 values: j257 j814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v649 v651 
=== Succesors ===
next: v669 
=== Usages ===
j799 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v649 v651 #next: v669  <|@  <|@
f <@~|@floating>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466a6f0e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j822 
y: j799 
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j822 y: j799  <|@  <|@
f <@*|@fixed>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v823 
=== Succesors ===
trueSuccessor: v668 
falseSuccessor: v667 
=== Usages ===
=== Predecessor ===
v650 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v823 #trueSuccessor: v668 #falseSuccessor: v667  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v672 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v672  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v668 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v932 
=== Usages ===
v932 
=== Predecessor ===
v669 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v932  <|@  <|@
f <@~|@floating>@ <|@
tid v984 <|@
result [v28|QWORD[*] + v32|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j778 
index: j799 
=== Succesors ===
=== Usages ===
v932 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: j799  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v932 <|@
result v33|V128_DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v667 
address: v984 
=== Succesors ===
next: v901 
=== Usages ===
v901 
=== Predecessor ===
v667 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v667 address: v984 #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid v983 <|@
result [v27|QWORD[.] + v32|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j780 
index: j799 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: j799  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v983 
value: v932 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v983 value: v932 stateAfter: - lastLocationAccess: - #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid j806 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64
=== Inputs ===
x: j799 
y: j783 
=== Succesors ===
=== Usages ===
j790 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j799 y: j783  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
v901 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|V128_DWORD = H [v28|QWORD[*] + v32|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v32|QWORD * 4], input: v33|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v32|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j790 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v661 
values: j806 j799 
=== Succesors ===
=== Usages ===
v982 j798 j781 v827 v981 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v661 values: j806 j799  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v660 v672 
=== Succesors ===
next: v675 
=== Usages ===
j790 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v660 v672 #next: v675  <|@  <|@
f <@~|@floating>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466a6f0e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j826 
y: j790 
=== Succesors ===
=== Usages ===
v675 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j826 y: j790  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v827 
=== Succesors ===
trueSuccessor: v674 
falseSuccessor: v673 
=== Usages ===
=== Predecessor ===
v661 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v827 #trueSuccessor: v674 #falseSuccessor: v673  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v678 
=== Usages ===
=== Predecessor ===
v675 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v678  <|@  <|@
f <@*|@fixed>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
v674 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v933 
=== Usages ===
v933 
=== Predecessor ===
v675 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v933  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
result [v28|QWORD[*] + v35|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j778 
index: j790 
=== Succesors ===
=== Usages ===
v933 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: j790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v933 <|@
result v36|V64_DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32>
=== Inputs ===
stateBefore: - 
guard: v673 
address: v982 
=== Succesors ===
next: v899 
=== Usages ===
v899 
=== Predecessor ===
v673 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v673 address: v982 #next: v899  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
result [v27|QWORD[.] + v35|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j780 
index: j790 
=== Succesors ===
=== Usages ===
v899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: j790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v981 
value: v933 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v933 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v981 value: v933 stateAfter: - lastLocationAccess: - #next: v663  <|@  <|@
f <@~|@floating>@ <|@
tid j798 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64
=== Inputs ===
x: j790 
y: j797 
=== Succesors ===
=== Usages ===
j781 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j790 y: j797  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
v899 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|V64_DWORD = H [v28|QWORD[*] + v35|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v35|QWORD * 4], input: v36|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v35|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j781 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v664 
values: j798 j790 
=== Succesors ===
=== Usages ===
v980 v830 v979 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v664 values: j798 j790  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v663 v678 
=== Succesors ===
next: v681 
=== Usages ===
j781 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v663 v678 #next: v681  <|@  <|@
f <@~|@floating>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466a6f0e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j829 
y: j781 
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j829 y: j781  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v830 
=== Succesors ===
trueSuccessor: v680 
falseSuccessor: v679 
=== Usages ===
=== Predecessor ===
v664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v830 #trueSuccessor: v680 #falseSuccessor: v679  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v684  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
v680 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i934 
=== Usages ===
i934 
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i934  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
result [v28|QWORD[*] + v38|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j778 
index: j781 
=== Succesors ===
=== Usages ===
i934 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j778 index: j781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i934 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v679 
address: v980 
=== Succesors ===
next: v897 
=== Usages ===
v897 
=== Predecessor ===
v679 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v679 address: v980 #next: v897  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
result [v27|QWORD[.] + v38|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j780 
index: j781 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j780 index: j781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v979 
value: i934 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v666 
=== Usages ===
=== Predecessor ===
i934 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v979 value: i934 stateAfter: - lastLocationAccess: - #next: v666  <|@  <|@
f <@*|@fixed>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
v897 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV [v28|QWORD[*] + v38|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD[.] + v38|QWORD * 4], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B15" "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v653 v666 v684 
=== Succesors ===
next: a373 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v653 v666 v684 #next: a373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a373 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a440 
=== Succesors ===
next: v742 
=== Usages ===
v945 ?30 ?112 
=== Predecessor ===
v654 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a440 #next: v742  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v590 
=== Usages ===
j743 j745 
=== Predecessor ===
a373 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v590  <|@  <|@
f <@~|@floating>@ <|@
tid v945 <|@
result [v22|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a373 
index: - 
=== Succesors ===
=== Usages ===
j834 j745 j762 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a373 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466a6f0e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j186 
y: j257 
=== Succesors ===
=== Usages ===
v612 v590 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j186 y: j257  <|@  <|@
f <@*|@fixed>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v756 
=== Succesors ===
trueSuccessor: v588 
falseSuccessor: v589 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v756 #trueSuccessor: v588 #falseSuccessor: v589  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v590 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v595  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
v588 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v591 
=== Usages ===
=== Predecessor ===
v590 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v591  <|@  <|@
f <@~|@floating>@ <|@
tid j745 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v742 
address: v945 
=== Succesors ===
=== Usages ===
v975 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v742 address: v945  <|@  <|@
f <@~|@floating>@ <|@
tid j743 <|@
result v41|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v742 
address: v944 
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v742 address: v944  <|@  <|@
f <@*|@fixed>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
v589 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = LEA [v22|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B73" 
    successors "B34" "B73" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j746 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v592 
values: j257 j755 
=== Succesors ===
=== Usages ===
v976 j755 v975 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v592 values: j257 j755  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v591 
=== Succesors ===
next: i935 
=== Usages ===
i935 v598 v600 j746 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v591 #next: i935  <|@  <|@
f <@~|@floating>@ <|@
tid v976 <|@
result [v41|QWORD[*] + v42|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j743 
index: j746 
=== Succesors ===
=== Usages ===
i935 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j743 index: j746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i935 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v592 
address: v976 
=== Succesors ===
next: v892 
=== Usages ===
i891 
=== Predecessor ===
v592 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v592 address: v976 #next: v892  <|@  <|@
f <@~|@floating>@ <|@
tid v975 <|@
result [v40|QWORD[.] + v42|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j745 
index: j746 
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j745 index: j746  <|@  <|@
f <@~|@floating>@ <|@
tid i891 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i32
=== Inputs ===
x: i935 
y: i62 
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i935 y: i62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v975 
value: i891 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v602 
=== Usages ===
=== Predecessor ===
i935 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v975 value: i891 stateAfter: - lastLocationAccess: - #next: v602  <|@  <|@
f <@~|@floating>@ <|@
tid j755 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64
=== Inputs ===
x: j746 
y: j410 
=== Succesors ===
=== Usages ===
v758 j746 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j746 y: j410  <|@  <|@
f <@~|@floating>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466a6f0e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j186 
y: j755 
=== Succesors ===
=== Usages ===
v602 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j186 y: j755  <|@  <|@
f <@*|@fixed>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v758 
=== Succesors ===
trueSuccessor: v598 
falseSuccessor: v601 
=== Usages ===
=== Predecessor ===
v892 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v758 #trueSuccessor: v598 #falseSuccessor: v601  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = ADD (x: v43|DWORD, ~y: [v41|QWORD[*] + v42|QWORD * 8]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD[.] + v42|QWORD * 8], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = INC v42|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v592 
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v592 #next: v597  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
v598 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v595 v597 
=== Succesors ===
next: v927 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v595 v597 #next: v927  <|@  <|@
tid ?52 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<Fusing._notFused(Fusing$List)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 147
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
?30 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid a7 <|@
result Object[Fusing$$Lambda$26/947584453@1971198489] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Fusing$$Lambda$26/947584453@1971198489
stableDimension: 0
stamp: a!# Lbench/Fusing$$Lambda$26/947584453;
stampKind: a -
value: Object[Fusing$$Lambda$26/947584453@1971198489]
=== Inputs ===
=== Succesors ===
=== Usages ===
?30 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i368 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i369 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i369 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$111/1684394068@3b95ba0e
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i181 
y: i368 
=== Succesors ===
=== Usages ===
?30 ?77 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i181 y: i368  <|@  <|@
tid ?30 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Fusing$List.map(Function1)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 0
=== Inputs ===
outerFrameState: ?52 
values: a2 a7 a373 i369 
=== Succesors ===
=== Usages ===
a497 v253 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?52 values: a2 a7 a373 i369  <|@  <|@
f <@~|@floating>@ <|@
tid j196 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
guard: v240 
object: j215 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@GuardedValue|@org.graalvm.compiler.nodes.GuardedValueNode>@ guard: v240 object: j215  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@5c0982dc
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j196 
y: j178 
=== Succesors ===
=== Usages ===
v927 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j196 y: j178  <|@  <|@
f <@*|@fixed>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v197 
=== Succesors ===
trueSuccessor: v923 
falseSuccessor: v926 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v197 #trueSuccessor: v923 #falseSuccessor: v926  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = AND v6|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v921 
=== Usages ===
=== Predecessor ===
v927 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v921  <|@  <|@
f <@*|@fixed>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
v923 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B72" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v925 
=== Usages ===
=== Predecessor ===
v927 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v925  <|@  <|@
f <@*|@fixed>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v216 
=== Succesors ===
trueSuccessor: v924 
falseSuccessor: v254 
=== Usages ===
=== Predecessor ===
v926 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v216 #trueSuccessor: v924 #falseSuccessor: v254  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v922 
=== Usages ===
=== Predecessor ===
v925 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v922  <|@  <|@
f <@*|@fixed>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v920 
=== Predecessor ===
v924 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v921 v922 
=== Succesors ===
next: j477 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v921 v922 #next: j477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j477 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j513 
=== Usages ===
v958 v959 
=== Predecessor ===
v920 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j513  <|@  <|@
f <@~|@floating>@ <|@
tid v958 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j477 
index: - 
=== Succesors ===
=== Usages ===
j513 v515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j477 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j513 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
=== Succesors ===
next: j514 
=== Usages ===
j481 v960 v961 a496 v966 v962 v963 v964 v965 
=== Predecessor ===
j477 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v958 #next: j514  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j477 
index: - 
=== Succesors ===
=== Usages ===
j514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j477 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j514 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v959 
=== Succesors ===
next: v485 
=== Usages ===
v486 
=== Predecessor ===
j513 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v959 #next: v485  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v482 
=== Succesors ===
trueSuccessor: v484 
falseSuccessor: v483 
=== Usages ===
=== Predecessor ===
j514 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v482 #trueSuccessor: v484 #falseSuccessor: v483  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v492 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v492  <|@  <|@
f <@~|@floating>@ <|@
tid j481 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64
=== Inputs ===
x: j418 
y: j513 
=== Succesors ===
=== Usages ===
v486 v515 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j418 y: j513  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@5c0982dc
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j514 
y: j481 
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j514 y: j481  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v486 
=== Succesors ===
trueSuccessor: v491 
falseSuccessor: v490 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v486 #trueSuccessor: v491 #falseSuccessor: v490  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = ADD (x: v47|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v489 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v489  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
v491 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v515 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v515  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
value: j481 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v958 value: j481 stateAfter: - lastLocationAccess: - #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid v962 <|@
result [v17|QWORD + v47|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j418 
index: j513 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: j513  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v962 
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v962 #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
result [v17|QWORD + v47|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j418 
index: j513 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: j513  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v963 
=== Succesors ===
next: v510 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v963 #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
result [v17|QWORD + v47|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j418 
index: j513 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: j513  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v964 
=== Succesors ===
next: v512 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v964 #next: v512  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
result [v17|QWORD + v47|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j418 
index: j513 
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j418 index: j513  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v965 
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v510 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v965 #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v960 <|@
result [v47|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j513 
index: - 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j513 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v960 
value: i930 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v960 value: i930 stateAfter: - lastLocationAccess: - #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
result [v47|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j513 
index: - 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j513 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v961 
value: j410 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v961 value: j410 stateAfter: - lastLocationAccess: - #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
result [v47|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j513 
index: - 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j513 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v966 
value: v575 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v966 value: v575 stateAfter: - lastLocationAccess: - #next: v495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a496 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a496  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a496 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j513 
=== Succesors ===
next: v498 
=== Usages ===
a501 
=== Predecessor ===
v495 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j513 #next: v498  <|@  <|@
f <@*|@fixed>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
a496 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v47|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v47|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v47|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v47|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v47|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v47|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD[.]] destination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v487 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v487  <|@  <|@
f <@*|@fixed>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
v483 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v487 v489 
=== Succesors ===
next: a497 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v487 v489 #next: a497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a497 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@379d1825
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?30 
arguments: v409 i930 i24 
=== Succesors ===
next: v500 
=== Usages ===
a501 
=== Predecessor ===
v488 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?30 arguments: v409 i930 i24 #next: v500  <|@  <|@
f <@*|@fixed>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
a497 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: v0|QWORD[.] Object[Fusing$$Lambda$26/947584453@1971198489] v22|QWORD[.] v46|DWORD 
bench.Fusing._notFused(Bench.scala:147) [bci: 6]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115d1aa20:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 6] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a501 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v499 
values: a496 a497 
=== Succesors ===
=== Usages ===
v948 a377 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v499 values: a496 a497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v498 v500 
=== Succesors ===
next: v833 
=== Usages ===
a501 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v498 v500 #next: v833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v691 
=== Usages ===
j834 j836 
=== Predecessor ===
v499 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v691  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v216 
=== Succesors ===
trueSuccessor: v689 
falseSuccessor: v690 
=== Usages ===
=== Predecessor ===
v833 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v216 #trueSuccessor: v689 #falseSuccessor: v690  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v707 
=== Usages ===
=== Predecessor ===
v691 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v707  <|@  <|@
f <@*|@fixed>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v708 
=== Predecessor ===
v689 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v691 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid v948 <|@
result [v52|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a501 
index: - 
=== Succesors ===
=== Usages ===
j836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a501 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j836 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v833 
address: v948 
=== Succesors ===
=== Usages ===
v987 v989 v991 v993 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v833 address: v948  <|@  <|@
f <@~|@floating>@ <|@
tid j834 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v833 
address: v945 
=== Succesors ===
=== Usages ===
v988 v990 v992 v994 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v833 address: v945  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v817 
=== Succesors ===
trueSuccessor: v692 
falseSuccessor: v693 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v817 #trueSuccessor: v692 #falseSuccessor: v693  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = LEA [v52|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = LEA [v22|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v26|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v703 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v703  <|@  <|@
f <@*|@fixed>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v692 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v695  <|@  <|@
f <@*|@fixed>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
v693 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B71" 
    successors "B51" "B71" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j861 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v696 
values: j257 j868 
=== Succesors ===
=== Usages ===
v994 j868 v993 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v696 values: j257 j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v695 
=== Succesors ===
next: v936 
=== Usages ===
v936 v699 v700 j861 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v695 #next: v936  <|@  <|@
f <@~|@floating>@ <|@
tid v994 <|@
result [v54|QWORD[.] + v55|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j834 
index: j861 
=== Succesors ===
=== Usages ===
v936 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j834 index: j861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v936 <|@
result v56|V256_DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32,i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v696 
address: v994 
=== Succesors ===
next: v911 
=== Usages ===
v911 
=== Predecessor ===
v696 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v696 address: v994 #next: v911  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
result [v53|QWORD[.] + v55|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j836 
index: j861 
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j836 index: j861  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v993 
value: v936 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v702 
=== Usages ===
=== Predecessor ===
v936 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v993 value: v936 stateAfter: - lastLocationAccess: - #next: v702  <|@  <|@
f <@~|@floating>@ <|@
tid j868 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64
=== Inputs ===
x: j861 
y: j465 
=== Succesors ===
=== Usages ===
j853 j861 v869 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j861 y: j465  <|@  <|@
f <@~|@floating>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466a6f0e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j816 
y: j868 
=== Succesors ===
=== Usages ===
v702 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j816 y: j868  <|@  <|@
f <@*|@fixed>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v869 
=== Succesors ===
trueSuccessor: v699 
falseSuccessor: v701 
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v869 #trueSuccessor: v699 #falseSuccessor: v701  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|V256_DWORD = H [v54|QWORD[.] + v55|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v53|QWORD[.] + v55|QWORD * 4], input: v56|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = LEA [v55|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v696 
=== Succesors ===
next: v705 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v696 #next: v705  <|@  <|@
f <@*|@fixed>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v699 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j853 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v704 
values: j257 j868 
=== Succesors ===
=== Usages ===
v992 j860 j845 v871 v991 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v704 values: j257 j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v703 v705 
=== Succesors ===
next: v723 
=== Usages ===
j853 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v703 v705 #next: v723  <|@  <|@
f <@~|@floating>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466a6f0e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j822 
y: j853 
=== Succesors ===
=== Usages ===
v723 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j822 y: j853  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v871 
=== Succesors ===
trueSuccessor: v722 
falseSuccessor: v721 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v871 #trueSuccessor: v722 #falseSuccessor: v721  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v726  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
v722 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v937 
=== Usages ===
v937 
=== Predecessor ===
v723 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v937  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
result [v54|QWORD[.] + v58|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j834 
index: j853 
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j834 index: j853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v937 <|@
result v59|V128_DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v721 
address: v992 
=== Succesors ===
next: v909 
=== Usages ===
v909 
=== Predecessor ===
v721 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v721 address: v992 #next: v909  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
result [v53|QWORD[.] + v58|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j836 
index: j853 
=== Succesors ===
=== Usages ===
v909 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j836 index: j853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v991 
value: v937 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v714 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v991 value: v937 stateAfter: - lastLocationAccess: - #next: v714  <|@  <|@
f <@~|@floating>@ <|@
tid j860 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64
=== Inputs ===
x: j853 
y: j783 
=== Succesors ===
=== Usages ===
j845 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j853 y: j783  <|@  <|@
f <@*|@fixed>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
v909 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|V128_DWORD = H [v54|QWORD[.] + v58|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v53|QWORD[.] + v58|QWORD * 4], input: v59|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v58|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j845 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v715 
values: j860 j853 
=== Succesors ===
=== Usages ===
v990 j852 j837 v873 v989 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v715 values: j860 j853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v714 v726 
=== Succesors ===
next: v729 
=== Usages ===
j845 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v714 v726 #next: v729  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466a6f0e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j826 
y: j845 
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j826 y: j845  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v873 
=== Succesors ===
trueSuccessor: v728 
falseSuccessor: v727 
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v873 #trueSuccessor: v728 #falseSuccessor: v727  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v61|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v732 
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v732  <|@  <|@
f <@*|@fixed>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v718 
=== Predecessor ===
v728 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v938 
=== Usages ===
v938 
=== Predecessor ===
v729 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v938  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
result [v54|QWORD[.] + v61|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j834 
index: j845 
=== Succesors ===
=== Usages ===
v938 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j834 index: j845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v938 <|@
result v62|V64_DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32>
=== Inputs ===
stateBefore: - 
guard: v727 
address: v990 
=== Succesors ===
next: v907 
=== Usages ===
v907 
=== Predecessor ===
v727 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v727 address: v990 #next: v907  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
result [v53|QWORD[.] + v61|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j836 
index: j845 
=== Succesors ===
=== Usages ===
v907 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j836 index: j845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v989 
value: v938 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v938 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v989 value: v938 stateAfter: - lastLocationAccess: - #next: v717  <|@  <|@
f <@~|@floating>@ <|@
tid j852 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64
=== Inputs ===
x: j845 
y: j797 
=== Succesors ===
=== Usages ===
j837 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j845 y: j797  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v718 
=== Predecessor ===
v907 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|V64_DWORD = H [v54|QWORD[.] + v61|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v53|QWORD[.] + v61|QWORD * 4], input: v62|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v61|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j837 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v718 
values: j852 j845 
=== Succesors ===
=== Usages ===
v988 v875 v987 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v718 values: j852 j845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v717 v732 
=== Succesors ===
next: v735 
=== Usages ===
j837 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v717 v732 #next: v735  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466a6f0e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j829 
y: j837 
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j829 y: j837  <|@  <|@
f <@*|@fixed>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v875 
=== Succesors ===
trueSuccessor: v734 
falseSuccessor: v733 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v875 #trueSuccessor: v734 #falseSuccessor: v733  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v64|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v738 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v738  <|@  <|@
f <@*|@fixed>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v708 
=== Predecessor ===
v734 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i939 
=== Usages ===
i939 
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i939  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
result [v54|QWORD[.] + v64|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j834 
index: j837 
=== Succesors ===
=== Usages ===
i939 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j834 index: j837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i939 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v733 
address: v988 
=== Succesors ===
next: v905 
=== Usages ===
v905 
=== Predecessor ===
v733 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v733 address: v988 #next: v905  <|@  <|@
f <@~|@floating>@ <|@
tid v987 <|@
result [v53|QWORD[.] + v64|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j836 
index: j837 
=== Succesors ===
=== Usages ===
v905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j836 index: j837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v987 
value: i939 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v720 
=== Usages ===
=== Predecessor ===
i939 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v987 value: i939 stateAfter: - lastLocationAccess: - #next: v720  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v708 
=== Predecessor ===
v905 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV [v54|QWORD[.] + v64|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + v64|QWORD * 4], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B46" "B60" "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v707 v720 v738 
=== Succesors ===
next: a377 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v707 v720 v738 #next: a377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a377 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a501 
=== Succesors ===
next: v761 
=== Usages ===
a262 ?77 v946 
=== Predecessor ===
v708 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a501 #next: v761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v612 
=== Usages ===
j762 j764 
=== Predecessor ===
a377 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v612  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v756 
=== Succesors ===
trueSuccessor: v610 
falseSuccessor: v611 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v756 #trueSuccessor: v610 #falseSuccessor: v611  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v617  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
v610 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v613 
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v613  <|@  <|@
f <@~|@floating>@ <|@
tid v946 <|@
result [v52|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a377 
index: - 
=== Succesors ===
=== Usages ===
j764 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a377 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j764 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v761 
address: v946 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v761 address: v946  <|@  <|@
f <@~|@floating>@ <|@
tid j762 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v761 
address: v945 
=== Succesors ===
=== Usages ===
v978 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v761 address: v945  <|@  <|@
f <@*|@fixed>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
v611 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = LEA [v52|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = LEA [v22|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B70" 
    successors "B65" "B70" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j765 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v614 
values: j257 j773 
=== Succesors ===
=== Usages ===
v978 j773 v977 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v614 values: j257 j773  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v613 
=== Succesors ===
next: i940 
=== Usages ===
i940 v620 v622 j765 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v613 #next: i940  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
result [v67|QWORD[.] + v68|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j762 
index: j765 
=== Succesors ===
=== Usages ===
i940 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j762 index: j765  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i940 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v614 
address: v978 
=== Succesors ===
next: v895 
=== Usages ===
i894 
=== Predecessor ===
v614 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v614 address: v978 #next: v895  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
result [v66|QWORD[.] + v68|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j764 
index: j765 
=== Succesors ===
=== Usages ===
v895 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j764 index: j765  <|@  <|@
f <@~|@floating>@ <|@
tid i894 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i32
=== Inputs ===
x: i940 
y: i62 
=== Succesors ===
=== Usages ===
v895 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i940 y: i62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v977 
value: i894 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v624 
=== Usages ===
=== Predecessor ===
i940 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v977 value: i894 stateAfter: - lastLocationAccess: - #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid j773 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64
=== Inputs ===
x: j765 
y: j410 
=== Succesors ===
=== Usages ===
v774 j765 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j765 y: j410  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@466a6f0e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j186 
y: j773 
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j186 y: j773  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v774 
=== Succesors ===
trueSuccessor: v620 
falseSuccessor: v623 
=== Usages ===
=== Predecessor ===
v895 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v774 #trueSuccessor: v620 #falseSuccessor: v623  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = ADD (x: v69|DWORD, ~y: [v67|QWORD[.] + v68|QWORD * 8]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v66|QWORD[.] + v68|QWORD * 8], y: v70|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = INC v68|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B65 falseDestination: B64 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v614 
=== Succesors ===
next: v619 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v614 #next: v619  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
v620 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v617 v619 
=== Succesors ===
next: j530 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v617 v619 #next: j530  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j530 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j546 
=== Usages ===
v967 v968 
=== Predecessor ===
v618 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j546  <|@  <|@
f <@~|@floating>@ <|@
tid v967 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j530 
index: - 
=== Succesors ===
=== Usages ===
j546 v548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j530 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j546 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v967 
=== Succesors ===
next: j547 
=== Usages ===
j577 j552 v972 
=== Predecessor ===
j530 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v967 #next: j547  <|@  <|@
f <@~|@floating>@ <|@
tid v968 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j530 
index: - 
=== Succesors ===
=== Usages ===
j547 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j530 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j547 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v968 
=== Succesors ===
next: v538 
=== Usages ===
v535 
=== Predecessor ===
j546 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v968 #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid j576 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j577 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/650344688@47d4a555
stamp: i64
=== Inputs ===
x: j546 
y: j576 
=== Succesors ===
=== Usages ===
v535 v548 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j546 y: j576  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@5c0982dc
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j547 
y: j577 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j547 y: j577  <|@  <|@
f <@*|@fixed>@ <|@
tid v538 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@37ed1421 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v535 
=== Succesors ===
trueSuccessor: v536 
falseSuccessor: v537 
=== Usages ===
=== Predecessor ===
j547 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v535 #trueSuccessor: v536 #falseSuccessor: v537  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = LEA [v72|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v73|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a542 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a542  <|@  <|@
tid ?98 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<Fusing._notFused(Fusing$List)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 147
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
?77 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
tid a66 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@6577eafc
hasIdentity: true
objectId: -1
stamp: a!# Lbench/Fusing$List;
type: HotSpotType<Lbench/Fusing$List;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?112 ?77 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a13 <|@
result Object[Fusing$$Lambda$28/39597091@1201907975] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Fusing$$Lambda$28/39597091@1201907975
stableDimension: 0
stamp: a!# Lbench/Fusing$$Lambda$28/39597091;
stampKind: a -
value: Object[Fusing$$Lambda$28/39597091@1201907975]
=== Inputs ===
=== Succesors ===
=== Usages ===
?77 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?112 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a66 
values: a373 a928 
=== Succesors ===
=== Usages ===
?77 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a66 values: a373 a928  <|@  <|@
tid ?77 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Fusing$List.map(Function1)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 0
=== Inputs ===
outerFrameState: ?98 
values: a66 a13 a377 i369 
virtualObjectMappings: ?112 
=== Succesors ===
=== Usages ===
a542 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?98 values: a66 a13 a377 i369 virtualObjectMappings: ?112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a542 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@379d1825
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?77 
arguments: v409 i411 i62 
=== Succesors ===
next: j543 
=== Usages ===
j543 
=== Predecessor ===
v536 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?77 arguments: v409 i411 i62 #next: j543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j543 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a542 
=== Succesors ===
next: v553 
=== Usages ===
j552 
=== Predecessor ===
a542 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a542 #next: v553  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
j543 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: vobject:Fusing$List:0{a=v22|QWORD[.],$outer=v1|DWORD[.]} Object[Fusing$$Lambda$28/39597091@1201907975] v52|QWORD[.] v46|DWORD 
bench.Fusing._notFused(Bench.scala:147) [bci: 14]
locals: - - 
vobject:Fusing$List:0{a=v22|QWORD[.],$outer=v1|DWORD[.]} Lbench/Fusing$List; v22|QWORD[.] v1|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115d1aa20:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 14] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD[.]] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v548 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v967 
value: j577 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v967 value: j577 stateAfter: - lastLocationAccess: - #next: v545  <|@  <|@
f <@~|@floating>@ <|@
tid v972 <|@
result [v72|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j546 
index: - 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j546 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v972 
=== Succesors ===
next: v551 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v972 #next: v551  <|@  <|@
f <@*|@fixed>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
v545 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v73|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v72|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j552 <|@
result v75|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v550 
values: j546 j543 
=== Succesors ===
=== Usages ===
v971 v970 a259 v973 v974 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v550 values: j546 j543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v551 v553 
=== Succesors ===
next: a259 
=== Usages ===
j552 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v551 v553 #next: a259  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a259 <|@
result v76|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j552 
=== Succesors ===
next: j564 
=== Usages ===
a266 
=== Predecessor ===
v550 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j552 #next: j564  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lbench/Fusing$List;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lbench/Fusing$List;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j559 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j559 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v558 
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v558  <|@  <|@
f <@~|@floating>@ <|@
tid v969 <|@
result [v77|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j559 
index: - 
=== Succesors ===
=== Usages ===
j564 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j559 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j564 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v969 
=== Succesors ===
next: v565 
=== Usages ===
v565 
=== Predecessor ===
a259 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v969 #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid v970 <|@
result [v75|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j552 
index: - 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j552 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v970 
value: j564 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
j564 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v970 value: j564 stateAfter: - lastLocationAccess: - #next: v568  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
result [v75|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j552 
index: - 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j552 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
result meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v971 
value: v581 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v572 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v971 value: v581 stateAfter: - lastLocationAccess: - #next: v572  <|@  <|@
f <@~|@floating>@ <|@
tid v973 <|@
result [v75|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j552 
index: - 
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j552 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a262 <|@
result v79|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a377 
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v973 
value: a262 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v574 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v973 value: a262 stateAfter: - lastLocationAccess: - #next: v574  <|@  <|@
f <@~|@floating>@ <|@
tid v974 <|@
result [v75|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j552 
index: - 
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j552 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v974 
value: a928 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a266 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v974 value: a928 stateAfter: - lastLocationAccess: - #next: a266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a266 <|@
result v76|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a259 
=== Succesors ===
next: v267 
=== Usages ===
v17 
=== Predecessor ===
v574 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a259 #next: v267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
a266 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v17  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a266 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a266 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE v75|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lbench/Fusing$List;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = MOV [v77|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v75|QWORD[*]], y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v75|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = COMPRESSPOINTER (input: v52|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1f6308cd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v75|QWORD[*] + 12], y: v79|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v75|QWORD[*] + 16], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v76|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2f0915b0 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B64" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4612248968380809216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v622 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v622  <|@  <|@
f <@*|@fixed>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v614 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v614  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD] destination: B70 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B50" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v700 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v700  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v696 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v696  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD] destination: B71 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v925 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 151
reason: BoundsCheckException
speculation: Object[d.a@824747228]
stamp: void
=== Inputs ===
stateBefore: ?30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@824747228] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -38683 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v80|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: v0|QWORD[.] Object[Fusing$$Lambda$26/947584453@1971198489] v22|QWORD[.] v46|DWORD 
bench.Fusing._notFused(Bench.scala:147) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:15, 6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612248968380809216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v600  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v592 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v592  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B73 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v646 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v646  <|@  <|@
f <@*|@fixed>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v641 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v641  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B74 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid a408 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@824747228
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@824747228]
=== Inputs ===
=== Succesors ===
=== Usages ===
a394 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i407 <|@
result int[-33307|0xffffffffffff7de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -33307
stableDimension: 0
stamp: i32 [-33307] ⇊00000000ffff7de5 ⇈00000000ffff7de5
stampKind: i32
value: int[-33307|0xffffffffffff7de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i393 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v250 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@824747228] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33307|0xffffffffffff7de5], v81|QWORD[.]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B75" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i393 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-45188 - -30219] ⇊00000000ffff0064 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v389 
values: i397 i402 i407 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v389 values: i397 i402 i407  <|@  <|@
f <@~|@floating>@ <|@
tid a394 <|@
result v83|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v389 
values: a398 a403 a408 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v389 values: a398 a403 a408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v396 v401 v406 
=== Succesors ===
next: v395 
=== Usages ===
i393 a394 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v396 v401 v406 #next: v395  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i393 
speculation: a394 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i393 speculation: a394  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|DWORD, v83|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v83|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing._notFused(Bench.scala:147) [bci: 0]
locals: - v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@e0117ff slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing._notFused(Bench.scala:147) [bci: 0]
locals: - v0|QWORD[.] 
>@ <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD[.], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing._notFused(Bench.scala:147) [bci: 0]
locals: - v0|QWORD[.] 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = DEC v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHL v9|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B75" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SHL v4|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = LEA [v14|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = AND v15|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = ADD (x: v17|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v12|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v12|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v12|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v12|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = DEC v11|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v11|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v11|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v11|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = LEA [v22|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v26|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|V128_DWORD = H [v28|QWORD[*] + v32|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v32|QWORD * 4], input: v33|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v32|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v35|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|V64_DWORD = H [v28|QWORD[*] + v35|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v35|QWORD * 4], input: v36|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v35|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v38|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV [v28|QWORD[*] + v38|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v27|QWORD[.] + v38|QWORD * 4], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B15" "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = LEA [v22|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612248968380809216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B73 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B73" 
    successors "B34" "B73" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = ADD (x: v43|DWORD, ~y: [v41|QWORD[*] + v42|QWORD * 8]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD[.] + v42|QWORD * 8], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = INC v42|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = AND v6|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B72" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = ADD (x: v47|QWORD, y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v47|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v47|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v47|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v47|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v47|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v47|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD[.]] destination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = LEA [v52|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = LEA [v22|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v26|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|V128_DWORD = H [v54|QWORD[.] + v58|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v53|QWORD[.] + v58|QWORD * 4], input: v59|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v58|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v61|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|V64_DWORD = H [v54|QWORD[.] + v61|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v53|QWORD[.] + v61|QWORD * 4], input: v62|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v61|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v64|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV [v54|QWORD[.] + v64|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + v64|QWORD * 4], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B46" "B60" "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = LEA [v52|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = LEA [v22|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B64" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4612248968380809216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD] destination: B70 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B70" 
    successors "B65" "B70" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = ADD (x: v69|DWORD, ~y: [v67|QWORD[.] + v68|QWORD * 8]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v66|QWORD[.] + v68|QWORD * 8], y: v70|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = INC v68|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B65 falseDestination: B64 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = LEA [v72|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v73|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v73|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v72|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE v75|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lbench/Fusing$List;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = MOV [v77|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v75|QWORD[*]], y: v78|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v75|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = COMPRESSPOINTER (input: v52|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1f6308cd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v75|QWORD[*] + 12], y: v79|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v75|QWORD[*] + 16], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v76|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2f0915b0 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B74 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B74" 
    successors "B20" "B74" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|V256_DWORD = H [v28|QWORD[*] + v29|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v27|QWORD[.] + v29|QWORD * 4], input: v30|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = LEA [v29|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B50" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD] destination: B71 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B71" 
    successors "B51" "B71" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|V256_DWORD = H [v54|QWORD[.] + v55|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v53|QWORD[.] + v55|QWORD * 4], input: v56|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = LEA [v55|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v86|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing._notFused(Bench.scala:147) [bci: 0]
locals: - v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115d1aa20:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v85|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: v0|QWORD[.] Object[Fusing$$Lambda$26/947584453@1971198489] v22|QWORD[.] v46|DWORD 
bench.Fusing._notFused(Bench.scala:147) [bci: 6]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115d1aa20:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 6] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v84|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: vobject:Fusing$List:0{a=v22|QWORD[.],$outer=v1|DWORD[.]} Object[Fusing$$Lambda$28/39597091@1201907975] v52|QWORD[.] v46|DWORD 
bench.Fusing._notFused(Bench.scala:147) [bci: 14]
locals: - - 
vobject:Fusing$List:0{a=v22|QWORD[.],$outer=v1|DWORD[.]} Lbench/Fusing$List; v22|QWORD[.] v1|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115d1aa20:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 14] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD[.]] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1310046811] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-38163|0xffffffffffff6aed], v2|QWORD[.]] destination: B1 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B75" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|DWORD, v83|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v83|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing._notFused(Bench.scala:147) [bci: 0]
locals: - v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@824747228] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-33307|0xffffffffffff7de5], v81|QWORD[.]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1049778166] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-45188|0xffffffffffff4f7c], v5|QWORD[.]] destination: B3 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@824747228] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -38683 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v80|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: v0|QWORD[.] Object[Fusing$$Lambda$26/947584453@1971198489] v22|QWORD[.] v46|DWORD 
bench.Fusing._notFused(Bench.scala:147) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:15, 6] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokedynamic #-19        // java.lang.invoke.LambdaForm$MH.2093631819.linkToTargetMethod:(java.lang.Object)java.lang.Object
     6: invokevirtual #5          // bench.Fusing$List.map:(scala.Function1)bench.Fusing$List
     9: invokedynamic #-20        // java.lang.invoke.LambdaForm$MH.2093631819.linkToTargetMethod:(java.lang.Object)java.lang.Object
    14: invokevirtual #5          // bench.Fusing$List.map:(scala.Function1)bench.Fusing$List
    17: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@e0117ff slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
bench.Fusing._notFused(Bench.scala:147) [bci: 0]
locals: - r13|QWORD[.] 
>@ <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r10|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [r10:0, r13:0, r14:0]
live-base-pointers: []
bench.Fusing._notFused(Bench.scala:147) [bci: 0]
locals: - r13|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction CMP r11|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction r8|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|DWORD = SHR r8|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = MOV rsi|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction stack:40|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction r9|QWORD = SHL rsi|QWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction CMP (x: rbx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B75" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   88  <|@ instruction rdi|DWORD = SHL r11|DWORD y: 2 size: DWORD <|@ <|@
      nr   90  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD <|@ <|@
      nr   92  <|@ instruction rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD <|@ <|@
      nr   94  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr   96  <|@ instruction CMP r11|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction rax|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 96], y: rax|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  136  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  142  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction stack:48|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction stack:56|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction stack:64|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction stack:68|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r13|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  200  <|@ instruction rbx|QWORD = DEC r13|QWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD = LEA [r13|QWORD - 2] size: QWORD <|@ <|@
      nr  204  <|@ instruction r11|QWORD = LEA [r13|QWORD - 4] size: QWORD <|@ <|@
      nr  206  <|@ instruction r8|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction r9|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|QWORD[*] = LEA [r9|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  228  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  230  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  262  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction xmm0|V128_DWORD = H [rdx|QWORD[*] + rcx|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  274  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  276  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  282  <|@ instruction CMP (x: rcx|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction xmm0|V64_DWORD = H [rdx|QWORD[*] + rcx|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  294  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  296  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  302  <|@ instruction CMP (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rdx|DWORD = MOV [rdx|QWORD[*] + rcx|QWORD * 4] size: DWORD <|@ <|@
      nr  316  <|@ instruction MOV (x: [rsi|QWORD[.] + rcx|QWORD * 4], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B15" "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[*] = LEA [r9|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  340  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612248968380809216
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B73 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B73" 
    successors "B34" "B73" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  348  <|@ instruction rdi|DWORD = ADD (x: rdi|DWORD, ~y: [rcx|QWORD[*] + r9|QWORD * 8]) size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV (x: [rdx|QWORD[.] + r9|QWORD * 8], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction r9|QWORD = INC r9|QWORD size: QWORD <|@ <|@
      nr  354  <|@ instruction CMP (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  356  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction r9|DWORD = AND rcx|DWORD y: -2 size: DWORD <|@ <|@
      nr  368  <|@ instruction CMP (x: r13|QWORD, y: stack:56|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B72" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  390  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  392  <|@ instruction CMP r14|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  394  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction rdi|QWORD = ADD (x: rdx|QWORD, y: stack:48|QWORD) size: QWORD <|@ <|@
      nr  400  <|@ instruction CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction rbp|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  426  <|@ instruction AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  428  <|@ instruction AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  430  <|@ instruction AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  432  <|@ instruction AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  434  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  438  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  440  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction stack:80|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction stack:88|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction stack:96|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction stack:104|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~[] destination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  490  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  492  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction r8|QWORD = MOVE stack:80|QWORD moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  506  <|@ instruction rdx|QWORD[.] = LEA [r13|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  508  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  510  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  516  <|@ instruction JUMP ~[] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  542  <|@ instruction CMP (x: rcx|QWORD, y: stack:88|QWORD) size: QWORD <|@ <|@
      nr  544  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction xmm0|V128_DWORD = H [rdx|QWORD[.] + rcx|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  554  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  562  <|@ instruction CMP (x: rcx|QWORD, y: stack:96|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction xmm0|V64_DWORD = H [rdx|QWORD[.] + rcx|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  574  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  576  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  582  <|@ instruction CMP (x: rcx|QWORD, y: stack:104|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction rdx|DWORD = MOV [rdx|QWORD[.] + rcx|QWORD * 4] size: DWORD <|@ <|@
      nr  596  <|@ instruction MOV (x: [rsi|QWORD[.] + rcx|QWORD * 4], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  598  <|@ instruction rsi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B46" "B60" "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  606  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  616  <|@ instruction rcx|QWORD[.] = LEA [r13|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  618  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B64" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4612248968380809216
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B70 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B70" 
    successors "B65" "B70" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  624  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  626  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, ~y: [rcx|QWORD[.] + r10|QWORD * 8]) size: DWORD <|@ <|@
      nr  628  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|QWORD * 8], y: r11|DWORD) size: DWORD <|@ <|@
      nr  630  <|@ instruction r10|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr  632  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  634  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B65 falseDestination: B64 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  644  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  646  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  648  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  672  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  676  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction r14|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  684  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lbench/Fusing$List;, resolved>} <|@ <|@
      nr  688  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  690  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed} <|@ <|@
      nr  694  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1f6308cd encoding: base: 0 shift: 3 <|@ <|@
      nr  696  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  698  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2f0915b0 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction rsi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r9|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B15 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction rsi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction rsi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction rsi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction JUMP ~[] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  732  <|@ instruction JUMP ~[] destination: B74 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B74" 
    successors "B20" "B74" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  246  <|@ instruction xmm0|V256_DWORD = H [rdx|QWORD[*] + rcx|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  248  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  250  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  252  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B50" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B71 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B71" 
    successors "B51" "B71" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  526  <|@ instruction xmm0|V256_DWORD = H [rdx|QWORD[.] + rcx|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  528  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  530  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  532  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  534  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction stack:48|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:56|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:64|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:68|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  184  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  190  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r13|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  194  <|@ st <@st|@reference-map: [stack:44, stack:48, stack:80]
live-base-pointers: []
bench.Fusing._notFused(Bench.scala:147) [bci: 0]
locals: - stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115d1aa20:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction stack:80|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction stack:88|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction stack:96|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction stack:104|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  478  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  484  <|@ st <@st|@reference-map: [r13:0, stack:44, stack:80]
live-base-pointers: []
bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: stack:32|QWORD[.] Object[Fusing$$Lambda$26/947584453@1971198489] r13|QWORD[.] stack:64|DWORD 
bench.Fusing._notFused(Bench.scala:147) [bci: 6]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115d1aa20:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 6] <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r14|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  658  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  660  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  662  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:32]
live-base-pointers: []
bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: vobject:Fusing$List:0{a=r13|QWORD[.],$outer=r14|DWORD[.]} Object[Fusing$$Lambda$28/39597091@1201907975] stack:80|QWORD[.] stack:64|DWORD 
bench.Fusing._notFused(Bench.scala:147) [bci: 14]
locals: - - 
vobject:Fusing$List:0{a=r13|QWORD[.],$outer=r14|DWORD[.]} Lbench/Fusing$List; r13|QWORD[.] r14|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115d1aa20:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 14] <|@ <|@
      nr  664  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction stack:80|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction stack:88|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction stack:96|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction stack:104|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction stack:48|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction stack:56|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction stack:64|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction stack:68|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1310046811] <|@ <|@
      nr   20  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction r10|DWORD = MOVE input: int[-38163|0xffffffffffff6aed] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B75" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  750  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  752  <|@ st <@st|@reference-map: [stack:80]
live-base-pointers: []
bench.Fusing._notFused(Bench.scala:147) [bci: 0]
locals: - stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@824747228] <|@ <|@
      nr  740  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1049778166] <|@ <|@
      nr   42  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD = MOVE input: int[-45188|0xffffffffffff4f7c] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B3 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  714  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@824747228] <|@ <|@
      nr  720  <|@ instruction MOV [r15|QWORD + 668] y: -38683 size: DWORD <|@ <|@
      nr  722  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  724  <|@ st <@st|@reference-map: [r10:0, r13:0]
live-base-pointers: []
bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: r10|QWORD[.] Object[Fusing$$Lambda$26/947584453@1971198489] r13|QWORD[.] r9|DWORD 
bench.Fusing._notFused(Bench.scala:147) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:15, 6] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokedynamic #-19        // java.lang.invoke.LambdaForm$MH.2093631819.linkToTargetMethod:(java.lang.Object)java.lang.Object
     6: invokevirtual #5          // bench.Fusing$List.map:(scala.Function1)bench.Fusing$List
     9: invokedynamic #-20        // java.lang.invoke.LambdaForm$MH.2093631819.linkToTargetMethod:(java.lang.Object)java.lang.Object
    14: invokevirtual #5          // bench.Fusing$List.map:(scala.Function1)bench.Fusing$List
    17: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@e0117ff slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
bench.Fusing._notFused(Bench.scala:147) [bci: 0]
locals: - r13|QWORD[.] 
>@ <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r10|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [r10:0, r13:0, r14:0]
live-base-pointers: []
bench.Fusing._notFused(Bench.scala:147) [bci: 0]
locals: - r13|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction CMP r11|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction r8|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|DWORD = SHR r8|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rsi|QWORD = MOV rsi|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr   58  <|@ instruction stack:40|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction r9|QWORD = SHL rsi|QWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction CMP (x: rbx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B75" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   88  <|@ instruction rdi|DWORD = SHL r11|DWORD y: 2 size: DWORD <|@ <|@
      nr   90  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD <|@ <|@
      nr   92  <|@ instruction rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD <|@ <|@
      nr   94  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr   96  <|@ instruction CMP r11|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction rax|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B13 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 96], y: rax|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  134  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  136  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  142  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction stack:48|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction stack:56|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction stack:64|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction stack:68|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction r13|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  200  <|@ instruction rbx|QWORD = DEC r13|QWORD size: QWORD <|@ <|@
      nr  202  <|@ instruction r10|QWORD = LEA [r13|QWORD - 2] size: QWORD <|@ <|@
      nr  204  <|@ instruction r11|QWORD = LEA [r13|QWORD - 4] size: QWORD <|@ <|@
      nr  206  <|@ instruction r8|QWORD = LEA [r13|QWORD - 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B19" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction r9|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  226  <|@ instruction rdx|QWORD[*] = LEA [r9|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  228  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  230  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B21 falseDestination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B24" "B23" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  262  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction xmm0|V128_DWORD = H [rdx|QWORD[*] + rcx|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  274  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  276  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B21" 
    successors "B27" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  282  <|@ instruction CMP (x: rcx|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B27 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction xmm0|V64_DWORD = H [rdx|QWORD[*] + rcx|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  294  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  296  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  302  <|@ instruction CMP (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rdx|DWORD = MOV [rdx|QWORD[*] + rcx|QWORD * 4] size: DWORD <|@ <|@
      nr  316  <|@ instruction MOV (x: [rsi|QWORD[.] + rcx|QWORD * 4], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction rsi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B15" "B29" "B28" 
    successors "B35" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B30 -> B35 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[*] = LEA [r9|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  340  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B33" 
    successors "B35" "B33" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  346  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  348  <|@ instruction rdi|DWORD = ADD (x: rdi|DWORD, ~y: [rcx|QWORD[*] + r9|QWORD * 8]) size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV (x: [rdx|QWORD[.] + r9|QWORD * 8], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  352  <|@ instruction r9|QWORD = INC r9|QWORD size: QWORD <|@ <|@
      nr  354  <|@ instruction CMP (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  356  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B35 falseDestination: B33 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B39" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction r9|DWORD = AND rcx|DWORD y: -2 size: DWORD <|@ <|@
      nr  368  <|@ instruction CMP (x: r13|QWORD, y: stack:56|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B35 -> B39 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B72" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B39 falseDestination: B37 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B40" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  390  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  392  <|@ instruction CMP r14|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  394  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" "B42" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction rdi|QWORD = ADD (x: rdx|QWORD, y: stack:48|QWORD) size: QWORD <|@ <|@
      nr  400  <|@ instruction CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B44 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction rbp|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  426  <|@ instruction AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  428  <|@ instruction AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  430  <|@ instruction AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  432  <|@ instruction AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  434  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  438  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  440  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction stack:80|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction stack:88|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction stack:96|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction stack:104|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~[] destination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" 
    successors "B61" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  490  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  492  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B61 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction r8|QWORD = MOVE stack:80|QWORD moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  506  <|@ instruction rdx|QWORD[.] = LEA [r13|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  508  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  510  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B47 -> B52 falseDestination: B47 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B55" "B54" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  542  <|@ instruction CMP (x: rcx|QWORD, y: stack:88|QWORD) size: QWORD <|@ <|@
      nr  544  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B55 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction xmm0|V128_DWORD = H [rdx|QWORD[.] + rcx|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  554  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  556  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B52" 
    successors "B58" "B57" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  562  <|@ instruction CMP (x: rcx|QWORD, y: stack:96|QWORD) size: QWORD <|@ <|@
      nr  564  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B55 -> B58 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction xmm0|V64_DWORD = H [rdx|QWORD[.] + rcx|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  574  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  576  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B55" 
    successors "B61" "B60" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  582  <|@ instruction CMP (x: rcx|QWORD, y: stack:104|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B61 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction rdx|DWORD = MOV [rdx|QWORD[.] + rcx|QWORD * 4] size: DWORD <|@ <|@
      nr  596  <|@ instruction MOV (x: [rsi|QWORD[.] + rcx|QWORD * 4], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B45" "B60" "B58" 
    successors "B66" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction rsi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  606  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B61 -> B66 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  616  <|@ instruction rcx|QWORD[.] = LEA [r13|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  618  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  620  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B64" 
    successors "B66" "B64" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  624  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  626  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, ~y: [rcx|QWORD[.] + r10|QWORD * 8]) size: DWORD <|@ <|@
      nr  628  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|QWORD * 8], y: r11|DWORD) size: DWORD <|@ <|@
      nr  630  <|@ instruction r10|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr  632  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  634  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B66 falseDestination: B64 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  644  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  646  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  648  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  672  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  676  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction r14|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  684  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lbench/Fusing$List;, resolved>} <|@ <|@
      nr  688  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  690  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed} <|@ <|@
      nr  694  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1f6308cd encoding: base: 0 shift: 3 <|@ <|@
      nr  696  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  698  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  700  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2f0915b0 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction rsi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r9|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B15 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction rsi|QWORD = MOVE stack:40|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  246  <|@ instruction xmm0|V256_DWORD = H [rdx|QWORD[*] + rcx|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  248  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  250  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  252  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  254  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B21 falseDestination: B19 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B50" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  526  <|@ instruction xmm0|V256_DWORD = H [rdx|QWORD[.] + rcx|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  528  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  530  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  532  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  534  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B52 falseDestination: B50 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction stack:48|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction stack:56|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:64|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction stack:68|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  184  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  190  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction r13|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  194  <|@ st <@st|@reference-map: [stack:44, stack:48, stack:80]
live-base-pointers: []
bench.Fusing._notFused(Bench.scala:147) [bci: 0]
locals: - stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115d1aa20:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ instruction stack:80|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction stack:88|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction stack:96|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction stack:104|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  478  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  484  <|@ st <@st|@reference-map: [r13:0, stack:44, stack:80]
live-base-pointers: []
bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: stack:32|QWORD[.] Object[Fusing$$Lambda$26/947584453@1971198489] r13|QWORD[.] stack:64|DWORD 
bench.Fusing._notFused(Bench.scala:147) [bci: 6]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115d1aa20:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 6] <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  652  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r14|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  658  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  660  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  662  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:32]
live-base-pointers: []
bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: vobject:Fusing$List:0{a=r13|QWORD[.],$outer=r14|DWORD[.]} Object[Fusing$$Lambda$28/39597091@1201907975] stack:80|QWORD[.] stack:64|DWORD 
bench.Fusing._notFused(Bench.scala:147) [bci: 14]
locals: - - 
vobject:Fusing$List:0{a=r13|QWORD[.],$outer=r14|DWORD[.]} Lbench/Fusing$List; r13|QWORD[.] r14|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115d1aa20:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 14] <|@ <|@
      nr  664  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1310046811] <|@ <|@
      nr   20  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction r10|DWORD = MOVE input: int[-38163|0xffffffffffff6aed] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B75" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  748  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  750  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  752  <|@ st <@st|@reference-map: [stack:80]
live-base-pointers: []
bench.Fusing._notFused(Bench.scala:147) [bci: 0]
locals: - stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  736  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  738  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@824747228] <|@ <|@
      nr  740  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5] <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1049778166] <|@ <|@
      nr   42  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction r10|DWORD = MOVE input: int[-45188|0xffffffffffff4f7c] <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B3 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  714  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  716  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@824747228] <|@ <|@
      nr  720  <|@ instruction MOV [r15|QWORD + 668] y: -38683 size: DWORD <|@ <|@
      nr  722  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  724  <|@ st <@st|@reference-map: [r10:0, r13:0]
live-base-pointers: []
bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: r10|QWORD[.] Object[Fusing$$Lambda$26/947584453@1971198489] r13|QWORD[.] r9|DWORD 
bench.Fusing._notFused(Bench.scala:147) [bci: 6]
locals: - - 
>@ <|@ instruction DEOPT info [bci:15, 6] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokedynamic #-19        // java.lang.invoke.LambdaForm$MH.2093631819.linkToTargetMethod:(java.lang.Object)java.lang.Object
     6: invokevirtual #5          // bench.Fusing$List.map:(scala.Function1)bench.Fusing$List
     9: invokedynamic #-20        // java.lang.invoke.LambdaForm$MH.2093631819.linkToTargetMethod:(java.lang.Object)java.lang.Object
    14: invokevirtual #5          // bench.Fusing$List.map:(scala.Function1)bench.Fusing$List
    17: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec6848896c24604c8bea458b75104585f60f8439040000458b550c468b1cd50c0000004181fbffffff7f0f8466040000458bc341ffc0418bf0d1ee8bf648ffce48897424484c8bce49d1e1418bdb493bd90f87090000004585db0f851c040000498b5760498b4f70418bfbc1e7028d7f1783e7f84863ff4181fbffffff000f831b030000488bc74803c2483bc10f870c030000498947600f188417c00000000f188417000100000f188417400100000f1884178001000044895a0c48c70201000000c74208addeadde488bc248897c24404c894c243844894424344489542430448974242c4c896c24504c8beb458bf3498bdd48ffcb4d8d55fe4d8d5dfc4d8d45f84585f60f8443020000448b4c2430488d70104a8d14cd100000004d85c048c7c1000000000f8d3b020000493bcb0f8f0e000000c5fa6f048ac5fa7f048e488d4904493bca0f8f10000000c4e1f96e048ac4e1f97e048e488d4902483bcb0f8ff80100008b148a89148e488b7424484885f60f8c33000000488d50104a8d0ccd1000000049c7c1000000006666660f1f840000000000bf0100000042033cc942893cca49ffc14c3bce7eeb8b4c2434448bc94183e1fe4c3b6c24380f87090000004585f60f85e5020000498b5760498b4f704181feffffff000f8303020000488bfa48037c2440483bf90f87f2010000488b6c244049897f600f188415c00000000f188415000100000f188415400100000f188415800100004489720c48c70201000000c74208addeadde44894c24304c894424204c895c24184c8954241048895c24084c8be8488bc24585f60f84620000004c8b442420488d7010498d55104d85c048c7c1000000000f8d16010000483b4c24180f8f0e000000c5fa6f048ac5fa7f048e488d4904483b4c24100f8f10000000c4e1f96e048ac4e1f97e048e488d4902483b4c24080f8f060000008b148a89148e488b7424484885f60f8c29000000488d5010498d4d1049c7c2000000000f1f400041bb0100000046031cd146891cd249ffc24c3bd67eea498b7760488d5618493b57700f8720010000498957600f1886d8000000448b74242c488bd648b9addeaddeaddeadde488b89a800000048890ec74608addeadde48c1e80389460c44897610488bc2488b6c24604883c468850500000000c5f877c3488b742448448b4c2430e913feffff488b742448e909feffffc5fe6f048ac5fe7f048e488d4908493bc87eede9adfdffff0f1f840000000000c5fe6f048ac5fe7f048e488d4908493bc87eede9d2feffff48897c24404c894c243844894424344489542430448974242c4c896c245048baaddeaddeaddeadde488bf2418bd3b900000000458bf34c8bebe80000000090e90dfdffff44894c24304c894424204c895c24184c8954241048895c24084c8be848baaddeaddeaddeadde488bf2418bd6b900000000e80000000090e92cfeffff4889442420448b74242c48beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0488b442420e9bffeffff4c896c245049baaddeaddeaddeadde4d8bda41baed6affff4589979c0200004d899fa8020000e800000000904c896c245049baaddeaddeaddeadde4d8bda41bae57dffffebd24c896c245049baaddeaddeaddeadde4d8bda41ba7c4fffffebb84c8be84c8b54245049bbaddeaddeaddeadde41c7879c020000e568ffff4d899fa8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10bb3ef78, value=0x1156dde60]:0x1156dde60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@e0117ff slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD state [bci:0]  <||@
  Comment 51 [r13:0]at bench.Fusing._notFused(Bench.scala:147) [bci: 0, duringCall: false, rethrow: false]
              |0  |1            
     locals:  |-  |r13|QWORD[.]   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 55 10 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 58 12 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 64 block B2 null  <||@
  Comment 64 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 64 28 r10|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 68 30 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 68 [r10:0, r13:0, r14:0]at bench.Fusing._notFused(Bench.scala:147) [bci: 0, duringCall: false, rethrow: false]
              |0  |1            
     locals:  |-  |r13|QWORD[.]   <||@
  Comment 68 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 76 32 CMP r11|DWORD y: 2147483647 size: DWORD  <||@
  Comment 83 34 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 89 block B4 null  <||@
  Comment 89 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 89 50 r8|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 95 52 rsi|DWORD = SHR r8|DWORD size: DWORD  <||@
  Comment 100 54 rsi|QWORD = MOV rsi|DWORD size: DWORD  <||@
  Comment 102 56 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 105 58 stack:40|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 110 60 r9|QWORD = SHL rsi|QWORD size: QWORD  <||@
  Comment 116 62 rbx|QWORD = MOV r11|DWORD size: DWORD  <||@
  Comment 119 64 CMP (x: rbx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 122 66 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6  <||@
  Comment 128 block B6 null  <||@
  Comment 128 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 128 74 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 131 76 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B75  <||@
  Comment 137 block B8 null  <||@
  Comment 137 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 137 84 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 141 86 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 145 88 rdi|DWORD = SHL r11|DWORD y: 2 size: DWORD  <||@
  Comment 151 90 rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD  <||@
  Comment 154 92 rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD  <||@
  Comment 157 94 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 160 96 CMP r11|DWORD y: 16777215 size: DWORD  <||@
  Comment 167 98 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B13  <||@
  Comment 173 block B9 null  <||@
  Comment 173 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 173 102 rax|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 179 104 CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 182 106 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B13 falseDestination: B9 -> B11  <||@
  Comment 188 block B11 null  <||@
  Comment 188 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 188 126 MOV (x: [r15|QWORD + 96], y: rax|QWORD) size: QWORD  <||@
  Comment 192 128 AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 200 130 AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 208 132 AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 216 134 AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 224 136 MOV (x: [rdx|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 228 138 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 235 140 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 235 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 242 142 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 242 144 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 245 146 stack:48|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 250 148 stack:56|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 255 150 stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 260 152 stack:64|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 265 154 stack:68|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 270 156 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 275 158 r13|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 278 160 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 281 162 JUMP ~[] destination: B11 -> B14  <||@
  Comment 281 block B14 null  <||@
  Comment 281 198 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 281 200 rbx|QWORD = DEC r13|QWORD size: QWORD  <||@
  Comment 287 202 r10|QWORD = LEA [r13|QWORD - 2] size: QWORD  <||@
  Comment 291 204 r11|QWORD = LEA [r13|QWORD - 4] size: QWORD  <||@
  Comment 295 206 r8|QWORD = LEA [r13|QWORD - 8] size: QWORD  <||@
  Comment 299 208 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 302 210 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 308 block B16 null  <||@
  Comment 308 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 308 222 r9|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 313 224 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 317 226 rdx|QWORD[*] = LEA [r9|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 325 228 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 328 234 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 335 230 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B21 falseDestination: B16 -> B19  <||@
  Comment 341 block B21 null  <||@
  Comment 341 260 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 341 262 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 344 264 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23  <||@
  Comment 350 block B23 null  <||@
  Comment 350 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 350 272 xmm0|V128_DWORD = H [rdx|QWORD[*] + rcx|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 355 274 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 360 276 rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 364 278 JUMP ~[] destination: B23 -> B24  <||@
  Comment 364 block B24 null  <||@
  Comment 364 280 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 364 282 CMP (x: rcx|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 367 284 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B27 falseDestination: B24 -> B26  <||@
  Comment 373 block B26 null  <||@
  Comment 373 290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 373 292 xmm0|V64_DWORD = H [rdx|QWORD[*] + rcx|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 379 294 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 385 296 rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 389 298 JUMP ~[] destination: B26 -> B27  <||@
  Comment 389 block B27 null  <||@
  Comment 389 300 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 389 302 CMP (x: rcx|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 392 304 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 398 block B29 null  <||@
  Comment 398 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 398 314 rdx|DWORD = MOV [rdx|QWORD[*] + rcx|QWORD * 4] size: DWORD  <||@
  Comment 401 316 MOV (x: [rsi|QWORD[.] + rcx|QWORD * 4], y: rdx|DWORD) size: DWORD  <||@
  Comment 404 318 rsi|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 409 320 JUMP ~[] destination: B29 -> B30  <||@
  Comment 409 block B30 null  <||@
  Comment 409 322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 409 324 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 412 326 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B30 -> B35 falseDestination: B30 -> B32  <||@
  Comment 418 block B32 null  <||@
  Comment 418 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 418 336 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 422 338 rcx|QWORD[*] = LEA [r9|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 430 340 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 437 342 JUMP ~[] destination: B32 -> B33  <||@
  Comment 437 block B33 loop 1 depth 1 header:592|LoopBegin  <||@
  Comment 437 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 448 346 rdi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 453 348 rdi|DWORD = ADD (x: rdi|DWORD, ~y: [rcx|QWORD[*] + r9|QWORD * 8]) size: DWORD  <||@
  Comment 457 350 MOV (x: [rdx|QWORD[.] + r9|QWORD * 8], y: rdi|DWORD) size: DWORD  <||@
  Comment 461 352 r9|QWORD = INC r9|QWORD size: QWORD  <||@
  Comment 464 354 CMP (x: r9|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 467 356 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B35 falseDestination: B33 -> B33  <||@
  Comment 469 block B35 null  <||@
  Comment 469 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 469 330 rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 473 366 r9|DWORD = AND rcx|DWORD y: -2 size: DWORD  <||@
  Comment 480 368 CMP (x: r13|QWORD, y: stack:56|QWORD) size: QWORD  <||@
  Comment 485 370 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B35 -> B39 falseDestination: B35 -> B37  <||@
  Comment 491 block B37 null  <||@
  Comment 491 376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 491 378 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 494 380 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B39 falseDestination: B37 -> B72  <||@
  Comment 500 block B39 null  <||@
  Comment 500 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 500 388 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 504 390 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 508 392 CMP r14|DWORD y: 16777215 size: DWORD  <||@
  Comment 515 394 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B44  <||@
  Comment 521 block B40 null  <||@
  Comment 521 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 521 398 rdi|QWORD = ADD (x: rdx|QWORD, y: stack:48|QWORD) size: QWORD  <||@
  Comment 529 400 CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 532 402 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B44 falseDestination: B40 -> B42  <||@
  Comment 538 block B42 null  <||@
  Comment 538 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 538 422 rbp|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 543 424 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 547 426 AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 555 428 AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 563 430 AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 571 432 AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 579 434 MOV (x: [rdx|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 583 436 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 590 438 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 590 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 597 440 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 597 442 stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 602 444 stack:80|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 607 446 stack:88|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 612 448 stack:96|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 617 450 stack:104|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 622 452 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 625 454 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 628 456 JUMP ~[] destination: B42 -> B45  <||@
  Comment 628 block B45 null  <||@
  Comment 628 488 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 628 490 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 631 492 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B61 falseDestination: B45 -> B47  <||@
  Comment 637 block B47 null  <||@
  Comment 637 500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 637 502 r8|QWORD = MOVE stack:80|QWORD moveKind: QWORD  <||@
  Comment 642 504 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 646 506 rdx|QWORD[.] = LEA [r13|QWORD[.] + 16] size: QWORD  <||@
  Comment 650 508 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 653 514 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 660 510 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B47 -> B52 falseDestination: B47 -> B50  <||@
  Comment 666 block B52 null  <||@
  Comment 666 540 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 666 542 CMP (x: rcx|QWORD, y: stack:88|QWORD) size: QWORD  <||@
  Comment 671 544 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B55 falseDestination: B52 -> B54  <||@
  Comment 677 block B54 null  <||@
  Comment 677 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 677 552 xmm0|V128_DWORD = H [rdx|QWORD[.] + rcx|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 682 554 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 687 556 rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 691 558 JUMP ~[] destination: B54 -> B55  <||@
  Comment 691 block B55 null  <||@
  Comment 691 560 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 691 562 CMP (x: rcx|QWORD, y: stack:96|QWORD) size: QWORD  <||@
  Comment 696 564 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B55 -> B58 falseDestination: B55 -> B57  <||@
  Comment 702 block B57 null  <||@
  Comment 702 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 702 572 xmm0|V64_DWORD = H [rdx|QWORD[.] + rcx|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 708 574 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 714 576 rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 718 578 JUMP ~[] destination: B57 -> B58  <||@
  Comment 718 block B58 null  <||@
  Comment 718 580 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 718 582 CMP (x: rcx|QWORD, y: stack:104|QWORD) size: QWORD  <||@
  Comment 723 584 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B61 falseDestination: B58 -> B60  <||@
  Comment 729 block B60 null  <||@
  Comment 729 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 729 594 rdx|DWORD = MOV [rdx|QWORD[.] + rcx|QWORD * 4] size: DWORD  <||@
  Comment 732 596 MOV (x: [rsi|QWORD[.] + rcx|QWORD * 4], y: rdx|DWORD) size: DWORD  <||@
  Comment 735 600 JUMP ~[] destination: B60 -> B61  <||@
  Comment 735 block B61 null  <||@
  Comment 735 602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 735 496 rsi|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 740 604 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 743 606 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B61 -> B66 falseDestination: B61 -> B63  <||@
  Comment 749 block B63 null  <||@
  Comment 749 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 749 614 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 753 616 rcx|QWORD[.] = LEA [r13|QWORD[.] + 16] size: QWORD  <||@
  Comment 757 618 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 764 620 JUMP ~[] destination: B63 -> B64  <||@
  Comment 764 block B64 loop 3 depth 1 header:614|LoopBegin  <||@
  Comment 764 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 768 624 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 774 626 r11|DWORD = ADD (x: r11|DWORD, ~y: [rcx|QWORD[.] + r10|QWORD * 8]) size: DWORD  <||@
  Comment 778 628 MOV (x: [rdx|QWORD[.] + r10|QWORD * 8], y: r11|DWORD) size: DWORD  <||@
  Comment 782 630 r10|QWORD = INC r10|QWORD size: QWORD  <||@
  Comment 785 632 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 788 634 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B66 falseDestination: B64 -> B64  <||@
  Comment 790 block B66 null  <||@
  Comment 790 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 790 642 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 794 644 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 798 646 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 802 648 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B68  <||@
  Comment 808 block B68 null  <||@
  Comment 808 670 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 808 672 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 812 674 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 819 676 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 819 678 r14|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 824 680 JUMP ~[] destination: B68 -> B69  <||@
  Comment 824 block B69 null  <||@
  Comment 824 682 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 824 684 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 827 686 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lbench/Fusing$List;, resolved>}  <||@
  Comment 827 {meta{HotSpotType<Lbench/Fusing$List;, resolved>}}  <||@
  Comment 837 688 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 844 690 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 847 692 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}  <||@
  Comment 847 {meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}}  <||@
  Comment 854 694 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1f6308cd encoding: base: 0 shift: 3  <||@
  Comment 858 696 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 861 698 MOV (x: [rsi|QWORD[*] + 16], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 865 700 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 868 702 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2f0915b0  <||@
  Comment 877 12  <||@
  Comment 887 block B15 null  <||@
  Comment 887 212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 887 214 rsi|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 892 216 r9|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 897 218 JUMP ~[] destination: B15 -> B30  <||@
  Comment 902 block B28 null  <||@
  Comment 902 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 902 308 rsi|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 907 310 JUMP ~[] destination: B28 -> B30  <||@
  Comment 912 block B19 loop 0 depth 1 header:641|LoopBegin  <||@
  Comment 912 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 912 246 xmm0|V256_DWORD = H [rdx|QWORD[*] + rcx|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 917 248 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 922 250 rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 926 252 CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 929 254 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B21 falseDestination: B19 -> B19  <||@
  Comment 936 block B50 loop 2 depth 1 header:696|LoopBegin  <||@
  Comment 936 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 944 526 xmm0|V256_DWORD = H [rdx|QWORD[.] + rcx|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 949 528 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 954 530 rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 958 532 CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 961 534 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B52 falseDestination: B50 -> B50  <||@
  Comment 968 block B13 null  <||@
  Comment 968 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 968 166 stack:48|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 973 168 stack:56|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 978 170 stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 983 172 stack:64|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 988 174 stack:68|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 993 176 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 998 182 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 998 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1008 184 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1011 186 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1014 188 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1019 190 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1022 192 r13|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 1025 194 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115d1aa20:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1025 {Stub<NewArrayStub.newArray>@0x115d1aa20:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1030 [stack:44, stack:48, stack:80]at bench.Fusing._notFused(Bench.scala:147) [bci: 0, duringCall: false, rethrow: false]
              |0  |1                 
     locals:  |-  |stack:32|QWORD[.]   <||@
  Comment 1031 196 JUMP ~[] destination: B13 -> B14  <||@
  Comment 1036 block B44 null  <||@
  Comment 1036 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1036 460 stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1041 462 stack:80|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1046 464 stack:88|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1051 466 stack:96|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1056 468 stack:104|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 1061 470 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1064 476 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1064 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1074 478 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1077 480 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1080 482 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1085 484 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115d1aa20:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 6]  <||@
  Comment 1085 {Stub<NewArrayStub.newArray>@0x115d1aa20:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1090 [r13:0, stack:44, stack:80]at bench.Fusing$List.map(Bench.scala:126) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1                                               |2             |3              
     locals:  |stack:32|QWORD[.]  |Object[Fusing$$Lambda$26/947584453@1971198489]  |r13|QWORD[.]  |stack:64|DWORD 
  at bench.Fusing._notFused(Bench.scala:147) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1091 486 JUMP ~[] destination: B44 -> B45  <||@
  Comment 1096 block B67 null  <||@
  Comment 1096 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1096 652 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1101 654 r14|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1106 656 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1106 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1116 658 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1121 660 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1126 662 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115d1aa20:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 14]  <||@
  Comment 1126 {Stub<NewArrayStub.newArray>@0x115d1aa20:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1131 [r13:0, r14:0, stack:32]at bench.Fusing$List.map(Bench.scala:126) [bci: 15, duringCall: false, rethrow: false]
              |0                                                          |1                                              |2                  |3              
     locals:  |vobject:Fusing$List:0{a=r13|QWORD[.],$outer=r14|DWORD[.]}  |Object[Fusing$$Lambda$28/39597091@1201907975]  |stack:80|QWORD[.]  |stack:64|DWORD 
  at bench.Fusing._notFused(Bench.scala:147) [bci: 14, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1132 664 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1135 666 rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1140 668 JUMP ~[] destination: B67 -> B69  <||@
  Comment 1145 block B1 null  <||@
  Comment 1145 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1145 16 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1150 18 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1310046811]  <||@
  Comment 1150 {Object[d.a@1310046811]}  <||@
  Comment 1160 20 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1163 22 r10|DWORD = MOVE input: int[-38163|0xffffffffffff6aed]  <||@
  Comment 1169 24 JUMP ~[] destination: B1 -> B76  <||@
  Comment 1169 block B76 null  <||@
  Comment 1169 746 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1169 748 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1176 750 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1183 752 DEOPT info [bci:0]  <||@
  Comment 1183 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10bb3ef90, value=0x1156df5fe]:0x1156df5fe}  <||@
  Comment 1188 [stack:80]at bench.Fusing._notFused(Bench.scala:147) [bci: 0, duringCall: false, rethrow: false]
              |0  |1                 
     locals:  |-  |stack:32|QWORD[.]   <||@
  Comment 1189 block B75 null  <||@
  Comment 1189 734 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1189 736 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1194 738 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@824747228]  <||@
  Comment 1194 {Object[d.a@824747228]}  <||@
  Comment 1204 740 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1207 742 r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5]  <||@
  Comment 1213 744 JUMP ~[] destination: B75 -> B76  <||@
  Comment 1215 block B3 null  <||@
  Comment 1215 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1215 38 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1220 40 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1049778166]  <||@
  Comment 1220 {Object[d.a@1049778166]}  <||@
  Comment 1230 42 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1233 44 r10|DWORD = MOVE input: int[-45188|0xffffffffffff4f7c]  <||@
  Comment 1239 46 JUMP ~[] destination: B3 -> B76  <||@
  Comment 1241 block B72 null  <||@
  Comment 1241 712 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1241 714 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1244 716 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1249 718 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@824747228]  <||@
  Comment 1249 {Object[d.a@824747228]}  <||@
  Comment 1259 720 MOV [r15|QWORD + 668] y: -38683 size: DWORD  <||@
  Comment 1270 722 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1277 724 DEOPT info [bci:15, 6]  <||@
  Comment 1277 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10bb3ef90, value=0x1156df5fe]:0x1156df5fe}  <||@
  Comment 1282 [r10:0, r13:0]at bench.Fusing$List.map(Bench.scala:126) [bci: 15, duringCall: false, rethrow: false]
              |0             |1                                               |2             |3        
     locals:  |r10|QWORD[.]  |Object[Fusing$$Lambda$26/947584453@1971198489]  |r13|QWORD[.]  |r9|DWORD 
  at bench.Fusing._notFused(Bench.scala:147) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1283 {Stub<ExceptionHandlerStub.exceptionHandler>@0x115a6c460:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1283 4  <||@
  Comment 1289 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10bb3ef88, value=0x1156df500]:0x1156df500}  <||@
  Comment 1289 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-1245[bench.Fusing._notFused(Fusing$List)]"
  method "HotSpotCompilation-1245[bench.Fusing._notFused(Fusing$List)]"
  date 1527270488834
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1161ecb80 448b560849c1e203493bc20f85cf124fff900f1f80000000000f1f800000000089842400c0feff4883ec6848896c24604c8bea458b75104585f60f8439040000458b550c468b1cd50c0000004181fbffffff7f0f8466040000458bc341ffc0418bf0d1ee8bf648ffce48897424484c8bce49d1e1418bdb493bd90f87090000004585db0f851c040000498b5760498b4f70418bfbc1e7028d7f1783e7f84863ff4181fbffffff000f831b030000488bc74803c2483bc10f870c030000498947600f188417c00000000f188417000100000f188417400100000f1884178001000044895a0c48c70201000000c742086d0100f8488bc248897c24404c894c243844894424344489542430448974242c4c896c24504c8beb458bf3498bdd48ffcb4d8d55fe4d8d5dfc4d8d45f84585f60f8443020000448b4c2430488d70104a8d14cd100000004d85c048c7c1000000000f8d3b020000493bcb0f8f0e000000c5fa6f048ac5fa7f048e488d4904493bca0f8f10000000c4e1f96e048ac4e1f97e048e488d4902483bcb0f8ff80100008b148a89148e488b7424484885f60f8c33000000488d50104a8d0ccd1000000049c7c1000000006666660f1f840000000000bf0100000042033cc942893cca49ffc14c3bce7eeb8b4c2434448bc94183e1fe4c3b6c24380f87090000004585f60f85e5020000498b5760498b4f704181feffffff000f8303020000488bfa48037c2440483bf90f87f2010000488b6c244049897f600f188415c00000000f188415000100000f188415400100000f188415800100004489720c48c70201000000c742086d0100f844894c24304c894424204c895c24184c8954241048895c24084c8be8488bc24585f60f84620000004c8b442420488d7010498d55104d85c048c7c1000000000f8d16010000483b4c24180f8f0e000000c5fa6f048ac5fa7f048e488d4904483b4c24100f8f10000000c4e1f96e048ac4e1f97e048e488d4902483b4c24080f8f060000008b148a89148e488b7424484885f60f8c29000000488d5010498d4d1049c7c2000000000f1f400041bb0100000046031cd146891cd249ffc24c3bd67eea498b7760488d5618493b57700f8720010000498957600f1886d8000000448b74242c488bd648b9f0f72dc007000000488b89a800000048890ec74608febe05f848c1e80389460c44897610488bc2488b6c24604883c468850513a1c0f5c5f877c3488b742448448b4c2430e913feffff488b742448e909feffffc5fe6f048ac5fe7f048e488d4908493bc87eede9adfdffff0f1f840000000000c5fe6f048ac5fe7f048e488d4908493bc87eede9d2feffff48897c24404c894c243844894424344489542430448974242c4c896c245048ba680b00c007000000488bf2418bd3b900000000458bf34c8bebe89adab2ff90e90dfdffff44894c24304c894424204c895c24184c8954241048895c24084c8be848ba680b00c007000000488bf2418bd6b900000000e85edab2ff90e92cfeffff4889442420448b74242c48be680b00c007000000ba02000000b901000000e835dab2ff90488bf0488b442420e9bffeffff4c896c245049ba50d89b8f070000004d8bda41baed6affff4589979c0200004d899fa8020000e8da254fff904c896c245049ba30d79b8f070000004d8bda41bae57dffffebd24c896c245049bac0d79b8f070000004d8bda41ba7c4fffffebb84c8be84c8b54245049bb30d79b8f0700000041c7879c020000e568ffff4d899fa8020000e87c254fff90e8d8f387ff90e872244fff90f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10bb3ef78, value=0x1156dde60]:0x1156dde60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@e0117ff slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD state [bci:0]  <||@
  Comment 51 [r13:0]at bench.Fusing._notFused(Bench.scala:147) [bci: 0, duringCall: false, rethrow: false]
              |0  |1            
     locals:  |-  |r13|QWORD[.]   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 55 10 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 58 12 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 64 block B2 null  <||@
  Comment 64 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 64 28 r10|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 68 30 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 68 [r10:0, r13:0, r14:0]at bench.Fusing._notFused(Bench.scala:147) [bci: 0, duringCall: false, rethrow: false]
              |0  |1            
     locals:  |-  |r13|QWORD[.]   <||@
  Comment 68 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 76 32 CMP r11|DWORD y: 2147483647 size: DWORD  <||@
  Comment 83 34 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 89 block B4 null  <||@
  Comment 89 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 89 50 r8|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 95 52 rsi|DWORD = SHR r8|DWORD size: DWORD  <||@
  Comment 100 54 rsi|QWORD = MOV rsi|DWORD size: DWORD  <||@
  Comment 102 56 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 105 58 stack:40|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 110 60 r9|QWORD = SHL rsi|QWORD size: QWORD  <||@
  Comment 116 62 rbx|QWORD = MOV r11|DWORD size: DWORD  <||@
  Comment 119 64 CMP (x: rbx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 122 66 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6  <||@
  Comment 128 block B6 null  <||@
  Comment 128 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 128 74 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 131 76 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B75  <||@
  Comment 137 block B8 null  <||@
  Comment 137 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 137 84 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 141 86 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 145 88 rdi|DWORD = SHL r11|DWORD y: 2 size: DWORD  <||@
  Comment 151 90 rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD  <||@
  Comment 154 92 rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD  <||@
  Comment 157 94 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 160 96 CMP r11|DWORD y: 16777215 size: DWORD  <||@
  Comment 167 98 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B13  <||@
  Comment 173 block B9 null  <||@
  Comment 173 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 173 102 rax|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 179 104 CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 182 106 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B13 falseDestination: B9 -> B11  <||@
  Comment 188 block B11 null  <||@
  Comment 188 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 188 126 MOV (x: [r15|QWORD + 96], y: rax|QWORD) size: QWORD  <||@
  Comment 192 128 AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 200 130 AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 208 132 AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 216 134 AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 224 136 MOV (x: [rdx|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 228 138 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 235 140 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 235 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 242 142 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 242 144 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 245 146 stack:48|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 250 148 stack:56|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 255 150 stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 260 152 stack:64|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 265 154 stack:68|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 270 156 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 275 158 r13|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 278 160 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 281 162 JUMP ~[] destination: B11 -> B14  <||@
  Comment 281 block B14 null  <||@
  Comment 281 198 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 281 200 rbx|QWORD = DEC r13|QWORD size: QWORD  <||@
  Comment 287 202 r10|QWORD = LEA [r13|QWORD - 2] size: QWORD  <||@
  Comment 291 204 r11|QWORD = LEA [r13|QWORD - 4] size: QWORD  <||@
  Comment 295 206 r8|QWORD = LEA [r13|QWORD - 8] size: QWORD  <||@
  Comment 299 208 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 302 210 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 308 block B16 null  <||@
  Comment 308 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 308 222 r9|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 313 224 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 317 226 rdx|QWORD[*] = LEA [r9|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 325 228 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 328 234 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 335 230 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B21 falseDestination: B16 -> B19  <||@
  Comment 341 block B21 null  <||@
  Comment 341 260 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 341 262 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 344 264 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23  <||@
  Comment 350 block B23 null  <||@
  Comment 350 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 350 272 xmm0|V128_DWORD = H [rdx|QWORD[*] + rcx|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 355 274 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 360 276 rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 364 278 JUMP ~[] destination: B23 -> B24  <||@
  Comment 364 block B24 null  <||@
  Comment 364 280 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 364 282 CMP (x: rcx|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 367 284 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B27 falseDestination: B24 -> B26  <||@
  Comment 373 block B26 null  <||@
  Comment 373 290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 373 292 xmm0|V64_DWORD = H [rdx|QWORD[*] + rcx|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 379 294 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 385 296 rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 389 298 JUMP ~[] destination: B26 -> B27  <||@
  Comment 389 block B27 null  <||@
  Comment 389 300 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 389 302 CMP (x: rcx|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 392 304 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 398 block B29 null  <||@
  Comment 398 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 398 314 rdx|DWORD = MOV [rdx|QWORD[*] + rcx|QWORD * 4] size: DWORD  <||@
  Comment 401 316 MOV (x: [rsi|QWORD[.] + rcx|QWORD * 4], y: rdx|DWORD) size: DWORD  <||@
  Comment 404 318 rsi|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 409 320 JUMP ~[] destination: B29 -> B30  <||@
  Comment 409 block B30 null  <||@
  Comment 409 322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 409 324 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 412 326 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B30 -> B35 falseDestination: B30 -> B32  <||@
  Comment 418 block B32 null  <||@
  Comment 418 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 418 336 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 422 338 rcx|QWORD[*] = LEA [r9|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 430 340 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 437 342 JUMP ~[] destination: B32 -> B33  <||@
  Comment 437 block B33 loop 1 depth 1 header:592|LoopBegin  <||@
  Comment 437 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 448 346 rdi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 453 348 rdi|DWORD = ADD (x: rdi|DWORD, ~y: [rcx|QWORD[*] + r9|QWORD * 8]) size: DWORD  <||@
  Comment 457 350 MOV (x: [rdx|QWORD[.] + r9|QWORD * 8], y: rdi|DWORD) size: DWORD  <||@
  Comment 461 352 r9|QWORD = INC r9|QWORD size: QWORD  <||@
  Comment 464 354 CMP (x: r9|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 467 356 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B35 falseDestination: B33 -> B33  <||@
  Comment 469 block B35 null  <||@
  Comment 469 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 469 330 rcx|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 473 366 r9|DWORD = AND rcx|DWORD y: -2 size: DWORD  <||@
  Comment 480 368 CMP (x: r13|QWORD, y: stack:56|QWORD) size: QWORD  <||@
  Comment 485 370 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B35 -> B39 falseDestination: B35 -> B37  <||@
  Comment 491 block B37 null  <||@
  Comment 491 376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 491 378 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 494 380 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B39 falseDestination: B37 -> B72  <||@
  Comment 500 block B39 null  <||@
  Comment 500 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 500 388 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 504 390 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 508 392 CMP r14|DWORD y: 16777215 size: DWORD  <||@
  Comment 515 394 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B44  <||@
  Comment 521 block B40 null  <||@
  Comment 521 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 521 398 rdi|QWORD = ADD (x: rdx|QWORD, y: stack:48|QWORD) size: QWORD  <||@
  Comment 529 400 CMP (x: rdi|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 532 402 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B44 falseDestination: B40 -> B42  <||@
  Comment 538 block B42 null  <||@
  Comment 538 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 538 422 rbp|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 543 424 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 547 426 AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 555 428 AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 563 430 AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 571 432 AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 579 434 MOV (x: [rdx|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 583 436 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 590 438 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 590 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 597 440 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 597 442 stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 602 444 stack:80|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 607 446 stack:88|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 612 448 stack:96|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 617 450 stack:104|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 622 452 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 625 454 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 628 456 JUMP ~[] destination: B42 -> B45  <||@
  Comment 628 block B45 null  <||@
  Comment 628 488 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 628 490 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 631 492 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B61 falseDestination: B45 -> B47  <||@
  Comment 637 block B47 null  <||@
  Comment 637 500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 637 502 r8|QWORD = MOVE stack:80|QWORD moveKind: QWORD  <||@
  Comment 642 504 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 646 506 rdx|QWORD[.] = LEA [r13|QWORD[.] + 16] size: QWORD  <||@
  Comment 650 508 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 653 514 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 660 510 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B47 -> B52 falseDestination: B47 -> B50  <||@
  Comment 666 block B52 null  <||@
  Comment 666 540 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 666 542 CMP (x: rcx|QWORD, y: stack:88|QWORD) size: QWORD  <||@
  Comment 671 544 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B55 falseDestination: B52 -> B54  <||@
  Comment 677 block B54 null  <||@
  Comment 677 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 677 552 xmm0|V128_DWORD = H [rdx|QWORD[.] + rcx|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 682 554 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 687 556 rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 691 558 JUMP ~[] destination: B54 -> B55  <||@
  Comment 691 block B55 null  <||@
  Comment 691 560 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 691 562 CMP (x: rcx|QWORD, y: stack:96|QWORD) size: QWORD  <||@
  Comment 696 564 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B55 -> B58 falseDestination: B55 -> B57  <||@
  Comment 702 block B57 null  <||@
  Comment 702 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 702 572 xmm0|V64_DWORD = H [rdx|QWORD[.] + rcx|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 708 574 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 714 576 rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 718 578 JUMP ~[] destination: B57 -> B58  <||@
  Comment 718 block B58 null  <||@
  Comment 718 580 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 718 582 CMP (x: rcx|QWORD, y: stack:104|QWORD) size: QWORD  <||@
  Comment 723 584 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B61 falseDestination: B58 -> B60  <||@
  Comment 729 block B60 null  <||@
  Comment 729 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 729 594 rdx|DWORD = MOV [rdx|QWORD[.] + rcx|QWORD * 4] size: DWORD  <||@
  Comment 732 596 MOV (x: [rsi|QWORD[.] + rcx|QWORD * 4], y: rdx|DWORD) size: DWORD  <||@
  Comment 735 600 JUMP ~[] destination: B60 -> B61  <||@
  Comment 735 block B61 null  <||@
  Comment 735 602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 735 496 rsi|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 740 604 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 743 606 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B61 -> B66 falseDestination: B61 -> B63  <||@
  Comment 749 block B63 null  <||@
  Comment 749 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 749 614 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 753 616 rcx|QWORD[.] = LEA [r13|QWORD[.] + 16] size: QWORD  <||@
  Comment 757 618 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 764 620 JUMP ~[] destination: B63 -> B64  <||@
  Comment 764 block B64 loop 3 depth 1 header:614|LoopBegin  <||@
  Comment 764 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 768 624 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 774 626 r11|DWORD = ADD (x: r11|DWORD, ~y: [rcx|QWORD[.] + r10|QWORD * 8]) size: DWORD  <||@
  Comment 778 628 MOV (x: [rdx|QWORD[.] + r10|QWORD * 8], y: r11|DWORD) size: DWORD  <||@
  Comment 782 630 r10|QWORD = INC r10|QWORD size: QWORD  <||@
  Comment 785 632 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 788 634 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B66 falseDestination: B64 -> B64  <||@
  Comment 790 block B66 null  <||@
  Comment 790 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 790 642 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 794 644 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 798 646 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 802 648 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B68  <||@
  Comment 808 block B68 null  <||@
  Comment 808 670 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 808 672 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 812 674 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 819 676 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 819 678 r14|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 824 680 JUMP ~[] destination: B68 -> B69  <||@
  Comment 824 block B69 null  <||@
  Comment 824 682 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 824 684 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 827 686 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lbench/Fusing$List;, resolved>}  <||@
  Comment 827 {meta{HotSpotType<Lbench/Fusing$List;, resolved>}}  <||@
  Comment 837 688 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 844 690 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 847 692 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}  <||@
  Comment 847 {meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}}  <||@
  Comment 854 694 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1f6308cd encoding: base: 0 shift: 3  <||@
  Comment 858 696 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 861 698 MOV (x: [rsi|QWORD[*] + 16], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 865 700 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 868 702 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2f0915b0  <||@
  Comment 877 12  <||@
  Comment 887 block B15 null  <||@
  Comment 887 212 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 887 214 rsi|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 892 216 r9|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 897 218 JUMP ~[] destination: B15 -> B30  <||@
  Comment 902 block B28 null  <||@
  Comment 902 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 902 308 rsi|QWORD = MOVE stack:40|QWORD moveKind: QWORD  <||@
  Comment 907 310 JUMP ~[] destination: B28 -> B30  <||@
  Comment 912 block B19 loop 0 depth 1 header:641|LoopBegin  <||@
  Comment 912 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 912 246 xmm0|V256_DWORD = H [rdx|QWORD[*] + rcx|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 917 248 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 922 250 rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 926 252 CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 929 254 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B21 falseDestination: B19 -> B19  <||@
  Comment 936 block B50 loop 2 depth 1 header:696|LoopBegin  <||@
  Comment 936 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 944 526 xmm0|V256_DWORD = H [rdx|QWORD[.] + rcx|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 949 528 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 954 530 rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 958 532 CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 961 534 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B52 falseDestination: B50 -> B50  <||@
  Comment 968 block B13 null  <||@
  Comment 968 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 968 166 stack:48|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 973 168 stack:56|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 978 170 stack:60|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 983 172 stack:64|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 988 174 stack:68|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 993 176 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 998 182 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 998 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1008 184 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1011 186 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1014 188 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1019 190 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1022 192 r13|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 1025 194 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115d1aa20:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1025 {Stub<NewArrayStub.newArray>@0x115d1aa20:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1030 [stack:44, stack:48, stack:80]at bench.Fusing._notFused(Bench.scala:147) [bci: 0, duringCall: false, rethrow: false]
              |0  |1                 
     locals:  |-  |stack:32|QWORD[.]   <||@
  Comment 1031 196 JUMP ~[] destination: B13 -> B14  <||@
  Comment 1036 block B44 null  <||@
  Comment 1036 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1036 460 stack:64|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1041 462 stack:80|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1046 464 stack:88|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1051 466 stack:96|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1056 468 stack:104|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 1061 470 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1064 476 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1064 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1074 478 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1077 480 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1080 482 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1085 484 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115d1aa20:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 6]  <||@
  Comment 1085 {Stub<NewArrayStub.newArray>@0x115d1aa20:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1090 [r13:0, stack:44, stack:80]at bench.Fusing$List.map(Bench.scala:126) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1                                               |2             |3              
     locals:  |stack:32|QWORD[.]  |Object[Fusing$$Lambda$26/947584453@1971198489]  |r13|QWORD[.]  |stack:64|DWORD 
  at bench.Fusing._notFused(Bench.scala:147) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1091 486 JUMP ~[] destination: B44 -> B45  <||@
  Comment 1096 block B67 null  <||@
  Comment 1096 650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1096 652 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1101 654 r14|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 1106 656 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1106 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1116 658 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1121 660 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1126 662 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115d1aa20:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 14]  <||@
  Comment 1126 {Stub<NewArrayStub.newArray>@0x115d1aa20:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1131 [r13:0, r14:0, stack:32]at bench.Fusing$List.map(Bench.scala:126) [bci: 15, duringCall: false, rethrow: false]
              |0                                                          |1                                              |2                  |3              
     locals:  |vobject:Fusing$List:0{a=r13|QWORD[.],$outer=r14|DWORD[.]}  |Object[Fusing$$Lambda$28/39597091@1201907975]  |stack:80|QWORD[.]  |stack:64|DWORD 
  at bench.Fusing._notFused(Bench.scala:147) [bci: 14, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1132 664 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1135 666 rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1140 668 JUMP ~[] destination: B67 -> B69  <||@
  Comment 1145 block B1 null  <||@
  Comment 1145 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1145 16 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1150 18 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1310046811]  <||@
  Comment 1150 {Object[d.a@1310046811]}  <||@
  Comment 1160 20 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1163 22 r10|DWORD = MOVE input: int[-38163|0xffffffffffff6aed]  <||@
  Comment 1169 24 JUMP ~[] destination: B1 -> B76  <||@
  Comment 1169 block B76 null  <||@
  Comment 1169 746 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1169 748 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1176 750 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1183 752 DEOPT info [bci:0]  <||@
  Comment 1183 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10bb3ef90, value=0x1156df5fe]:0x1156df5fe}  <||@
  Comment 1188 [stack:80]at bench.Fusing._notFused(Bench.scala:147) [bci: 0, duringCall: false, rethrow: false]
              |0  |1                 
     locals:  |-  |stack:32|QWORD[.]   <||@
  Comment 1189 block B75 null  <||@
  Comment 1189 734 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1189 736 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1194 738 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@824747228]  <||@
  Comment 1194 {Object[d.a@824747228]}  <||@
  Comment 1204 740 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1207 742 r10|DWORD = MOVE input: int[-33307|0xffffffffffff7de5]  <||@
  Comment 1213 744 JUMP ~[] destination: B75 -> B76  <||@
  Comment 1215 block B3 null  <||@
  Comment 1215 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1215 38 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1220 40 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1049778166]  <||@
  Comment 1220 {Object[d.a@1049778166]}  <||@
  Comment 1230 42 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1233 44 r10|DWORD = MOVE input: int[-45188|0xffffffffffff4f7c]  <||@
  Comment 1239 46 JUMP ~[] destination: B3 -> B76  <||@
  Comment 1241 block B72 null  <||@
  Comment 1241 712 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1241 714 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1244 716 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1249 718 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@824747228]  <||@
  Comment 1249 {Object[d.a@824747228]}  <||@
  Comment 1259 720 MOV [r15|QWORD + 668] y: -38683 size: DWORD  <||@
  Comment 1270 722 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1277 724 DEOPT info [bci:15, 6]  <||@
  Comment 1277 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10bb3ef90, value=0x1156df5fe]:0x1156df5fe}  <||@
  Comment 1282 [r10:0, r13:0]at bench.Fusing$List.map(Bench.scala:126) [bci: 15, duringCall: false, rethrow: false]
              |0             |1                                               |2             |3        
     locals:  |r10|QWORD[.]  |Object[Fusing$$Lambda$26/947584453@1971198489]  |r13|QWORD[.]  |r9|DWORD 
  at bench.Fusing._notFused(Bench.scala:147) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 1283 {Stub<ExceptionHandlerStub.exceptionHandler>@0x115a6c460:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1283 4  <||@
  Comment 1289 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10bb3ef88, value=0x1156df500]:0x1156df500}  <||@
  Comment 1289 5  <||@
  HexCodeFile>>> <|@
end_nmethod
