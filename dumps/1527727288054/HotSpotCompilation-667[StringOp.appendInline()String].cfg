begin_compilation
  name " HotSpotCompilation-667[bench.StringOp.appendInline()]"
  method "HotSpotCompilation-667[bench.StringOp.appendInline()]"
  date 1527727288073
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j261 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j261 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j306 
=== Usages ===
v428 v429 
=== Predecessor ===
v0 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j306  <|@  <|@
f <@~|@floating>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j261 
index: - 
=== Succesors ===
=== Usages ===
j306 v308 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j261 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j306 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v428 
=== Succesors ===
next: j307 
=== Usages ===
j385 v430 v431 a281 v432 v441 v442 v443 v444 
=== Predecessor ===
j261 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v428 #next: j307  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j261 
index: - 
=== Succesors ===
=== Usages ===
j307 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j261 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j307 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v429 
=== Succesors ===
next: v277 
=== Usages ===
v271 
=== Predecessor ===
j306 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v429 #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid j384 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 40
stableDimension: 0
stamp: i64 [40] ⇊0000000000000028 ⇈0000000000000028
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j385 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j385 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/1382755409@7497e667
stamp: i64
=== Inputs ===
x: j306 
y: j384 
=== Succesors ===
=== Usages ===
v271 v308 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j306 y: j384  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@22545b73
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j307 
y: j385 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j307 y: j385  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v370 a282 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i210 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v309 a282 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringOp.appendInline()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 123
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
a282 a338 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v271 
=== Succesors ===
trueSuccessor: v276 
falseSuccessor: v275 
=== Usages ===
=== Predecessor ===
j307 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v271 #trueSuccessor: v276 #falseSuccessor: v275  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a282 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a282  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a282 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a282 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@2e085087
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v255 i210 i60 
=== Succesors ===
next: v285 
=== Usages ===
a286 
=== Predecessor ===
v276 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v255 i210 i60 #next: v285  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
a282 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v308 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v428 
value: j385 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v295 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v428 value: j385 stateAfter: - lastLocationAccess: - #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j306 
index: - 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j306 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v441 
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v441 #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
displacement: 296
scale: Times1
stamp: void*
=== Inputs ===
base: j306 
index: - 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j306 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v442 
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v442 #next: v301  <|@  <|@
f <@~|@floating>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
displacement: 360
scale: Times1
stamp: void*
=== Inputs ===
base: j306 
index: - 
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j306 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v443 
=== Succesors ===
next: v304 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v443 #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
displacement: 424
scale: Times1
stamp: void*
=== Inputs ===
base: j306 
index: - 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j306 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v444 
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v444 #next: v309  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j306 
index: - 
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j306 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v430 
value: i210 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v430 value: i210 stateAfter: - lastLocationAccess: - #next: v310  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j306 
index: - 
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j306 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j256 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v431 
value: j256 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v431 value: j256 stateAfter: - lastLocationAccess: - #next: v314  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j306 
index: - 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j306 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v432 
value: v374 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v432 value: v374 stateAfter: - lastLocationAccess: - #next: v280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a281 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a281 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j306 
=== Succesors ===
next: v283 
=== Usages ===
a286 
=== Predecessor ===
v280 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j306 #next: v283  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
a281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a286 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v284 
values: a281 a282 
=== Succesors ===
=== Usages ===
v427 a250 v409 v411 v413 v415 v417 v419 v421 v423 v425 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v284 values: a281 a282  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v283 v285 
=== Succesors ===
next: i398 
=== Usages ===
a286 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v283 v285 #next: i398  <|@  <|@
f <@~|@floating>@ <|@
tid a80 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{a}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{a}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a80 
index: - 
=== Succesors ===
=== Usages ===
i398 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a80 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i398 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v408 
=== Succesors ===
next: v90 
=== Usages ===
v90 
=== Predecessor ===
v284 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v408 #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a286 
index: - 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v409 
value: i398 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i399 
=== Usages ===
=== Predecessor ===
i398 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v409 value: i398 stateAfter: - lastLocationAccess: - #next: i399  <|@  <|@
f <@~|@floating>@ <|@
tid a94 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{b}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{b}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a94 
index: - 
=== Succesors ===
=== Usages ===
i399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a94 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i399 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v410 
=== Succesors ===
next: v102 
=== Usages ===
v102 
=== Predecessor ===
v90 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v410 #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
displacement: 18
scale: Times1
stamp: void*
=== Inputs ===
base: a286 
index: - 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v411 
value: i399 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i400 
=== Usages ===
=== Predecessor ===
i399 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v411 value: i399 stateAfter: - lastLocationAccess: - #next: i400  <|@  <|@
f <@~|@floating>@ <|@
tid a106 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{c}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{c}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a106 
index: - 
=== Succesors ===
=== Usages ===
i400 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a106 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i400 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v412 
=== Succesors ===
next: v114 
=== Usages ===
v114 
=== Predecessor ===
v102 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v412 #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a286 
index: - 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v413 
value: i400 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i401 
=== Usages ===
=== Predecessor ===
i400 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v413 value: i400 stateAfter: - lastLocationAccess: - #next: i401  <|@  <|@
f <@~|@floating>@ <|@
tid a118 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{d}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{d}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a118 
index: - 
=== Succesors ===
=== Usages ===
i401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a118 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i401 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v414 
=== Succesors ===
next: v126 
=== Usages ===
v126 
=== Predecessor ===
v114 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v414 #next: v126  <|@  <|@
f <@~|@floating>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: a286 
index: - 
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v415 
value: i401 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i402 
=== Usages ===
=== Predecessor ===
i401 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v415 value: i401 stateAfter: - lastLocationAccess: - #next: i402  <|@  <|@
f <@~|@floating>@ <|@
tid a130 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{e}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{e}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a130 
index: - 
=== Succesors ===
=== Usages ===
i402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a130 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i402 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v416 
=== Succesors ===
next: v138 
=== Usages ===
v138 
=== Predecessor ===
v126 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v416 #next: v138  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a286 
index: - 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v417 
value: i402 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i403 
=== Usages ===
=== Predecessor ===
i402 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v417 value: i402 stateAfter: - lastLocationAccess: - #next: i403  <|@  <|@
f <@~|@floating>@ <|@
tid a142 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{f}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{f}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a142 
index: - 
=== Succesors ===
=== Usages ===
i403 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a142 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i403 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v418 
=== Succesors ===
next: v150 
=== Usages ===
v150 
=== Predecessor ===
v138 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v418 #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times1
stamp: void*
=== Inputs ===
base: a286 
index: - 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v419 
value: i403 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i404 
=== Usages ===
=== Predecessor ===
i403 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v419 value: i403 stateAfter: - lastLocationAccess: - #next: i404  <|@  <|@
f <@~|@floating>@ <|@
tid a154 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{g}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{g}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a154 
index: - 
=== Succesors ===
=== Usages ===
i404 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a154 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i404 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v420 
=== Succesors ===
next: v162 
=== Usages ===
v162 
=== Predecessor ===
v150 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v420 #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a286 
index: - 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v421 
value: i404 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i405 
=== Usages ===
=== Predecessor ===
i404 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v421 value: i404 stateAfter: - lastLocationAccess: - #next: i405  <|@  <|@
f <@~|@floating>@ <|@
tid a166 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{h}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{h}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a166 
index: - 
=== Succesors ===
=== Usages ===
i405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a166 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i405 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v422 
=== Succesors ===
next: v174 
=== Usages ===
v174 
=== Predecessor ===
v162 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v422 #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
displacement: 30
scale: Times1
stamp: void*
=== Inputs ===
base: a286 
index: - 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v423 
value: i405 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i406 
=== Usages ===
=== Predecessor ===
i405 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v423 value: i405 stateAfter: - lastLocationAccess: - #next: i406  <|@  <|@
f <@~|@floating>@ <|@
tid a178 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{i}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{i}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a178 
index: - 
=== Succesors ===
=== Usages ===
i406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a178 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i406 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v424 
=== Succesors ===
next: v186 
=== Usages ===
v186 
=== Predecessor ===
v174 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v424 #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a286 
index: - 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v425 
value: i406 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i407 
=== Usages ===
=== Predecessor ===
i406 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v425 value: i406 stateAfter: - lastLocationAccess: - #next: i407  <|@  <|@
f <@~|@floating>@ <|@
tid a190 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{j}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{j}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a190 
index: - 
=== Succesors ===
=== Usages ===
i407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a190 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i407 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v426 
=== Succesors ===
next: v198 
=== Usages ===
v198 
=== Predecessor ===
v186 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v426 #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
displacement: 34
scale: Times1
stamp: void*
=== Inputs ===
base: a286 
index: - 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v427 
value: i407 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j325 
=== Usages ===
=== Predecessor ===
i407 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v427 value: i407 stateAfter: - lastLocationAccess: - #next: j325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j325 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j342 
=== Usages ===
v433 v434 
=== Predecessor ===
v198 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j342  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j325 
index: - 
=== Succesors ===
=== Usages ===
j342 v344 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j325 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j342 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v433 
=== Succesors ===
next: j343 
=== Usages ===
j375 j348 v438 
=== Predecessor ===
j325 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v433 #next: j343  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j325 
index: - 
=== Succesors ===
=== Usages ===
j343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j325 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j343 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v434 
=== Succesors ===
next: v333 
=== Usages ===
v330 
=== Predecessor ===
j342 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v434 #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid j226 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j375 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j375 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/1382755409@7497e667
stamp: i64
=== Inputs ===
x: j342 
y: j226 
=== Succesors ===
=== Usages ===
v330 v344 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j342 y: j226  <|@  <|@
f <@~|@floating>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@22545b73
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j343 
y: j375 
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j343 y: j375  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v330 
=== Succesors ===
trueSuccessor: v331 
falseSuccessor: v332 
=== Usages ===
=== Predecessor ===
j343 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v330 #trueSuccessor: v331 #falseSuccessor: v332  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a338 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a338  <|@  <|@
f <@~|@floating>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i336 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i257 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a338 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@2e085087
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v323 i336 i257 
=== Succesors ===
next: j339 
=== Usages ===
j339 
=== Predecessor ===
v331 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v323 i336 i257 #next: j339  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j339 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a338 
=== Succesors ===
next: v349 
=== Usages ===
j348 
=== Predecessor ===
a338 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a338 #next: v349  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
j339 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v344 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v433 
value: j375 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v433 value: j375 stateAfter: - lastLocationAccess: - #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j342 
index: - 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j342 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v438 
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v438 #next: v347  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
v341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j348 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v346 
values: j342 j339 
=== Succesors ===
=== Usages ===
v437 v436 a247 v439 v440 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v346 values: j342 j339  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v347 v349 
=== Succesors ===
next: a247 
=== Usages ===
j348 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v347 v349 #next: a247  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a247 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j348 
=== Succesors ===
next: j360 
=== Usages ===
a253 
=== Predecessor ===
v346 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j348 #next: j360  <|@  <|@
f <@~|@floating>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j355 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v354 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v354  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j355 
index: - 
=== Succesors ===
=== Usages ===
j360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j355 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j360 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v435 
=== Succesors ===
next: v361 
=== Usages ===
v361 
=== Predecessor ===
a247 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v435 #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j348 
index: - 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j348 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v436 
value: j360 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v364 
=== Usages ===
=== Predecessor ===
j360 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v436 value: j360 stateAfter: - lastLocationAccess: - #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j348 
index: - 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j348 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v437 
value: v379 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v437 value: v379 stateAfter: - lastLocationAccess: - #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j348 
index: - 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j348 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a250 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a286 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v439 
value: a250 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v439 value: a250 stateAfter: - lastLocationAccess: - #next: v370  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j348 
index: - 
=== Succesors ===
=== Usages ===
v370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j348 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v440 
value: i60 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a253 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v440 value: i60 stateAfter: - lastLocationAccess: - #next: a253  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a253 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a247 
=== Succesors ===
next: v254 
=== Usages ===
v38 
=== Predecessor ===
v370 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a247 #next: v254  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
a253 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a253 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a253 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j261 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j261 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j306 
=== Usages ===
v428 v429 
=== Predecessor ===
v0 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j306  <|@  <|@
f <@~|@floating>@ <|@
tid v428 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j261 
index: - 
=== Succesors ===
=== Usages ===
j306 v308 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j261 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j306 <|@
result v0|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v428 
=== Succesors ===
next: j307 
=== Usages ===
j385 v430 v431 a281 v432 v441 v442 v443 v444 
=== Predecessor ===
j261 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v428 #next: j307  <|@  <|@
f <@~|@floating>@ <|@
tid v429 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j261 
index: - 
=== Succesors ===
=== Usages ===
j307 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j261 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j307 <|@
result v1|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v429 
=== Succesors ===
next: v277 
=== Usages ===
v271 
=== Predecessor ===
j306 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v429 #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid j384 <|@
result long[40|0x28] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 40
stableDimension: 0
stamp: i64 [40] ⇊0000000000000028 ⇈0000000000000028
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j385 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j385 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/1382755409@7497e667
stamp: i64
=== Inputs ===
x: j306 
y: j384 
=== Succesors ===
=== Usages ===
v271 v308 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j306 y: j384  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@22545b73
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j307 
y: j385 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j307 y: j385  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v370 a282 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i210 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v309 a282 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringOp.appendInline()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 123
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
a282 a338 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v271 
=== Succesors ===
trueSuccessor: v276 
falseSuccessor: v275 
=== Usages ===
=== Predecessor ===
j307 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v271 #trueSuccessor: v276 #falseSuccessor: v275  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@41669190 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = LEA [v0|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|QWORD, y: v1|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a282 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a282  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a282 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a282 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@2e085087
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v255 i210 i60 
=== Succesors ===
next: v285 
=== Usages ===
a286 
=== Predecessor ===
v276 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v255 i210 i60 #next: v285  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
a282 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.appendInline(Bench.scala:123) [bci: 0]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x114195220:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v308 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v428 
value: j385 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v295 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v428 value: j385 stateAfter: - lastLocationAccess: - #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
result [v0|QWORD + 232] <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j306 
index: - 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j306 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v441 
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v441 #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid v442 <|@
result [v0|QWORD + 296] <|@
d <@d|@=== Debug Properties ===
displacement: 296
scale: Times1
stamp: void*
=== Inputs ===
base: j306 
index: - 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j306 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v442 
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v442 #next: v301  <|@  <|@
f <@~|@floating>@ <|@
tid v443 <|@
result [v0|QWORD + 360] <|@
d <@d|@=== Debug Properties ===
displacement: 360
scale: Times1
stamp: void*
=== Inputs ===
base: j306 
index: - 
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j306 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v443 
=== Succesors ===
next: v304 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v443 #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid v444 <|@
result [v0|QWORD + 424] <|@
d <@d|@=== Debug Properties ===
displacement: 424
scale: Times1
stamp: void*
=== Inputs ===
base: j306 
index: - 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j306 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v444 
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v444 #next: v309  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
result [v0|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j306 
index: - 
=== Succesors ===
=== Usages ===
v309 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j306 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v430 
value: i210 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v430 value: i210 stateAfter: - lastLocationAccess: - #next: v310  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
result [v0|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j306 
index: - 
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j306 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j256 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v310 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v431 
value: j256 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v431 value: j256 stateAfter: - lastLocationAccess: - #next: v314  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
result [v0|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j306 
index: - 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j306 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v374 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v432 
value: v374 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v432 value: v374 stateAfter: - lastLocationAccess: - #next: v280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a281 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a281 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j306 
=== Succesors ===
next: v283 
=== Usages ===
a286 
=== Predecessor ===
v280 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j306 #next: v283  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
a281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v0|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v0|QWORD + 296] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v0|QWORD + 360] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v0|QWORD + 424] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD + 12] y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a286 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v284 
values: a281 a282 
=== Succesors ===
=== Usages ===
v427 a250 v409 v411 v413 v415 v417 v419 v421 v423 v425 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v284 values: a281 a282  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v283 v285 
=== Succesors ===
next: i398 
=== Usages ===
a286 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v283 v285 #next: i398  <|@  <|@
f <@~|@floating>@ <|@
tid a80 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{a}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{a}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v408 <|@
result [v7|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a80 
index: - 
=== Succesors ===
=== Usages ===
i398 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a80 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i398 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v408 
=== Succesors ===
next: v90 
=== Usages ===
v90 
=== Predecessor ===
v284 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v408 #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid v409 <|@
result [v6|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a286 
index: - 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v409 
value: i398 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i399 
=== Usages ===
=== Predecessor ===
i398 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v409 value: i398 stateAfter: - lastLocationAccess: - #next: i399  <|@  <|@
f <@~|@floating>@ <|@
tid a94 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{b}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{b}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v410 <|@
result [v9|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a94 
index: - 
=== Succesors ===
=== Usages ===
i399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a94 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i399 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v410 
=== Succesors ===
next: v102 
=== Usages ===
v102 
=== Predecessor ===
v90 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v410 #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid v411 <|@
result [v6|QWORD[.] + 18] <|@
d <@d|@=== Debug Properties ===
displacement: 18
scale: Times1
stamp: void*
=== Inputs ===
base: a286 
index: - 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v411 
value: i399 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i400 
=== Usages ===
=== Predecessor ===
i399 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v411 value: i399 stateAfter: - lastLocationAccess: - #next: i400  <|@  <|@
f <@~|@floating>@ <|@
tid a106 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{c}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{c}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v412 <|@
result [v11|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a106 
index: - 
=== Succesors ===
=== Usages ===
i400 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a106 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i400 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v412 
=== Succesors ===
next: v114 
=== Usages ===
v114 
=== Predecessor ===
v102 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v412 #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid v413 <|@
result [v6|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a286 
index: - 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v413 
value: i400 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i401 
=== Usages ===
=== Predecessor ===
i400 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v413 value: i400 stateAfter: - lastLocationAccess: - #next: i401  <|@  <|@
f <@~|@floating>@ <|@
tid a118 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{d}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{d}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v414 <|@
result [v13|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a118 
index: - 
=== Succesors ===
=== Usages ===
i401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a118 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i401 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v414 
=== Succesors ===
next: v126 
=== Usages ===
v126 
=== Predecessor ===
v114 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v414 #next: v126  <|@  <|@
f <@~|@floating>@ <|@
tid v415 <|@
result [v6|QWORD[.] + 22] <|@
d <@d|@=== Debug Properties ===
displacement: 22
scale: Times1
stamp: void*
=== Inputs ===
base: a286 
index: - 
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v415 
value: i401 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i402 
=== Usages ===
=== Predecessor ===
i401 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v415 value: i401 stateAfter: - lastLocationAccess: - #next: i402  <|@  <|@
f <@~|@floating>@ <|@
tid a130 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{e}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{e}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v416 <|@
result [v15|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a130 
index: - 
=== Succesors ===
=== Usages ===
i402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a130 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i402 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v416 
=== Succesors ===
next: v138 
=== Usages ===
v138 
=== Predecessor ===
v126 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v416 #next: v138  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
result [v6|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a286 
index: - 
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v417 
value: i402 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i403 
=== Usages ===
=== Predecessor ===
i402 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v417 value: i402 stateAfter: - lastLocationAccess: - #next: i403  <|@  <|@
f <@~|@floating>@ <|@
tid a142 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{f}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{f}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v418 <|@
result [v17|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a142 
index: - 
=== Succesors ===
=== Usages ===
i403 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a142 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i403 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v418 
=== Succesors ===
next: v150 
=== Usages ===
v150 
=== Predecessor ===
v138 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v418 #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid v419 <|@
result [v6|QWORD[.] + 26] <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times1
stamp: void*
=== Inputs ===
base: a286 
index: - 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v419 
value: i403 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i404 
=== Usages ===
=== Predecessor ===
i403 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v419 value: i403 stateAfter: - lastLocationAccess: - #next: i404  <|@  <|@
f <@~|@floating>@ <|@
tid a154 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{g}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{g}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v420 <|@
result [v19|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a154 
index: - 
=== Succesors ===
=== Usages ===
i404 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a154 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i404 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v420 
=== Succesors ===
next: v162 
=== Usages ===
v162 
=== Predecessor ===
v150 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v420 #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
result [v6|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a286 
index: - 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v421 
value: i404 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i405 
=== Usages ===
=== Predecessor ===
i404 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v421 value: i404 stateAfter: - lastLocationAccess: - #next: i405  <|@  <|@
f <@~|@floating>@ <|@
tid a166 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{h}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{h}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
result [v21|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a166 
index: - 
=== Succesors ===
=== Usages ===
i405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a166 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i405 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v422 
=== Succesors ===
next: v174 
=== Usages ===
v174 
=== Predecessor ===
v162 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v422 #next: v174  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
result [v6|QWORD[.] + 30] <|@
d <@d|@=== Debug Properties ===
displacement: 30
scale: Times1
stamp: void*
=== Inputs ===
base: a286 
index: - 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v423 
value: i405 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i406 
=== Usages ===
=== Predecessor ===
i405 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v423 value: i405 stateAfter: - lastLocationAccess: - #next: i406  <|@  <|@
f <@~|@floating>@ <|@
tid a178 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{i}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{i}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
result [v23|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a178 
index: - 
=== Succesors ===
=== Usages ===
i406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a178 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i406 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v424 
=== Succesors ===
next: v186 
=== Usages ===
v186 
=== Predecessor ===
v174 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v424 #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
result [v6|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a286 
index: - 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v425 
value: i406 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i407 
=== Usages ===
=== Predecessor ===
i406 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v425 value: i406 stateAfter: - lastLocationAccess: - #next: i407  <|@  <|@
f <@~|@floating>@ <|@
tid a190 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[1]{j}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[1]{j}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v426 <|@
result [v25|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a190 
index: - 
=== Succesors ===
=== Usages ===
i407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a190 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i407 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v426 
=== Succesors ===
next: v198 
=== Usages ===
v198 
=== Predecessor ===
v186 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v426 #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid v427 <|@
result [v6|QWORD[.] + 34] <|@
d <@d|@=== Debug Properties ===
displacement: 34
scale: Times1
stamp: void*
=== Inputs ===
base: a286 
index: - 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v427 
value: i407 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j325 
=== Usages ===
=== Predecessor ===
i407 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v427 value: i407 stateAfter: - lastLocationAccess: - #next: j325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j325 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j342 
=== Usages ===
v433 v434 
=== Predecessor ===
v198 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j342  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j325 
index: - 
=== Succesors ===
=== Usages ===
j342 v344 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j325 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j342 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v433 
=== Succesors ===
next: j343 
=== Usages ===
j375 j348 v438 
=== Predecessor ===
j325 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v433 #next: j343  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j325 
index: - 
=== Succesors ===
=== Usages ===
j343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j325 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j343 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v434 
=== Succesors ===
next: v333 
=== Usages ===
v330 
=== Predecessor ===
j342 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v434 #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid j226 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j375 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j375 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$12/1382755409@7497e667
stamp: i64
=== Inputs ===
x: j342 
y: j226 
=== Succesors ===
=== Usages ===
v330 v344 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j342 y: j226  <|@  <|@
f <@~|@floating>@ <|@
tid v330 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@22545b73
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j343 
y: j375 
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j343 y: j375  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@afb4aa47 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v330 
=== Succesors ===
trueSuccessor: v331 
falseSuccessor: v332 
=== Usages ===
=== Predecessor ===
j343 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v330 #trueSuccessor: v331 #falseSuccessor: v332  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{a}] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSX [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v8|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{b}] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSX [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 18], y: v10|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{c}] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVSX [v11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 20], y: v12|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{d}] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVSX [v13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 22], y: v14|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{e}] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVSX [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 24], y: v16|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{f}] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVSX [v17|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 26], y: v18|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{g}] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVSX [v19|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 28], y: v20|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{h}] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVSX [v21|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 30], y: v22|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{i}] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVSX [v23|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 32], y: v24|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{j}] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVSX [v25|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 34], y: v26|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v27|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a338 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a338  <|@  <|@
f <@~|@floating>@ <|@
tid v323 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i336 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i257 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a338 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@2e085087
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v323 i336 i257 
=== Succesors ===
next: j339 
=== Usages ===
j339 
=== Predecessor ===
v331 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v323 i336 i257 #next: j339  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j339 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a338 
=== Succesors ===
next: v349 
=== Usages ===
j348 
=== Predecessor ===
a338 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a338 #next: v349  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
j339 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.appendInline(Bench.scala:123) [bci: 0]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x114195220:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD[.]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v344 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v433 
value: j375 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v433 value: j375 stateAfter: - lastLocationAccess: - #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
result [v27|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j342 
index: - 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j342 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v438 
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v438 #next: v347  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
v341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v27|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j348 <|@
result v31|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v346 
values: j342 j339 
=== Succesors ===
=== Usages ===
v437 v436 a247 v439 v440 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v346 values: j342 j339  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v347 v349 
=== Succesors ===
next: a247 
=== Usages ===
j348 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v347 v349 #next: a247  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a247 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j348 
=== Succesors ===
next: j360 
=== Usages ===
a253 
=== Predecessor ===
v346 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j348 #next: j360  <|@  <|@
f <@~|@floating>@ <|@
tid v354 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j355 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j355 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v354 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v354  <|@  <|@
f <@~|@floating>@ <|@
tid v435 <|@
result [v33|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j355 
index: - 
=== Succesors ===
=== Usages ===
j360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j355 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j360 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v435 
=== Succesors ===
next: v361 
=== Usages ===
v361 
=== Predecessor ===
a247 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v435 #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid v436 <|@
result [v31|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j348 
index: - 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j348 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v436 
value: j360 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v364 
=== Usages ===
=== Predecessor ===
j360 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v436 value: j360 stateAfter: - lastLocationAccess: - #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid v437 <|@
result [v31|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j348 
index: - 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j348 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v379 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v437 
value: v379 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v437 value: v379 stateAfter: - lastLocationAccess: - #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid v439 <|@
result [v31|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j348 
index: - 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j348 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a250 <|@
result v35|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a286 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v439 
value: a250 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v439 value: a250 stateAfter: - lastLocationAccess: - #next: v370  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
result [v31|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j348 
index: - 
=== Succesors ===
=== Usages ===
v370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j348 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v440 
value: i60 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a253 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v440 value: i60 stateAfter: - lastLocationAccess: - #next: a253  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a253 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a247 
=== Succesors ===
next: v254 
=== Usages ===
v38 
=== Predecessor ===
v370 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a247 #next: v254  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
a253 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a253 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a253 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE v31|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [v33|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD[*]], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@162e5d05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD[*] + 12], y: v35|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@28070dd1 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@41669190 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = LEA [v0|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|QWORD, y: v1|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v2|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v0|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v0|QWORD + 296] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v0|QWORD + 360] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v0|QWORD + 424] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD + 12] y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE v0|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{a}] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVSX [v7|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 16], y: v8|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{b}] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSX [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 18], y: v10|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{c}] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVSX [v11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 20], y: v12|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{d}] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVSX [v13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 22], y: v14|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{e}] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVSX [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 24], y: v16|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{f}] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVSX [v17|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 26], y: v18|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{g}] <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVSX [v19|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 28], y: v20|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{h}] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVSX [v21|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 30], y: v22|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{i}] <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVSX [v23|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 32], y: v24|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{j}] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVSX [v25|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD[.] + 34], y: v26|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v27|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v27|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE v31|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [v33|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD[*]], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v31|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[.] = COMPRESSPOINTER (input: v6|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@162e5d05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD[*] + 12], y: v35|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v31|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@28070dd1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v3|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.appendInline(Bench.scala:123) [bci: 0]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x114195220:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.appendInline(Bench.scala:123) [bci: 0]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x114195220:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD[.]] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #13         // java.lang.StringBuffer
     3: dup           
     4: invokespecial #0          // java.lang.StringBuffer.<init>:()void
     7: astore_1      
     8: aload_1       
     9: ldc           #19         // "a"
    11: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    14: pop           
    15: aload_1       
    16: ldc           #25         // "b"
    18: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    21: pop           
    22: aload_1       
    23: ldc           #27         // "c"
    25: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    28: pop           
    29: aload_1       
    30: ldc           #29         // "d"
    32: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    35: pop           
    36: aload_1       
    37: ldc           #31         // "e"
    39: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    42: pop           
    43: aload_1       
    44: ldc           #33         // "f"
    46: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    49: pop           
    50: aload_1       
    51: ldc           #35         // "g"
    53: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    56: pop           
    57: aload_1       
    58: ldc           #37         // "h"
    60: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    63: pop           
    64: aload_1       
    65: ldc           #39         // "i"
    67: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    70: pop           
    71: aload_1       
    72: ldc           #41         // "j"
    74: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    77: pop           
    78: aload_1       
    79: invokevirtual #2          // java.lang.StringBuffer.toString:()java.lang.String
    82: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@41669190 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   10  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 40] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 232] instr: 0 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 296] instr: 0 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 360] instr: 0 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 424] instr: 0 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 10 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   40  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{a}] <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{b}] <|@ <|@
      nr   48  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV (x: [r13|QWORD[.] + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{c}] <|@ <|@
      nr   54  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{d}] <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV (x: [r13|QWORD[.] + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr   64  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{e}] <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [r13|QWORD[.] + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr   70  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{f}] <|@ <|@
      nr   72  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r13|QWORD[.] + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{g}] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction MOV (x: [r13|QWORD[.] + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr   82  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{h}] <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV (x: [r13|QWORD[.] + 30], y: rax|DWORD) size: WORD <|@ <|@
      nr   88  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{i}] <|@ <|@
      nr   90  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [r13|QWORD[.] + 32], y: rax|DWORD) size: WORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{j}] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [r13|QWORD[.] + 34], y: rax|DWORD) size: WORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  104  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  122  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  128  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@162e5d05 encoding: base: 0 shift: 3 <|@ <|@
      nr  130  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@28070dd1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  144  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  148  <|@ st <@st|@reference-map: []
live-base-pointers: []
bench.StringOp.appendInline(Bench.scala:123) [bci: 0]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x114195220:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  160  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  162  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  164  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
bench.StringOp.appendInline(Bench.scala:123) [bci: 0]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x114195220:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #13         // java.lang.StringBuffer
     3: dup           
     4: invokespecial #0          // java.lang.StringBuffer.<init>:()void
     7: astore_1      
     8: aload_1       
     9: ldc           #19         // "a"
    11: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    14: pop           
    15: aload_1       
    16: ldc           #25         // "b"
    18: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    21: pop           
    22: aload_1       
    23: ldc           #27         // "c"
    25: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    28: pop           
    29: aload_1       
    30: ldc           #29         // "d"
    32: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    35: pop           
    36: aload_1       
    37: ldc           #31         // "e"
    39: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    42: pop           
    43: aload_1       
    44: ldc           #33         // "f"
    46: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    49: pop           
    50: aload_1       
    51: ldc           #35         // "g"
    53: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    56: pop           
    57: aload_1       
    58: ldc           #37         // "h"
    60: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    63: pop           
    64: aload_1       
    65: ldc           #39         // "i"
    67: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    70: pop           
    71: aload_1       
    72: ldc           #41         // "j"
    74: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    77: pop           
    78: aload_1       
    79: invokevirtual #2          // java.lang.StringBuffer.toString:()java.lang.String
    82: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@41669190 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   10  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 40] size: QWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr   20  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 232] instr: 0 <|@ <|@
      nr   22  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 296] instr: 0 <|@ <|@
      nr   24  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 360] instr: 0 <|@ <|@
      nr   26  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 424] instr: 0 <|@ <|@
      nr   28  <|@ instruction MOV [rax|QWORD + 12] y: 10 size: DWORD <|@ <|@
      nr   30  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   32  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   40  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{a}] <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   44  <|@ instruction MOV (x: [r13|QWORD[.] + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{b}] <|@ <|@
      nr   48  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV (x: [r13|QWORD[.] + 18], y: rax|DWORD) size: WORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{c}] <|@ <|@
      nr   54  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV (x: [r13|QWORD[.] + 20], y: rax|DWORD) size: WORD <|@ <|@
      nr   58  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{d}] <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   62  <|@ instruction MOV (x: [r13|QWORD[.] + 22], y: rax|DWORD) size: WORD <|@ <|@
      nr   64  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{e}] <|@ <|@
      nr   66  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV (x: [r13|QWORD[.] + 24], y: rax|DWORD) size: WORD <|@ <|@
      nr   70  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{f}] <|@ <|@
      nr   72  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r13|QWORD[.] + 26], y: rax|DWORD) size: WORD <|@ <|@
      nr   76  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{g}] <|@ <|@
      nr   78  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   80  <|@ instruction MOV (x: [r13|QWORD[.] + 28], y: rax|DWORD) size: WORD <|@ <|@
      nr   82  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{h}] <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   86  <|@ instruction MOV (x: [r13|QWORD[.] + 30], y: rax|DWORD) size: WORD <|@ <|@
      nr   88  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{i}] <|@ <|@
      nr   90  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [r13|QWORD[.] + 32], y: rax|DWORD) size: WORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{j}] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [r13|QWORD[.] + 34], y: rax|DWORD) size: WORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  104  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  122  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  128  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@162e5d05 encoding: base: 0 shift: 3 <|@ <|@
      nr  130  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@28070dd1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  144  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  146  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  148  <|@ st <@st|@reference-map: []
live-base-pointers: []
bench.StringOp.appendInline(Bench.scala:123) [bci: 0]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x114195220:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  160  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  162  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  164  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
bench.StringOp.appendInline(Bench.scala:123) [bci: 0]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x114195220:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #13         // java.lang.StringBuffer
     3: dup           
     4: invokespecial #0          // java.lang.StringBuffer.<init>:()void
     7: astore_1      
     8: aload_1       
     9: ldc           #19         // "a"
    11: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    14: pop           
    15: aload_1       
    16: ldc           #25         // "b"
    18: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    21: pop           
    22: aload_1       
    23: ldc           #27         // "c"
    25: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    28: pop           
    29: aload_1       
    30: ldc           #29         // "d"
    32: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    35: pop           
    36: aload_1       
    37: ldc           #31         // "e"
    39: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    42: pop           
    43: aload_1       
    44: ldc           #33         // "f"
    46: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    49: pop           
    50: aload_1       
    51: ldc           #35         // "g"
    53: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    56: pop           
    57: aload_1       
    58: ldc           #37         // "h"
    60: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    63: pop           
    64: aload_1       
    65: ldc           #39         // "i"
    67: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    70: pop           
    71: aload_1       
    72: ldc           #41         // "j"
    74: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    77: pop           
    78: aload_1       
    79: invokevirtual #2          // java.lang.StringBuffer.toString:()java.lang.String
    82: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410498b4760498b7770488d5028483bd60f8753010000498957600f1880e80000000f1880280100000f1880680100000f1880a8010000c7400c0a00000048c70001000000c74008addeadde4c8be848b8addeaddeaddeadde0fbf4010664189451048b8addeaddeaddeadde0fbf4010664189451248b8addeaddeaddeadde0fbf4010664189451448b8addeaddeaddeadde0fbf4010664189451648b8addeaddeaddeadde0fbf4010664189451848b8addeaddeaddeadde0fbf4010664189451a48b8addeaddeaddeadde0fbf4010664189451c48b8addeaddeaddeadde0fbf4010664189451e48b8addeaddeaddeadde0fbf4010664189452048b8addeaddeaddeadde0fbf40106641894522498b4760488d7018493b77700f876a000000498977600f1880d8000000488bf048baaddeaddeaddeadde488b92a8000000488910c74008addeadde49c1ed034489680c44896010488bc6488b6c24104883c418850500000000c5f877c348beaddeaddeaddeaddeba0a000000b900000000e80000000090e9c3feffff48beaddeaddeaddeaddeba02000000b901000000e80000000090eb85e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x106ea1f78, value=0x113871e60]:0x113871e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@41669190 slotKind: QWORD  <||@
  Comment 48 6 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 52 8 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 56 10 rdx|QWORD = LEA [rax|QWORD + 40] size: QWORD  <||@
  Comment 60 12 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 63 14 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 69 block B2 null  <||@
  Comment 69 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 69 18 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 73 20 AMD64PREFETCH ~[rax|QWORD + 232] instr: 0  <||@
  Comment 80 22 AMD64PREFETCH ~[rax|QWORD + 296] instr: 0  <||@
  Comment 87 24 AMD64PREFETCH ~[rax|QWORD + 360] instr: 0  <||@
  Comment 94 26 AMD64PREFETCH ~[rax|QWORD + 424] instr: 0  <||@
  Comment 101 28 MOV [rax|QWORD + 12] y: 10 size: DWORD  <||@
  Comment 108 30 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 115 32 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 115 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 122 34 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 122 36 JUMP ~[] destination: B2 -> B3  <||@
  Comment 122 block B3 null  <||@
  Comment 122 38 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 122 -1 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 125 40 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{a}]  <||@
  Comment 125 {Object[char[1]{a}]}  <||@
  Comment 135 42 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 139 44 MOV (x: [r13|QWORD[.] + 16], y: rax|DWORD) size: WORD  <||@
  Comment 144 46 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{b}]  <||@
  Comment 144 {Object[char[1]{b}]}  <||@
  Comment 154 48 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 158 50 MOV (x: [r13|QWORD[.] + 18], y: rax|DWORD) size: WORD  <||@
  Comment 163 52 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{c}]  <||@
  Comment 163 {Object[char[1]{c}]}  <||@
  Comment 173 54 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 177 56 MOV (x: [r13|QWORD[.] + 20], y: rax|DWORD) size: WORD  <||@
  Comment 182 58 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{d}]  <||@
  Comment 182 {Object[char[1]{d}]}  <||@
  Comment 192 60 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 196 62 MOV (x: [r13|QWORD[.] + 22], y: rax|DWORD) size: WORD  <||@
  Comment 201 64 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{e}]  <||@
  Comment 201 {Object[char[1]{e}]}  <||@
  Comment 211 66 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 215 68 MOV (x: [r13|QWORD[.] + 24], y: rax|DWORD) size: WORD  <||@
  Comment 220 70 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{f}]  <||@
  Comment 220 {Object[char[1]{f}]}  <||@
  Comment 230 72 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 234 74 MOV (x: [r13|QWORD[.] + 26], y: rax|DWORD) size: WORD  <||@
  Comment 239 76 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{g}]  <||@
  Comment 239 {Object[char[1]{g}]}  <||@
  Comment 249 78 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 253 80 MOV (x: [r13|QWORD[.] + 28], y: rax|DWORD) size: WORD  <||@
  Comment 258 82 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{h}]  <||@
  Comment 258 {Object[char[1]{h}]}  <||@
  Comment 268 84 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 272 86 MOV (x: [r13|QWORD[.] + 30], y: rax|DWORD) size: WORD  <||@
  Comment 277 88 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{i}]  <||@
  Comment 277 {Object[char[1]{i}]}  <||@
  Comment 287 90 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 291 92 MOV (x: [r13|QWORD[.] + 32], y: rax|DWORD) size: WORD  <||@
  Comment 296 94 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{j}]  <||@
  Comment 296 {Object[char[1]{j}]}  <||@
  Comment 306 96 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 310 98 MOV (x: [r13|QWORD[.] + 34], y: rax|DWORD) size: WORD  <||@
  Comment 315 100 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 319 102 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 323 104 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 327 106 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 333 block B5 null  <||@
  Comment 333 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 333 110 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 337 112 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 344 -1 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 344 114 JUMP ~[] destination: B5 -> B6  <||@
  Comment 344 block B6 null  <||@
  Comment 344 116 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 344 118 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 347 120 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 347 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 357 122 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 364 124 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 367 126 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 367 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 374 128 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@162e5d05 encoding: base: 0 shift: 3  <||@
  Comment 378 130 MOV (x: [rax|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 382 132 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 386 134 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 389 136 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@28070dd1  <||@
  Comment 398 12  <||@
  Comment 408 block B1 null  <||@
  Comment 408 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 408 140 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 408 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 418 144 rdx|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 423 146 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 428 148 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x114195220:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 428 {Stub<NewArrayStub.newArray>@0x114195220:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 433 []at bench.StringOp.appendInline(Bench.scala:123) [bci: 0, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 434 152 JUMP ~[] destination: B1 -> B3  <||@
  Comment 439 block B4 null  <||@
  Comment 439 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 439 156 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 439 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 449 160 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 454 162 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 459 164 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x114195220:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 459 {Stub<NewArrayStub.newArray>@0x114195220:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 464 [r13:0]at bench.StringOp.appendInline(Bench.scala:123) [bci: 0, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 465 -1 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 465 168 JUMP ~[] destination: B4 -> B6  <||@
  Comment 467 {Stub<ExceptionHandlerStub.exceptionHandler>@0x113c0ee60:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 467 4  <||@
  Comment 473 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x106ea1f88, value=0x113873500]:0x113873500}  <||@
  Comment 473 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-667[bench.StringOp.appendInline()]"
  method "HotSpotCompilation-667[bench.StringOp.appendInline()]"
  date 1527727289230
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 11453dcc0 448b560849c1e203493bc20f858f4133ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410498b4760498b7770488d5028483bd60f8753010000498957600f1880e80000000f1880280100000f1880680100000f1880a8010000c7400c0a00000048c70001000000c74008410000f84c8be848b8b82a4ec0060000000fbf4010664189451048b8d02a4ec0060000000fbf4010664189451248b8902d4ec0060000000fbf4010664189451448b8002e4ec0060000000fbf4010664189451648b8e8324ec0060000000fbf4010664189451848b800334ec0060000000fbf4010664189451a48b818354ec0060000000fbf4010664189451c48b860364ec0060000000fbf4010664189451e48b8f83a4ec0060000000fbf4010664189452048b8103b4ec0060000000fbf40106641894522498b4760488d7018493b77700f876a000000498977600f1880d8000000488bf048bad01600c007000000488b92a8000000488910c74008da0200f849c1ed034489680c44896010488bc6488b6c24104883c4188505b21185f1c5f877c348be080200c007000000ba0a000000b900000000e8af73c5ff90e9c3feffff48be680b00c007000000ba02000000b901000000e89073c5ff90eb85e8c80f6dff90e8625633ff90f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x106ea1f78, value=0x113871e60]:0x113871e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@41669190 slotKind: QWORD  <||@
  Comment 48 6 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 52 8 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 56 10 rdx|QWORD = LEA [rax|QWORD + 40] size: QWORD  <||@
  Comment 60 12 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 63 14 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 69 block B2 null  <||@
  Comment 69 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 69 18 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 73 20 AMD64PREFETCH ~[rax|QWORD + 232] instr: 0  <||@
  Comment 80 22 AMD64PREFETCH ~[rax|QWORD + 296] instr: 0  <||@
  Comment 87 24 AMD64PREFETCH ~[rax|QWORD + 360] instr: 0  <||@
  Comment 94 26 AMD64PREFETCH ~[rax|QWORD + 424] instr: 0  <||@
  Comment 101 28 MOV [rax|QWORD + 12] y: 10 size: DWORD  <||@
  Comment 108 30 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 115 32 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 115 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 122 34 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 122 36 JUMP ~[] destination: B2 -> B3  <||@
  Comment 122 block B3 null  <||@
  Comment 122 38 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 122 -1 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 125 40 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{a}]  <||@
  Comment 125 {Object[char[1]{a}]}  <||@
  Comment 135 42 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 139 44 MOV (x: [r13|QWORD[.] + 16], y: rax|DWORD) size: WORD  <||@
  Comment 144 46 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{b}]  <||@
  Comment 144 {Object[char[1]{b}]}  <||@
  Comment 154 48 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 158 50 MOV (x: [r13|QWORD[.] + 18], y: rax|DWORD) size: WORD  <||@
  Comment 163 52 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{c}]  <||@
  Comment 163 {Object[char[1]{c}]}  <||@
  Comment 173 54 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 177 56 MOV (x: [r13|QWORD[.] + 20], y: rax|DWORD) size: WORD  <||@
  Comment 182 58 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{d}]  <||@
  Comment 182 {Object[char[1]{d}]}  <||@
  Comment 192 60 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 196 62 MOV (x: [r13|QWORD[.] + 22], y: rax|DWORD) size: WORD  <||@
  Comment 201 64 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{e}]  <||@
  Comment 201 {Object[char[1]{e}]}  <||@
  Comment 211 66 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 215 68 MOV (x: [r13|QWORD[.] + 24], y: rax|DWORD) size: WORD  <||@
  Comment 220 70 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{f}]  <||@
  Comment 220 {Object[char[1]{f}]}  <||@
  Comment 230 72 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 234 74 MOV (x: [r13|QWORD[.] + 26], y: rax|DWORD) size: WORD  <||@
  Comment 239 76 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{g}]  <||@
  Comment 239 {Object[char[1]{g}]}  <||@
  Comment 249 78 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 253 80 MOV (x: [r13|QWORD[.] + 28], y: rax|DWORD) size: WORD  <||@
  Comment 258 82 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{h}]  <||@
  Comment 258 {Object[char[1]{h}]}  <||@
  Comment 268 84 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 272 86 MOV (x: [r13|QWORD[.] + 30], y: rax|DWORD) size: WORD  <||@
  Comment 277 88 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{i}]  <||@
  Comment 277 {Object[char[1]{i}]}  <||@
  Comment 287 90 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 291 92 MOV (x: [r13|QWORD[.] + 32], y: rax|DWORD) size: WORD  <||@
  Comment 296 94 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[1]{j}]  <||@
  Comment 296 {Object[char[1]{j}]}  <||@
  Comment 306 96 rax|DWORD = MOVSX [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 310 98 MOV (x: [r13|QWORD[.] + 34], y: rax|DWORD) size: WORD  <||@
  Comment 315 100 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 319 102 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 323 104 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 327 106 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 333 block B5 null  <||@
  Comment 333 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 333 110 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 337 112 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 344 -1 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 344 114 JUMP ~[] destination: B5 -> B6  <||@
  Comment 344 block B6 null  <||@
  Comment 344 116 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 344 118 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 347 120 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 347 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 357 122 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 364 124 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 367 126 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 367 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 374 128 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@162e5d05 encoding: base: 0 shift: 3  <||@
  Comment 378 130 MOV (x: [rax|QWORD[*] + 12], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 382 132 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 386 134 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 389 136 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@28070dd1  <||@
  Comment 398 12  <||@
  Comment 408 block B1 null  <||@
  Comment 408 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 408 140 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 408 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 418 144 rdx|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 423 146 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 428 148 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x114195220:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 428 {Stub<NewArrayStub.newArray>@0x114195220:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 433 []at bench.StringOp.appendInline(Bench.scala:123) [bci: 0, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 434 152 JUMP ~[] destination: B1 -> B3  <||@
  Comment 439 block B4 null  <||@
  Comment 439 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 439 156 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 439 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 449 160 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 454 162 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 459 164 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x114195220:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 459 {Stub<NewArrayStub.newArray>@0x114195220:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 464 [r13:0]at bench.StringOp.appendInline(Bench.scala:123) [bci: 0, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 465 -1 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 465 168 JUMP ~[] destination: B4 -> B6  <||@
  Comment 467 {Stub<ExceptionHandlerStub.exceptionHandler>@0x113c0ee60:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 467 4  <||@
  Comment 473 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x106ea1f88, value=0x113873500]:0x113873500}  <||@
  Comment 473 5  <||@
  HexCodeFile>>> <|@
end_nmethod
