begin_compilation
  name " HotSpotCompilation-47[bench.StringOp.append()]"
  method "HotSpotCompilation-47[bench.StringOp.append()]"
  date 1527289019245
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j110 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j110  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j110 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j130 
=== Usages ===
v172 v173 
=== Predecessor ===
v0 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j130  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j110 
index: - 
=== Succesors ===
=== Usages ===
j130 v132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j110 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j130 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v172 
=== Succesors ===
next: j131 
=== Usages ===
j163 j136 v177 
=== Predecessor ===
j110 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v172 #next: j131  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j110 
index: - 
=== Succesors ===
=== Usages ===
j131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j110 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j131 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v173 
=== Succesors ===
next: v118 
=== Usages ===
v115 
=== Predecessor ===
j130 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v173 #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid j162 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j163 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j163 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$35/1285878199@45fa5b81
stamp: i64
=== Inputs ===
x: j130 
y: j162 
=== Succesors ===
=== Usages ===
v115 v132 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j130 y: j162  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@31ce5d1f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j131 
y: j163 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j131 y: j163  <|@  <|@
f <@*|@fixed>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v116 
falseSuccessor: v117 
=== Usages ===
=== Predecessor ===
j131 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v116 #falseSuccessor: v117  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a123 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a123  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 124
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
a123 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a123 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i121 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a123 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i109 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a123 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a123 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@39e04090
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v107 i121 i109 
=== Succesors ===
next: j124 
=== Usages ===
j124 
=== Predecessor ===
v116 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v107 i121 i109 #next: j124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j124 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a123 
=== Succesors ===
next: v137 
=== Usages ===
j136 
=== Predecessor ===
a123 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a123 #next: v137  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
j124 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v172 
value: j163 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v172 value: j163 stateAfter: - lastLocationAccess: - #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j130 
index: - 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j130 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v177 
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v177 #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v128 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j136 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v134 
values: j130 j124 
=== Succesors ===
=== Usages ===
v176 v175 a91 v178 v179 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v134 values: j130 j124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v135 v137 
=== Succesors ===
next: a91 
=== Usages ===
j136 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v135 v137 #next: a91  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a91 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j136 
=== Succesors ===
next: j148 
=== Usages ===
a97 
=== Predecessor ===
v134 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j136 #next: j148  <|@  <|@
f <@~|@floating>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j143 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j143 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v142 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v142  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j143 
index: - 
=== Succesors ===
=== Usages ===
j148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j143 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j148 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v174 
=== Succesors ===
next: v149 
=== Usages ===
v149 
=== Predecessor ===
a91 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v174 #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j136 
index: - 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j136 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v175 
value: j148 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
j148 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v175 value: j148 stateAfter: - lastLocationAccess: - #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j136 
index: - 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j136 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v176 
value: v166 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v176 value: v166 stateAfter: - lastLocationAccess: - #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j136 
index: - 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j136 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j47 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v178 
value: j47 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v178 value: j47 stateAfter: - lastLocationAccess: - #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j136 
index: - 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j136 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v161 v55 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v179 
value: i22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a97 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v179 value: i22 stateAfter: - lastLocationAccess: - #next: a97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a97 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a91 
=== Succesors ===
next: v98 
=== Usages ===
v40 ?27 v41 v171 v81 v82 i62 
=== Predecessor ===
v161 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a91 #next: v98  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
a97 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v29  <|@  <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@367e5de6
stamp: void
targetMethod: HotSpotMethod<StringBuffer.<init>()>
=== Inputs ===
arguments: a97 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a97  <|@  <|@
tid a24 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@7109ef8f
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/StringBuffer;
type: HotSpotType<Ljava/lang/StringBuffer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?103 ?104 ?102 ?27 ?33 ?13 ?100 ?101 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a24 
materializedValue: a97 
=== Succesors ===
=== Usages ===
?102 ?33 ?13 ?104 ?103 ?100 ?101 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a24 materializedValue: a97  <|@  <|@
tid ?100 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 124
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - a24 
virtualObjectMappings: ?27 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a24 virtualObjectMappings: ?27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
bci: 4
polymorphic: false
stamp: void
targetMethod: Direct#StringBuffer.<init>
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v40 
stateDuring: ?100 
=== Succesors ===
next: a32 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v40 stateDuring: ?100 #next: a32  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: "a"
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object[String:"a"]
=== Inputs ===
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a# Ljava/lang/StringBuffer;
signature: [Ljdk.vm.ci.meta.JavaType;@451a199e
stamp: void
targetMethod: HotSpotMethod<StringBuffer.append(String)>
=== Inputs ===
arguments: a97 a6 
=== Succesors ===
=== Usages ===
a32 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a97 a6  <|@  <|@
tid ?101 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 125
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a24 - 
virtualObjectMappings: ?27 
=== Succesors ===
=== Usages ===
a32 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a24 - virtualObjectMappings: ?27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a32 <|@
d <@d|@=== Debug Properties ===
bci: 11
polymorphic: false
stamp: a# Ljava/lang/StringBuffer;
targetMethod: Direct#StringBuffer.append
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v41 
stateDuring: ?101 
=== Succesors ===
next: j66 
=== Usages ===
?33 
=== Predecessor ===
v29 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v41 stateDuring: ?101 #next: j66  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a97 
index: - 
=== Succesors ===
=== Usages ===
j66 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a97 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j66 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v171 
=== Succesors ===
next: v52 
=== Usages ===
j48 j53 
=== Predecessor ===
a32 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v171 #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid j63 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 7
stableDimension: 0
stamp: i64 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j48 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j48 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$20/1390531833@507a6a90
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j66 
y: j63 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j66 y: j63  <|@  <|@
f <@~|@floating>@ <|@
tid j64 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j48 
y: j64 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j48 y: j64  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v49 
=== Succesors ===
trueSuccessor: v51 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
j66 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v49 #trueSuccessor: v51 #falseSuccessor: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v61  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j53 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j53 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$23/1842676882@76f3994d
stamp: i64 [0 - 72057594037927935] ⇈00ffffffffffffff
=== Inputs ===
x: j66 
y: i46 
=== Succesors ===
=== Usages ===
i54 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j66 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$24/506591160@4779c4e8
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$25/1535476088@775dad55
inputBits: 64
resultBits: 32
stamp: i32
=== Inputs ===
value: j53 
=== Succesors ===
=== Usages ===
v55 i70 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j53  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i54 
y: i22 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i54 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v55 
=== Succesors ===
trueSuccessor: v60 
falseSuccessor: v59 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v55 #trueSuccessor: v60 #falseSuccessor: v59  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v58 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v58  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
v60 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
v59 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v56  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
v50 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581393005893843005
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v56 v58 
=== Succesors ===
next: i62 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v56 v58 #next: i62  <|@  <|@
tid ?33 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 125
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a24 - a32 
virtualObjectMappings: ?27 
=== Succesors ===
=== Usages ===
i62 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a24 - a32 virtualObjectMappings: ?27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i62 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: identity_hashcode(Object)int
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@39e04090
stamp: i32
=== Inputs ===
stateAfter: - 
stateDuring: ?33 
arguments: a97 
=== Succesors ===
next: v72 
=== Usages ===
i70 
=== Predecessor ===
v57 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?33 arguments: a97 #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
i62 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i70 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v68 
values: i54 i62 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v68 values: i54 i62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v71 v72 
=== Succesors ===
next: a12 
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v71 v72 #next: a12  <|@  <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/lang/Integer;
signature: [Ljdk.vm.ci.meta.JavaType;@51f521cb
stamp: void
targetMethod: HotSpotMethod<BoxesRunTime.boxToInteger(int)>
=== Inputs ===
arguments: i70 
=== Succesors ===
=== Usages ===
a12 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i70  <|@  <|@
tid ?102 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a24 - 
virtualObjectMappings: ?27 
=== Succesors ===
=== Usages ===
a12 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a24 - virtualObjectMappings: ?27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a12 <|@
d <@d|@=== Debug Properties ===
bci: 19
polymorphic: false
stamp: a# Ljava/lang/Integer;
targetMethod: Direct#BoxesRunTime.boxToInteger
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v76 
stateDuring: ?102 
=== Succesors ===
next: v180 
=== Usages ===
v180 v80 
=== Predecessor ===
v68 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v76 stateDuring: ?102 #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid a170 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?13 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?13 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a24 - a170 
virtualObjectMappings: ?27 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a24 - a170 virtualObjectMappings: ?27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?13 
object: a12 
=== Succesors ===
next: a15 
=== Usages ===
=== Predecessor ===
a12 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?13 object: a12 #next: a15  <|@  <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a# Ljava/lang/String;
signature: [Ljdk.vm.ci.meta.JavaType;@1520c77e
stamp: void
targetMethod: HotSpotMethod<Integer.toString()>
=== Inputs ===
arguments: a12 
=== Succesors ===
=== Usages ===
a15 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a12  <|@  <|@
tid ?103 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a24 - 
virtualObjectMappings: ?27 
=== Succesors ===
=== Usages ===
a15 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a24 - virtualObjectMappings: ?27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a15 <|@
d <@d|@=== Debug Properties ===
bci: 22
polymorphic: false
stamp: a# Ljava/lang/String;
targetMethod: Direct#Integer.toString
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v80 
stateDuring: ?103 
=== Succesors ===
next: a35 
=== Usages ===
v81 
=== Predecessor ===
v180 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v80 stateDuring: ?103 #next: a35  <|@  <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a# Ljava/lang/StringBuffer;
signature: [Ljdk.vm.ci.meta.JavaType;@2beb37c2
stamp: void
targetMethod: HotSpotMethod<StringBuffer.append(String)>
=== Inputs ===
arguments: a97 a15 
=== Succesors ===
=== Usages ===
a35 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a97 a15  <|@  <|@
tid ?104 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a24 - 
virtualObjectMappings: ?27 
=== Succesors ===
=== Usages ===
a35 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a24 - virtualObjectMappings: ?27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a35 <|@
d <@d|@=== Debug Properties ===
bci: 28
polymorphic: false
stamp: a# Ljava/lang/StringBuffer;
targetMethod: Direct#StringBuffer.append
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v81 
stateDuring: ?104 
=== Succesors ===
next: a38 
=== Usages ===
=== Predecessor ===
a15 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v81 stateDuring: ?104 #next: a38  <|@  <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a# Ljava/lang/String;
signature: [Ljdk.vm.ci.meta.JavaType;@3e280dc8
stamp: void
targetMethod: HotSpotMethod<StringBuffer.toString()>
=== Inputs ===
arguments: a97 
=== Succesors ===
=== Usages ===
a38 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a97  <|@  <|@
tid ?105 <|@
d <@d|@=== Debug Properties ===
bci: 33
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 128
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
a38 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a38 <|@
d <@d|@=== Debug Properties ===
bci: 33
polymorphic: false
stamp: a# Ljava/lang/String;
targetMethod: Direct#StringBuffer.toString
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v82 
stateDuring: ?105 
=== Succesors ===
next: v21 
=== Usages ===
v21 
=== Predecessor ===
a35 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v82 stateDuring: ?105 #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a38 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a38 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a38 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j110 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j110  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j110 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j130 
=== Usages ===
v172 v173 
=== Predecessor ===
v0 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j130  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j110 
index: - 
=== Succesors ===
=== Usages ===
j130 v132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j110 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j130 <|@
result v0|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v172 
=== Succesors ===
next: j131 
=== Usages ===
j163 j136 v177 
=== Predecessor ===
j110 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v172 #next: j131  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j110 
index: - 
=== Succesors ===
=== Usages ===
j131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j110 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j131 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v173 
=== Succesors ===
next: v118 
=== Usages ===
v115 
=== Predecessor ===
j130 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v173 #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid j162 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j163 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j163 <|@
result v1|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$35/1285878199@45fa5b81
stamp: i64
=== Inputs ===
x: j130 
y: j162 
=== Succesors ===
=== Usages ===
v115 v132 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j130 y: j162  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@31ce5d1f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j131 
y: j163 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j131 y: j163  <|@  <|@
f <@*|@fixed>@ <|@
tid v118 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@364830b4 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v116 
falseSuccessor: v117 
=== Usages ===
=== Predecessor ===
j131 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v116 #falseSuccessor: v117  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6f88819d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = LEA [v0|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a123 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a123  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 124
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
a123 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a123 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i121 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a123 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i109 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a123 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a123 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@39e04090
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v107 i121 i109 
=== Succesors ===
next: j124 
=== Usages ===
j124 
=== Predecessor ===
v116 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v107 i121 i109 #next: j124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j124 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a123 
=== Succesors ===
next: v137 
=== Usages ===
j136 
=== Predecessor ===
a123 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a123 #next: v137  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
j124 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:124) [bci: 0]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x11573c620:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v172 
value: j163 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v172 value: j163 stateAfter: - lastLocationAccess: - #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid v177 <|@
result [v0|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j130 
index: - 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j130 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v177 
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v177 #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v128 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v1|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v0|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j136 <|@
result v4|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v134 
values: j130 j124 
=== Succesors ===
=== Usages ===
v176 v175 a91 v178 v179 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v134 values: j130 j124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v135 v137 
=== Succesors ===
next: a91 
=== Usages ===
j136 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v135 v137 #next: a91  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a91 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j136 
=== Succesors ===
next: j148 
=== Usages ===
a97 
=== Predecessor ===
v134 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j136 #next: j148  <|@  <|@
f <@~|@floating>@ <|@
tid v142 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j143 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j143 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v142 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v142  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
result [v6|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j143 
index: - 
=== Succesors ===
=== Usages ===
j148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j143 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j148 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v174 
=== Succesors ===
next: v149 
=== Usages ===
v149 
=== Predecessor ===
a91 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v174 #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
result [v4|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j136 
index: - 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j136 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v175 
value: j148 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
j148 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v175 value: j148 stateAfter: - lastLocationAccess: - #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid v176 <|@
result [v4|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j136 
index: - 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j136 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
result meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v176 
value: v166 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v176 value: v166 stateAfter: - lastLocationAccess: - #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
result [v4|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j136 
index: - 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j136 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j47 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v178 
value: j47 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v178 value: j47 stateAfter: - lastLocationAccess: - #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
result [v4|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j136 
index: - 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j136 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v161 v55 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v179 
value: i22 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a97 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v179 value: i22 stateAfter: - lastLocationAccess: - #next: a97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a97 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a91 
=== Succesors ===
next: v98 
=== Usages ===
v40 ?27 v41 v171 v81 v82 i62 
=== Predecessor ===
v161 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a91 #next: v98  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
a97 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v29  <|@  <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@367e5de6
stamp: void
targetMethod: HotSpotMethod<StringBuffer.<init>()>
=== Inputs ===
arguments: a97 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a97  <|@  <|@
tid a24 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@7109ef8f
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/StringBuffer;
type: HotSpotType<Ljava/lang/StringBuffer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?103 ?104 ?102 ?27 ?33 ?13 ?100 ?101 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a24 
materializedValue: a97 
=== Succesors ===
=== Usages ===
?102 ?33 ?13 ?104 ?103 ?100 ?101 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a24 materializedValue: a97  <|@  <|@
tid ?100 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 124
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - a24 
virtualObjectMappings: ?27 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a24 virtualObjectMappings: ?27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
bci: 4
polymorphic: false
stamp: void
targetMethod: Direct#StringBuffer.<init>
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v40 
stateDuring: ?100 
=== Succesors ===
next: a32 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v40 stateDuring: ?100 #next: a32  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: "a"
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object[String:"a"]
=== Inputs ===
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a# Ljava/lang/StringBuffer;
signature: [Ljdk.vm.ci.meta.JavaType;@451a199e
stamp: void
targetMethod: HotSpotMethod<StringBuffer.append(String)>
=== Inputs ===
arguments: a97 a6 
=== Succesors ===
=== Usages ===
a32 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a97 a6  <|@  <|@
tid ?101 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 125
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a24 - 
virtualObjectMappings: ?27 
=== Succesors ===
=== Usages ===
a32 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a24 - virtualObjectMappings: ?27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a32 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 11
polymorphic: false
stamp: a# Ljava/lang/StringBuffer;
targetMethod: Direct#StringBuffer.append
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v41 
stateDuring: ?101 
=== Succesors ===
next: j66 
=== Usages ===
?33 
=== Predecessor ===
v29 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v41 stateDuring: ?101 #next: j66  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
result [v5|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a97 
index: - 
=== Succesors ===
=== Usages ===
j66 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a97 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j66 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v171 
=== Succesors ===
next: v52 
=== Usages ===
j48 j53 
=== Predecessor ===
a32 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v171 #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid j63 <|@
result long[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 7
stableDimension: 0
stamp: i64 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j48 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j48 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$20/1390531833@507a6a90
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j66 
y: j63 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j66 y: j63  <|@  <|@
f <@~|@floating>@ <|@
tid j64 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j48 
y: j64 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j48 y: j64  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v49 
=== Succesors ===
trueSuccessor: v51 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
j66 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v49 #trueSuccessor: v51 #falseSuccessor: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE v4|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [v6|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[*]], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v4|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:124) [bci: 4]
stack: v5|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.<init>()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"a"] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:125) [bci: 11]
locals: - v5|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:11] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [v5|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = AND v10|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v61  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j53 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j53 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$23/1842676882@76f3994d
stamp: i64 [0 - 72057594037927935] ⇈00ffffffffffffff
=== Inputs ===
x: j66 
y: i46 
=== Succesors ===
=== Usages ===
i54 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j66 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$24/506591160@4779c4e8
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$25/1535476088@775dad55
inputBits: 64
resultBits: 32
stamp: i32
=== Inputs ===
value: j53 
=== Succesors ===
=== Usages ===
v55 i70 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j53  <|@  <|@
f <@~|@floating>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i54 
y: i22 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i54 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v55 
=== Succesors ===
trueSuccessor: v60 
falseSuccessor: v59 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v55 #trueSuccessor: v60 #falseSuccessor: v59  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = SHR v10|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV v12|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v58 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v58  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
v60 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
v59 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v56  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
v50 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581393005893843005
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v56 v58 
=== Succesors ===
next: i62 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v56 v58 #next: i62  <|@  <|@
tid ?33 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 125
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a24 - a32 
virtualObjectMappings: ?27 
=== Succesors ===
=== Usages ===
i62 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a24 - a32 virtualObjectMappings: ?27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i62 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: identity_hashcode(Object)int
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@39e04090
stamp: i32
=== Inputs ===
stateAfter: - 
stateDuring: ?33 
arguments: a97 
=== Succesors ===
next: v72 
=== Usages ===
i70 
=== Predecessor ===
v57 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?33 arguments: a97 #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
i62 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:125) [bci: 14]
stack: v9|QWORD[.] 
locals: - v5|QWORD[.] - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x11573c2a0:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:14] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i70 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v68 
values: i54 i62 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v68 values: i54 i62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v71 v72 
=== Succesors ===
next: a12 
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v71 v72 #next: a12  <|@  <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/lang/Integer;
signature: [Ljdk.vm.ci.meta.JavaType;@51f521cb
stamp: void
targetMethod: HotSpotMethod<BoxesRunTime.boxToInteger(int)>
=== Inputs ===
arguments: i70 
=== Succesors ===
=== Usages ===
a12 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i70  <|@  <|@
tid ?102 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a24 - 
virtualObjectMappings: ?27 
=== Succesors ===
=== Usages ===
a12 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a24 - virtualObjectMappings: ?27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a12 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 19
polymorphic: false
stamp: a# Ljava/lang/Integer;
targetMethod: Direct#BoxesRunTime.boxToInteger
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v76 
stateDuring: ?102 
=== Succesors ===
next: v180 
=== Usages ===
v180 v80 
=== Predecessor ===
v68 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v76 stateDuring: ?102 #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid a170 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?13 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?13 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a24 - a170 
virtualObjectMappings: ?27 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a24 - a170 virtualObjectMappings: ?27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?13 
object: a12 
=== Succesors ===
next: a15 
=== Usages ===
=== Predecessor ===
a12 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?13 object: a12 #next: a15  <|@  <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a# Ljava/lang/String;
signature: [Ljdk.vm.ci.meta.JavaType;@1520c77e
stamp: void
targetMethod: HotSpotMethod<Integer.toString()>
=== Inputs ===
arguments: a12 
=== Succesors ===
=== Usages ===
a15 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a12  <|@  <|@
tid ?103 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a24 - 
virtualObjectMappings: ?27 
=== Succesors ===
=== Usages ===
a15 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a24 - virtualObjectMappings: ?27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a15 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 22
polymorphic: false
stamp: a# Ljava/lang/String;
targetMethod: Direct#Integer.toString
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v80 
stateDuring: ?103 
=== Succesors ===
next: a35 
=== Usages ===
v81 
=== Predecessor ===
v180 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v80 stateDuring: ?103 #next: a35  <|@  <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a# Ljava/lang/StringBuffer;
signature: [Ljdk.vm.ci.meta.JavaType;@2beb37c2
stamp: void
targetMethod: HotSpotMethod<StringBuffer.append(String)>
=== Inputs ===
arguments: a97 a15 
=== Succesors ===
=== Usages ===
a35 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a97 a15  <|@  <|@
tid ?104 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a24 - 
virtualObjectMappings: ?27 
=== Succesors ===
=== Usages ===
a35 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a24 - virtualObjectMappings: ?27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a35 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 28
polymorphic: false
stamp: a# Ljava/lang/StringBuffer;
targetMethod: Direct#StringBuffer.append
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v81 
stateDuring: ?104 
=== Succesors ===
next: a38 
=== Usages ===
=== Predecessor ===
a15 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v81 stateDuring: ?104 #next: a38  <|@  <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a# Ljava/lang/String;
signature: [Ljdk.vm.ci.meta.JavaType;@3e280dc8
stamp: void
targetMethod: HotSpotMethod<StringBuffer.toString()>
=== Inputs ===
arguments: a97 
=== Succesors ===
=== Usages ===
a38 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a97  <|@  <|@
tid ?105 <|@
d <@d|@=== Debug Properties ===
bci: 33
code: ResolvedJavaMethodBytecode<StringOp.append()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 128
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
a38 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a38 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 33
polymorphic: false
stamp: a# Ljava/lang/String;
targetMethod: Direct#StringBuffer.toString
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v82 
stateDuring: ?105 
=== Succesors ===
next: v21 
=== Usages ===
v21 
=== Predecessor ===
a35 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v82 stateDuring: ?105 #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a38 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a38 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a38 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:126) [bci: 19]
locals: - v5|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD] [] callTarget: HotSpotMethod<BoxesRunTime.boxToInteger(int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:19] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:126) [bci: 22]
stack: Object[null] 
locals: - v5|QWORD[.] - 
>@ <|@ instruction NULLCHECK [v16|QWORD[.]] state [bci:22] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:126) [bci: 22]
locals: - v5|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Integer.toString()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:22] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:127) [bci: 28]
locals: - v5|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:28] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:128) [bci: 33]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.toString()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:33] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6f88819d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = LEA [v0|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v1|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v0|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v0|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v4|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE v4|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [v6|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[*]], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v4|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:124) [bci: 4]
stack: v5|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.<init>()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"a"] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:125) [bci: 11]
locals: - v5|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:11] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV [v5|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = AND v10|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = SHR v10|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV v12|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:126) [bci: 19]
locals: - v5|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD] [] callTarget: HotSpotMethod<BoxesRunTime.boxToInteger(int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:19] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:126) [bci: 22]
stack: Object[null] 
locals: - v5|QWORD[.] - 
>@ <|@ instruction NULLCHECK [v16|QWORD[.]] state [bci:22] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:126) [bci: 22]
locals: - v5|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Integer.toString()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:22] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:127) [bci: 28]
locals: - v5|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:28] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:128) [bci: 33]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.toString()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:33] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:124) [bci: 0]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x11573c620:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581393005893843005
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.StringOp.append(Bench.scala:125) [bci: 14]
stack: v9|QWORD[.] 
locals: - v5|QWORD[.] - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x11573c2a0:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:14] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|DWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #17         // java.lang.StringBuffer
     3: dup           
     4: invokespecial #0          // java.lang.StringBuffer.<init>:()void
     7: astore_1      
     8: aload_1       
     9: ldc           #23         // "a"
    11: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    14: pop           
    15: aload_1       
    16: invokevirtual #2          // java.lang.Object.hashCode:()int
    19: invokestatic  #3          // scala.runtime.BoxesRunTime.boxToInteger:(int)java.lang.Integer
    22: invokevirtual #4          // java.lang.Object.toString:()java.lang.String
    25: astore_2      
    26: aload_1       
    27: aload_2       
    28: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    31: pop           
    32: aload_1       
    33: invokevirtual #5          // java.lang.StringBuffer.toString:()java.lang.String
    36: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6f88819d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction stack:32|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>} <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r11|QWORD) size: QWORD <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed} <|@ <|@
      nr   52  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   54  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:124) [bci: 4]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.<init>()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:4] <|@ <|@
      nr   60  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"a"] <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:125) [bci: 11]
locals: - stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:11] <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD = MOV [r10|QWORD[.]] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD = AND rsi|QWORD y: 7 size: QWORD <|@ <|@
      nr   74  <|@ instruction CMP r11|QWORD y: 1 size: QWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = SHR rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr   82  <|@ instruction rsi|DWORD = MOV rsi|QWORD size: DWORD <|@ <|@
      nr   84  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:126) [bci: 19]
locals: - stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD] [] callTarget: HotSpotMethod<BoxesRunTime.boxToInteger(int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:19] <|@ <|@
      nr  114  <|@ st <@st|@reference-map: [rax:0, stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:126) [bci: 22]
stack: Object[null] 
locals: - stack:32|QWORD[.] - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:22] <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:126) [bci: 22]
locals: - stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Integer.toString()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:22] <|@ <|@
      nr  120  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:127) [bci: 28]
locals: - stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:28] <|@ <|@
      nr  126  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ st <@st|@reference-map: []
live-base-pointers: []
bench.StringOp.append(Bench.scala:128) [bci: 33]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.toString()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:33] <|@ <|@
      nr  130  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   18  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   22  <|@ st <@st|@reference-map: []
live-base-pointers: []
bench.StringOp.append(Bench.scala:124) [bci: 0]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x11573c620:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581393005893843005
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ st <@st|@reference-map: [rbx:0, stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:125) [bci: 14]
stack: rbx|QWORD[.] 
locals: - stack:32|QWORD[.] - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x11573c2a0:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:14] <|@ <|@
      nr  106  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #17         // java.lang.StringBuffer
     3: dup           
     4: invokespecial #0          // java.lang.StringBuffer.<init>:()void
     7: astore_1      
     8: aload_1       
     9: ldc           #23         // "a"
    11: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    14: pop           
    15: aload_1       
    16: invokevirtual #2          // java.lang.Object.hashCode:()int
    19: invokestatic  #3          // scala.runtime.BoxesRunTime.boxToInteger:(int)java.lang.Integer
    22: invokevirtual #4          // java.lang.Object.toString:()java.lang.String
    25: astore_2      
    26: aload_1       
    27: aload_2       
    28: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    31: pop           
    32: aload_1       
    33: invokevirtual #5          // java.lang.StringBuffer.toString:()java.lang.String
    36: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6f88819d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   10  <|@ instruction CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction stack:32|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>} <|@ <|@
      nr   46  <|@ instruction r11|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r11|QWORD) size: QWORD <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed} <|@ <|@
      nr   52  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   54  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:124) [bci: 4]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.<init>()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:4] <|@ <|@
      nr   60  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"a"] <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:125) [bci: 11]
locals: - stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:11] <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD = MOV [r10|QWORD[.]] size: QWORD <|@ <|@
      nr   72  <|@ instruction r11|QWORD = AND rsi|QWORD y: 7 size: QWORD <|@ <|@
      nr   74  <|@ instruction CMP r11|QWORD y: 1 size: QWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD = SHR rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr   82  <|@ instruction rsi|DWORD = MOV rsi|QWORD size: DWORD <|@ <|@
      nr   84  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B4 -> B8 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" "B8" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:126) [bci: 19]
locals: - stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD] [] callTarget: HotSpotMethod<BoxesRunTime.boxToInteger(int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:19] <|@ <|@
      nr  114  <|@ st <@st|@reference-map: [rax:0, stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:126) [bci: 22]
stack: Object[null] 
locals: - stack:32|QWORD[.] - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:22] <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:126) [bci: 22]
locals: - stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Integer.toString()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:22] <|@ <|@
      nr  120  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:127) [bci: 28]
locals: - stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:28] <|@ <|@
      nr  126  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ st <@st|@reference-map: []
live-base-pointers: []
bench.StringOp.append(Bench.scala:128) [bci: 33]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.toString()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:33] <|@ <|@
      nr  130  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   18  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   20  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   22  <|@ st <@st|@reference-map: []
live-base-pointers: []
bench.StringOp.append(Bench.scala:124) [bci: 0]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x11573c620:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4581393005893843005
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ st <@st|@reference-map: [rbx:0, stack:0]
live-base-pointers: []
bench.StringOp.append(Bench.scala:125) [bci: 14]
stack: rbx|QWORD[.] 
locals: - stack:32|QWORD[.] - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x11573c2a0:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:14] <|@ <|@
      nr  106  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #17         // java.lang.StringBuffer
     3: dup           
     4: invokespecial #0          // java.lang.StringBuffer.<init>:()void
     7: astore_1      
     8: aload_1       
     9: ldc           #23         // "a"
    11: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    14: pop           
    15: aload_1       
    16: invokevirtual #2          // java.lang.Object.hashCode:()int
    19: invokestatic  #3          // scala.runtime.BoxesRunTime.boxToInteger:(int)java.lang.Integer
    22: invokevirtual #4          // java.lang.Object.toString:()java.lang.String
    25: astore_2      
    26: aload_1       
    27: aload_2       
    28: invokevirtual #1          // java.lang.StringBuffer.append:(java.lang.String)java.lang.StringBuffer
    31: pop           
    32: aload_1       
    33: invokevirtual #5          // java.lang.StringBuffer.toString:()java.lang.String
    36: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410498b77604c8d56184d3b57700f87ce0000004d8957600f1886d80000004c8bd64c89142449bbaddeaddeaddeadde4d8b9ba80000004c891ec74608addeadde4c89660c44896614498bf20f1f440000e8000000009048baaddeaddeaddeadde488b34240f1f4000e80000000090488bd84c8b1424498b324c8bde4983e3074983fb010f857a00000048c1ee088bf685f60f846c00000090e800000000908500488bf00f1f440000e80000000090488b3424488bd0666690e80000000090488b3424660f1f440000e80000000090488b6c24104883c418850500000000c5f877c348beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0e91bffffff488b3424e800000000908bf0eb86e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10c6a1f78, value=0x11564ce60]:0x11564ce60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6f88819d slotKind: QWORD  <||@
  Comment 48 6 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 52 8 r10|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 56 10 CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 60 12 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 66 block B2 null  <||@
  Comment 66 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 66 30 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 70 32 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 77 34 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 77 36 JUMP ~[] destination: B2 -> B3  <||@
  Comment 77 block B3 null  <||@
  Comment 77 38 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 77 40 r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 80 42 stack:32|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 84 44 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}  <||@
  Comment 84 {meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}}  <||@
  Comment 94 46 r11|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 101 48 MOV (x: [rsi|QWORD[*]], y: r11|QWORD) size: QWORD  <||@
  Comment 104 50 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed}  <||@
  Comment 104 {meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed}}  <||@
  Comment 111 52 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 115 54 MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 119 56 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 122 58 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.<init>()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:4]  <||@
  Comment 122 9  <||@
  Comment 127 {HotSpotMethod<StringBuffer.<init>()>}  <||@
  Comment 132 [stack:0]at bench.StringOp.append(Bench.scala:124) [bci: 4, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |    <||@
  Comment 133 60 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"a"]  <||@
  Comment 133 {Object[String:"a"]}  <||@
  Comment 143 62 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 147 64 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:11]  <||@
  Comment 147 9  <||@
  Comment 151 {HotSpotMethod<StringBuffer.append(String)>}  <||@
  Comment 156 [stack:0]at bench.StringOp.append(Bench.scala:125) [bci: 11, duringCall: true, rethrow: false]
              |0  |1                  |2 
     locals:  |-  |stack:32|QWORD[.]  |-   <||@
  Comment 157 66 rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 160 68 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 164 70 rsi|QWORD = MOV [r10|QWORD[.]] size: QWORD  <||@
  Comment 167 72 r11|QWORD = AND rsi|QWORD y: 7 size: QWORD  <||@
  Comment 174 74 CMP r11|QWORD y: 1 size: QWORD  <||@
  Comment 178 76 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8  <||@
  Comment 184 block B4 null  <||@
  Comment 184 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 184 80 rsi|QWORD = SHR rsi|QWORD y: 8 size: QWORD  <||@
  Comment 188 82 rsi|DWORD = MOV rsi|QWORD size: DWORD  <||@
  Comment 190 84 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 192 86 BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B4 -> B8 falseDestination: B4 -> B9  <||@
  Comment 198 block B9 null  <||@
  Comment 198 110 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 198 112 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD] [] callTarget: HotSpotMethod<BoxesRunTime.boxToInteger(int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:19]  <||@
  Comment 198 8  <||@
  Comment 199 {HotSpotMethod<BoxesRunTime.boxToInteger(int)>}  <||@
  Comment 204 [stack:0]at bench.StringOp.append(Bench.scala:126) [bci: 19, duringCall: true, rethrow: false]
              |0  |1                  |2 
     locals:  |-  |stack:32|QWORD[.]  |-   <||@
  Comment 205 114 NULLCHECK [rax|QWORD[.]] state [bci:22]  <||@
  Comment 205 [rax:0, stack:0]at bench.StringOp.append(Bench.scala:126) [bci: 22, duringCall: false, rethrow: false]
              |0             |1                  |2 
     locals:  |-             |stack:32|QWORD[.]  |- 
     stack:   |Object[null]  |                   |    <||@
  Comment 205 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 207 116 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 210 118 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Integer.toString()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:22]  <||@
  Comment 210 9  <||@
  Comment 215 {HotSpotMethod<Integer.toString()>}  <||@
  Comment 220 [stack:0]at bench.StringOp.append(Bench.scala:126) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2 
     locals:  |-  |stack:32|QWORD[.]  |-   <||@
  Comment 221 120 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 225 122 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 228 124 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:28]  <||@
  Comment 228 9  <||@
  Comment 231 {HotSpotMethod<StringBuffer.append(String)>}  <||@
  Comment 236 [stack:0]at bench.StringOp.append(Bench.scala:127) [bci: 28, duringCall: true, rethrow: false]
              |0  |1                  |2 
     locals:  |-  |stack:32|QWORD[.]  |-   <||@
  Comment 237 126 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 241 128 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.toString()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:33]  <||@
  Comment 241 9  <||@
  Comment 247 {HotSpotMethod<StringBuffer.toString()>}  <||@
  Comment 252 []at bench.StringOp.append(Bench.scala:128) [bci: 33, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 253 130 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d  <||@
  Comment 262 12  <||@
  Comment 272 block B1 null  <||@
  Comment 272 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 272 16 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 272 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 282 18 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 287 20 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 292 22 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x11573c620:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 292 {Stub<NewArrayStub.newArray>@0x11573c620:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 297 []at bench.StringOp.append(Bench.scala:124) [bci: 0, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 298 24 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 301 26 JUMP ~[] destination: B1 -> B3  <||@
  Comment 306 block B8 null  <||@
  Comment 306 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 306 102 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 310 104 rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x11573c2a0:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:14]  <||@
  Comment 310 {Stub<identity_hashcode(Object)int>@0x11573c2a0:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 315 [rbx:0, stack:0]at bench.StringOp.append(Bench.scala:125) [bci: 14, duringCall: false, rethrow: false]
              |0             |1                  |2 
     locals:  |-             |stack:32|QWORD[.]  |- 
     stack:   |rbx|QWORD[.]  |                   |    <||@
  Comment 316 106 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 318 108 JUMP ~[] destination: B8 -> B9  <||@
  Comment 320 {Stub<ExceptionHandlerStub.exceptionHandler>@0x11573c1a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 320 4  <||@
  Comment 326 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10c6a1f88, value=0x11564e500]:0x11564e500}  <||@
  Comment 326 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-47[bench.StringOp.append()]"
  method "HotSpotCompilation-47[bench.StringOp.append()]"
  date 1527289020262
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 11573d380 448b560849c1e203493bc20f85cffaf0ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410498b77604c8d56184d3b57700f87ce0000004d8957600f1886d80000004c8bd64c89142449bb08d600c0070000004d8b9ba80000004c891ec74608c11a00f84c89660c44896614498bf20f1f440000e8dc0000009048baf88500c006000000488b34240f1f4000e8d300000090488bd84c8b1424498b324c8bde4983e3074983fb010f857a00000048c1ee088bf685f60f846c00000090e8b2000000908500488bf00f1f440000e8b100000090488b3424488bd0666690e8b000000090488b3424660f1f440000e8af00000090488b6c24104883c41885057a9bd5f5c5f877c348be680b00c007000000ba02000000b901000000e877f1ffff90488bf0e91bffffff488b3424e8e5edffff908bf0eb86e8dbecffff90e83510f1ff90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bbe02b410e01000000e9640af1ff48bb6836410e01000000e95906f1ff48bbf0b0880e01000000e90588f1ff48bb5089440e01000000e9370af1ff48bb6836410e01000000e92c06f1ff48bb384d410e01000000e9190af1fff4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10c6a1f78, value=0x11564ce60]:0x11564ce60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6f88819d slotKind: QWORD  <||@
  Comment 48 6 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 52 8 r10|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 56 10 CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 60 12 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 66 block B2 null  <||@
  Comment 66 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 66 30 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 70 32 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 77 34 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 77 36 JUMP ~[] destination: B2 -> B3  <||@
  Comment 77 block B3 null  <||@
  Comment 77 38 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 77 40 r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 80 42 stack:32|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 84 44 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}  <||@
  Comment 84 {meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}}  <||@
  Comment 94 46 r11|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 101 48 MOV (x: [rsi|QWORD[*]], y: r11|QWORD) size: QWORD  <||@
  Comment 104 50 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed}  <||@
  Comment 104 {meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>;compressed}}  <||@
  Comment 111 52 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 115 54 MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 119 56 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 122 58 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.<init>()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:4]  <||@
  Comment 122 9  <||@
  Comment 127 {HotSpotMethod<StringBuffer.<init>()>}  <||@
  Comment 132 [stack:0]at bench.StringOp.append(Bench.scala:124) [bci: 4, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |    <||@
  Comment 133 60 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[String:"a"]  <||@
  Comment 133 {Object[String:"a"]}  <||@
  Comment 143 62 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 147 64 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:11]  <||@
  Comment 147 9  <||@
  Comment 151 {HotSpotMethod<StringBuffer.append(String)>}  <||@
  Comment 156 [stack:0]at bench.StringOp.append(Bench.scala:125) [bci: 11, duringCall: true, rethrow: false]
              |0  |1                  |2 
     locals:  |-  |stack:32|QWORD[.]  |-   <||@
  Comment 157 66 rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 160 68 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 164 70 rsi|QWORD = MOV [r10|QWORD[.]] size: QWORD  <||@
  Comment 167 72 r11|QWORD = AND rsi|QWORD y: 7 size: QWORD  <||@
  Comment 174 74 CMP r11|QWORD y: 1 size: QWORD  <||@
  Comment 178 76 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8  <||@
  Comment 184 block B4 null  <||@
  Comment 184 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 184 80 rsi|QWORD = SHR rsi|QWORD y: 8 size: QWORD  <||@
  Comment 188 82 rsi|DWORD = MOV rsi|QWORD size: DWORD  <||@
  Comment 190 84 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 192 86 BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B4 -> B8 falseDestination: B4 -> B9  <||@
  Comment 198 block B9 null  <||@
  Comment 198 110 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 198 112 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD] [] callTarget: HotSpotMethod<BoxesRunTime.boxToInteger(int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:19]  <||@
  Comment 198 8  <||@
  Comment 199 {HotSpotMethod<BoxesRunTime.boxToInteger(int)>}  <||@
  Comment 204 [stack:0]at bench.StringOp.append(Bench.scala:126) [bci: 19, duringCall: true, rethrow: false]
              |0  |1                  |2 
     locals:  |-  |stack:32|QWORD[.]  |-   <||@
  Comment 205 114 NULLCHECK [rax|QWORD[.]] state [bci:22]  <||@
  Comment 205 [rax:0, stack:0]at bench.StringOp.append(Bench.scala:126) [bci: 22, duringCall: false, rethrow: false]
              |0             |1                  |2 
     locals:  |-             |stack:32|QWORD[.]  |- 
     stack:   |Object[null]  |                   |    <||@
  Comment 205 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 207 116 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 210 118 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Integer.toString()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:22]  <||@
  Comment 210 9  <||@
  Comment 215 {HotSpotMethod<Integer.toString()>}  <||@
  Comment 220 [stack:0]at bench.StringOp.append(Bench.scala:126) [bci: 22, duringCall: true, rethrow: false]
              |0  |1                  |2 
     locals:  |-  |stack:32|QWORD[.]  |-   <||@
  Comment 221 120 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 225 122 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 228 124 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.append(String)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:28]  <||@
  Comment 228 9  <||@
  Comment 231 {HotSpotMethod<StringBuffer.append(String)>}  <||@
  Comment 236 [stack:0]at bench.StringOp.append(Bench.scala:127) [bci: 28, duringCall: true, rethrow: false]
              |0  |1                  |2 
     locals:  |-  |stack:32|QWORD[.]  |-   <||@
  Comment 237 126 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 241 128 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<StringBuffer.toString()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d state [bci:33]  <||@
  Comment 241 9  <||@
  Comment 247 {HotSpotMethod<StringBuffer.toString()>}  <||@
  Comment 252 []at bench.StringOp.append(Bench.scala:128) [bci: 33, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 253 130 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@2b7f638d  <||@
  Comment 262 12  <||@
  Comment 272 block B1 null  <||@
  Comment 272 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 272 16 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 272 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 282 18 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 287 20 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 292 22 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x11573c620:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 292 {Stub<NewArrayStub.newArray>@0x11573c620:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 297 []at bench.StringOp.append(Bench.scala:124) [bci: 0, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 298 24 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 301 26 JUMP ~[] destination: B1 -> B3  <||@
  Comment 306 block B8 null  <||@
  Comment 306 100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 306 102 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 310 104 rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x11573c2a0:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:14]  <||@
  Comment 310 {Stub<identity_hashcode(Object)int>@0x11573c2a0:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 315 [rbx:0, stack:0]at bench.StringOp.append(Bench.scala:125) [bci: 14, duringCall: false, rethrow: false]
              |0             |1                  |2 
     locals:  |-             |stack:32|QWORD[.]  |- 
     stack:   |rbx|QWORD[.]  |                   |    <||@
  Comment 316 106 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 318 108 JUMP ~[] destination: B8 -> B9  <||@
  Comment 320 {Stub<ExceptionHandlerStub.exceptionHandler>@0x11573c1a0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 320 4  <||@
  Comment 326 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10c6a1f88, value=0x11564e500]:0x11564e500}  <||@
  Comment 326 5  <||@
  HexCodeFile>>> <|@
end_nmethod
