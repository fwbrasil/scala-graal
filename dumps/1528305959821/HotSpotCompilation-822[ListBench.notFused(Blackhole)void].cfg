begin_compilation
  name " HotSpotCompilation-822[bench.ListBench.notFused(Blackhole)]"
  method "HotSpotCompilation-822[bench.ListBench.notFused(Blackhole)]"
  date 1528305959865
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a224 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a224  <|@  <|@
f <@~|@floating>@ <|@
tid a167 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:scala.collection.immutable.List$
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:scala.collection.immutable.List$]
=== Inputs ===
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a167 
index: - 
=== Succesors ===
=== Usages ===
a224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a167 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a224 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: List$.MODULE$
nullCheck: false
stamp: n# Lscala/collection/immutable/List$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v228 
=== Succesors ===
next: v231 
=== Usages ===
v231 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v228 #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Lbench/ListBench;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v227 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Lorg/openjdk/jmh/infra/Blackhole;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v181 v234 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ListBench.notFused(Blackhole)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 56
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v215 v231 v232 v233 v234 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a224 
=== Succesors ===
next: a225 
=== Usages ===
=== Predecessor ===
a224 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a224 #next: a225  <|@  <|@
f <@~|@floating>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a225 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a225 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ListBench.list
nullCheck: false
stamp: n Lscala/collection/immutable/List;
=== Inputs ===
stateBefore: - 
guard: - 
address: v227 
=== Succesors ===
next: v232 
=== Usages ===
v230 v232 
=== Predecessor ===
v231 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v227 #next: v232  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a225 
=== Succesors ===
next: a226 
=== Usages ===
=== Predecessor ===
a225 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a225 #next: a226  <|@  <|@
f <@~|@floating>@ <|@
tid a174 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:scala.collection.immutable.Nil$
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:scala.collection.immutable.Nil$]
=== Inputs ===
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a174 
index: - 
=== Succesors ===
=== Usages ===
a226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a174 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a226 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Nil$.MODULE$
nullCheck: false
stamp: n# Lscala/collection/immutable/Nil$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v229 
=== Succesors ===
next: v199 
=== Usages ===
a177 v233 v230 
=== Predecessor ===
v232 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v229 #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a225 
y: a226 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a225 y: a226  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v196 
falseSuccessor: v198 
=== Usages ===
=== Predecessor ===
a226 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v196 #falseSuccessor: v198  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.map(List.scala:282) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v233  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a226 
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a226 #next: v234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid a177 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a# Lscala/collection/immutable/Nil$;
=== Inputs ===
value: a226 
=== Succesors ===
=== Usages ===
v92 v181 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a226  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a177 
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Blackhole|@org.graalvm.compiler.nodes.debug.BlackholeNode>@ value: a177 #next: v94  <|@  <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@6139cc09
stamp: void
targetMethod: HotSpotMethod<Blackhole.consume(Object)>
=== Inputs ===
arguments: a2 a177 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a177  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 87
code: ResolvedJavaMethodBytecode<ListBench.notFused(Blackhole)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 56
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
bci: 87
polymorphic: false
stamp: void
targetMethod: Direct#Blackhole.consume
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v181 
stateDuring: ?208 
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v181 stateDuring: ?208 #next: v96  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v215  <|@  <|@
f <@~|@floating>@ <|@
tid a212 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i221 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -45587
stableDimension: 0
stamp: i32 [-45587] ⇊00000000ffff4ded ⇈00000000ffff4ded
stampKind: i32
value: int[-45587|0xffffffffffff4ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i221 
speculation: a212 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i221 speculation: a212  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a224 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a224  <|@  <|@
f <@~|@floating>@ <|@
tid a167 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:scala.collection.immutable.List$
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:scala.collection.immutable.List$]
=== Inputs ===
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v228 <|@
result [v2|QWORD[.] + 104] <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a167 
index: - 
=== Succesors ===
=== Usages ===
a224 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a167 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a224 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: List$.MODULE$
nullCheck: false
stamp: n# Lscala/collection/immutable/List$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v228 
=== Succesors ===
next: v231 
=== Usages ===
v231 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v228 #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Lbench/ListBench;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v227 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Lorg/openjdk/jmh/infra/Blackhole;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v181 v234 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ListBench.notFused(Blackhole)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 56
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v215 v231 v232 v233 v234 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a224 
=== Succesors ===
next: a225 
=== Usages ===
=== Predecessor ===
a224 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a224 #next: a225  <|@  <|@
f <@~|@floating>@ <|@
tid v227 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a225 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a225 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ListBench.list
nullCheck: false
stamp: n Lscala/collection/immutable/List;
=== Inputs ===
stateBefore: - 
guard: - 
address: v227 
=== Succesors ===
next: v232 
=== Usages ===
v230 v232 
=== Predecessor ===
v231 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v227 #next: v232  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a225 
=== Succesors ===
next: a226 
=== Usages ===
=== Predecessor ===
a225 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a225 #next: a226  <|@  <|@
f <@~|@floating>@ <|@
tid a174 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Class:scala.collection.immutable.Nil$
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:scala.collection.immutable.Nil$]
=== Inputs ===
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v229 <|@
result [v5|QWORD[.] + 104] <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a174 
index: - 
=== Succesors ===
=== Usages ===
a226 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a174 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a226 <|@
result v6|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Nil$.MODULE$
nullCheck: false
stamp: n# Lscala/collection/immutable/Nil$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v229 
=== Succesors ===
next: v199 
=== Usages ===
a177 v233 v230 
=== Predecessor ===
v232 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v229 #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a225 
y: a226 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a225 y: a226  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v196 
falseSuccessor: v198 
=== Usages ===
=== Predecessor ===
a226 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v196 #falseSuccessor: v198  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6c5a325f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.collection.immutable.List$] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v2|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:56) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:56) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v4|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.collection.immutable.Nil$] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v5|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD[.], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at scala.collection.immutable.List.map(List.scala:282) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v233  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a226 
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a226 #next: v234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid a177 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Uncompress
stamp: a# Lscala/collection/immutable/Nil$;
=== Inputs ===
value: a226 
=== Succesors ===
=== Usages ===
v92 v181 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a226  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a177 
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Blackhole|@org.graalvm.compiler.nodes.debug.BlackholeNode>@ value: a177 #next: v94  <|@  <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@6139cc09
stamp: void
targetMethod: HotSpotMethod<Blackhole.consume(Object)>
=== Inputs ===
arguments: a2 a177 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a177  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 87
code: ResolvedJavaMethodBytecode<ListBench.notFused(Blackhole)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 56
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
bci: 87
polymorphic: false
stamp: void
targetMethod: Direct#Blackhole.consume
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v181 
stateDuring: ?208 
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v181 stateDuring: ?208 #next: v96  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:56) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v6|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:56) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@13eb5d68 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE v7|QWORD[.] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:56) [bci: 87]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Blackhole.consume(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@725df08e state [bci:87] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@725df08e <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v215  <|@  <|@
f <@~|@floating>@ <|@
tid a212 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i221 <|@
result int[-45587|0xffffffffffff4ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -45587
stableDimension: 0
stamp: i32 [-45587] ⇊00000000ffff4ded ⇈00000000ffff4ded
stampKind: i32
value: int[-45587|0xffffffffffff4ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i221 
speculation: a212 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i221 speculation: a212  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -45587 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:56) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6c5a325f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.collection.immutable.List$] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v2|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:56) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:56) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v4|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.collection.immutable.Nil$] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v5|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD[.], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:56) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v6|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:56) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@13eb5d68 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction BLACKHOLE v7|QWORD[.] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:56) [bci: 87]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Blackhole.consume(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@725df08e state [bci:87] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@725df08e <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -45587 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:56) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_0       
     2: invokevirtual #2          // list:()scala.collection.immutable.List
     5: invokedynamic #-25        // java.lang.invoke.LambdaForm$MH.2074407503.linkToTargetMethod:(java.lang.Object)java.lang.Object
    10: getstatic     #5          // scala.collection.immutable.List$.MODULE$:scala.collection.immutable.List$
    13: invokevirtual #6          // scala.collection.immutable.List$.canBuildFrom:()scala.collection.generic.CanBuildFrom
    16: invokevirtual #7          // scala.collection.immutable.List.map:(scala.Function1, scala.collection.generic.CanBuildFrom)java.lang.Object
    19: checkcast     #80         // scala.collection.immutable.List
    22: invokedynamic #-26        // java.lang.invoke.LambdaForm$MH.2074407503.linkToTargetMethod:(java.lang.Object)java.lang.Object
    27: getstatic     #5          // scala.collection.immutable.List$.MODULE$:scala.collection.immutable.List$
    30: invokevirtual #6          // scala.collection.immutable.List$.canBuildFrom:()scala.collection.generic.CanBuildFrom
    33: invokevirtual #7          // scala.collection.immutable.List.map:(scala.Function1, scala.collection.generic.CanBuildFrom)java.lang.Object
    36: checkcast     #80         // scala.collection.immutable.List
    39: invokedynamic #-27        // java.lang.invoke.LambdaForm$MH.2074407503.linkToTargetMethod:(java.lang.Object)java.lang.Object
    44: getstatic     #5          // scala.collection.immutable.List$.MODULE$:scala.collection.immutable.List$
    47: invokevirtual #6          // scala.collection.immutable.List$.canBuildFrom:()scala.collection.generic.CanBuildFrom
    50: invokevirtual #7          // scala.collection.immutable.List.map:(scala.Function1, scala.collection.generic.CanBuildFrom)java.lang.Object
    53: checkcast     #80         // scala.collection.immutable.List
    56: invokedynamic #-28        // java.lang.invoke.LambdaForm$MH.2074407503.linkToTargetMethod:(java.lang.Object)java.lang.Object
    61: getstatic     #5          // scala.collection.immutable.List$.MODULE$:scala.collection.immutable.List$
    64: invokevirtual #6          // scala.collection.immutable.List$.canBuildFrom:()scala.collection.generic.CanBuildFrom
    67: invokevirtual #7          // scala.collection.immutable.List.map:(scala.Function1, scala.collection.generic.CanBuildFrom)java.lang.Object
    70: checkcast     #80         // scala.collection.immutable.List
    73: invokedynamic #-29        // java.lang.invoke.LambdaForm$MH.2074407503.linkToTargetMethod:(java.lang.Object)java.lang.Object
    78: getstatic     #5          // scala.collection.immutable.List$.MODULE$:scala.collection.immutable.List$
    81: invokevirtual #6          // scala.collection.immutable.List$.canBuildFrom:()scala.collection.generic.CanBuildFrom
    84: invokevirtual #7          // scala.collection.immutable.List.map:(scala.Function1, scala.collection.generic.CanBuildFrom)java.lang.Object
    87: invokevirtual #12         // org.openjdk.jmh.infra.Blackhole.consume:(java.lang.Object)void
    90: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6c5a325f slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.collection.immutable.List$] <|@ <|@
      nr   12  <|@ instruction r10|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:56) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   16  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:56) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   20  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.collection.immutable.Nil$] <|@ <|@
      nr   22  <|@ instruction r11|DWORD[.] = MOV [r11|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   24  <|@ instruction CMP (x: r11|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:56) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:56) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   34  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@13eb5d68 encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction BLACKHOLE r11|QWORD[.] <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: []
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:56) [bci: 87]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Blackhole.consume(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@725df08e state [bci:87] <|@ <|@
      nr   44  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@725df08e <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction MOV [r15|QWORD + 668] y: -45587 size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:56) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_0       
     2: invokevirtual #2          // list:()scala.collection.immutable.List
     5: invokedynamic #-25        // java.lang.invoke.LambdaForm$MH.2074407503.linkToTargetMethod:(java.lang.Object)java.lang.Object
    10: getstatic     #5          // scala.collection.immutable.List$.MODULE$:scala.collection.immutable.List$
    13: invokevirtual #6          // scala.collection.immutable.List$.canBuildFrom:()scala.collection.generic.CanBuildFrom
    16: invokevirtual #7          // scala.collection.immutable.List.map:(scala.Function1, scala.collection.generic.CanBuildFrom)java.lang.Object
    19: checkcast     #80         // scala.collection.immutable.List
    22: invokedynamic #-26        // java.lang.invoke.LambdaForm$MH.2074407503.linkToTargetMethod:(java.lang.Object)java.lang.Object
    27: getstatic     #5          // scala.collection.immutable.List$.MODULE$:scala.collection.immutable.List$
    30: invokevirtual #6          // scala.collection.immutable.List$.canBuildFrom:()scala.collection.generic.CanBuildFrom
    33: invokevirtual #7          // scala.collection.immutable.List.map:(scala.Function1, scala.collection.generic.CanBuildFrom)java.lang.Object
    36: checkcast     #80         // scala.collection.immutable.List
    39: invokedynamic #-27        // java.lang.invoke.LambdaForm$MH.2074407503.linkToTargetMethod:(java.lang.Object)java.lang.Object
    44: getstatic     #5          // scala.collection.immutable.List$.MODULE$:scala.collection.immutable.List$
    47: invokevirtual #6          // scala.collection.immutable.List$.canBuildFrom:()scala.collection.generic.CanBuildFrom
    50: invokevirtual #7          // scala.collection.immutable.List.map:(scala.Function1, scala.collection.generic.CanBuildFrom)java.lang.Object
    53: checkcast     #80         // scala.collection.immutable.List
    56: invokedynamic #-28        // java.lang.invoke.LambdaForm$MH.2074407503.linkToTargetMethod:(java.lang.Object)java.lang.Object
    61: getstatic     #5          // scala.collection.immutable.List$.MODULE$:scala.collection.immutable.List$
    64: invokevirtual #6          // scala.collection.immutable.List$.canBuildFrom:()scala.collection.generic.CanBuildFrom
    67: invokevirtual #7          // scala.collection.immutable.List.map:(scala.Function1, scala.collection.generic.CanBuildFrom)java.lang.Object
    70: checkcast     #80         // scala.collection.immutable.List
    73: invokedynamic #-29        // java.lang.invoke.LambdaForm$MH.2074407503.linkToTargetMethod:(java.lang.Object)java.lang.Object
    78: getstatic     #5          // scala.collection.immutable.List$.MODULE$:scala.collection.immutable.List$
    81: invokevirtual #6          // scala.collection.immutable.List$.canBuildFrom:()scala.collection.generic.CanBuildFrom
    84: invokevirtual #7          // scala.collection.immutable.List.map:(scala.Function1, scala.collection.generic.CanBuildFrom)java.lang.Object
    87: invokevirtual #12         // org.openjdk.jmh.infra.Blackhole.consume:(java.lang.Object)void
    90: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6c5a325f slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.collection.immutable.List$] <|@ <|@
      nr   12  <|@ instruction r10|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:56) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   16  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:56) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   20  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.collection.immutable.Nil$] <|@ <|@
      nr   22  <|@ instruction r11|DWORD[.] = MOV [r11|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   24  <|@ instruction CMP (x: r11|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:56) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:56) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   34  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@13eb5d68 encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction BLACKHOLE r11|QWORD[.] <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: []
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:56) [bci: 87]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Blackhole.consume(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@725df08e state [bci:87] <|@ <|@
      nr   44  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@725df08e <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction MOV [r15|QWORD + 668] y: -45587 size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:56) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: aload_0       
     2: invokevirtual #2          // list:()scala.collection.immutable.List
     5: invokedynamic #-25        // java.lang.invoke.LambdaForm$MH.2074407503.linkToTargetMethod:(java.lang.Object)java.lang.Object
    10: getstatic     #5          // scala.collection.immutable.List$.MODULE$:scala.collection.immutable.List$
    13: invokevirtual #6          // scala.collection.immutable.List$.canBuildFrom:()scala.collection.generic.CanBuildFrom
    16: invokevirtual #7          // scala.collection.immutable.List.map:(scala.Function1, scala.collection.generic.CanBuildFrom)java.lang.Object
    19: checkcast     #80         // scala.collection.immutable.List
    22: invokedynamic #-26        // java.lang.invoke.LambdaForm$MH.2074407503.linkToTargetMethod:(java.lang.Object)java.lang.Object
    27: getstatic     #5          // scala.collection.immutable.List$.MODULE$:scala.collection.immutable.List$
    30: invokevirtual #6          // scala.collection.immutable.List$.canBuildFrom:()scala.collection.generic.CanBuildFrom
    33: invokevirtual #7          // scala.collection.immutable.List.map:(scala.Function1, scala.collection.generic.CanBuildFrom)java.lang.Object
    36: checkcast     #80         // scala.collection.immutable.List
    39: invokedynamic #-27        // java.lang.invoke.LambdaForm$MH.2074407503.linkToTargetMethod:(java.lang.Object)java.lang.Object
    44: getstatic     #5          // scala.collection.immutable.List$.MODULE$:scala.collection.immutable.List$
    47: invokevirtual #6          // scala.collection.immutable.List$.canBuildFrom:()scala.collection.generic.CanBuildFrom
    50: invokevirtual #7          // scala.collection.immutable.List.map:(scala.Function1, scala.collection.generic.CanBuildFrom)java.lang.Object
    53: checkcast     #80         // scala.collection.immutable.List
    56: invokedynamic #-28        // java.lang.invoke.LambdaForm$MH.2074407503.linkToTargetMethod:(java.lang.Object)java.lang.Object
    61: getstatic     #5          // scala.collection.immutable.List$.MODULE$:scala.collection.immutable.List$
    64: invokevirtual #6          // scala.collection.immutable.List$.canBuildFrom:()scala.collection.generic.CanBuildFrom
    67: invokevirtual #7          // scala.collection.immutable.List.map:(scala.Function1, scala.collection.generic.CanBuildFrom)java.lang.Object
    70: checkcast     #80         // scala.collection.immutable.List
    73: invokedynamic #-29        // java.lang.invoke.LambdaForm$MH.2074407503.linkToTargetMethod:(java.lang.Object)java.lang.Object
    78: getstatic     #5          // scala.collection.immutable.List$.MODULE$:scala.collection.immutable.List$
    81: invokevirtual #6          // scala.collection.immutable.List$.canBuildFrom:()scala.collection.generic.CanBuildFrom
    84: invokevirtual #7          // scala.collection.immutable.List.map:(scala.Function1, scala.collection.generic.CanBuildFrom)java.lang.Object
    87: invokevirtual #12         // org.openjdk.jmh.infra.Blackhole.consume:(java.lang.Object)void
    90: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c241049baaddeaddeaddeadde458b5268438504d4448b5610438504d449bbaddeaddeaddeadde458b5b68453bda0f852f000000438504dc850249c1e303488bf2498bd3660f1f440000e80000000090488b6c24104883c418850500000000c5f877c341c7879c020000ed4dffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1034fb068, value=0x11210be60]:0x11210be60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6c5a325f slotKind: QWORD  <||@
  Comment 48 10 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.collection.immutable.List$]  <||@
  Comment 48 {Object[Class:scala.collection.immutable.List$]}  <||@
  Comment 58 12 r10|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD  <||@
  Comment 62 14 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 62 [rdx:0, rsi:0]at bench.ListBench.notFused(Bench.scala:56) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 62 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 66 16 r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 70 18 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 70 [rdx:0, rsi:0, r10:0]at bench.ListBench.notFused(Bench.scala:56) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 70 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 74 20 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.collection.immutable.Nil$]  <||@
  Comment 74 {Object[Class:scala.collection.immutable.Nil$]}  <||@
  Comment 84 22 r11|DWORD[.] = MOV [r11|QWORD[.] + 104] size: DWORD  <||@
  Comment 88 24 CMP (x: r11|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 91 26 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 97 block B1 null  <||@
  Comment 97 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 97 30 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:0]  <||@
  Comment 97 [rdx:0, rsi:0, r11:0]at bench.ListBench.notFused(Bench.scala:56) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 97 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 101 32 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 101 [rdx:0, rsi:0, r11:0]at bench.ListBench.notFused(Bench.scala:56) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 101 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 103 34 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@13eb5d68 encoding: base: 0 shift: 3  <||@
  Comment 107 36 BLACKHOLE r11|QWORD[.]  <||@
  Comment 107 38 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 110 40 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 113 42 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Blackhole.consume(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@725df08e state [bci:87]  <||@
  Comment 113 9  <||@
  Comment 119 {HotSpotMethod<Blackhole.consume(Object)>}  <||@
  Comment 124 []at bench.ListBench.notFused(Bench.scala:56) [bci: 87, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 125 44 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@725df08e  <||@
  Comment 134 12  <||@
  Comment 144 block B2 null  <||@
  Comment 144 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 144 48 MOV [r15|QWORD + 668] y: -45587 size: DWORD  <||@
  Comment 155 50 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 162 52 DEOPT info [bci:0]  <||@
  Comment 162 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1034fb080, value=0x11210d5fe]:0x11210d5fe}  <||@
  Comment 167 [rdx:0, rsi:0]at bench.ListBench.notFused(Bench.scala:56) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 168 {Stub<ExceptionHandlerStub.exceptionHandler>@0x1124a95e0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 168 4  <||@
  Comment 174 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1034fb078, value=0x11210d500]:0x11210d500}  <||@
  Comment 174 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-822[bench.ListBench.notFused(Blackhole)]"
  method "HotSpotCompilation-822[bench.ListBench.notFused(Blackhole)]"
  date 1528305959999
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 112b5e900 448b560849c1e203493bc20f854fd55aff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c241049bac0b201c006000000458b5268438504d4448b5610438504d449bb30b301c006000000458b5b68453bda0f852f000000438504dc850249c1e303488bf2498bd3660f1f440000e88418f9ff90488b6c24104883c41885057aa6c8f0c5f877c341c7879c020000ed4dffff4d89a7a8020000e857ec5aff90e833ac94ff90e84deb5aff90f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1034fb068, value=0x11210be60]:0x11210be60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6c5a325f slotKind: QWORD  <||@
  Comment 48 10 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.collection.immutable.List$]  <||@
  Comment 48 {Object[Class:scala.collection.immutable.List$]}  <||@
  Comment 58 12 r10|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD  <||@
  Comment 62 14 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 62 [rdx:0, rsi:0]at bench.ListBench.notFused(Bench.scala:56) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 62 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 66 16 r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 70 18 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 70 [rdx:0, rsi:0, r10:0]at bench.ListBench.notFused(Bench.scala:56) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 70 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 74 20 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.collection.immutable.Nil$]  <||@
  Comment 74 {Object[Class:scala.collection.immutable.Nil$]}  <||@
  Comment 84 22 r11|DWORD[.] = MOV [r11|QWORD[.] + 104] size: DWORD  <||@
  Comment 88 24 CMP (x: r11|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 91 26 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 97 block B1 null  <||@
  Comment 97 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 97 30 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:0]  <||@
  Comment 97 [rdx:0, rsi:0, r11:0]at bench.ListBench.notFused(Bench.scala:56) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 97 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 101 32 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 101 [rdx:0, rsi:0, r11:0]at bench.ListBench.notFused(Bench.scala:56) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 101 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 103 34 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@13eb5d68 encoding: base: 0 shift: 3  <||@
  Comment 107 36 BLACKHOLE r11|QWORD[.]  <||@
  Comment 107 38 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 110 40 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 113 42 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Blackhole.consume(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@725df08e state [bci:87]  <||@
  Comment 113 9  <||@
  Comment 119 {HotSpotMethod<Blackhole.consume(Object)>}  <||@
  Comment 124 []at bench.ListBench.notFused(Bench.scala:56) [bci: 87, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 125 44 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@725df08e  <||@
  Comment 134 12  <||@
  Comment 144 block B2 null  <||@
  Comment 144 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 144 48 MOV [r15|QWORD + 668] y: -45587 size: DWORD  <||@
  Comment 155 50 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 162 52 DEOPT info [bci:0]  <||@
  Comment 162 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1034fb080, value=0x11210d5fe]:0x11210d5fe}  <||@
  Comment 167 [rdx:0, rsi:0]at bench.ListBench.notFused(Bench.scala:56) [bci: 0, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]   <||@
  Comment 168 {Stub<ExceptionHandlerStub.exceptionHandler>@0x1124a95e0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 168 4  <||@
  Comment 174 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1034fb078, value=0x11210d500]:0x11210d500}  <||@
  Comment 174 5  <||@
  HexCodeFile>>> <|@
end_nmethod
