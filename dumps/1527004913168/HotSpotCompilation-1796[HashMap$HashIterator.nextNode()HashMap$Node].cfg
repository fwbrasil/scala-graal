begin_compilation
  name " HotSpotCompilation-1796[java.util.HashMap$HashIterator.nextNode()]"
  method "HotSpotCompilation-1796[java.util.HashMap$HashIterator.nextNode()]"
  date 1527004918930
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a194 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a194  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/HashMap$HashIterator;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v205 v206 v208 v209 v212 ?46 ?28 ?16 j176 j186 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a194 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.this$0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 6]
nullCheck: false
stamp: n Ljava/util/HashMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v206 
=== Succesors ===
next: i195 
=== Usages ===
v211 v207 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v206 #next: i195  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1440
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
v168 i195 a198 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a194 
=== Succesors ===
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i195 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 9]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v207 
=== Succesors ===
next: i196 
=== Usages ===
v7 
=== Predecessor ===
a194 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v207 #next: i196  <|@  <|@
f <@~|@floating>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i196 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.expectedModCount
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 13]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v208 
=== Succesors ===
next: v148 
=== Usages ===
v7 
=== Predecessor ===
i195 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v208 #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i195 
y: i196 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i195 y: i196  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v145 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
i196 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v145 #falseSuccessor: v147  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a197 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a197  <|@  <|@
f <@~|@floating>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a197 v98 v125 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a197 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 1]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v205 
=== Succesors ===
next: a198 
=== Usages ===
a72 v210 v90 
=== Predecessor ===
v145 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v205 #next: a198  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a197 
=== Succesors ===
=== Usages ===
a198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 46]
nullCheck: true
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v210 
=== Succesors ===
next: v90 
=== Usages ===
v98 v126 
=== Predecessor ===
a197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v210 #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.current
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v209 
value: a197 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j176 
=== Usages ===
=== Predecessor ===
a198 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v209 value: a197 stateAfter: - lastLocationAccess: - #next: j176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v182 
=== Usages ===
j178 
=== Predecessor ===
v90 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid i177 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j178 j187 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j178 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$66/1929392697@1aef7eb1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j176 
y: i177 
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j176 y: i177  <|@  <|@
f <@~|@floating>@ <|@
tid j181 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
rawvalue: 4285321216
stableDimension: 0
stamp: i64 [4285321216] ⇊00000000ff6cd000 ⇈00000000ff6cd000
stampKind: i64
value: long[4285321216|0xff6cd000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v215 v216 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j178 
index: j181 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j178 index: j181  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v182 v190 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v215 
value: i183 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v98 
=== Usages ===
=== Predecessor ===
j176 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v215 value: i183 stateAfter: - lastLocationAccess: - #next: v98  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v205 
value: a198 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v205 value: a198 stateAfter: - lastLocationAccess: - #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53]
stamp: void
=== Inputs ===
value: a198 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a198  <|@  <|@
f <@~|@floating>@ <|@
tid a72 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 1]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a197 
=== Succesors ===
=== Usages ===
v58 v57 v56 ?46 ?28 ?16 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a197  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53]
stamp: void
trueSuccessorProbability: 0.8669056403118154
=== Inputs ===
condition: v126 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v126 #trueSuccessor: v18 #falseSuccessor: v19  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605983611382623762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: a199 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a199  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a194 
=== Succesors ===
=== Usages ===
a199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a199 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 60]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v211 
=== Succesors ===
next: i200 
=== Usages ===
a102 v213 
=== Predecessor ===
v18 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v211 #next: i200  <|@  <|@
f <@~|@floating>@ <|@
tid a203 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?16 ?46 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?16 <|@
d <@d|@=== Debug Properties ===
bci: 53
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 50]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1445
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - a72 a203 
=== Succesors ===
=== Usages ===
i200 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a72 a203  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a199 
=== Succesors ===
=== Usages ===
i200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 73]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?16 
guard: - 
address: v213 
=== Succesors ===
next: i201 
=== Usages ===
v31 v114 
=== Predecessor ===
a199 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?16 guard: - address: v213 #next: i201  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i201 v112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.index
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 69]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v212 
=== Succesors ===
next: v26 
=== Usages ===
i193 
=== Predecessor ===
i200 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v212 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid a102 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 60]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a199 
=== Succesors ===
=== Usages ===
?46 ?28 v214 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a199  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 95
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1446
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a102 a72 a203 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a102 a72 a203  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 85]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i41 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
i201 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors "B4" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4613565824177778263
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i193 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v27 
values: i201 i41 
=== Succesors ===
=== Usages ===
v31 i41 v114 v214 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v27 values: i201 i41  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 3.2700230781089568
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v26 
=== Succesors ===
next: v38 
=== Usages ===
v36 v48 v50 i193 v160 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v26 #next: v38  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 74]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i193 
y: i200 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i193 y: i200  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 74]
stamp: void
trueSuccessorProbability: 0.9733280684531033
=== Inputs ===
condition: v31 
=== Succesors ===
trueSuccessor: v32 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v31 #trueSuccessor: v32 #falseSuccessor: v36  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613395566426506533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i193 
y: i200 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i193 y: i200  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v114 
=== Succesors ===
trueSuccessor: v157 
falseSuccessor: v160 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v114 #trueSuccessor: v157 #falseSuccessor: v160  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613395566426506533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v112 
=== Usages ===
a202 
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 86]
stamp: i32
=== Inputs ===
x: i193 
y: i40 
=== Succesors ===
=== Usages ===
v112 i193 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i193 y: i40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap$HashIterator.index
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 87]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v212 
value: i41 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a202 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v212 value: i41 stateAfter: - lastLocationAccess: - #next: a202  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a102 
index: i193 
=== Succesors ===
=== Usages ===
a202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a102 index: i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a202 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v157 
address: v214 
=== Succesors ===
next: v125 
=== Usages ===
v125 v128 
=== Predecessor ===
v112 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v157 address: v214 #next: v125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v205 
value: a202 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j186 
=== Usages ===
=== Predecessor ===
a202 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v205 value: a202 stateAfter: - lastLocationAccess: - #next: j186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v190 
=== Usages ===
j187 
=== Predecessor ===
v125 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid j187 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$66/1929392697@1aef7eb1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j186 
y: i177 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j186 y: i177  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j187 
index: j181 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j187 index: j181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v216 
value: i183 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
j186 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v216 value: i183 stateAfter: - lastLocationAccess: - #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95]
stamp: void
=== Inputs ===
value: a202 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a202  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95]
stamp: void
trueSuccessorProbability: 0.713214570909532
=== Inputs ===
condition: v128 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v128 #trueSuccessor: v52 #falseSuccessor: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4611541434009494949
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?46 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?46 #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
stamp: void
=== Inputs ===
loopBegin: v27 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v27  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4605302580377536842
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1448) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v27 
=== Succesors ===
next: v58 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v27 #next: v58  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1448) [bci: 98]
stamp: void
=== Inputs ===
result: a72 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a72 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v27 
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v27 #next: v158  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1446
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a102 a72 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a102 a72  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 115
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?28  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4590112668703860288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1448) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v27 
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v27 #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1448) [bci: 98]
stamp: void
=== Inputs ===
result: a72 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a72 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4593963249960110008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1448) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v56  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1448) [bci: 98]
stamp: void
=== Inputs ===
result: a72 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a72 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid a165 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22035
stableDimension: 0
stamp: i32 [-22035] ⇊00000000ffffa9ed ⇈00000000ffffa9ed
stampKind: i32
value: int[-22035|0xffffffffffffa9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i172 
speculation: a165 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i172 speculation: a165  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a194 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a194  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/HashMap$HashIterator;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v205 v206 v208 v209 v212 ?46 ?28 ?16 j176 j186 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v206 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a194 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.this$0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 6]
nullCheck: false
stamp: n Ljava/util/HashMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v206 
=== Succesors ===
next: i195 
=== Usages ===
v211 v207 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v206 #next: i195  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1440
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
v168 i195 a198 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
result [v1|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a194 
=== Succesors ===
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i195 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 9]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v207 
=== Succesors ===
next: i196 
=== Usages ===
v7 
=== Predecessor ===
a194 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v207 #next: i196  <|@  <|@
f <@~|@floating>@ <|@
tid v208 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i196 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.expectedModCount
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 13]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v208 
=== Succesors ===
next: v148 
=== Usages ===
v7 
=== Predecessor ===
i195 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v208 #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i195 
y: i196 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i195 y: i196  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@4855ff92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v145 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
i196 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v145 #falseSuccessor: v147  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@53d1e106 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a197 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a197  <|@  <|@
f <@~|@floating>@ <|@
tid v205 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a197 v98 v125 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a197 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 1]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v205 
=== Succesors ===
next: a198 
=== Usages ===
a72 v210 v90 
=== Predecessor ===
v145 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v205 #next: a198  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
result [v3|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a197 
=== Succesors ===
=== Usages ===
a198 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a198 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 46]
nullCheck: true
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v210 
=== Succesors ===
next: v90 
=== Usages ===
v98 v126 
=== Predecessor ===
a197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v210 #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.current
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v209 
value: a197 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j176 
=== Usages ===
=== Predecessor ===
a198 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v209 value: a197 stateAfter: - lastLocationAccess: - #next: j176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j176 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v182 
=== Usages ===
j178 
=== Predecessor ===
v90 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid i177 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j178 j187 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j178 <|@
result v5|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$66/1929392697@1aef7eb1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j176 
y: i177 
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j176 y: i177  <|@  <|@
f <@~|@floating>@ <|@
tid j181 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
rawvalue: 4285321216
stableDimension: 0
stamp: i64 [4285321216] ⇊00000000ff6cd000 ⇈00000000ff6cd000
stampKind: i64
value: long[4285321216|0xff6cd000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v215 v216 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
result [v5|QWORD[*] + v6|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j178 
index: j181 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j178 index: j181  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v182 v190 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v215 
value: i183 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v98 
=== Usages ===
=== Predecessor ===
j176 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v215 value: i183 stateAfter: - lastLocationAccess: - #next: v98  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v205 
value: a198 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v205 value: a198 stateAfter: - lastLocationAccess: - #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53]
stamp: void
=== Inputs ===
value: a198 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a198  <|@  <|@
f <@~|@floating>@ <|@
tid a72 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 1]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a197 
=== Succesors ===
=== Usages ===
v58 v57 v56 ?46 ?28 ?16 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a197  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53]
stamp: void
trueSuccessorProbability: 0.8669056403118154
=== Inputs ===
condition: v126 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v126 #trueSuccessor: v18 #falseSuccessor: v19  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[.] = MOV [v3|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[4285321216|0xff6cd000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v5|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5e7a912c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD[.], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8669056403118154 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605983611382623762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: a199 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a199  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
result [v1|DWORD[.] * 8 + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a194 
=== Succesors ===
=== Usages ===
a199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a199 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 60]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v211 
=== Succesors ===
next: i200 
=== Usages ===
a102 v213 
=== Predecessor ===
v18 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v211 #next: i200  <|@  <|@
f <@~|@floating>@ <|@
tid a203 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?16 ?46 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?16 <|@
d <@d|@=== Debug Properties ===
bci: 53
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 50]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1445
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - a72 a203 
=== Succesors ===
=== Usages ===
i200 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a72 a203  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
result [v8|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a199 
=== Succesors ===
=== Usages ===
i200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i200 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 73]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?16 
guard: - 
address: v213 
=== Succesors ===
next: i201 
=== Usages ===
v31 v114 
=== Predecessor ===
a199 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?16 guard: - address: v213 #next: i201  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i201 v112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i201 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.index
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 69]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v212 
=== Succesors ===
next: v26 
=== Usages ===
i193 
=== Predecessor ===
i200 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v212 #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid a102 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 60]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a199 
=== Succesors ===
=== Usages ===
?46 ?28 v214 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a199  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 95
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1446
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a102 a72 a203 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a102 a72 a203  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 85]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i41 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
i201 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v1|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53]
stack: Object[null] 
locals: v0|QWORD[.] - v7|QWORD[.] 
>@ <|@ instruction v9|DWORD = MOV [v8|DWORD[.] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5e7a912c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors "B4" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4613565824177778263
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i193 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v27 
values: i201 i41 
=== Succesors ===
=== Usages ===
v31 i41 v114 v214 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v27 values: i201 i41  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 3.2700230781089568
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v26 
=== Succesors ===
next: v38 
=== Usages ===
v36 v48 v50 i193 v160 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v26 #next: v38  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 74]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i193 
y: i200 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i193 y: i200  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 74]
stamp: void
trueSuccessorProbability: 0.9733280684531033
=== Inputs ===
condition: v31 
=== Succesors ===
trueSuccessor: v32 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v31 #trueSuccessor: v32 #falseSuccessor: v36  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9733280684531033 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613395566426506533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i193 
y: i200 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i193 y: i200  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v114 
=== Succesors ===
trueSuccessor: v157 
falseSuccessor: v160 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v114 #trueSuccessor: v157 #falseSuccessor: v160  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613395566426506533
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v112 
=== Usages ===
a202 
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 86]
stamp: i32
=== Inputs ===
x: i193 
y: i40 
=== Succesors ===
=== Usages ===
v112 i193 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i193 y: i40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap$HashIterator.index
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 87]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v212 
value: i41 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a202 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v212 value: i41 stateAfter: - lastLocationAccess: - #next: a202  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
result [v11|QWORD[.] + v12|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a102 
index: i193 
=== Succesors ===
=== Usages ===
a202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a102 index: i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a202 <|@
result v14|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v157 
address: v214 
=== Succesors ===
next: v125 
=== Usages ===
v125 v128 
=== Predecessor ===
v112 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v157 address: v214 #next: v125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v205 
value: a202 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j186 
=== Usages ===
=== Predecessor ===
a202 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v205 value: a202 stateAfter: - lastLocationAccess: - #next: j186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j186 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v190 
=== Usages ===
j187 
=== Predecessor ===
v125 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid j187 <|@
result v15|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$66/1929392697@1aef7eb1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j186 
y: i177 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j186 y: i177  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
result [v15|QWORD[*] + v6|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j187 
index: j181 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j187 index: j181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v216 
value: i183 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
j186 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v216 value: i183 stateAfter: - lastLocationAccess: - #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95]
stamp: void
=== Inputs ===
value: a202 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a202  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95]
stamp: void
trueSuccessorProbability: 0.713214570909532
=== Inputs ===
condition: v128 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v128 #trueSuccessor: v52 #falseSuccessor: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v11|QWORD[.] + v12|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v15|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD[.], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.713214570909532 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4611541434009494949
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?46 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?46 #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
stamp: void
=== Inputs ===
loopBegin: v27 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v27  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95]
stack: Object[null] 
locals: v0|QWORD[.] v11|QWORD[.] v7|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 thread: r15 state [bci:95] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD] destination: B6 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4605302580377536842
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1448) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v27 
=== Succesors ===
next: v58 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v27 #next: v58  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1448) [bci: 98]
stamp: void
=== Inputs ===
result: a72 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a72 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v27 
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v27 #next: v158  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1446
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a102 a72 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a102 a72  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 115
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?28 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?28  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -29467 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
locals: v0|QWORD[.] v11|QWORD[.] v7|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4590112668703860288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1448) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v27 
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v27 #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1448) [bci: 98]
stamp: void
=== Inputs ===
result: a72 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a72 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4593963249960110008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1448) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v56  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1448) [bci: 98]
stamp: void
=== Inputs ===
result: a72 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a72 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid a165 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
result int[-22035|0xffffffffffffa9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22035
stableDimension: 0
stamp: i32 [-22035] ⇊00000000ffffa9ed ⇈00000000ffffa9ed
stampKind: i32
value: int[-22035|0xffffffffffffa9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i172 
speculation: a165 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i172 speculation: a165  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -22035 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@53d1e106 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v4|DWORD[.] = MOV [v3|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[4285321216|0xff6cd000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v5|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5e7a912c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD[.], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8669056403118154 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605983611382623762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v1|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53]
stack: Object[null] 
locals: v0|QWORD[.] - v7|QWORD[.] 
>@ <|@ instruction v9|DWORD = MOV [v8|DWORD[.] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5e7a912c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613395566426506533
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613395566426506533
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = INC v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = MOV [v11|QWORD[.] + v12|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v15|QWORD[*] + v6|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD[.], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.713214570909532 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4611541434009494949
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95]
stack: Object[null] 
locals: v0|QWORD[.] v11|QWORD[.] v7|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 thread: r15 state [bci:95] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD] destination: B6 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors "B4" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4613565824177778263
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9733280684531033 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4605302580377536842
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4593963249960110008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4590112668703860288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -29467 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
locals: v0|QWORD[.] v11|QWORD[.] v7|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -22035 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #10         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #12         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@53d1e106 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   20  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   26  <|@ instruction r9|QWORD = MOVE input: long[4285321216|0xff6cd000] <|@ <|@
      nr   28  <|@ instruction MOVB (x: [r8|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   30  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5e7a912c encoding: base: 0 shift: 3 <|@ <|@
      nr   34  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.8669056403118154 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605983611382623762
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53]
stack: Object[null] 
locals: rsi|QWORD[.] - r10|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5e7a912c encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613395566426506533
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   58  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613395566426506533
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   72  <|@ instruction rbx|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   74  <|@ instruction MOVB (x: [rbx|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   76  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.713214570909532 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4611541434009494949
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95]
stack: Object[null] 
locals: rsi|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 thread: r15 state [bci:95] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B6 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors "B4" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4613565824177778263
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   52  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.9733280684531033 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4605302580377536842
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4593963249960110008
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4590112668703860288
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction MOV [r15|QWORD + 668] y: -29467 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  110  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
locals: rsi|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction MOV [r15|QWORD + 668] y: -22035 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #10         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #12         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@53d1e106 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   20  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   26  <|@ instruction r9|QWORD = MOVE input: long[4285321216|0xff6cd000] <|@ <|@
      nr   28  <|@ instruction MOVB (x: [r8|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   30  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5e7a912c encoding: base: 0 shift: 3 <|@ <|@
      nr   34  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.8669056403118154 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4605983611382623762
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53]
stack: Object[null] 
locals: rsi|QWORD[.] - r10|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr   44  <|@ instruction r8|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5e7a912c encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613395566426506533
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   58  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613395566426506533
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   70  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   72  <|@ instruction rbx|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   74  <|@ instruction MOVB (x: [rbx|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   76  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.713214570909532 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4611541434009494949
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95]
stack: Object[null] 
locals: rsi|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 thread: r15 state [bci:95] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B6 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors "B4" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4613565824177778263
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   52  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction BRANCH trueDestinationProbability: 0.9733280684531033 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors 
    xhandlers
    flags 
    probability 4605302580377536842
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4593963249960110008
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4590112668703860288
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction MOV [r15|QWORD + 668] y: -29467 size: DWORD <|@ <|@
      nr  108  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  110  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
locals: rsi|QWORD[.] rax|QWORD[.] r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction MOV [r15|QWORD + 668] y: -22035 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #10         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #12         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b461c448b14c518000000443b560c0f85f6000000448b5614468b1cd518000000448956184c8bc649c1e80941b900d06cff4788240844895e1449c1e2034585db0f85800000008b04c524000000448b1cc50c000000448b461048c1e003e9440000000f1f8000000000660f1f440000453bd80f867a000000418bc8ffc1894e10468b44801044894614488bde48c1eb094688240b4585c00f8513000000850500000000448bc1453bd87fc4e92c000000498bc2488b6c24104883c418850500000000c5f877c3498bc2488b6c24104883c418850500000000c5f877c3498bc2488b6c24104883c418850500000000c5f877c341c7879c020000e58cffff4d89a7a8020000e8000000009041c7879c020000eda9ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1024a1f78, value=0x10ba1de60]:0x10ba1de60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@53d1e106 slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 51 10 r10|DWORD = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 51 [rax:0, rsi:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 12 CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 63 14 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11  <||@
  Comment 69 block B1 null  <||@
  Comment 69 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 69 18 r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 73 20 r11|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 73 [rax:0, rsi:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 73 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 81 22 MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 85 24 r8|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 92 26 r9|QWORD = MOVE input: long[4285321216|0xff6cd000]  <||@
  Comment 98 28 MOVB (x: [r8|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 102 30 MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 106 32 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5e7a912c encoding: base: 0 shift: 3  <||@
  Comment 110 34 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 113 36 BRANCH trueDestinationProbability: 0.8669056403118154 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10  <||@
  Comment 119 block B2 null  <||@
  Comment 119 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 119 40 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 36] size: DWORD  <||@
  Comment 126 42 r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:53]  <||@
  Comment 126 [rax:0, rsi:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53, duringCall: false, rethrow: false]
              |0             |1  |2            
     locals:  |rsi|QWORD[.]  |-  |r10|QWORD[.] 
     stack:   |Object[null]  |   |               <||@
  Comment 126 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 134 44 r8|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 138 46 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5e7a912c encoding: base: 0 shift: 3  <||@
  Comment 142 48 JUMP ~[] destination: B2 -> B3  <||@
  Comment 147 block B4 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 147 56 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 58 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 163 60 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8  <||@
  Comment 169 block B5 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 169 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 169 64 rcx|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 174 66 MOV (x: [rsi|QWORD[.] + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 177 68 r8|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 182 70 MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 186 72 rbx|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 193 74 MOVB (x: [rbx|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 197 76 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 200 78 BRANCH trueDestinationProbability: 0.713214570909532 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 206 block B6 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 206 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 206 82 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 thread: r15 state [bci:95]  <||@
  Comment 206 [rax:0, rsi:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |rax|QWORD[.]  |r10|QWORD[.] 
     stack:   |Object[null]  |              |               <||@
  Comment 206 {infopoint: SAFEPOINT}  <||@
  Comment 206 11  <||@
  Comment 212 -1 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 215 84 JUMP ~[] destination: B6 -> B3  <||@
  Comment 215 block B3 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 215 50 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 215 52 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 218 54 BRANCH trueDestinationProbability: 0.9733280684531033 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B9  <||@
  Comment 225 block B7 null  <||@
  Comment 225 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 225 88 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 228 90 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 237 12  <||@
  Comment 247 block B10 null  <||@
  Comment 247 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 247 94 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 250 96 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 259 12  <||@
  Comment 269 block B9 null  <||@
  Comment 269 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 269 100 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 272 102 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 281 12  <||@
  Comment 291 block B8 null  <||@
  Comment 291 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 291 106 MOV [r15|QWORD + 668] y: -29467 size: DWORD  <||@
  Comment 302 108 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 309 110 DEOPT info [bci:68]  <||@
  Comment 309 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 314 [rax:0, rsi:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |rax|QWORD[.]  |r10|QWORD[.]   <||@
  Comment 315 block B11 null  <||@
  Comment 315 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 315 114 MOV [r15|QWORD + 668] y: -22035 size: DWORD  <||@
  Comment 326 116 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 333 118 DEOPT info [bci:0]  <||@
  Comment 333 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 338 [rsi:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 339 {Stub<ExceptionHandlerStub.exceptionHandler>@0x10be4bf20:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 339 4  <||@
  Comment 345 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1024a1f88, value=0x10ba1f500]:0x10ba1f500}  <||@
  Comment 345 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-1796[java.util.HashMap$HashIterator.nextNode()]"
  method "HotSpotCompilation-1796[java.util.HashMap$HashIterator.nextNode()]"
  date 1527004919040
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 10c46b660 448b560849c1e203493bc20f85ef275bff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b461c448b14c518000000443b560c0f85f6000000448b5614468b1cd518000000448956184c8bc649c1e80941b900d06cff4788240844895e1449c1e2034585db0f85800000008b04c524000000448b1cc50c000000448b461048c1e003e9440000000f1f8000000000660f1f440000453bd80f867a000000418bc8ffc1894e10468b44801044894614488bde48c1eb094688240b4585c00f85130000008505d2d8f7f4448bc1453bd87fc4e92c000000498bc2488b6c24104883c4188505b3d8f7f4c5f877c3498bc2488b6c24104883c41885059dd8f7f4c5f877c3498bc2488b6c24104883c418850587d8f7f4c5f877c341c7879c020000e58cffff4d89a7a8020000e8643e5bff9041c7879c020000eda9ffff4d89a7a8020000e84c3e5bff90e868079eff90e8423d5bff90f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1024a1f78, value=0x10ba1de60]:0x10ba1de60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@53d1e106 slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 51 10 r10|DWORD = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 51 [rax:0, rsi:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 12 CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 63 14 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B11  <||@
  Comment 69 block B1 null  <||@
  Comment 69 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 69 18 r10|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 73 20 r11|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 73 [rax:0, rsi:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 73 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 81 22 MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 85 24 r8|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 92 26 r9|QWORD = MOVE input: long[4285321216|0xff6cd000]  <||@
  Comment 98 28 MOVB (x: [r8|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 102 30 MOV (x: [rsi|QWORD[.] + 20], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 106 32 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5e7a912c encoding: base: 0 shift: 3  <||@
  Comment 110 34 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 113 36 BRANCH trueDestinationProbability: 0.8669056403118154 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B10  <||@
  Comment 119 block B2 null  <||@
  Comment 119 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 119 40 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 36] size: DWORD  <||@
  Comment 126 42 r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:53]  <||@
  Comment 126 [rax:0, rsi:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53, duringCall: false, rethrow: false]
              |0             |1  |2            
     locals:  |rsi|QWORD[.]  |-  |r10|QWORD[.] 
     stack:   |Object[null]  |   |               <||@
  Comment 126 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 134 44 r8|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 138 46 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@5e7a912c encoding: base: 0 shift: 3  <||@
  Comment 142 48 JUMP ~[] destination: B2 -> B3  <||@
  Comment 147 block B4 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 147 56 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 58 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 163 60 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8  <||@
  Comment 169 block B5 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 169 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 169 64 rcx|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 174 66 MOV (x: [rsi|QWORD[.] + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 177 68 r8|DWORD[.] = MOV [rax|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 182 70 MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 186 72 rbx|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 193 74 MOVB (x: [rbx|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 197 76 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 200 78 BRANCH trueDestinationProbability: 0.713214570909532 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 206 block B6 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 206 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 206 82 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 thread: r15 state [bci:95]  <||@
  Comment 206 [rax:0, rsi:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |rax|QWORD[.]  |r10|QWORD[.] 
     stack:   |Object[null]  |              |               <||@
  Comment 206 {infopoint: SAFEPOINT}  <||@
  Comment 206 11  <||@
  Comment 212 -1 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 215 84 JUMP ~[] destination: B6 -> B3  <||@
  Comment 215 block B3 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 215 50 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 215 52 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 218 54 BRANCH trueDestinationProbability: 0.9733280684531033 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B9  <||@
  Comment 225 block B7 null  <||@
  Comment 225 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 225 88 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 228 90 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 237 12  <||@
  Comment 247 block B10 null  <||@
  Comment 247 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 247 94 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 250 96 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 259 12  <||@
  Comment 269 block B9 null  <||@
  Comment 269 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 269 100 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 272 102 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 281 12  <||@
  Comment 291 block B8 null  <||@
  Comment 291 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 291 106 MOV [r15|QWORD + 668] y: -29467 size: DWORD  <||@
  Comment 302 108 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 309 110 DEOPT info [bci:68]  <||@
  Comment 309 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 314 [rax:0, rsi:0, r10:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |rax|QWORD[.]  |r10|QWORD[.]   <||@
  Comment 315 block B11 null  <||@
  Comment 315 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 315 114 MOV [r15|QWORD + 668] y: -22035 size: DWORD  <||@
  Comment 326 116 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 333 118 DEOPT info [bci:0]  <||@
  Comment 333 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 338 [rsi:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1440) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 339 {Stub<ExceptionHandlerStub.exceptionHandler>@0x10be4bf20:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 339 4  <||@
  Comment 345 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1024a1f88, value=0x10ba1f500]:0x10ba1f500}  <||@
  Comment 345 5  <||@
  HexCodeFile>>> <|@
end_nmethod
