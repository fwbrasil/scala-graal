begin_compilation
  name " HotSpotCompilation-56[java.lang.String.hashCode()]"
  method "HotSpotCompilation-56[java.lang.String.hashCode()]"
  date 1527004915408
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i198 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i198  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v202 v203 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i198 v76 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i198 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.hash
nodeSourcePosition: at java.lang.String.hashCode(String.java:1466) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v202 
=== Succesors ===
next: v8 
=== Usages ===
v5 i166 v48 i161 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v202 #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.hashCode(String.java:1467) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 v47 v49 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.hashCode(String.java:1467) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i198 
y: i4 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i198 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:1467) [bci: 6]
stamp: void
trueSuccessorProbability: 0.15572047483370222
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v6 
falseSuccessor: v7 
=== Usages ===
=== Predecessor ===
i198 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v6 #falseSuccessor: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4594778441670015568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:1467) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a199 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a199  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a199 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.hashCode(String.java:1467) [bci: 10]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v203 
=== Succesors ===
next: i200 
=== Usages ===
v205 v204 
=== Predecessor ===
v6 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v203 #next: i200  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<String.hashCode()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1466
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - 
=== Succesors ===
=== Usages ===
v133 i200 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a199 
=== Succesors ===
=== Usages ===
i200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.hashCode(String.java:1467) [bci: 13]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v204 
=== Succesors ===
next: v18 
=== Usages ===
v47 j87 
=== Predecessor ===
a199 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v204 #next: v18  <|@  <|@
f <@~|@floating>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.hashCode(String.java:1467) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i200 
y: i4 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i200 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:1467) [bci: 14]
stamp: void
trueSuccessorProbability: 3.579226171301908E-4
=== Inputs ===
condition: v47 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v16 
=== Usages ===
=== Predecessor ===
i200 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v47 #trueSuccessor: v17 #falseSuccessor: v16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4543349988858997590
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:1475) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v49  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:1475) [bci: 53]
stamp: void
=== Inputs ===
result: i4 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i4 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B11" 
    xhandlers
    flags 
    probability 4594776433573312221
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:1468) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid j87 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/1174728845@6b2a0100
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2049777509@675f16c4
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i200 
=== Succesors ===
=== Usages ===
j91 v93 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i200  <|@  <|@
f <@~|@floating>@ <|@
tid j90 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j91 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j91 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j87 
y: j90 
=== Succesors ===
=== Usages ===
v93 v174 v176 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j87 y: j90  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j91 
y: j87 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j91 y: j87  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:1471) [bci: 39]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v93 
=== Succesors ===
trueSuccessor: v193 
falseSuccessor: v196 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v93 #trueSuccessor: v193 #falseSuccessor: v196  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594776433573312221
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:1471) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v143 
=== Usages ===
j163 
=== Predecessor ===
v193 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid j164 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 j165 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j91 
y: j164 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j91 y: j164  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v174 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v142 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v174 #trueSuccessor: v141 #falseSuccessor: v142  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4585769234318571229
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v148  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4593077040587330124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a199 
=== Succesors ===
=== Usages ===
j163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a199  <|@  <|@
f <@~|@floating>@ <|@
tid j163 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v162 
address: v205 
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v162 address: v205  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i187 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j172 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
v142 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B10" 
    successors "B8" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602084239842071116
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j165 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v145 
values: j164 j173 
=== Succesors ===
=== Usages ===
v206 j173 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v145 values: j164 j173  <|@  <|@
f <@~|@floating>@ <|@
tid i166 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v145 
values: i198 i186 
=== Succesors ===
=== Usages ===
i188 i187 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v145 values: i198 i186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v144 
=== Succesors ===
next: i201 
=== Usages ===
i201 v151 v153 j165 i166 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v144 #next: i201  <|@  <|@
f <@~|@floating>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j163 
index: j165 
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j163 index: j165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v145 
address: v206 
=== Succesors ===
next: v155 
=== Usages ===
i189 
=== Predecessor ===
v145 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v145 address: v206 #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$12/466131506@2f51c27f
nodeSourcePosition: at java.lang.String.hashCode(String.java:1471) [bci: 36]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i166 
y: i182 
=== Succesors ===
=== Usages ===
i188 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i166 y: i182  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$62/72246354@4e69aed8
nodeSourcePosition: at java.lang.String.hashCode(String.java:1471) [bci: 36]
stamp: i32
=== Inputs ===
x: i187 
y: i166 
=== Succesors ===
=== Usages ===
i186 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i187 y: i166  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/1174728845@6b2a0100
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2049777509@675f16c4
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.hashCode(String.java:1471) [bci: 39]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i201 
=== Succesors ===
=== Usages ===
i186 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i201  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at java.lang.String.hashCode(String.java:1471) [bci: 40]
stamp: i32
=== Inputs ===
x: i188 
y: i189 
=== Succesors ===
=== Usages ===
i161 i166 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i188 y: i189  <|@  <|@
f <@~|@floating>@ <|@
tid j173 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
stamp: i64
=== Inputs ===
x: j165 
y: j172 
=== Succesors ===
=== Usages ===
v176 j165 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j165 y: j172  <|@  <|@
f <@~|@floating>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j91 
y: j173 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j91 y: j173  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v176 
=== Succesors ===
trueSuccessor: v151 
falseSuccessor: v154 
=== Usages ===
=== Predecessor ===
i201 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v176 #trueSuccessor: v151 #falseSuccessor: v154  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4593077040587330124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v145 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v145 #next: v150  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
v151 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 4594776433573312221
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i161 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v149 
values: i198 i186 
=== Succesors ===
=== Usages ===
v50 v76 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v149 values: i198 i186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v148 v150 
=== Succesors ===
next: v76 
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v148 v150 #next: v76  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: String.hash
nodeSourcePosition: at java.lang.String.hashCode(String.java:1473) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v202 
value: i161 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v202 value: i161 stateAfter: - lastLocationAccess: - #next: v50  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:1475) [bci: 53]
stamp: void
=== Inputs ===
result: i161 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i161 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599981084861029817
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v153  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v145 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v145  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:1471) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid a136 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1833134000
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1833134000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -17435
stableDimension: 0
stamp: i32 [-17435] ⇊00000000ffffbbe5 ⇈00000000ffffbbe5
stampKind: i32
value: int[-17435|0xffffffffffffbbe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i135 
speculation: a136 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i135 speculation: a136  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4605779813455147372
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:1475) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:1475) [bci: 53]
stamp: void
=== Inputs ===
result: i198 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i198 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i198 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i198  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v202 v203 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i198 v76 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i198 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.hash
nodeSourcePosition: at java.lang.String.hashCode(String.java:1466) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v202 
=== Succesors ===
next: v8 
=== Usages ===
v5 i166 v48 i161 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v202 #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.hashCode(String.java:1467) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 v47 v49 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.hashCode(String.java:1467) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i198 
y: i4 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i198 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:1467) [bci: 6]
stamp: void
trueSuccessorProbability: 0.15572047483370222
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v6 
falseSuccessor: v7 
=== Usages ===
=== Predecessor ===
i198 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v6 #falseSuccessor: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@55909e20 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.15572047483370222 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4594778441670015568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:1467) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a199 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a199  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a199 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.hashCode(String.java:1467) [bci: 10]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v203 
=== Succesors ===
next: i200 
=== Usages ===
v205 v204 
=== Predecessor ===
v6 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v203 #next: i200  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<String.hashCode()>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: String.java
sourceLine: 1466
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - 
=== Succesors ===
=== Usages ===
v133 i200 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a199 
=== Succesors ===
=== Usages ===
i200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i200 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.hashCode(String.java:1467) [bci: 13]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v204 
=== Succesors ===
next: v18 
=== Usages ===
v47 j87 
=== Predecessor ===
a199 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v204 #next: v18  <|@  <|@
f <@~|@floating>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.hashCode(String.java:1467) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i200 
y: i4 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i200 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:1467) [bci: 14]
stamp: void
trueSuccessorProbability: 3.579226171301908E-4
=== Inputs ===
condition: v47 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v16 
=== Usages ===
=== Predecessor ===
i200 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v47 #trueSuccessor: v17 #falseSuccessor: v16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.hashCode(String.java:1466) [bci: 0]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.579226171301908E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4543349988858997590
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:1475) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v49  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:1475) [bci: 53]
stamp: void
=== Inputs ===
result: i4 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i4 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B11" 
    xhandlers
    flags 
    probability 4594776433573312221
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:1468) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid j87 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/1174728845@6b2a0100
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2049777509@675f16c4
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i200 
=== Succesors ===
=== Usages ===
j91 v93 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i200  <|@  <|@
f <@~|@floating>@ <|@
tid j90 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j91 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j91 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j87 
y: j90 
=== Succesors ===
=== Usages ===
v93 v174 v176 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j87 y: j90  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j91 
y: j87 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j91 y: j87  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:1471) [bci: 39]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v93 
=== Succesors ===
trueSuccessor: v193 
falseSuccessor: v196 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v93 #trueSuccessor: v193 #falseSuccessor: v196  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = DEC v4|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594776433573312221
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:1471) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v143 
=== Usages ===
j163 
=== Predecessor ===
v193 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid j164 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 j165 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j91 
y: j164 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j91 y: j164  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v174 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v142 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v174 #trueSuccessor: v141 #falseSuccessor: v142  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4585769234318571229
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v148  <|@  <|@
f <@*|@fixed>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|DWORD] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4593077040587330124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v205 <|@
result [v2|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a199 
=== Succesors ===
=== Usages ===
j163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a199  <|@  <|@
f <@~|@floating>@ <|@
tid j163 <|@
result v6|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v162 
address: v205 
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v162 address: v205  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i187 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j172 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
v142 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = LEA [v2|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], v1|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B10" 
    successors "B8" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602084239842071116
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j165 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v145 
values: j164 j173 
=== Succesors ===
=== Usages ===
v206 j173 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v145 values: j164 j173  <|@  <|@
f <@~|@floating>@ <|@
tid i166 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v145 
values: i198 i186 
=== Succesors ===
=== Usages ===
i188 i187 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v145 values: i198 i186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v144 
=== Succesors ===
next: i201 
=== Usages ===
i201 v151 v153 j165 i166 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v144 #next: i201  <|@  <|@
f <@~|@floating>@ <|@
tid v206 <|@
result [v6|QWORD[*] + v7|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j163 
index: j165 
=== Succesors ===
=== Usages ===
i201 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j163 index: j165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i201 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v145 
address: v206 
=== Succesors ===
next: v155 
=== Usages ===
i189 
=== Predecessor ===
v145 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v145 address: v206 #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$12/466131506@2f51c27f
nodeSourcePosition: at java.lang.String.hashCode(String.java:1471) [bci: 36]
stamp: i32 [-2147483648 - 2147483616] ⇈00000000ffffffe0
=== Inputs ===
x: i166 
y: i182 
=== Succesors ===
=== Usages ===
i188 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i166 y: i182  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$62/72246354@4e69aed8
nodeSourcePosition: at java.lang.String.hashCode(String.java:1471) [bci: 36]
stamp: i32
=== Inputs ===
x: i187 
y: i166 
=== Succesors ===
=== Usages ===
i186 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i187 y: i166  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/1174728845@6b2a0100
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2049777509@675f16c4
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.hashCode(String.java:1471) [bci: 39]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i201 
=== Succesors ===
=== Usages ===
i186 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i201  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at java.lang.String.hashCode(String.java:1471) [bci: 40]
stamp: i32
=== Inputs ===
x: i188 
y: i189 
=== Succesors ===
=== Usages ===
i161 i166 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i188 y: i189  <|@  <|@
f <@~|@floating>@ <|@
tid j173 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
stamp: i64
=== Inputs ===
x: j165 
y: j172 
=== Succesors ===
=== Usages ===
v176 j165 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j165 y: j172  <|@  <|@
f <@~|@floating>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j91 
y: j173 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j91 y: j173  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v176 
=== Succesors ===
trueSuccessor: v151 
falseSuccessor: v154 
=== Usages ===
=== Predecessor ===
i201 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v176 #trueSuccessor: v151 #falseSuccessor: v154  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD, v8|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHL v8|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SUB (x: v9|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVZX [v6|QWORD[*] + v7|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = ADD (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = INC v7|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4593077040587330124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v145 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v145 #next: v150  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
v151 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 4594776433573312221
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i161 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v149 
values: i198 i186 
=== Succesors ===
=== Usages ===
v50 v76 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v149 values: i198 i186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v148 v150 
=== Succesors ===
next: v76 
=== Usages ===
i161 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v148 v150 #next: v76  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: String.hash
nodeSourcePosition: at java.lang.String.hashCode(String.java:1473) [bci: 50]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v202 
value: i161 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v202 value: i161 stateAfter: - lastLocationAccess: - #next: v50  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:1475) [bci: 53]
stamp: void
=== Inputs ===
result: i161 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i161 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599981084861029817
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v153  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v145 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v145  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|QWORD, v12|DWORD] destination: B10 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:1471) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid a136 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1833134000
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1833134000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
result int[-17435|0xffffffffffffbbe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -17435
stableDimension: 0
stamp: i32 [-17435] ⇊00000000ffffbbe5 ⇈00000000ffffbbe5
stampKind: i32
value: int[-17435|0xffffffffffffbbe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i135 
speculation: a136 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i135 speculation: a136  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1833134000] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -17435 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v15|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.hashCode(String.java:1466) [bci: 0]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4605779813455147372
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:1475) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.hashCode(String.java:1475) [bci: 53]
stamp: void
=== Inputs ===
result: i198 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i198 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@55909e20 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.15572047483370222 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4605779813455147372
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4594778441670015568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.hashCode(String.java:1466) [bci: 0]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.579226171301908E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B11" 
    xhandlers
    flags 
    probability 4594776433573312221
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOV v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = DEC v4|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594776433573312221
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4593077040587330124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = LEA [v2|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], v1|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599981084861029817
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|QWORD, v12|DWORD] destination: B10 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B10" 
    successors "B8" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602084239842071116
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|QWORD, v8|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHL v8|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SUB (x: v9|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVZX [v6|QWORD[*] + v7|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = ADD (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = INC v7|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4593077040587330124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 4594776433573312221
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4585769234318571229
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|DWORD] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4543349988858997590
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1833134000] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -17435 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v15|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.hashCode(String.java:1466) [bci: 0]
locals: v0|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          53
     9: aload_0       
    10: getfield      #1          // value:char[]
    13: arraylength   
    14: ifle          53
    17: aload_0       
    18: getfield      #1          // value:char[]
    21: astore_2      
    22: iconst_0      
    23: istore_3      
    24: iload_3       
    25: aload_0       
    26: getfield      #1          // value:char[]
    29: arraylength   
    30: if_icmpge     48
    33: bipush        31
    35: iload_1       
    36: imul          
    37: aload_2       
    38: iload_3       
    39: caload        
    40: iadd          
    41: istore_1      
    42: iinc          
    45: goto          24
    48: aload_0       
    49: iload_1       
    50: putfield      #2          // hash:int
    53: iload_1       
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@55909e20 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.15572047483370222 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4605779813455147372
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4594778441670015568
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.lang.String.hashCode(String.java:1466) [bci: 0]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 3.579226171301908E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B11" 
    xhandlers
    flags 
    probability 4594776433573312221
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r11|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr   34  <|@ instruction r8|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594776433573312221
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4593077040587330124
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rax|QWORD[*] = LEA [rax|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599981084861029817
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B10 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B10" 
    successors "B8" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602084239842071116
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   54  <|@ instruction r9|DWORD = SHL r11|DWORD y: 5 size: DWORD <|@ <|@
      nr   56  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVZX [rax|QWORD[*] + r10|QWORD * 2] size: DWORD <|@ <|@
      nr   60  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction CMP (x: r10|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4593077040587330124
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 4594776433573312221
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   82  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4585769234318571229
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4543349988858997590
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   92  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1833134000] <|@ <|@
      nr   98  <|@ instruction MOV [r15|QWORD + 668] y: -17435 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.String.hashCode(String.java:1466) [bci: 0]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          53
     9: aload_0       
    10: getfield      #1          // value:char[]
    13: arraylength   
    14: ifle          53
    17: aload_0       
    18: getfield      #1          // value:char[]
    21: astore_2      
    22: iconst_0      
    23: istore_3      
    24: iload_3       
    25: aload_0       
    26: getfield      #1          // value:char[]
    29: arraylength   
    30: if_icmpge     48
    33: bipush        31
    35: iload_1       
    36: imul          
    37: aload_2       
    38: iload_3       
    39: caload        
    40: iadd          
    41: istore_1      
    42: iinc          
    45: goto          24
    48: aload_0       
    49: iload_1       
    50: putfield      #2          // hash:int
    53: iload_1       
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@55909e20 slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.15572047483370222 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4605779813455147372
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4594778441670015568
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.lang.String.hashCode(String.java:1466) [bci: 0]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 3.579226171301908E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B11" 
    xhandlers
    flags 
    probability 4594776433573312221
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction r11|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr   34  <|@ instruction r8|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4594776433573312221
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4593077040587330124
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rax|QWORD[*] = LEA [rax|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599981084861029817
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B10 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B10" 
    successors "B9" "B10" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602084239842071116
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   54  <|@ instruction r9|DWORD = SHL r11|DWORD y: 5 size: DWORD <|@ <|@
      nr   56  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction r11|DWORD = MOVZX [rax|QWORD[*] + r10|QWORD * 2] size: DWORD <|@ <|@
      nr   60  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction CMP (x: r10|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B7 -> B9 falseDestination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors 
    xhandlers
    flags 
    probability 4594776433573312221
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   82  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4585769234318571229
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4543349988858997590
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   92  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1833134000] <|@ <|@
      nr   98  <|@ instruction MOV [r15|QWORD + 668] y: -17435 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.String.hashCode(String.java:1466) [bci: 0]
locals: rsi|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // hash:int
     4: istore_1      
     5: iload_1       
     6: ifne          53
     9: aload_0       
    10: getfield      #1          // value:char[]
    13: arraylength   
    14: ifle          53
    17: aload_0       
    18: getfield      #1          // value:char[]
    21: astore_2      
    22: iconst_0      
    23: istore_3      
    24: iload_3       
    25: aload_0       
    26: getfield      #1          // value:char[]
    29: arraylength   
    30: if_icmpge     48
    33: bipush        31
    35: iload_1       
    36: imul          
    37: aload_2       
    38: iload_3       
    39: caload        
    40: iadd          
    41: istore_1      
    42: iinc          
    45: goto          24
    48: aload_0       
    49: iload_1       
    50: putfield      #2          // hash:int
    53: iload_1       
    54: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b56104585d20f8416000000418bc2488b6c24104883c418850500000000c5f877c38b460c448b1cc50c0000004585db0f8475000000458bdb4d8bc349ffc84d3bd80f867b0000004d85c00f8c55000000488d04c510000000458bda49c7c200000000e90a0000000f1f8000000000458bd9458bcb41c1e105452bcb460fb71c504503cb49ffc24d3bd07ee344894e10418bc1488b6c24104883c418850500000000c5f877c3458bcaebe1b800000000488b6c24104883c418850500000000c5f877c349baaddeaddeaddeadde41c7879c020000e5bbffff4d8997a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1024a1f78, value=0x10ba1de60]:0x10ba1de60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@55909e20 slotKind: QWORD  <||@
  Comment 48 8 r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 52 10 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 55 12 BRANCH trueDestinationProbability: 0.15572047483370222 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12  <||@
  Comment 61 block B12 null  <||@
  Comment 61 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 61 16 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 64 18 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 73 12  <||@
  Comment 83 block B1 null  <||@
  Comment 83 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 83 22 rax|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 86 24 r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 86 [rax:0, rsi:0]at java.lang.String.hashCode(String.java:1466) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 86 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 94 26 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 97 28 BRANCH trueDestinationProbability: 3.579226171301908E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 103 block B3 null  <||@
  Comment 103 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 32 r11|QWORD = MOV r11|DWORD size: DWORD  <||@
  Comment 106 34 r8|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 112 36 CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 115 38 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B11  <||@
  Comment 121 block B4 null  <||@
  Comment 121 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 121 42 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 124 44 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 130 block B6 null  <||@
  Comment 130 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 130 48 rax|QWORD[*] = LEA [rax|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 138 -1 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 141 -1 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 148 50 JUMP ~[] destination: B6 -> B7  <||@
  Comment 153 block B10 loop 0 depth 1 header:145|LoopBegin  <||@
  Comment 153 68 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 -1 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 163 70 JUMP ~[] destination: B10 -> B7  <||@
  Comment 163 block B7 loop 0 depth 1 header:145|LoopBegin  <||@
  Comment 163 52 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 163 54 r9|DWORD = SHL r11|DWORD y: 5 size: DWORD  <||@
  Comment 170 56 r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 173 58 r11|DWORD = MOVZX [rax|QWORD[*] + r10|QWORD * 2] size: DWORD  <||@
  Comment 178 60 r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 181 62 r10|QWORD = INC r10|QWORD size: QWORD  <||@
  Comment 184 64 CMP (x: r10|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 187 66 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B7 -> B9 falseDestination: B7 -> B10  <||@
  Comment 189 block B9 null  <||@
  Comment 189 80 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 189 82 MOV (x: [rsi|QWORD[.] + 16], y: r9|DWORD) size: DWORD  <||@
  Comment 193 84 rax|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 196 86 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 205 12  <||@
  Comment 215 block B5 null  <||@
  Comment 215 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 215 -1 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 218 78 JUMP ~[] destination: B5 -> B9  <||@
  Comment 220 block B2 null  <||@
  Comment 220 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 220 90 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 225 92 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 234 12  <||@
  Comment 244 block B11 null  <||@
  Comment 244 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 244 96 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1833134000]  <||@
  Comment 244 {Object[d.a@1833134000]}  <||@
  Comment 254 98 MOV [r15|QWORD + 668] y: -17435 size: DWORD  <||@
  Comment 265 100 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 272 102 DEOPT info [bci:0]  <||@
  Comment 272 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 277 [rsi:0]at java.lang.String.hashCode(String.java:1466) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 278 {Stub<ExceptionHandlerStub.exceptionHandler>@0x10be4bf20:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 278 4  <||@
  Comment 284 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1024a1f88, value=0x10ba1f500]:0x10ba1f500}  <||@
  Comment 284 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-56[java.lang.String.hashCode()]"
  method "HotSpotCompilation-56[java.lang.String.hashCode()]"
  date 1527004915473
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 10c255de0 448b560849c1e203493bc20f856f807cff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b56104585d20f8416000000418bc2488b6c24104883c4188505d73119f5c5f877c38b460c448b1cc50c0000004585db0f8475000000458bdb4d8bc349ffc84d3bd80f867b0000004d85c00f8c55000000488d04c510000000458bda49c7c200000000e90a0000000f1f8000000000458bd9458bcb41c1e105452bcb460fb71c504503cb49ffc24d3bd07ee344894e10418bc1488b6c24104883c4188505533119f5c5f877c3458bcaebe1b800000000488b6c24104883c4188505363119f5c5f877c349ba70dc746b0700000041c7879c020000e5bbffff4d8997a8020000e809977cff90e82560bfff90e8ff957cff90f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1024a1f78, value=0x10ba1de60]:0x10ba1de60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@55909e20 slotKind: QWORD  <||@
  Comment 48 8 r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 52 10 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 55 12 BRANCH trueDestinationProbability: 0.15572047483370222 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B12  <||@
  Comment 61 block B12 null  <||@
  Comment 61 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 61 16 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 64 18 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 73 12  <||@
  Comment 83 block B1 null  <||@
  Comment 83 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 83 22 rax|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 86 24 r11|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 86 [rax:0, rsi:0]at java.lang.String.hashCode(String.java:1466) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 86 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 94 26 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 97 28 BRANCH trueDestinationProbability: 3.579226171301908E-4 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 103 block B3 null  <||@
  Comment 103 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 32 r11|QWORD = MOV r11|DWORD size: DWORD  <||@
  Comment 106 34 r8|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 112 36 CMP (x: r11|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 115 38 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B11  <||@
  Comment 121 block B4 null  <||@
  Comment 121 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 121 42 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 124 44 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 130 block B6 null  <||@
  Comment 130 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 130 48 rax|QWORD[*] = LEA [rax|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 138 -1 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 141 -1 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 148 50 JUMP ~[] destination: B6 -> B7  <||@
  Comment 153 block B10 loop 0 depth 1 header:145|LoopBegin  <||@
  Comment 153 68 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 -1 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 163 70 JUMP ~[] destination: B10 -> B7  <||@
  Comment 163 block B7 loop 0 depth 1 header:145|LoopBegin  <||@
  Comment 163 52 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 163 54 r9|DWORD = SHL r11|DWORD y: 5 size: DWORD  <||@
  Comment 170 56 r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 173 58 r11|DWORD = MOVZX [rax|QWORD[*] + r10|QWORD * 2] size: DWORD  <||@
  Comment 178 60 r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 181 62 r10|QWORD = INC r10|QWORD size: QWORD  <||@
  Comment 184 64 CMP (x: r10|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 187 66 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B7 -> B9 falseDestination: B7 -> B10  <||@
  Comment 189 block B9 null  <||@
  Comment 189 80 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 189 82 MOV (x: [rsi|QWORD[.] + 16], y: r9|DWORD) size: DWORD  <||@
  Comment 193 84 rax|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 196 86 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 205 12  <||@
  Comment 215 block B5 null  <||@
  Comment 215 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 215 -1 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 218 78 JUMP ~[] destination: B5 -> B9  <||@
  Comment 220 block B2 null  <||@
  Comment 220 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 220 90 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 225 92 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 234 12  <||@
  Comment 244 block B11 null  <||@
  Comment 244 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 244 96 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1833134000]  <||@
  Comment 244 {Object[d.a@1833134000]}  <||@
  Comment 254 98 MOV [r15|QWORD + 668] y: -17435 size: DWORD  <||@
  Comment 265 100 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 272 102 DEOPT info [bci:0]  <||@
  Comment 272 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 277 [rsi:0]at java.lang.String.hashCode(String.java:1466) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rsi|QWORD[.]  |-  |-  |-   <||@
  Comment 278 {Stub<ExceptionHandlerStub.exceptionHandler>@0x10be4bf20:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 278 4  <||@
  Comment 284 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1024a1f88, value=0x10ba1f500]:0x10ba1f500}  <||@
  Comment 284 5  <||@
  HexCodeFile>>> <|@
end_nmethod
