begin_compilation
  name " HotSpotCompilation-1532[sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)]"
  method "HotSpotCompilation-1532[sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)]"
  date 1527004913944
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a754 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a754  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/nio/cs/UTF_8$Encoder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?89 ?84 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/nio/HeapCharBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?84 ?89 v772 v773 v776 v775 v774 v790 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/nio/ByteBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?84 v778 v777 ?89 v781 v780 v779 v791 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 585
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 - - - - - - - - - 
=== Succesors ===
=== Usages ===
v650 a754 v794 i755 v795 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 - - - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a754 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a754 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.hb
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:993) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v772 
=== Succesors ===
next: v794 
=== Usages ===
a313 v794 v785 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v772 #next: v794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a754 
=== Succesors ===
next: i755 
=== Usages ===
=== Predecessor ===
a754 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a754 #next: i755  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i755 v455 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i755 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 38]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v780 
=== Succesors ===
next: i756 
=== Usages ===
i33 
=== Predecessor ===
v794 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v780 #next: i756  <|@  <|@
f <@~|@floating>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i756 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v779 
=== Succesors ===
next: i757 
=== Usages ===
i33 i40 i246 
=== Predecessor ===
i755 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v779 #next: i757  <|@  <|@
f <@~|@floating>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i757 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i757 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 49]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v781 
=== Succesors ===
next: i758 
=== Usages ===
i40 v297 
=== Predecessor ===
i756 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v781 #next: i758  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i758 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i758 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.offset
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v774 
=== Succesors ===
next: i759 
=== Usages ===
i15 i22 i239 
=== Predecessor ===
i757 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v774 #next: i759  <|@  <|@
f <@~|@floating>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i759 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i759 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:587) [bci: 21]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v776 
=== Succesors ===
next: i760 
=== Usages ===
i22 v272 
=== Predecessor ===
i758 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v776 #next: i760  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i760 v449 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i760 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 10]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v775 
=== Succesors ===
next: i761 
=== Usages ===
i15 
=== Predecessor ===
i759 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v775 #next: i761  <|@  <|@
f <@~|@floating>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a754 
=== Succesors ===
=== Usages ===
i761 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a754  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i761 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v785 
=== Succesors ===
next: v711 
=== Usages ===
v511 v534 j502 
=== Predecessor ===
i760 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v785 #next: v711  <|@  <|@
f <@~|@floating>@ <|@
tid j502 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/1174728845@6b2a0100
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2049777509@675f16c4
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i761 
=== Succesors ===
=== Usages ===
v510 v533 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i761  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 52]
stamp: i32
=== Inputs ===
x: i756 
y: i757 
=== Succesors ===
=== Usages ===
i42 i120 v103 ?84 ?89 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i756 y: i757  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 41]
stamp: i32
=== Inputs ===
x: i755 
y: i756 
=== Succesors ===
=== Usages ===
i51 i42 i46 v514 j518 v522 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i755 y: i756  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$62/72246354@4e69aed8
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 66]
stamp: i32
=== Inputs ===
x: i40 
y: i33 
=== Succesors ===
=== Usages ===
i470 v226 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i40 y: i33  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:587) [bci: 24]
stamp: i32
=== Inputs ===
x: i758 
y: i759 
=== Succesors ===
=== Usages ===
?84 v90 v537 i41 ?89 i528 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i758 y: i759  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 13]
stamp: i32
=== Inputs ===
x: i758 
y: i760 
=== Succesors ===
=== Usages ===
i50 i41 j504 v511 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i758 y: i760  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$62/72246354@4e69aed8
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 61]
stamp: i32
=== Inputs ===
x: i22 
y: i15 
=== Succesors ===
=== Usages ===
i470 v226 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i22 y: i15  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i42 
y: i41 
=== Succesors ===
=== Usages ===
i470 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i42 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i470 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v226 
trueValue: i42 
falseValue: i41 
=== Succesors ===
=== Usages ===
i46 j505 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v226 trueValue: i42 falseValue: i41  <|@  <|@
f <@~|@floating>@ <|@
tid j505 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/1121602809@34736fd3
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1363241743@10f97424
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i470 
=== Succesors ===
=== Usages ===
j507 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i470  <|@  <|@
f <@~|@floating>@ <|@
tid j506 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] â‡Šffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j507 j530 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j507 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j505 
y: j506 
=== Succesors ===
=== Usages ===
j508 j519 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j505 y: j506  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
stamp: i32
=== Inputs ===
x: i33 
y: i470 
=== Succesors ===
=== Usages ===
v514 v53 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i33 y: i470  <|@  <|@
f <@~|@floating>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i33 
y: i46 
=== Succesors ===
=== Usages ===
v711 v727 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i33 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid a313 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:993) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a754 
=== Succesors ===
=== Usages ===
?89 v782 ?84 v786 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a754  <|@  <|@
f <@~|@floating>@ <|@
tid a659 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@831259190
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@831259190]
=== Inputs ===
=== Succesors ===
=== Usages ===
a649 a649 a649 a649 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v514 
=== Succesors ===
trueSuccessor: v710 
falseSuccessor: v707 
=== Usages ===
=== Predecessor ===
i761 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v514 #trueSuccessor: v710 #falseSuccessor: v707  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v719 
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v719  <|@  <|@
f <@~|@floating>@ <|@
tid j504 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/1121602809@34736fd3
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1363241743@10f97424
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i15 
=== Succesors ===
=== Usages ===
j508 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i15  <|@  <|@
f <@~|@floating>@ <|@
tid j508 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j504 
y: j507 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j504 y: j507  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j508 
y: j502 
=== Succesors ===
=== Usages ===
v719 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j508 y: j502  <|@  <|@
f <@~|@floating>@ <|@
tid i658 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -89883
stableDimension: 0
stamp: i32 [-89883] â‡Š00000000fffea0e5 â‡ˆ00000000fffea0e5
stampKind: i32
value: int[-89883|0xfffffffffffea0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i648 i648 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v510 
=== Succesors ===
trueSuccessor: v718 
falseSuccessor: v715 
=== Usages ===
=== Predecessor ===
v710 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v510 #trueSuccessor: v718 #falseSuccessor: v715  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v719 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
f <@~|@floating>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i15 
y: i761 
=== Succesors ===
=== Usages ===
v717 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i15 y: i761  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v511 
=== Succesors ===
trueSuccessor: v708 
falseSuccessor: v716 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v511 #trueSuccessor: v708 #falseSuccessor: v716  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v717 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v706  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v708 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v792 
=== Usages ===
=== Predecessor ===
v717 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v792  <|@  <|@
f <@*|@fixed>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
v716 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v657 
=== Usages ===
=== Predecessor ===
v719 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v657  <|@  <|@
f <@*|@fixed>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
v715 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v705 
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v705  <|@  <|@
f <@*|@fixed>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v707 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B3" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v705 v706 
=== Succesors ===
next: a762 
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v705 v706 #next: a762  <|@  <|@
f <@~|@floating>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a762 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a762 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:993) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v777 
=== Succesors ===
next: v795 
=== Usages ===
?84 v795 v783 v784 v787 v788 v789 ?89 v796 
=== Predecessor ===
v704 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v777 #next: v795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a762 
=== Succesors ===
next: v727 
=== Usages ===
=== Predecessor ===
a762 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a762 #next: v727  <|@  <|@
f <@*|@fixed>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v514 
=== Succesors ===
trueSuccessor: v726 
falseSuccessor: v723 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v514 #trueSuccessor: v726 #falseSuccessor: v723  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: i763 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i763  <|@  <|@
f <@~|@floating>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a762 
=== Succesors ===
=== Usages ===
i763 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i763 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v783 
=== Succesors ===
next: v735 
=== Usages ===
v522 j517 
=== Predecessor ===
v726 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v783 #next: v735  <|@  <|@
f <@~|@floating>@ <|@
tid j518 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/1121602809@34736fd3
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1363241743@10f97424
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i33 
=== Succesors ===
=== Usages ===
j519 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i33  <|@  <|@
f <@~|@floating>@ <|@
tid j519 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j507 
y: j518 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j507 y: j518  <|@  <|@
f <@~|@floating>@ <|@
tid j517 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/1174728845@6b2a0100
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2049777509@675f16c4
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i763 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i763  <|@  <|@
f <@~|@floating>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j519 
y: j517 
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j519 y: j517  <|@  <|@
f <@~|@floating>@ <|@
tid i661 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -96283
stableDimension: 0
stamp: i32 [-96283] â‡Š00000000fffe87e5 â‡ˆ00000000fffe87e5
stampKind: i32
value: int[-96283|0xfffffffffffe87e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i648 i648 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v521 
=== Succesors ===
trueSuccessor: v734 
falseSuccessor: v731 
=== Usages ===
=== Predecessor ===
i763 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v521 #trueSuccessor: v734 #falseSuccessor: v731  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v733 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v733  <|@  <|@
f <@~|@floating>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i33 
y: i763 
=== Succesors ===
=== Usages ===
v733 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i33 y: i763  <|@  <|@
f <@*|@fixed>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v522 
=== Succesors ===
trueSuccessor: v724 
falseSuccessor: v732 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v522 #trueSuccessor: v724 #falseSuccessor: v732  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v722 
=== Usages ===
=== Predecessor ===
v733 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v722  <|@  <|@
f <@*|@fixed>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v724 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v793 
=== Usages ===
=== Predecessor ===
v733 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v793  <|@  <|@
f <@*|@fixed>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
v732 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v660  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
v731 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v721 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v721  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v723 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v721 v722 
=== Succesors ===
next: i764 
=== Usages ===
v526 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v721 v722 #next: i764  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i764 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i764 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.isReadOnly
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 16]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v773 
=== Succesors ===
next: v572 
=== Usages ===
i318 
=== Predecessor ===
v720 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v773 #next: v572  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/1174728845@6b2a0100
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2049777509@675f16c4
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 16]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i764 
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i764  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 v172 v274 v299 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i318 
y: i117 
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i318 y: i117  <|@  <|@
f <@~|@floating>@ <|@
tid a647 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v671 a649 a649 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v172 
=== Succesors ===
trueSuccessor: v569 
falseSuccessor: v571 
=== Usages ===
=== Predecessor ===
i764 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v172 #trueSuccessor: v569 #falseSuccessor: v571  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B66" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i765 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i765  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i765 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i765 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.isReadOnly
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 16]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v778 
=== Succesors ===
next: v576 
=== Usages ===
i336 
=== Predecessor ===
v569 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v778 #next: v576  <|@  <|@
f <@~|@floating>@ <|@
tid i336 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/1174728845@6b2a0100
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2049777509@675f16c4
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 16]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i765 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i765  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i336 
y: i117 
=== Succesors ===
=== Usages ===
v576 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i336 y: i117  <|@  <|@
f <@*|@fixed>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v202 
=== Succesors ===
trueSuccessor: v573 
falseSuccessor: v575 
=== Usages ===
=== Predecessor ===
i765 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v202 #trueSuccessor: v573 #falseSuccessor: v575  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v576 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i76 i77 i105 i154 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i460 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] â‡Š0000000000000080 â‡ˆ0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v461 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
v573 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B18" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4628825885096913771
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v49 
values: i15 i77 
=== Succesors ===
=== Usages ===
j527 v537 v782 v534 i77 i528 ?84 i87 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v49 values: i15 i77  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v49 
values: i33 i76 
=== Succesors ===
=== Usages ===
v784 v53 ?84 i88 i76 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v49 values: i33 i76  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 28.893038769641333
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v48 
=== Succesors ===
next: v60 
=== Usages ===
i50 i51 v56 v68 v83 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v48 #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i46 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i51 y: i46  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
stamp: void
trueSuccessorProbability: 0.9655146968392572
=== Inputs ===
condition: v53 
=== Succesors ===
trueSuccessor: v54 
falseSuccessor: v56 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v53 #trueSuccessor: v54 #falseSuccessor: v56  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4628545427595609420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
next: i766 
=== Usages ===
v516 v526 
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i766  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v704 v54 
=== Succesors ===
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v704 v54  <|@  <|@
f <@~|@floating>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a313 
index: i50 
=== Succesors ===
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a313 index: i50  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i766 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v516 
address: v782 
=== Succesors ===
next: v74 
=== Usages ===
v461 i463 
=== Predecessor ===
v54 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v516 address: v782 #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i766 
y: i460 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i766 y: i460  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
stamp: void
trueSuccessorProbability: 0.9998704217771155
=== Inputs ===
condition: v461 
=== Succesors ===
trueSuccessor: v64 
falseSuccessor: v68 
=== Usages ===
=== Predecessor ===
i766 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v461 #trueSuccessor: v64 #falseSuccessor: v68  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4628544410120203115
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v383  <|@  <|@
f <@~|@floating>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v720 v54 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v720 v54  <|@  <|@
f <@~|@floating>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i51 
index: a762 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i51 index: a762  <|@  <|@
f <@~|@floating>@ <|@
tid i463 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$63/575803732@23b0e3ca
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$64/759660843@1185e3db
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 104]
resultBits: 8
stamp: i8
=== Inputs ===
value: i766 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v526 
address: v784 
value: i463 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v526 address: v784 value: i463 stateAfter: - lastLocationAccess: - #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
stamp: i32
=== Inputs ===
x: i51 
y: i75 
=== Succesors ===
=== Usages ===
i51 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i51 y: i75  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 100]
stamp: i32
=== Inputs ===
x: i50 
y: i75 
=== Succesors ===
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i50 y: i75  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
loopBegin: v49 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v49  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4570481581054762355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
v68 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607149859587015650
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v65  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
v56 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B29" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v65 v67 
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v65 v67 #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i22 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i50 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v537 
=== Succesors ===
trueSuccessor: v742 
falseSuccessor: v739 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v537 #trueSuccessor: v742 #falseSuccessor: v739  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v751 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v751  <|@  <|@
f <@~|@floating>@ <|@
tid j527 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/1121602809@34736fd3
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1363241743@10f97424
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i50 
=== Succesors ===
=== Usages ===
j531 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i50  <|@  <|@
f <@~|@floating>@ <|@
tid i528 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$62/72246354@4e69aed8
stamp: i32
=== Inputs ===
x: i22 
y: i50 
=== Succesors ===
=== Usages ===
j529 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i22 y: i50  <|@  <|@
f <@~|@floating>@ <|@
tid j529 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/1121602809@34736fd3
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1363241743@10f97424
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i528 
=== Succesors ===
=== Usages ===
j530 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i528  <|@  <|@
f <@~|@floating>@ <|@
tid j530 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j529 
y: j506 
=== Succesors ===
=== Usages ===
j531 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j529 y: j506  <|@  <|@
f <@~|@floating>@ <|@
tid j531 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j527 
y: j530 
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j527 y: j530  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j531 
y: j502 
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j531 y: j502  <|@  <|@
f <@*|@fixed>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v533 
=== Succesors ===
trueSuccessor: v750 
falseSuccessor: v747 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v533 #trueSuccessor: v750 #falseSuccessor: v747  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i761 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i50 y: i761  <|@  <|@
f <@*|@fixed>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v534 
=== Succesors ===
trueSuccessor: v740 
falseSuccessor: v748 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v534 #trueSuccessor: v740 #falseSuccessor: v748  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v738 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v738  <|@  <|@
f <@*|@fixed>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
v740 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v746 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v746  <|@  <|@
f <@*|@fixed>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
v748 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v745  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
v747 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v745 v746 
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v745 v746 #next: v578  <|@  <|@
tid ?84 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a313 i50 i22 a762 i51 i40 - - - 
=== Succesors ===
=== Usages ===
v578 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a313 i50 i22 a762 i51 i40 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 389
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
reason: BoundsCheckException
speculation: Object[d.a@1850367900]
stamp: void
=== Inputs ===
stateBefore: ?84 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?84  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v737 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v737  <|@  <|@
f <@*|@fixed>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
v739 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v737 v738 
=== Succesors ===
next: v85 
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v737 v738 #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
v736 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B35" "B48" 
    successors "B32" "B52" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607620357689002539
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i87 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v86 
values: i50 i154 i154 
=== Succesors ===
=== Usages ===
?89 v90 i154 v786 i239 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v86 values: i50 i154 i154  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v86 
values: i51 i105 i164 
=== Succesors ===
=== Usages ===
?89 i246 v103 i105 v418 i164 i120 v787 i163 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v86 values: i51 i105 i164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0972419675860108
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v85 
=== Succesors ===
next: v97 
=== Usages ===
i87 i88 v93 v155 v165 v614 v584 v589 v594 v599 v604 v609 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v85 #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i87 
y: i22 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i87 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
stamp: void
trueSuccessorProbability: 0.08862399585384817
=== Inputs ===
condition: v90 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v90 #trueSuccessor: v91 #falseSuccessor: v93  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591671442886927042
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: i767 
=== Usages ===
v539 
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i767  <|@  <|@
f <@~|@floating>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a762 
=== Succesors ===
=== Usages ===
i767 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i767 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v796 
=== Succesors ===
next: v585 
=== Usages ===
v418 v428 v438 
=== Predecessor ===
v91 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v796 #next: v585  <|@  <|@
f <@~|@floating>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i88 
y: i767 
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i88 y: i767  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v418 
=== Succesors ===
trueSuccessor: v581 
falseSuccessor: v584 
=== Usages ===
=== Predecessor ===
i767 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v418 #trueSuccessor: v581 #falseSuccessor: v584  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591671442886927042
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
stamp: void
=== Inputs ===
=== Succesors ===
next: i768 
=== Usages ===
v426 v410 
=== Predecessor ===
v585 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i768  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v736 v91 
=== Succesors ===
=== Usages ===
i768 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v736 v91  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a313 
index: i87 
=== Succesors ===
=== Usages ===
i768 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a313 index: i87  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i768 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v539 
address: v786 
=== Succesors ===
next: v102 
=== Usages ===
i396 
=== Predecessor ===
v581 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v539 address: v786 #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid i396 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/1174728845@6b2a0100
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2049777509@675f16c4
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
resultBits: 32
stamp: i32 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i768 
=== Succesors ===
=== Usages ===
v99 i106 i143 v112 v253 v255 i126 i134 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i768  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 84]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] â‡Š0000000000000080 â‡ˆ0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i144 v99 i137 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i396 
y: i62 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i396 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
stamp: i32
=== Inputs ===
x: i87 
y: i75 
=== Succesors ===
=== Usages ===
i87 i87 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i87 y: i75  <|@  <|@
f <@~|@floating>@ <|@
tid i105 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 151]
stamp: i32
=== Inputs ===
x: i88 
y: i75 
=== Succesors ===
=== Usages ===
v428 v788 i88 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i88 y: i75  <|@  <|@
f <@~|@floating>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i88 
index: a762 
=== Succesors ===
=== Usages ===
v426 v410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i88 index: a762  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
stamp: void
trueSuccessorProbability: 0.9444444444444444
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v100 
falseSuccessor: v101 
=== Usages ===
=== Predecessor ===
i768 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v100 #falseSuccessor: v101  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591282163874495813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v590 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v590  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i88 
y: i40 
=== Succesors ===
=== Usages ===
v590 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i88 y: i40  <|@  <|@
f <@*|@fixed>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v103 
=== Succesors ===
trueSuccessor: v586 
falseSuccessor: v589 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v103 #trueSuccessor: v586 #falseSuccessor: v589  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4591282163874495813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v590 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$63/575803732@23b0e3ca
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$64/759660843@1185e3db
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 156]
resultBits: 8
stamp: i8
=== Inputs ===
value: i396 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v581 
address: v787 
value: i106 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v581 address: v787 value: i106 stateAfter: - lastLocationAccess: - #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
loopBegin: v86 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v86  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v590 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v674  <|@  <|@
f <@~|@floating>@ <|@
tid i675 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -101651
stableDimension: 0
stamp: i32 [-101651] â‡Š00000000fffe72ed â‡ˆ00000000fffe72ed
stampKind: i32
value: int[-101651|0xfffffffffffe72ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v589 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 161]
stamp: void
=== Inputs ===
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 163]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] â‡Š0000000000000800 â‡ˆ0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i396 
y: i111 
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i396 y: i111  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v112 
=== Succesors ===
trueSuccessor: v594 
falseSuccessor: v591 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v112 #trueSuccessor: v594 #falseSuccessor: v591  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v676 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid i677 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105235
stableDimension: 0
stamp: i32 [-105235] â‡Š00000000fffe64ed â‡ˆ00000000fffe64ed
stampKind: i32
value: int[-105235|0xfffffffffffe64ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
stamp: void
=== Inputs ===
=== Succesors ===
next: v703 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v703  <|@  <|@
f <@~|@floating>@ <|@
tid i252 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] â‡Š000000000000d800 â‡ˆ000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i396 
y: i252 
=== Succesors ===
=== Usages ===
v703 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i396 y: i252  <|@  <|@
f <@*|@fixed>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v253 
=== Succesors ===
trueSuccessor: v699 
falseSuccessor: v702 
=== Usages ===
=== Predecessor ===
v591 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v253 #trueSuccessor: v699 #falseSuccessor: v702  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4568374886725212108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
=== Succesors ===
next: v697 
=== Usages ===
=== Predecessor ===
v703 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v697  <|@  <|@
f <@*|@fixed>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
v699 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4568374886725212108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v703 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid i254 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
rawvalue: 57344
stableDimension: 0
stamp: i32 [57344] â‡Š000000000000e000 â‡ˆ000000000000e000
stampKind: i32
value: int[57344|0xe000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 9]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i396 
y: i254 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i396 y: i254  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v255 
=== Succesors ===
trueSuccessor: v599 
falseSuccessor: v700 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v255 #trueSuccessor: v599 #falseSuccessor: v700  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v678 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v678  <|@  <|@
f <@~|@floating>@ <|@
tid i679 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105491
stableDimension: 0
stamp: i32 [-105491] â‡Š00000000fffe63ed â‡ˆ00000000fffe63ed
stampKind: i32
value: int[-105491|0xfffffffffffe63ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v599 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4568374886725212108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v698  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
v700 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v697 v698 
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v697 v698 #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$62/72246354@4e69aed8
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 398]
stamp: i32
=== Inputs ===
x: i40 
y: i88 
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i40 y: i88  <|@  <|@
f <@~|@floating>@ <|@
tid i121 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 399]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] â‡Š0000000000000003 â‡ˆ0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 i164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i120 
y: i121 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i120 y: i121  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v122 
=== Succesors ===
trueSuccessor: v604 
falseSuccessor: v601 
=== Usages ===
=== Predecessor ===
v696 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v122 #trueSuccessor: v604 #falseSuccessor: v601  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v680 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v680  <|@  <|@
f <@~|@floating>@ <|@
tid i681 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105747
stableDimension: 0
stamp: i32 [-105747] â‡Š00000000fffe62ed â‡ˆ00000000fffe62ed
stampKind: i32
value: int[-105747|0xfffffffffffe62ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v604 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
stamp: void
=== Inputs ===
=== Succesors ===
next: v610 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v610  <|@  <|@
f <@~|@floating>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i105 
y: i767 
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i105 y: i767  <|@  <|@
f <@*|@fixed>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v428 
=== Succesors ===
trueSuccessor: v606 
falseSuccessor: v609 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v428 #trueSuccessor: v606 #falseSuccessor: v609  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
stamp: void
=== Inputs ===
=== Succesors ===
next: v615 
=== Usages ===
v436 
=== Predecessor ===
v610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid i162 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] â‡Š0000000000000002 â‡ˆ0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i163 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
stamp: i32
=== Inputs ===
x: i88 
y: i162 
=== Succesors ===
=== Usages ===
v438 v789 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i88 y: i162  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i163 
y: i767 
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i163 y: i767  <|@  <|@
f <@*|@fixed>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v438 
=== Succesors ===
trueSuccessor: v611 
falseSuccessor: v614 
=== Usages ===
=== Predecessor ===
v606 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v438 #trueSuccessor: v611 #falseSuccessor: v614  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
stamp: void
=== Inputs ===
=== Succesors ===
next: v426 
=== Usages ===
v446 
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v426  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 425]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] â‡Š000000000000000c â‡ˆ000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$66/1929392697@1aef7eb1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 427]
stamp: i32 [0 - 15] â‡ˆ000000000000000f
=== Inputs ===
x: i396 
y: i125 
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i396 y: i125  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 420]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] â‡Š00000000000000e0 â‡ˆ00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$67/1650437035@59ad3538
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 428]
stamp: i32 [224 - 239] â‡Š00000000000000e0 â‡ˆ00000000000000ef
=== Inputs ===
x: i126 
y: i124 
=== Succesors ===
=== Usages ===
i128 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i126 y: i124  <|@  <|@
f <@~|@floating>@ <|@
tid i128 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$63/575803732@23b0e3ca
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$64/759660843@1185e3db
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 429]
resultBits: 8
stamp: i8 [-32 - -17] â‡Š00000000000000e0 â‡ˆ00000000000000ef
=== Inputs ===
value: i127 
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v581 
address: v787 
value: i128 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v436 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v581 address: v787 value: i128 stateAfter: - lastLocationAccess: - #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i105 
index: a762 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i105 index: a762  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 443]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] â‡Š0000000000000006 â‡ˆ0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i134 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$66/1929392697@1aef7eb1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 445]
stamp: i32 [0 - 1023] â‡ˆ00000000000003ff
=== Inputs ===
x: i396 
y: i133 
=== Succesors ===
=== Usages ===
i136 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i396 y: i133  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 446]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] â‡Š000000000000003f â‡ˆ000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i136 i143 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$68/1111552356@74e89afd
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 448]
stamp: i32 [0 - 63] â‡ˆ000000000000003f
=== Inputs ===
x: i134 
y: i135 
=== Succesors ===
=== Usages ===
i137 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i134 y: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i137 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$67/1650437035@59ad3538
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 449]
stamp: i32 [128 - 191] â‡Š0000000000000080 â‡ˆ00000000000000bf
=== Inputs ===
x: i136 
y: i62 
=== Succesors ===
=== Usages ===
i138 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i136 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$63/575803732@23b0e3ca
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$64/759660843@1185e3db
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 450]
resultBits: 8
stamp: i8 [-128 - -65] â‡Š0000000000000080 â‡ˆ00000000000000bf
=== Inputs ===
value: i137 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v606 
address: v788 
value: i138 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v446 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v606 address: v788 value: i138 stateAfter: - lastLocationAccess: - #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i163 
index: a762 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i163 index: a762  <|@  <|@
f <@~|@floating>@ <|@
tid i143 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$68/1111552356@74e89afd
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 466]
stamp: i32 [0 - 63] â‡ˆ000000000000003f
=== Inputs ===
x: i396 
y: i135 
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i396 y: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$67/1650437035@59ad3538
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 467]
stamp: i32 [128 - 191] â‡Š0000000000000080 â‡ˆ00000000000000bf
=== Inputs ===
x: i143 
y: i62 
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i143 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$63/575803732@23b0e3ca
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$64/759660843@1185e3db
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 468]
resultBits: 8
stamp: i8 [-128 - -65] â‡Š0000000000000080 â‡ˆ00000000000000bf
=== Inputs ===
value: i144 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v611 
address: v789 
value: i145 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v611 address: v789 value: i145 stateAfter: - lastLocationAccess: - #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 456]
stamp: i32
=== Inputs ===
x: i88 
y: i121 
=== Succesors ===
=== Usages ===
i88 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i88 y: i121  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
stamp: void
=== Inputs ===
loopBegin: v86 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v86  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v684  <|@  <|@
f <@~|@floating>@ <|@
tid i685 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -112411
stableDimension: 0
stamp: i32 [-112411] â‡Š00000000fffe48e5 â‡ˆ00000000fffe48e5
stampKind: i32
value: int[-112411|0xfffffffffffe48e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v614 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v682 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v682  <|@  <|@
f <@~|@floating>@ <|@
tid i683 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -109851
stableDimension: 0
stamp: i32 [-109851] â‡Š00000000fffe52e5 â‡ˆ00000000fffe52e5
stampKind: i32
value: int[-109851|0xfffffffffffe52e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v609 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v672 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v672  <|@  <|@
f <@~|@floating>@ <|@
tid i673 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -126491
stableDimension: 0
stamp: i32 [-126491] â‡Š00000000fffe11e5 â‡ˆ00000000fffe11e5
stampKind: i32
value: int[-126491|0xfffffffffffe11e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v584 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 476]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v619 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v619  <|@  <|@
f <@~|@floating>@ <|@
tid i239 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$62/72246354@4e69aed8
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 6]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: i32
=== Inputs ===
x: i87 
y: i758 
=== Succesors ===
=== Usages ===
v280 v272 v274 v449 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i87 y: i758  <|@  <|@
f <@~|@floating>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i759 
y: i239 
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i759 y: i239  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v272 
=== Succesors ===
trueSuccessor: v618 
falseSuccessor: v616 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v272 #trueSuccessor: v618 #falseSuccessor: v616  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid i668 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -114451
stableDimension: 0
stamp: i32 [-114451] â‡Š00000000fffe40ed â‡ˆ00000000fffe40ed
stampKind: i32
value: int[-114451|0xfffffffffffe40ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v618 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v623  <|@  <|@
f <@~|@floating>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i239 
y: i117 
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i239 y: i117  <|@  <|@
f <@*|@fixed>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v274 
=== Succesors ===
trueSuccessor: v622 
falseSuccessor: v620 
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v274 #trueSuccessor: v622 #falseSuccessor: v620  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v686  <|@  <|@
f <@~|@floating>@ <|@
tid i687 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -114707
stableDimension: 0
stamp: i32 [-114707] â‡Š00000000fffe3fed â‡ˆ00000000fffe3fed
stampKind: i32
value: int[-114707|0xfffffffffffe3fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v622 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: i769 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i769  <|@  <|@
f <@~|@floating>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i769 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i769 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v790 
=== Succesors ===
next: v627 
=== Usages ===
v280 
=== Predecessor ===
v620 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v790 #next: v627  <|@  <|@
f <@~|@floating>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i239 
y: i769 
=== Succesors ===
=== Usages ===
v627 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i239 y: i769  <|@  <|@
f <@*|@fixed>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v280 
=== Succesors ===
trueSuccessor: v626 
falseSuccessor: v624 
=== Usages ===
=== Predecessor ===
i769 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v280 #trueSuccessor: v626 #falseSuccessor: v624  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v688 
=== Usages ===
=== Predecessor ===
v627 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v688  <|@  <|@
f <@~|@floating>@ <|@
tid i689 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -115731
stableDimension: 0
stamp: i32 [-115731] â‡Š00000000fffe3bed â‡ˆ00000000fffe3bed
stampKind: i32
value: int[-115731|0xfffffffffffe3bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v626 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v627 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v631  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$62/72246354@4e69aed8
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 17]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: i32
=== Inputs ===
x: i88 
y: i756 
=== Succesors ===
=== Usages ===
v305 v297 v299 v455 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i88 y: i756  <|@  <|@
f <@~|@floating>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i757 
y: i246 
=== Succesors ===
=== Usages ===
v631 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i757 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v297 
=== Succesors ===
trueSuccessor: v630 
falseSuccessor: v628 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v297 #trueSuccessor: v630 #falseSuccessor: v628  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v690 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v690  <|@  <|@
f <@~|@floating>@ <|@
tid i691 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -115987
stableDimension: 0
stamp: i32 [-115987] â‡Š00000000fffe3aed â‡ˆ00000000fffe3aed
stampKind: i32
value: int[-115987|0xfffffffffffe3aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v630 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v635  <|@  <|@
f <@~|@floating>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i246 
y: i117 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i246 y: i117  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v299 
=== Succesors ===
trueSuccessor: v634 
falseSuccessor: v632 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v299 #trueSuccessor: v634 #falseSuccessor: v632  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v692 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v692  <|@  <|@
f <@~|@floating>@ <|@
tid i693 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -116243
stableDimension: 0
stamp: i32 [-116243] â‡Š00000000fffe39ed â‡ˆ00000000fffe39ed
stampKind: i32
value: int[-116243|0xfffffffffffe39ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v634 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B65" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: i770 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i770  <|@  <|@
f <@~|@floating>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i770 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i770 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v791 
=== Succesors ===
next: v639 
=== Usages ===
v305 
=== Predecessor ===
v632 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v791 #next: v639  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i246 
y: i770 
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i246 y: i770  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v638 
falseSuccessor: v636 
=== Usages ===
=== Predecessor ===
i770 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v638 #falseSuccessor: v636  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid i695 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -117267
stableDimension: 0
stamp: i32 [-117267] â‡Š00000000fffe35ed â‡ˆ00000000fffe35ed
stampKind: i32
value: int[-117267|0xfffffffffffe35ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v638 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B53" "B51" "B36" "B38" "B42" "B45" "B50" "B49" "B55" "B57" "B59" "B61" "B63" 
    successors 
    xhandlers
    flags 
    probability 2371708153763987456
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i669 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-126491 - -101651] â‡Š00000000fffe00e5 â‡ˆ00000000fffe7fed
valueDescription: i32
=== Inputs ===
merge: v666 
values: i668 i673 i675 i677 i679 i681 i683 i685 i687 i689 i691 i693 i695 
=== Succesors ===
=== Usages ===
v671 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v666 values: i668 i673 i675 i677 i679 i681 i683 i685 i687 i689 i691 i693 i695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v667 v672 v674 v676 v678 v680 v682 v684 v686 v688 v690 v692 v694 
=== Succesors ===
next: v671 
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v667 v672 v674 v676 v678 v680 v682 v684 v686 v688 v690 v692 v694 #next: v671  <|@  <|@
tid ?89 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a313 i87 i22 a762 i88 i40 - - - 
=== Succesors ===
=== Usages ===
v671 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a313 i87 i22 a762 i88 i40 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?89 
actionAndReason: i669 
speculation: a647 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?89 actionAndReason: i669 speculation: a647  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v449  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v775 
value: i239 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v775 value: i239 stateAfter: - lastLocationAccess: - #next: v455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v780 
value: i246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v780 value: i246 stateAfter: - lastLocationAccess: - #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid a160 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:637) [bci: 485]
rawvalue: CoderResult@1374209548
stableDimension: 0
stamp: a!# Ljava/nio/charset/CoderResult;
stampKind: a -
value: Object[CoderResult@1374209548]
=== Inputs ===
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:637) [bci: 488]
stamp: void
=== Inputs ===
result: a160 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a160 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v664 
=== Usages ===
=== Predecessor ===
v576 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v664  <|@  <|@
f <@~|@floating>@ <|@
tid i665 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -86291
stableDimension: 0
stamp: i32 [-86291] â‡Š00000000fffeaeed â‡ˆ00000000fffeaeed
stampKind: i32
value: int[-86291|0xfffffffffffeaeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i648 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
v575 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v662 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v662  <|@  <|@
f <@~|@floating>@ <|@
tid i663 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -81683
stableDimension: 0
stamp: i32 [-81683] â‡Š00000000fffec0ed â‡ˆ00000000fffec0ed
stampKind: i32
value: int[-81683|0xfffffffffffec0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i648 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
v571 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" "B67" "B66" "B4" "B11" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i648 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-96283 - -79115] â‡Š00000000fffe80e5 â‡ˆ00000000fffefffd
valueDescription: i32
=== Inputs ===
merge: v644 
values: i658 i661 i663 i665 i658 i661 
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v644 values: i658 i661 i663 i665 i658 i661  <|@  <|@
f <@~|@floating>@ <|@
tid a649 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v644 
values: a659 a659 a647 a647 a659 a659 
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v644 values: a659 a659 a647 a647 a659 a659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v657 v660 v662 v664 v792 v793 
=== Succesors ===
next: v650 
=== Usages ===
i648 a649 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v657 v660 v662 v664 v792 v793 #next: v650  <|@  <|@
f <@*|@fixed>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i648 
speculation: a649 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i648 speculation: a649  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a754 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a754  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/nio/cs/UTF_8$Encoder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?89 ?84 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/nio/HeapCharBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?84 ?89 v772 v773 v776 v775 v774 v790 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/nio/ByteBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?84 v778 v777 ?89 v781 v780 v779 v791 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 585
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 - - - - - - - - - 
=== Succesors ===
=== Usages ===
v650 a754 v794 i755 v795 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 - - - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v772 <|@
result [v1|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a754 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a754 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.hb
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:993) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v772 
=== Succesors ===
next: v794 
=== Usages ===
a313 v794 v785 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v772 #next: v794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a754 
=== Succesors ===
next: i755 
=== Usages ===
=== Predecessor ===
a754 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a754 #next: i755  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
result [v2|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i755 v455 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i755 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 38]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v780 
=== Succesors ===
next: i756 
=== Usages ===
i33 
=== Predecessor ===
v794 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v780 #next: i756  <|@  <|@
f <@~|@floating>@ <|@
tid v779 <|@
result [v2|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i756 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i756 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.offset
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v779 
=== Succesors ===
next: i757 
=== Usages ===
i33 i40 i246 
=== Predecessor ===
i755 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v779 #next: i757  <|@  <|@
f <@~|@floating>@ <|@
tid v781 <|@
result [v2|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i757 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i757 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 49]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v781 
=== Succesors ===
next: i758 
=== Usages ===
i40 v297 
=== Predecessor ===
i756 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v781 #next: i758  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
result [v1|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i758 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i758 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.offset
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1025) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v774 
=== Succesors ===
next: i759 
=== Usages ===
i15 i22 i239 
=== Predecessor ===
i757 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v774 #next: i759  <|@  <|@
f <@~|@floating>@ <|@
tid v776 <|@
result [v1|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i759 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i759 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.limit
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:256) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:587) [bci: 21]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v776 
=== Succesors ===
next: i760 
=== Usages ===
i22 v272 
=== Predecessor ===
i758 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v776 #next: i760  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i760 v449 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i760 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:226) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 10]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v775 
=== Succesors ===
next: i761 
=== Usages ===
i15 
=== Predecessor ===
i759 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v775 #next: i761  <|@  <|@
f <@~|@floating>@ <|@
tid v785 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a754 
=== Succesors ===
=== Usages ===
i761 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a754  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i761 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v785 
=== Succesors ===
next: v711 
=== Usages ===
v511 v534 j502 
=== Predecessor ===
i760 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v785 #next: v711  <|@  <|@
f <@~|@floating>@ <|@
tid j502 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/1174728845@6b2a0100
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2049777509@675f16c4
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i761 
=== Succesors ===
=== Usages ===
v510 v533 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i761  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:591) [bci: 52]
stamp: i32
=== Inputs ===
x: i756 
y: i757 
=== Succesors ===
=== Usages ===
i42 i120 v103 ?84 ?89 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i756 y: i757  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:590) [bci: 41]
stamp: i32
=== Inputs ===
x: i755 
y: i756 
=== Succesors ===
=== Usages ===
i51 i42 i46 v514 j518 v522 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i755 y: i756  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$62/72246354@4e69aed8
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 66]
stamp: i32
=== Inputs ===
x: i40 
y: i33 
=== Succesors ===
=== Usages ===
i470 v226 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i40 y: i33  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:587) [bci: 24]
stamp: i32
=== Inputs ===
x: i758 
y: i759 
=== Succesors ===
=== Usages ===
?84 v90 v537 i41 ?89 i528 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i758 y: i759  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:586) [bci: 13]
stamp: i32
=== Inputs ===
x: i758 
y: i760 
=== Succesors ===
=== Usages ===
i50 i41 j504 v511 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i758 y: i760  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$62/72246354@4e69aed8
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 61]
stamp: i32
=== Inputs ===
x: i22 
y: i15 
=== Succesors ===
=== Usages ===
i470 v226 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i22 y: i15  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 67]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i42 
y: i41 
=== Succesors ===
=== Usages ===
i470 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i42 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i470 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v226 
trueValue: i42 
falseValue: i41 
=== Succesors ===
=== Usages ===
i46 j505 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v226 trueValue: i42 falseValue: i41  <|@  <|@
f <@~|@floating>@ <|@
tid j505 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/1121602809@34736fd3
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1363241743@10f97424
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i470 
=== Succesors ===
=== Usages ===
j507 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i470  <|@  <|@
f <@~|@floating>@ <|@
tid j506 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] â‡Šffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j507 j530 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j507 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j505 
y: j506 
=== Succesors ===
=== Usages ===
j508 j519 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j505 y: j506  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:592) [bci: 70]
stamp: i32
=== Inputs ===
x: i33 
y: i470 
=== Succesors ===
=== Usages ===
v514 v53 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i33 y: i470  <|@  <|@
f <@~|@floating>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i33 
y: i46 
=== Succesors ===
=== Usages ===
v711 v727 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i33 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid a313 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:993) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a754 
=== Succesors ===
=== Usages ===
?89 v782 ?84 v786 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a754  <|@  <|@
f <@~|@floating>@ <|@
tid a659 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@831259190
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@831259190]
=== Inputs ===
=== Succesors ===
=== Usages ===
a649 a649 a649 a649 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v514 
=== Succesors ===
trueSuccessor: v710 
falseSuccessor: v707 
=== Usages ===
=== Predecessor ===
i761 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v514 #trueSuccessor: v710 #falseSuccessor: v707  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@14e5ca60 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - 
>@ <|@ instruction v3|DWORD[.] = MOV [v1|QWORD[.] + 44] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - 
>@ <|@ instruction v4|DWORD = MOV [v2|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v2|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = ADD (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SUB (x: v12|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v15|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = CMOVE (falseValue: v17|DWORD, ~trueValue: v14|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = DEC v19|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v13|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4ea98b05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@831259190] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v719 
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v719  <|@  <|@
f <@~|@floating>@ <|@
tid j504 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/1121602809@34736fd3
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1363241743@10f97424
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i15 
=== Succesors ===
=== Usages ===
j508 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i15  <|@  <|@
f <@~|@floating>@ <|@
tid j508 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j504 
y: j507 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j504 y: j507  <|@  <|@
f <@~|@floating>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j508 
y: j502 
=== Succesors ===
=== Usages ===
v719 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j508 y: j502  <|@  <|@
f <@~|@floating>@ <|@
tid i658 <|@
result int[-89883|0xfffffffffffea0e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -89883
stableDimension: 0
stamp: i32 [-89883] â‡Š00000000fffea0e5 â‡ˆ00000000fffea0e5
stampKind: i32
value: int[-89883|0xfffffffffffea0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i648 i648 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v510 
=== Succesors ===
trueSuccessor: v718 
falseSuccessor: v715 
=== Usages ===
=== Predecessor ===
v710 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v510 #trueSuccessor: v718 #falseSuccessor: v715  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = ADD (x: v24|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v719 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
f <@~|@floating>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i15 
y: i761 
=== Succesors ===
=== Usages ===
v717 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i15 y: i761  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v511 
=== Succesors ===
trueSuccessor: v708 
falseSuccessor: v716 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v511 #trueSuccessor: v708 #falseSuccessor: v716  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v717 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v706  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v708 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v792 
=== Usages ===
=== Predecessor ===
v717 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v792  <|@  <|@
f <@*|@fixed>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
v716 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-89883|0xfffffffffffea0e5], v23|QWORD[.]] destination: B4 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v657 
=== Usages ===
=== Predecessor ===
v719 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v657  <|@  <|@
f <@*|@fixed>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
v715 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-89883|0xfffffffffffea0e5], v23|QWORD[.]] destination: B5 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v705 
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v705  <|@  <|@
f <@*|@fixed>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v707 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B3" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v705 v706 
=== Succesors ===
next: a762 
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v705 v706 #next: a762  <|@  <|@
f <@~|@floating>@ <|@
tid v777 <|@
result [v2|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a762 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a762 <|@
result v26|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.hb
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:993) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v777 
=== Succesors ===
next: v795 
=== Usages ===
?84 v795 v783 v784 v787 v788 v789 ?89 v796 
=== Predecessor ===
v704 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v777 #next: v795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
object: a762 
=== Succesors ===
next: v727 
=== Usages ===
=== Predecessor ===
a762 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?4 object: a762 #next: v727  <|@  <|@
f <@*|@fixed>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v514 
=== Succesors ===
trueSuccessor: v726 
falseSuccessor: v723 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v514 #trueSuccessor: v726 #falseSuccessor: v723  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[.] = MOV [v2|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v26|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: i763 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i763  <|@  <|@
f <@~|@floating>@ <|@
tid v783 <|@
result [v26|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a762 
=== Succesors ===
=== Usages ===
i763 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i763 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v783 
=== Succesors ===
next: v735 
=== Usages ===
v522 j517 
=== Predecessor ===
v726 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v783 #next: v735  <|@  <|@
f <@~|@floating>@ <|@
tid j518 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/1121602809@34736fd3
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1363241743@10f97424
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i33 
=== Succesors ===
=== Usages ===
j519 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i33  <|@  <|@
f <@~|@floating>@ <|@
tid j519 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j507 
y: j518 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j507 y: j518  <|@  <|@
f <@~|@floating>@ <|@
tid j517 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/1174728845@6b2a0100
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2049777509@675f16c4
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
value: i763 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i763  <|@  <|@
f <@~|@floating>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j519 
y: j517 
=== Succesors ===
=== Usages ===
v735 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j519 y: j517  <|@  <|@
f <@~|@floating>@ <|@
tid i661 <|@
result int[-96283|0xfffffffffffe87e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -96283
stableDimension: 0
stamp: i32 [-96283] â‡Š00000000fffe87e5 â‡ˆ00000000fffe87e5
stampKind: i32
value: int[-96283|0xfffffffffffe87e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i648 i648 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v521 
=== Succesors ===
trueSuccessor: v734 
falseSuccessor: v731 
=== Usages ===
=== Predecessor ===
i763 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v521 #trueSuccessor: v734 #falseSuccessor: v731  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOV [v26|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = ADD (x: v28|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v733 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v733  <|@  <|@
f <@~|@floating>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i33 
y: i763 
=== Succesors ===
=== Usages ===
v733 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i33 y: i763  <|@  <|@
f <@*|@fixed>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v522 
=== Succesors ===
trueSuccessor: v724 
falseSuccessor: v732 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v522 #trueSuccessor: v724 #falseSuccessor: v732  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v722 
=== Usages ===
=== Predecessor ===
v733 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v722  <|@  <|@
f <@*|@fixed>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v724 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v793 
=== Usages ===
=== Predecessor ===
v733 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v793  <|@  <|@
f <@*|@fixed>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
v732 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-96283|0xfffffffffffe87e5], v23|QWORD[.]] destination: B11 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v660  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
v731 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-96283|0xfffffffffffe87e5], v23|QWORD[.]] destination: B12 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
next: v721 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v721  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v723 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v721 v722 
=== Succesors ===
next: i764 
=== Usages ===
v526 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v721 v722 #next: i764  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
result [v1|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i764 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i764 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharBuffer.isReadOnly
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 16]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v773 
=== Succesors ===
next: v572 
=== Usages ===
i318 
=== Predecessor ===
v720 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v773 #next: v572  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/1174728845@6b2a0100
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2049777509@675f16c4
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 16]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i764 
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i764  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] â‡ˆ0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 v172 v274 v299 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i318 
y: i117 
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i318 y: i117  <|@  <|@
f <@~|@floating>@ <|@
tid a647 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v671 a649 a649 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v172 
=== Succesors ===
trueSuccessor: v569 
falseSuccessor: v571 
=== Usages ===
=== Predecessor ===
i764 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v172 #trueSuccessor: v569 #falseSuccessor: v571  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v31|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B66" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i765 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i765  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
result [v2|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i765 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i765 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ByteBuffer.isReadOnly
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 16]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
nullCheck: false
stamp: i8 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v778 
=== Succesors ===
next: v576 
=== Usages ===
i336 
=== Predecessor ===
v569 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v778 #next: v576  <|@  <|@
f <@~|@floating>@ <|@
tid i336 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/1174728845@6b2a0100
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2049777509@675f16c4
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 16]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
resultBits: 32
stamp: i32 [0 - 1] â‡ˆ0000000000000001
=== Inputs ===
value: i765 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i765  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i336 
y: i117 
=== Succesors ===
=== Usages ===
v576 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i336 y: i117  <|@  <|@
f <@*|@fixed>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v202 
=== Succesors ===
trueSuccessor: v573 
falseSuccessor: v575 
=== Usages ===
=== Predecessor ===
i765 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v202 #trueSuccessor: v573 #falseSuccessor: v575  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVZXB [v2|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v32|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v576 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] â‡Š0000000000000001 â‡ˆ0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i76 i77 i105 i154 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i460 <|@
result short[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] â‡Š0000000000000080 â‡ˆ0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v461 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
v573 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD, v13|DWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B18" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4628825885096913771
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i50 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v49 
values: i15 i77 
=== Succesors ===
=== Usages ===
j527 v537 v782 v534 i77 i528 ?84 i87 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v49 values: i15 i77  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v49 
values: i33 i76 
=== Succesors ===
=== Usages ===
v784 v53 ?84 i88 i76 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v49 values: i33 i76  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 28.893038769641333
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v48 
=== Succesors ===
next: v60 
=== Usages ===
i50 i51 v56 v68 v83 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v48 #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i46 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i51 y: i46  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 77]
stamp: void
trueSuccessorProbability: 0.9655146968392572
=== Inputs ===
condition: v53 
=== Succesors ===
trueSuccessor: v54 
falseSuccessor: v56 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v53 #trueSuccessor: v54 #falseSuccessor: v56  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9655146968392572 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4628545427595609420
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
next: i766 
=== Usages ===
v516 v526 
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i766  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v704 v54 
=== Succesors ===
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v704 v54  <|@  <|@
f <@~|@floating>@ <|@
tid v782 <|@
result [v22|QWORD[.] + v33|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a313 
index: i50 
=== Succesors ===
=== Usages ===
i766 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a313 index: i50  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i766 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 83]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v516 
address: v782 
=== Succesors ===
next: v74 
=== Usages ===
v461 i463 
=== Predecessor ===
v54 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v516 address: v782 #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i766 
y: i460 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i766 y: i460  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 87]
stamp: void
trueSuccessorProbability: 0.9998704217771155
=== Inputs ===
condition: v461 
=== Succesors ===
trueSuccessor: v64 
falseSuccessor: v68 
=== Usages ===
=== Predecessor ===
i766 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v461 #trueSuccessor: v64 #falseSuccessor: v68  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVSX [v22|QWORD[.] + v33|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v35|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998704217771155 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4628544410120203115
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v383  <|@  <|@
f <@~|@floating>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v720 v54 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v720 v54  <|@  <|@
f <@~|@floating>@ <|@
tid v784 <|@
result [v34|DWORD + v26|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i51 
index: a762 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i51 index: a762  <|@  <|@
f <@~|@floating>@ <|@
tid i463 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$63/575803732@23b0e3ca
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$64/759660843@1185e3db
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 104]
resultBits: 8
stamp: i8
=== Inputs ===
value: i766 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@4855ff92 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v526 
address: v784 
value: i463 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v526 address: v784 value: i463 stateAfter: - lastLocationAccess: - #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid i76 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 94]
stamp: i32
=== Inputs ===
x: i51 
y: i75 
=== Succesors ===
=== Usages ===
i51 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i51 y: i75  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 100]
stamp: i32
=== Inputs ===
x: i50 
y: i75 
=== Succesors ===
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i50 y: i75  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 73]
stamp: void
=== Inputs ===
loopBegin: v49 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v49  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v34|DWORD + v26|DWORD[.] * 8 + 16], y: v35|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = INC v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|DWORD, v36|DWORD] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4570481581054762355
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
v68 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607149859587015650
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v49 
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v49 #next: v65  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
v56 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B29" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v65 v67 
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v65 v67 #next: v743  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i22 
=== Succesors ===
=== Usages ===
v743 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i50 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v537 
=== Succesors ===
trueSuccessor: v742 
falseSuccessor: v739 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v537 #trueSuccessor: v742 #falseSuccessor: v739  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v751 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v751  <|@  <|@
f <@~|@floating>@ <|@
tid j527 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/1121602809@34736fd3
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1363241743@10f97424
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i50 
=== Succesors ===
=== Usages ===
j531 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i50  <|@  <|@
f <@~|@floating>@ <|@
tid i528 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$62/72246354@4e69aed8
stamp: i32
=== Inputs ===
x: i22 
y: i50 
=== Succesors ===
=== Usages ===
j529 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i22 y: i50  <|@  <|@
f <@~|@floating>@ <|@
tid j529 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$10/1121602809@34736fd3
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/1363241743@10f97424
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i528 
=== Succesors ===
=== Usages ===
j530 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i528  <|@  <|@
f <@~|@floating>@ <|@
tid j530 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j529 
y: j506 
=== Succesors ===
=== Usages ===
j531 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j529 y: j506  <|@  <|@
f <@~|@floating>@ <|@
tid j531 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j527 
y: j530 
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j527 y: j530  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j531 
y: j502 
=== Succesors ===
=== Usages ===
v751 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j531 y: j502  <|@  <|@
f <@*|@fixed>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v533 
=== Succesors ===
trueSuccessor: v750 
falseSuccessor: v747 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v533 #trueSuccessor: v750 #falseSuccessor: v747  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v33|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SUB (x: v15|DWORD, ~y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVSXD v39|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = DEC v40|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = ADD (x: v38|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i761 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i50 y: i761  <|@  <|@
f <@*|@fixed>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v534 
=== Succesors ===
trueSuccessor: v740 
falseSuccessor: v748 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v534 #trueSuccessor: v740 #falseSuccessor: v748  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v738 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v738  <|@  <|@
f <@*|@fixed>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
v740 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v746 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v746  <|@  <|@
f <@*|@fixed>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
v748 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v751 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v745  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
v747 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v745 v746 
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v745 v746 #next: v578  <|@  <|@
tid ?84 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a313 i50 i22 a762 i51 i40 - - - 
=== Succesors ===
=== Usages ===
v578 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a313 i50 i22 a762 i51 i40 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 389
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
reason: BoundsCheckException
speculation: Object[d.a@1850367900]
stamp: void
=== Inputs ===
stateBefore: ?84 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?84  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1850367900] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -99611 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v43|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v22|QWORD[.] v33|DWORD v15|DWORD v26|DWORD[.] v34|DWORD v12|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v737 
=== Usages ===
=== Predecessor ===
v743 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v737  <|@  <|@
f <@*|@fixed>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
v739 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v737 v738 
=== Succesors ===
next: v85 
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v737 v738 #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v86 
=== Predecessor ===
v736 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD, v34|DWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B35" "B48" 
    successors "B32" "B52" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607620357689002539
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i87 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v86 
values: i50 i154 i154 
=== Succesors ===
=== Usages ===
?89 v90 i154 v786 i239 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v86 values: i50 i154 i154  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v86 
values: i51 i105 i164 
=== Succesors ===
=== Usages ===
?89 i246 v103 i105 v418 i164 i120 v787 i163 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v86 values: i51 i105 i164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0972419675860108
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v85 
=== Succesors ===
next: v97 
=== Usages ===
i87 i88 v93 v155 v165 v614 v584 v589 v594 v599 v604 v609 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v85 #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i87 
y: i22 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i87 y: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 113]
stamp: void
trueSuccessorProbability: 0.08862399585384817
=== Inputs ===
condition: v90 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v90 #trueSuccessor: v91 #falseSuccessor: v93  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD, v45|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08862399585384817 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591671442886927042
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 116]
stamp: void
=== Inputs ===
=== Succesors ===
next: i767 
=== Usages ===
v539 
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i767  <|@  <|@
f <@~|@floating>@ <|@
tid v796 <|@
result [v26|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a762 
=== Succesors ===
=== Usages ===
i767 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i767 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:596) [bci: 105]
nullCheck: false
stamp: i32 [0 - 2147483647] â‡ˆ000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v796 
=== Succesors ===
next: v585 
=== Usages ===
v418 v428 v438 
=== Predecessor ===
v91 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v796 #next: v585  <|@  <|@
f <@~|@floating>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i88 
y: i767 
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i88 y: i767  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v418 
=== Succesors ===
trueSuccessor: v581 
falseSuccessor: v584 
=== Usages ===
=== Predecessor ===
i767 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v418 #trueSuccessor: v581 #falseSuccessor: v584  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v26|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591671442886927042
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
stamp: void
=== Inputs ===
=== Succesors ===
next: i768 
=== Usages ===
v426 v410 
=== Predecessor ===
v585 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i768  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v736 v91 
=== Succesors ===
=== Usages ===
i768 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v736 v91  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
result [v22|QWORD[.] + v44|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a313 
index: i87 
=== Succesors ===
=== Usages ===
i768 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a313 index: i87  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i768 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v539 
address: v786 
=== Succesors ===
next: v102 
=== Usages ===
i396 
=== Predecessor ===
v581 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v539 address: v786 #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid i396 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/1174728845@6b2a0100
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2049777509@675f16c4
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:598) [bci: 119]
resultBits: 32
stamp: i32 [0 - 65535] â‡ˆ000000000000ffff
=== Inputs ===
value: i768 
=== Succesors ===
=== Usages ===
v99 i106 i143 v112 v253 v255 i126 i134 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i768  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
result int[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:595) [bci: 84]
rawvalue: 128
stableDimension: 0
stamp: i32 [128] â‡Š0000000000000080 â‡ˆ0000000000000080
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
i144 v99 i137 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i396 
y: i62 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i396 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
stamp: i32
=== Inputs ===
x: i87 
y: i75 
=== Succesors ===
=== Usages ===
i87 i87 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i87 y: i75  <|@  <|@
f <@~|@floating>@ <|@
tid i105 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 151]
stamp: i32
=== Inputs ===
x: i88 
y: i75 
=== Succesors ===
=== Usages ===
v428 v788 i88 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i88 y: i75  <|@  <|@
f <@~|@floating>@ <|@
tid v787 <|@
result [v45|DWORD + v26|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i88 
index: a762 
=== Succesors ===
=== Usages ===
v426 v410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i88 index: a762  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:599) [bci: 127]
stamp: void
trueSuccessorProbability: 0.9444444444444444
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v100 
falseSuccessor: v101 
=== Usages ===
=== Predecessor ===
i768 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v100 #falseSuccessor: v101  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZX [v22|QWORD[.] + v44|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = INC v45|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9444444444444444 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591282163874495813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 130]
stamp: void
=== Inputs ===
=== Succesors ===
next: v590 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v590  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i88 
y: i40 
=== Succesors ===
=== Usages ===
v590 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i88 y: i40  <|@  <|@
f <@*|@fixed>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v103 
=== Succesors ===
trueSuccessor: v586 
falseSuccessor: v589 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v103 #trueSuccessor: v586 #falseSuccessor: v589  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4591282163874495813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v590 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$63/575803732@23b0e3ca
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$64/759660843@1185e3db
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 156]
resultBits: 8
stamp: i8
=== Inputs ===
value: i396 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v410 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@4855ff92 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:603) [bci: 157]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v581 
address: v787 
value: i106 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v581 address: v787 value: i106 stateAfter: - lastLocationAccess: - #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
stamp: void
=== Inputs ===
loopBegin: v86 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v86  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v45|DWORD + v26|DWORD[.] * 8 + 16], y: v47|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|DWORD, v49|DWORD] destination: B35 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:601) [bci: 134]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v590 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v674  <|@  <|@
f <@~|@floating>@ <|@
tid i675 <|@
result int[-101651|0xfffffffffffe72ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -101651
stableDimension: 0
stamp: i32 [-101651] â‡Š00000000fffe72ed â‡ˆ00000000fffe72ed
stampKind: i32
value: int[-101651|0xfffffffffffe72ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v589 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-101651|0xfffffffffffe72ed]] destination: B36 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 161]
stamp: void
=== Inputs ===
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
result int[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 163]
rawvalue: 2048
stableDimension: 0
stamp: i32 [2048] â‡Š0000000000000800 â‡ˆ0000000000000800
stampKind: i32
value: int[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i396 
y: i111 
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i396 y: i111  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v112 
=== Succesors ===
trueSuccessor: v594 
falseSuccessor: v591 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v112 #trueSuccessor: v594 #falseSuccessor: v591  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v676 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid i677 <|@
result int[-105235|0xfffffffffffe64ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105235
stableDimension: 0
stamp: i32 [-105235] â‡Š00000000fffe64ed â‡ˆ00000000fffe64ed
stampKind: i32
value: int[-105235|0xfffffffffffe64ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-105235|0xfffffffffffe64ed]] destination: B38 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:604) [bci: 166]
stamp: void
=== Inputs ===
=== Succesors ===
next: v703 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v703  <|@  <|@
f <@~|@floating>@ <|@
tid i252 <|@
result int[55296|0xd800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
rawvalue: 55296
stableDimension: 0
stamp: i32 [55296] â‡Š000000000000d800 â‡ˆ000000000000d800
stampKind: i32
value: int[55296|0xd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 3]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i396 
y: i252 
=== Succesors ===
=== Usages ===
v703 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i396 y: i252  <|@  <|@
f <@*|@fixed>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v253 
=== Succesors ===
trueSuccessor: v699 
falseSuccessor: v702 
=== Usages ===
=== Predecessor ===
v591 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v253 #trueSuccessor: v699 #falseSuccessor: v702  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4568374886725212108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
=== Succesors ===
next: v697 
=== Usages ===
=== Predecessor ===
v703 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v697  <|@  <|@
f <@*|@fixed>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
v699 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4568374886725212108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v703 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid i254 <|@
result int[57344|0xe000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
rawvalue: 57344
stableDimension: 0
stamp: i32 [57344] â‡Š000000000000e000 â‡ˆ000000000000e000
stampKind: i32
value: int[57344|0xe000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isSurrogate(Character.java:4776) [bci: 9]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 229]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i396 
y: i254 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i396 y: i254  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v255 
=== Succesors ===
trueSuccessor: v599 
falseSuccessor: v700 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v255 #trueSuccessor: v599 #falseSuccessor: v700  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: 57344 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v678 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v678  <|@  <|@
f <@~|@floating>@ <|@
tid i679 <|@
result int[-105491|0xfffffffffffe63ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105491
stableDimension: 0
stamp: i32 [-105491] â‡Š00000000fffe63ed â‡ˆ00000000fffe63ed
stampKind: i32
value: int[-105491|0xfffffffffffe63ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v599 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-105491|0xfffffffffffe63ed]] destination: B42 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4568374886725212108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v698  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
v700 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:610) [bci: 232]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v697 v698 
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v697 v698 #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$62/72246354@4e69aed8
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 398]
stamp: i32
=== Inputs ===
x: i40 
y: i88 
=== Succesors ===
=== Usages ===
v122 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i40 y: i88  <|@  <|@
f <@~|@floating>@ <|@
tid i121 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 399]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] â‡Š0000000000000003 â‡ˆ0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 i164 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i120 
y: i121 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i120 y: i121  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v122 
=== Succesors ===
trueSuccessor: v604 
falseSuccessor: v601 
=== Usages ===
=== Predecessor ===
v696 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v122 #trueSuccessor: v604 #falseSuccessor: v601  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = SUB (x: v12|DWORD, ~y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v50|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v680 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v680  <|@  <|@
f <@~|@floating>@ <|@
tid i681 <|@
result int[-105747|0xfffffffffffe62ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -105747
stableDimension: 0
stamp: i32 [-105747] â‡Š00000000fffe62ed â‡ˆ00000000fffe62ed
stampKind: i32
value: int[-105747|0xfffffffffffe62ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v604 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-105747|0xfffffffffffe62ed]] destination: B45 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:628) [bci: 400]
stamp: void
=== Inputs ===
=== Succesors ===
next: v610 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v610  <|@  <|@
f <@~|@floating>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i105 
y: i767 
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i105 y: i767  <|@  <|@
f <@*|@fixed>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v428 
=== Succesors ===
trueSuccessor: v606 
falseSuccessor: v609 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v428 #trueSuccessor: v606 #falseSuccessor: v609  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B46 -> B47 falseDestination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
stamp: void
=== Inputs ===
=== Succesors ===
next: v615 
=== Usages ===
v436 
=== Predecessor ===
v610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid i162 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] â‡Š0000000000000002 â‡ˆ0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i163 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 435]
stamp: i32
=== Inputs ===
x: i88 
y: i162 
=== Succesors ===
=== Usages ===
v438 v789 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i88 y: i162  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i163 
y: i767 
=== Succesors ===
=== Usages ===
v615 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i163 y: i767  <|@  <|@
f <@*|@fixed>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v438 
=== Succesors ===
trueSuccessor: v611 
falseSuccessor: v614 
=== Usages ===
=== Predecessor ===
v606 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v438 #trueSuccessor: v611 #falseSuccessor: v614  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = LEA [v45|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
stamp: void
=== Inputs ===
=== Succesors ===
next: v426 
=== Usages ===
v446 
=== Predecessor ===
v615 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v426  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
result int[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 425]
rawvalue: 12
stableDimension: 0
stamp: i32 [12] â‡Š000000000000000c â‡ˆ000000000000000c
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$66/1929392697@1aef7eb1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 427]
stamp: i32 [0 - 15] â‡ˆ000000000000000f
=== Inputs ===
x: i396 
y: i125 
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i396 y: i125  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
result int[224|0xe0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 420]
rawvalue: 224
stableDimension: 0
stamp: i32 [224] â‡Š00000000000000e0 â‡ˆ00000000000000e0
stampKind: i32
value: int[224|0xe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$67/1650437035@59ad3538
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 428]
stamp: i32 [224 - 239] â‡Š00000000000000e0 â‡ˆ00000000000000ef
=== Inputs ===
x: i126 
y: i124 
=== Succesors ===
=== Usages ===
i128 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i126 y: i124  <|@  <|@
f <@~|@floating>@ <|@
tid i128 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$63/575803732@23b0e3ca
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$64/759660843@1185e3db
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 429]
resultBits: 8
stamp: i8 [-32 - -17] â‡Š00000000000000e0 â‡ˆ00000000000000ef
=== Inputs ===
value: i127 
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v426 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@4855ff92 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v581 
address: v787 
value: i128 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v436 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v581 address: v787 value: i128 stateAfter: - lastLocationAccess: - #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid v788 <|@
result [v49|DWORD + v26|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i105 
index: a762 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i105 index: a762  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 443]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] â‡Š0000000000000006 â‡ˆ0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i134 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$66/1929392697@1aef7eb1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 445]
stamp: i32 [0 - 1023] â‡ˆ00000000000003ff
=== Inputs ===
x: i396 
y: i133 
=== Succesors ===
=== Usages ===
i136 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i396 y: i133  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
result int[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 446]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] â‡Š000000000000003f â‡ˆ000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i136 i143 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$68/1111552356@74e89afd
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 448]
stamp: i32 [0 - 63] â‡ˆ000000000000003f
=== Inputs ===
x: i134 
y: i135 
=== Succesors ===
=== Usages ===
i137 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i134 y: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i137 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$67/1650437035@59ad3538
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 449]
stamp: i32 [128 - 191] â‡Š0000000000000080 â‡ˆ00000000000000bf
=== Inputs ===
x: i136 
y: i62 
=== Succesors ===
=== Usages ===
i138 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i136 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$63/575803732@23b0e3ca
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$64/759660843@1185e3db
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 450]
resultBits: 8
stamp: i8 [-128 - -65] â‡Š0000000000000080 â‡ˆ00000000000000bf
=== Inputs ===
value: i137 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v436 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@4855ff92 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v606 
address: v788 
value: i138 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v446 
=== Usages ===
=== Predecessor ===
v426 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v606 address: v788 value: i138 stateAfter: - lastLocationAccess: - #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid v789 <|@
result [v51|DWORD + v26|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i163 
index: a762 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i163 index: a762  <|@  <|@
f <@~|@floating>@ <|@
tid i143 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$68/1111552356@74e89afd
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 466]
stamp: i32 [0 - 63] â‡ˆ000000000000003f
=== Inputs ===
x: i396 
y: i135 
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i396 y: i135  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$67/1650437035@59ad3538
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 467]
stamp: i32 [128 - 191] â‡Š0000000000000080 â‡ˆ00000000000000bf
=== Inputs ===
x: i143 
y: i62 
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i143 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$63/575803732@23b0e3ca
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$64/759660843@1185e3db
inputBits: 32
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 468]
resultBits: 8
stamp: i8 [-128 - -65] â‡Š0000000000000080 â‡ˆ00000000000000bf
=== Inputs ===
value: i144 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v446 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@4855ff92 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v611 
address: v789 
value: i145 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v611 address: v789 value: i145 stateAfter: - lastLocationAccess: - #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 456]
stamp: i32
=== Inputs ===
x: i88 
y: i121 
=== Succesors ===
=== Usages ===
i88 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i88 y: i121  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:634) [bci: 470]
stamp: void
=== Inputs ===
loopBegin: v86 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v86  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SHR v47|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = OR v52|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v45|DWORD + v26|DWORD[.] * 8 + 16], y: v53|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = SHR v47|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = AND v54|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = OR v55|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v49|DWORD + v26|DWORD[.] * 8 + 16], y: v56|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = AND v47|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = OR v57|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v51|DWORD + v26|DWORD[.] * 8 + 16], y: v58|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = LEA [v45|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|DWORD, v59|DWORD] destination: B48 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:632) [bci: 469]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v684  <|@  <|@
f <@~|@floating>@ <|@
tid i685 <|@
result int[-112411|0xfffffffffffe48e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -112411
stableDimension: 0
stamp: i32 [-112411] â‡Š00000000fffe48e5 â‡ˆ00000000fffe48e5
stampKind: i32
value: int[-112411|0xfffffffffffe48e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v614 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-112411|0xfffffffffffe48e5]] destination: B49 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:631) [bci: 451]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v682 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v682  <|@  <|@
f <@~|@floating>@ <|@
tid i683 <|@
result int[-109851|0xfffffffffffe52e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -109851
stableDimension: 0
stamp: i32 [-109851] â‡Š00000000fffe52e5 â‡ˆ00000000fffe52e5
stampKind: i32
value: int[-109851|0xfffffffffffe52e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v609 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-109851|0xfffffffffffe52e5]] destination: B50 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:630) [bci: 430]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v672 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v672  <|@  <|@
f <@~|@floating>@ <|@
tid i673 <|@
result int[-126491|0xfffffffffffe11e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -126491
stableDimension: 0
stamp: i32 [-126491] â‡Š00000000fffe11e5 â‡ˆ00000000fffe11e5
stampKind: i32
value: int[-126491|0xfffffffffffe11e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v584 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-126491|0xfffffffffffe11e5]] destination: B51 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 476]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v86 
=== Succesors ===
next: v619 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v86 #next: v619  <|@  <|@
f <@~|@floating>@ <|@
tid i239 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$62/72246354@4e69aed8
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 6]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: i32
=== Inputs ===
x: i87 
y: i758 
=== Succesors ===
=== Usages ===
v280 v272 v274 v449 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i87 y: i758  <|@  <|@
f <@~|@floating>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i759 
y: i239 
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i759 y: i239  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v272 
=== Succesors ===
trueSuccessor: v618 
falseSuccessor: v616 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v272 #trueSuccessor: v618 #falseSuccessor: v616  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v44|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid i668 <|@
result int[-114451|0xfffffffffffe40ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -114451
stableDimension: 0
stamp: i32 [-114451] â‡Š00000000fffe40ed â‡ˆ00000000fffe40ed
stampKind: i32
value: int[-114451|0xfffffffffffe40ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v618 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-114451|0xfffffffffffe40ed]] destination: B53 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v623 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v623  <|@  <|@
f <@~|@floating>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i239 
y: i117 
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i239 y: i117  <|@  <|@
f <@*|@fixed>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v274 
=== Succesors ===
trueSuccessor: v622 
falseSuccessor: v620 
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v274 #trueSuccessor: v622 #falseSuccessor: v620  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v60|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v686 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v686  <|@  <|@
f <@~|@floating>@ <|@
tid i687 <|@
result int[-114707|0xfffffffffffe3fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -114707
stableDimension: 0
stamp: i32 [-114707] â‡Š00000000fffe3fed â‡ˆ00000000fffe3fed
stampKind: i32
value: int[-114707|0xfffffffffffe3fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v622 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-114707|0xfffffffffffe3fed]] destination: B55 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: i769 
=== Usages ===
=== Predecessor ===
v623 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i769  <|@  <|@
f <@~|@floating>@ <|@
tid v790 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i769 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i769 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v790 
=== Succesors ===
next: v627 
=== Usages ===
v280 
=== Predecessor ===
v620 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v790 #next: v627  <|@  <|@
f <@~|@floating>@ <|@
tid v280 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i239 
y: i769 
=== Succesors ===
=== Usages ===
v627 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i239 y: i769  <|@  <|@
f <@*|@fixed>@ <|@
tid v627 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@4855ff92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v280 
=== Succesors ===
trueSuccessor: v626 
falseSuccessor: v624 
=== Usages ===
=== Predecessor ===
i769 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v280 #trueSuccessor: v626 #falseSuccessor: v624  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v688 
=== Usages ===
=== Predecessor ===
v627 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v688  <|@  <|@
f <@~|@floating>@ <|@
tid i689 <|@
result int[-115731|0xfffffffffffe3bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -115731
stableDimension: 0
stamp: i32 [-115731] â‡Š00000000fffe3bed â‡ˆ00000000fffe3bed
stampKind: i32
value: int[-115731|0xfffffffffffe3bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v626 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-115731|0xfffffffffffe3bed]] destination: B57 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v627 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v631  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$62/72246354@4e69aed8
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 17]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: i32
=== Inputs ===
x: i88 
y: i756 
=== Succesors ===
=== Usages ===
v305 v297 v299 v455 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i88 y: i756  <|@  <|@
f <@~|@floating>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i757 
y: i246 
=== Succesors ===
=== Usages ===
v631 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i757 y: i246  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v297 
=== Succesors ===
trueSuccessor: v630 
falseSuccessor: v628 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v297 #trueSuccessor: v630 #falseSuccessor: v628  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SUB (x: v45|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v61|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v690 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v690  <|@  <|@
f <@~|@floating>@ <|@
tid i691 <|@
result int[-115987|0xfffffffffffe3aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -115987
stableDimension: 0
stamp: i32 [-115987] â‡Š00000000fffe3aed â‡ˆ00000000fffe3aed
stampKind: i32
value: int[-115987|0xfffffffffffe3aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v630 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-115987|0xfffffffffffe3aed]] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 5]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v635  <|@  <|@
f <@~|@floating>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i246 
y: i117 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i246 y: i117  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v299 
=== Succesors ===
trueSuccessor: v634 
falseSuccessor: v632 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v299 #trueSuccessor: v634 #falseSuccessor: v632  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v61|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v692 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v692  <|@  <|@
f <@~|@floating>@ <|@
tid i693 <|@
result int[-116243|0xfffffffffffe39ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -116243
stableDimension: 0
stamp: i32 [-116243] â‡Š00000000fffe39ed â‡ˆ00000000fffe39ed
stampKind: i32
value: int[-116243|0xfffffffffffe39ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v634 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-116243|0xfffffffffffe39ed]] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B65" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:243) [bci: 9]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: i770 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i770  <|@  <|@
f <@~|@floating>@ <|@
tid v791 <|@
result [v2|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i770 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i770 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Buffer.mark
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 26]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v791 
=== Succesors ===
next: v639 
=== Usages ===
v305 
=== Predecessor ===
v632 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v791 #next: v639  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i246 
y: i770 
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i246 y: i770  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@4855ff92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v638 
falseSuccessor: v636 
=== Usages ===
=== Predecessor ===
i770 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v638 #falseSuccessor: v636  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v61|DWORD, y: [v2|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid i695 <|@
result int[-117267|0xfffffffffffe35ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -117267
stableDimension: 0
stamp: i32 [-117267] â‡Š00000000fffe35ed â‡ˆ00000000fffe35ed
stampKind: i32
value: int[-117267|0xfffffffffffe35ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v638 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-117267|0xfffffffffffe35ed]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B53" "B51" "B36" "B38" "B42" "B45" "B50" "B49" "B55" "B57" "B59" "B61" "B63" 
    successors 
    xhandlers
    flags 
    probability 2371708153763987456
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i669 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-126491 - -101651] â‡Š00000000fffe00e5 â‡ˆ00000000fffe7fed
valueDescription: i32
=== Inputs ===
merge: v666 
values: i668 i673 i675 i677 i679 i681 i683 i685 i687 i689 i691 i693 i695 
=== Succesors ===
=== Usages ===
v671 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v666 values: i668 i673 i675 i677 i679 i681 i683 i685 i687 i689 i691 i693 i695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v667 v672 v674 v676 v678 v680 v682 v684 v686 v688 v690 v692 v694 
=== Succesors ===
next: v671 
=== Usages ===
i669 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v667 v672 v674 v676 v678 v680 v682 v684 v686 v688 v690 v692 v694 #next: v671  <|@  <|@
tid ?89 <|@
d <@d|@=== Debug Properties ===
bci: 109
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
duringCall: false
localsSize: 12
locksSize: 0
rethrowException: false
sourceFile: UTF_8.java
sourceLine: 597
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a313 i87 i22 a762 i88 i40 - - - 
=== Succesors ===
=== Usages ===
v671 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a313 i87 i22 a762 i88 i40 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?89 
actionAndReason: i669 
speculation: a647 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?89 actionAndReason: i669 speculation: a647  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v22|QWORD[.] v44|DWORD v15|DWORD v26|DWORD[.] v45|DWORD v12|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:246) [bci: 33]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
stamp: void
=== Inputs ===
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v449  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77) [bci: 7]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v775 
value: i239 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v775 value: i239 stateAfter: - lastLocationAccess: - #next: v455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Buffer.position
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:245) [bci: 22]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:78) [bci: 18]
at sun.nio.cs.UTF_8.access$200(UTF_8.java:57) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636) [bci: 482]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v780 
value: i246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v780 value: i246 stateAfter: - lastLocationAccess: - #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid a160 <|@
result v63|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:637) [bci: 485]
rawvalue: CoderResult@1374209548
stableDimension: 0
stamp: a!# Ljava/nio/charset/CoderResult;
stampKind: a -
value: Object[CoderResult@1374209548]
=== Inputs ===
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:637) [bci: 488]
stamp: void
=== Inputs ===
result: a160 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a160 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + 24], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1374209548] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.array(ByteBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:589) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v664 
=== Usages ===
=== Predecessor ===
v576 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v664  <|@  <|@
f <@~|@floating>@ <|@
tid i665 <|@
result int[-86291|0xfffffffffffeaeed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -86291
stableDimension: 0
stamp: i32 [-86291] â‡Š00000000fffeaeed â‡ˆ00000000fffeaeed
stampKind: i32
value: int[-86291|0xfffffffffffeaeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i648 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
v575 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-86291|0xfffffffffffeaeed], Object[null]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.array(CharBuffer.java:995) [bci: 19]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v662 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v662  <|@  <|@
f <@~|@floating>@ <|@
tid i663 <|@
result int[-81683|0xfffffffffffec0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -81683
stableDimension: 0
stamp: i32 [-81683] â‡Š00000000fffec0ed â‡ˆ00000000fffec0ed
stampKind: i32
value: int[-81683|0xfffffffffffec0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i648 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
v571 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-81683|0xfffffffffffec0ed], Object[null]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" "B67" "B66" "B4" "B11" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i648 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-96283 - -79115] â‡Š00000000fffe80e5 â‡ˆ00000000fffefffd
valueDescription: i32
=== Inputs ===
merge: v644 
values: i658 i661 i663 i665 i658 i661 
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v644 values: i658 i661 i663 i665 i658 i661  <|@  <|@
f <@~|@floating>@ <|@
tid a649 <|@
result v65|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v644 
values: a659 a659 a647 a647 a659 a659 
=== Succesors ===
=== Usages ===
v650 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v644 values: a659 a659 a647 a647 a659 a659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v657 v660 v662 v664 v792 v793 
=== Succesors ===
next: v650 
=== Usages ===
i648 a649 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v657 v660 v662 v664 v792 v793 #next: v650  <|@  <|@
f <@*|@fixed>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i648 
speculation: a649 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i648 speculation: a649  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD, v65|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v65|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@14e5ca60 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - 
>@ <|@ instruction v3|DWORD[.] = MOV [v1|QWORD[.] + 44] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - 
>@ <|@ instruction v4|DWORD = MOV [v2|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v2|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = ADD (x: v5|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = ADD (x: v4|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SUB (x: v12|DWORD, ~y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v7|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = ADD (x: v9|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SUB (x: v15|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = CMOVE (falseValue: v17|DWORD, ~trueValue: v14|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v18|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = DEC v19|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v13|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4ea98b05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B3" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[.] = MOV [v2|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v26|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB [v1|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v31|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B66" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVZXB [v2|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v32|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD, v13|DWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4628545427595609420
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVSX [v22|QWORD[.] + v33|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v35|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9998704217771155 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4628544410120203115
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v34|DWORD + v26|DWORD[.] * 8 + 16], y: v35|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = INC v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|DWORD, v36|DWORD] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B18" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4628825885096913771
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|DWORD, v34|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9655146968392572 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607149859587015650
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B29" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD, v34|DWORD] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B35" "B48" 
    successors "B32" "B52" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607620357689002539
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD, v45|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08862399585384817 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591671442886927042
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v26|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591671442886927042
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVZX [v22|QWORD[.] + v44|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = INC v45|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9444444444444444 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591282163874495813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4591282163874495813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v45|DWORD + v26|DWORD[.] * 8 + 16], y: v47|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|DWORD, v49|DWORD] destination: B35 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: 2048 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: 55296 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4568374886725212108
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v47|DWORD y: 57344 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4568374886725212108
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = SUB (x: v12|DWORD, ~y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v50|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B46 -> B47 falseDestination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = LEA [v45|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = SHR v47|DWORD y: 12 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = OR v52|DWORD y: 224 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v45|DWORD + v26|DWORD[.] * 8 + 16], y: v53|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = SHR v47|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = AND v54|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = OR v55|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v49|DWORD + v26|DWORD[.] * 8 + 16], y: v56|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = AND v47|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = OR v57|DWORD y: 128 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v51|DWORD + v26|DWORD[.] * 8 + 16], y: v58|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = LEA [v45|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|DWORD, v59|DWORD] destination: B48 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4568374886725212108
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = SUB (x: v44|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v60|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v60|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SUB (x: v45|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v61|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v61|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B65" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v61|DWORD, y: [v2|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 24], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + 24], y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1374209548] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = ADD (x: v24|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOV [v26|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVSXD v13|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = ADD (x: v28|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|QWORD, y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVSXD v33|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SUB (x: v15|DWORD, ~y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVSXD v39|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = DEC v40|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = ADD (x: v38|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4570481581054762355
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-109851|0xfffffffffffe52e5]] destination: B50 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B53" "B51" "B36" "B38" "B42" "B45" "B50" "B49" "B55" "B57" "B59" "B61" "B63" 
    successors 
    xhandlers
    flags 
    probability 2371708153763987456
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v22|QWORD[.] v44|DWORD v15|DWORD v26|DWORD[.] v45|DWORD v12|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-114707|0xfffffffffffe3fed]] destination: B55 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@831259190] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-96283|0xfffffffffffe87e5], v67|QWORD[.]] destination: B11 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" "B67" "B66" "B4" "B11" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD, v65|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v65|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1850367900] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -99611 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v43|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v22|QWORD[.] v33|DWORD v15|DWORD v26|DWORD[.] v34|DWORD v12|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@831259190] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-96283|0xfffffffffffe87e5], v66|QWORD[.]] destination: B12 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@831259190] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-89883|0xfffffffffffea0e5], v68|QWORD[.]] destination: B5 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-116243|0xfffffffffffe39ed]] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-115987|0xfffffffffffe3aed]] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-114451|0xfffffffffffe40ed]] destination: B53 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-115731|0xfffffffffffe3bed]] destination: B57 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@831259190] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-89883|0xfffffffffffea0e5], v69|QWORD[.]] destination: B4 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-105491|0xfffffffffffe63ed]] destination: B42 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-117267|0xfffffffffffe35ed]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-105235|0xfffffffffffe64ed]] destination: B38 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-101651|0xfffffffffffe72ed]] destination: B36 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-105747|0xfffffffffffe62ed]] destination: B45 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-126491|0xfffffffffffe11e5]] destination: B51 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-112411|0xfffffffffffe48e5]] destination: B49 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-81683|0xfffffffffffec0ed], Object[null]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-86291|0xfffffffffffeaeed], Object[null]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #8          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #9          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #10         // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #9          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #11         // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #12         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #13         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #14         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #13         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #15         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: iload         7
    57: iload         5
    59: iload         4
    61: isub          
    62: iload         8
    64: iload         7
    66: isub          
    67: invokestatic  #16         // java.lang.Math.min:(int, int)int
    70: iadd          
    71: istore        9
    73: iload         7
    75: iload         9
    77: if_icmpge     109
    80: aload_3       
    81: iload         4
    83: caload        
    84: sipush        128
    87: if_icmpge     109
    90: aload         6
    92: iload         7
    94: iinc          
    97: aload_3       
    98: iload         4
   100: iinc          
   103: caload        
   104: i2b           
   105: bastore       
   106: goto          73
   109: iload         4
   111: iload         5
   113: if_icmpge     476
   116: aload_3       
   117: iload         4
   119: caload        
   120: istore        10
   122: iload         10
   124: sipush        128
   127: if_icmpge     161
   130: iload         7
   132: iload         8
   134: if_icmplt     147
   137: aload_1       
   138: iload         4
   140: aload_2       
   141: iload         7
   143: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   146: areturn       
   147: aload         6
   149: iload         7
   151: iinc          
   154: iload         10
   156: i2b           
   157: bastore       
   158: goto          470
   161: iload         10
   163: sipush        2048
   166: if_icmpge     227
   169: iload         8
   171: iload         7
   173: isub          
   174: iconst_2      
   175: if_icmpge     188
   178: aload_1       
   179: iload         4
   181: aload_2       
   182: iload         7
   184: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   187: areturn       
   188: aload         6
   190: iload         7
   192: iinc          
   195: sipush        192
   198: iload         10
   200: bipush        6
   202: ishr          
   203: ior           
   204: i2b           
   205: bastore       
   206: aload         6
   208: iload         7
   210: iinc          
   213: sipush        128
   216: iload         10
   218: bipush        63
   220: iand          
   221: ior           
   222: i2b           
   223: bastore       
   224: goto          470
   227: iload         10
   229: invokestatic  #3          // java.lang.Character.isSurrogate:(char)boolean
   232: ifeq          394
   235: aload_0       
   236: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   239: ifnonnull     253
   242: aload_0       
   243: new           #22         // sun.nio.cs.Surrogate$Parser
   246: dup           
   247: invokespecial #19         // sun.nio.cs.Surrogate$Parser.<init>:()void
   250: putfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   253: aload_0       
   254: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   257: iload         10
   259: aload_3       
   260: iload         4
   262: iload         5
   264: invokevirtual #20         // sun.nio.cs.Surrogate$Parser.parse:(char, char[], int, int)int
   267: istore        11
   269: iload         11
   271: ifge          291
   274: aload_1       
   275: iload         4
   277: aload_2       
   278: iload         7
   280: invokestatic  #5          // sun.nio.cs.UTF_8.access$200:(java.nio.Buffer, int, java.nio.Buffer, int)void
   283: aload_0       
   284: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   287: invokevirtual #21         // sun.nio.cs.Surrogate$Parser.error:()java.nio.charset.CoderResult
   290: areturn       
   291: iload         8
   293: iload         7
   295: isub          
   296: iconst_4      
   297: if_icmpge     310
   300: aload_1       
   301: iload         4
   303: aload_2       
   304: iload         7
   306: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   309: areturn       
   310: aload         6
   312: iload         7
   314: iinc          
   317: sipush        240
   320: iload         11
   322: bipush        18
   324: ishr          
   325: ior           
   326: i2b           
   327: bastore       
   328: aload         6
   330: iload         7
   332: iinc          
   335: sipush        128
   338: iload         11
   340: bipush        12
   342: ishr          
   343: bipush        63
   345: iand          
   346: ior           
   347: i2b           
   348: bastore       
   349: aload         6
   351: iload         7
   353: iinc          
   356: sipush        128
   359: iload         11
   361: bipush        6
   363: ishr          
   364: bipush        63
   366: iand          
   367: ior           
   368: i2b           
   369: bastore       
   370: aload         6
   372: iload         7
   374: iinc          
   377: sipush        128
   380: iload         11
   382: bipush        63
   384: iand          
   385: ior           
   386: i2b           
   387: bastore       
   388: iinc          
   391: goto          470
   394: iload         8
   396: iload         7
   398: isub          
   399: iconst_3      
   400: if_icmpge     413
   403: aload_1       
   404: iload         4
   406: aload_2       
   407: iload         7
   409: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   412: areturn       
   413: aload         6
   415: iload         7
   417: iinc          
   420: sipush        224
   423: iload         10
   425: bipush        12
   427: ishr          
   428: ior           
   429: i2b           
   430: bastore       
   431: aload         6
   433: iload         7
   435: iinc          
   438: sipush        128
   441: iload         10
   443: bipush        6
   445: ishr          
   446: bipush        63
   448: iand          
   449: ior           
   450: i2b           
   451: bastore       
   452: aload         6
   454: iload         7
   456: iinc          
   459: sipush        128
   462: iload         10
   464: bipush        63
   466: iand          
   467: ior           
   468: i2b           
   469: bastore       
   470: iinc          
   473: goto          109
   476: aload_1       
   477: iload         4
   479: aload_2       
   480: iload         7
   482: invokestatic  #5          // sun.nio.cs.UTF_8.access$200:(java.nio.Buffer, int, java.nio.Buffer, int)void
   485: getstatic     #22         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   488: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@14e5ca60 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - 
>@ <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD state [bci:0] <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD = MOV [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   16  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ instruction rbx|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   20  <|@ instruction rdi|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   22  <|@ instruction rbp|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction r13|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r14|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD = SUB (x: r14|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction stack:36|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r8|DWORD = ADD (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction rdi|DWORD = ADD (x: rdi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction r11|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr   48  <|@ instruction rsi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction r11|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4ea98b05 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B3" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction rbx|DWORD[.] = MOV [rcx|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rbx:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr  118  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction stack:48|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B10" 
    successors "B15" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction r9|DWORD = MOVZXB [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  186  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B66" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r9|DWORD = MOVZXB [rcx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  194  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4628545427595609420
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  214  <|@ instruction rdi|DWORD = MOVSX [rax|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  216  <|@ instruction CMP rdi|DWORD y: 128 size: WORD <|@ <|@
      nr  218  <|@ instruction BRANCH trueDestinationProbability: 0.9998704217771155 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4628544410120203115
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction MOVB (x: [r9|DWORD + rbx|DWORD[.] * 8 + 16], y: rdi|DWORD) size: BYTE <|@ <|@
      nr  224  <|@ instruction r9|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B18" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4628825885096913771
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  208  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction BRANCH trueDestinationProbability: 0.9655146968392572 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607149859587015650
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B23" "B29" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B31" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B35" "B48" 
    successors "B32" "B52" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607620357689002539
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  306  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.08862399585384817 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591671442886927042
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction r9|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  314  <|@ instruction CMP (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  316  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591671442886927042
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction rdi|DWORD = MOVZX [rax|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  322  <|@ instruction rsi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction rbp|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMP rdi|DWORD y: 128 size: DWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 0.9444444444444444 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591282163874495813
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4591282163874495813
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction MOVB (x: [r11|DWORD + rbx|DWORD[.] * 8 + 16], y: rdi|DWORD) size: BYTE <|@ <|@
      nr  340  <|@ instruction r11|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B35 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction CMP rdi|DWORD y: 2048 size: DWORD <|@ <|@
      nr  356  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction CMP rdi|DWORD y: 55296 size: DWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4568374886725212108
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction CMP rdi|DWORD y: 57344 size: DWORD <|@ <|@
      nr  378  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4568374886725212108
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  394  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction CMP (x: r9|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B46 -> B47 falseDestination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction r13|DWORD = LEA [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  414  <|@ instruction CMP (x: r9|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction r10|DWORD = SHR rdi|DWORD y: 12 size: DWORD <|@ <|@
      nr  422  <|@ instruction r10|DWORD = OR r10|DWORD y: 224 size: DWORD <|@ <|@
      nr  424  <|@ instruction MOVB (x: [r11|DWORD + rbx|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr  426  <|@ instruction r10|DWORD = SHR rdi|DWORD y: 6 size: DWORD <|@ <|@
      nr  428  <|@ instruction r10|DWORD = AND r10|DWORD y: 63 size: DWORD <|@ <|@
      nr  430  <|@ instruction r10|DWORD = OR r10|DWORD y: 128 size: DWORD <|@ <|@
      nr  432  <|@ instruction MOVB (x: [rbp|DWORD + rbx|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr  434  <|@ instruction rdi|DWORD = AND rdi|DWORD y: 63 size: DWORD <|@ <|@
      nr  436  <|@ instruction rdi|DWORD = OR rdi|DWORD y: 128 size: DWORD <|@ <|@
      nr  438  <|@ instruction MOVB (x: [r13|DWORD + rbx|DWORD[.] * 8 + 16], y: rdi|DWORD) size: BYTE <|@ <|@
      nr  440  <|@ instruction r11|DWORD = LEA [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  442  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B48 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4568374886725212108
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction r9|DWORD = SUB (x: r10|DWORD, ~y: stack:52|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction CMP (x: r9|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  482  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction CMP (x: r9|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  494  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rdi|DWORD = SUB (x: r11|DWORD, ~y: stack:40|DWORD) size: DWORD <|@ <|@
      nr  506  <|@ instruction CMP (x: rdi|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  508  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B65" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction CMP (x: rdi|DWORD, y: [rcx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: r9|DWORD) size: DWORD <|@ <|@
      nr  552  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  554  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1374209548] <|@ <|@
      nr  556  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rbx|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: r13|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction CMP (x: rbp|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction stack:48|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction r9|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  130  <|@ instruction r14|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  132  <|@ instruction r14|QWORD = ADD (x: r14|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction rsi|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction CMP (x: rsi|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction CMP (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  144  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B10 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B27" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction r11|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  248  <|@ instruction rdi|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  252  <|@ instruction rdi|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr  254  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction CMP (x: r13|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction CMP (x: rbp|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4570481581054762355
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction r9|DWORD = MOVE input: int[-109851|0xfffffffffffe52e5] <|@ <|@
      nr  456  <|@ instruction JUMP ~[] destination: B50 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B53" "B51" "B36" "B38" "B42" "B45" "B50" "B49" "B55" "B57" "B59" "B61" "B63" 
    successors 
    xhandlers
    flags 
    probability 2371708153763987456
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  542  <|@ instruction MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  546  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rbx:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rax|QWORD[.] r10|DWORD r8|DWORD rbx|DWORD[.] r11|DWORD r14|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction r9|DWORD = MOVE input: int[-114707|0xfffffffffffe3fed] <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B55 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@831259190] <|@ <|@
      nr  154  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: int[-96283|0xfffffffffffe87e5] <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B11 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" "B67" "B66" "B4" "B11" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  580  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  584  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1850367900] <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 668] y: -99611 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  290  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rbx:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rax|QWORD[.] r10|DWORD r8|DWORD rbx|DWORD[.] r9|DWORD r14|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@831259190] <|@ <|@
      nr  166  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction r10|DWORD = MOVE input: int[-96283|0xfffffffffffe87e5] <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B12 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@831259190] <|@ <|@
      nr   98  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD = MOVE input: int[-89883|0xfffffffffffea0e5] <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B5 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ instruction r9|DWORD = MOVE input: int[-116243|0xfffffffffffe39ed] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ instruction r9|DWORD = MOVE input: int[-115987|0xfffffffffffe3aed] // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction r9|DWORD = MOVE input: int[-114451|0xfffffffffffe40ed] <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B53 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction r9|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed] <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B57 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@831259190] <|@ <|@
      nr   86  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction r10|DWORD = MOVE input: int[-89883|0xfffffffffffea0e5] <|@ <|@
      nr   90  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B4 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction r9|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B42 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction r9|DWORD = MOVE input: int[-117267|0xfffffffffffe35ed] <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction r9|DWORD = MOVE input: int[-105235|0xfffffffffffe64ed] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B38 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction r9|DWORD = MOVE input: int[-101651|0xfffffffffffe72ed] <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B36 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction r9|DWORD = MOVE input: int[-105747|0xfffffffffffe62ed] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B45 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction r9|DWORD = MOVE input: int[-126491|0xfffffffffffe11e5] <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B51 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction r9|DWORD = MOVE input: int[-112411|0xfffffffffffe48e5] <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B49 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  572  <|@ instruction r10|DWORD = MOVE input: int[-81683|0xfffffffffffec0ed] <|@ <|@
      nr  574  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  562  <|@ instruction r10|DWORD = MOVE input: int[-86291|0xfffffffffffeaeed] <|@ <|@
      nr  564  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #8          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #9          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #10         // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #9          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #11         // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #12         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #13         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #14         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #13         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #15         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: iload         7
    57: iload         5
    59: iload         4
    61: isub          
    62: iload         8
    64: iload         7
    66: isub          
    67: invokestatic  #16         // java.lang.Math.min:(int, int)int
    70: iadd          
    71: istore        9
    73: iload         7
    75: iload         9
    77: if_icmpge     109
    80: aload_3       
    81: iload         4
    83: caload        
    84: sipush        128
    87: if_icmpge     109
    90: aload         6
    92: iload         7
    94: iinc          
    97: aload_3       
    98: iload         4
   100: iinc          
   103: caload        
   104: i2b           
   105: bastore       
   106: goto          73
   109: iload         4
   111: iload         5
   113: if_icmpge     476
   116: aload_3       
   117: iload         4
   119: caload        
   120: istore        10
   122: iload         10
   124: sipush        128
   127: if_icmpge     161
   130: iload         7
   132: iload         8
   134: if_icmplt     147
   137: aload_1       
   138: iload         4
   140: aload_2       
   141: iload         7
   143: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   146: areturn       
   147: aload         6
   149: iload         7
   151: iinc          
   154: iload         10
   156: i2b           
   157: bastore       
   158: goto          470
   161: iload         10
   163: sipush        2048
   166: if_icmpge     227
   169: iload         8
   171: iload         7
   173: isub          
   174: iconst_2      
   175: if_icmpge     188
   178: aload_1       
   179: iload         4
   181: aload_2       
   182: iload         7
   184: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   187: areturn       
   188: aload         6
   190: iload         7
   192: iinc          
   195: sipush        192
   198: iload         10
   200: bipush        6
   202: ishr          
   203: ior           
   204: i2b           
   205: bastore       
   206: aload         6
   208: iload         7
   210: iinc          
   213: sipush        128
   216: iload         10
   218: bipush        63
   220: iand          
   221: ior           
   222: i2b           
   223: bastore       
   224: goto          470
   227: iload         10
   229: invokestatic  #3          // java.lang.Character.isSurrogate:(char)boolean
   232: ifeq          394
   235: aload_0       
   236: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   239: ifnonnull     253
   242: aload_0       
   243: new           #22         // sun.nio.cs.Surrogate$Parser
   246: dup           
   247: invokespecial #19         // sun.nio.cs.Surrogate$Parser.<init>:()void
   250: putfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   253: aload_0       
   254: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   257: iload         10
   259: aload_3       
   260: iload         4
   262: iload         5
   264: invokevirtual #20         // sun.nio.cs.Surrogate$Parser.parse:(char, char[], int, int)int
   267: istore        11
   269: iload         11
   271: ifge          291
   274: aload_1       
   275: iload         4
   277: aload_2       
   278: iload         7
   280: invokestatic  #5          // sun.nio.cs.UTF_8.access$200:(java.nio.Buffer, int, java.nio.Buffer, int)void
   283: aload_0       
   284: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   287: invokevirtual #21         // sun.nio.cs.Surrogate$Parser.error:()java.nio.charset.CoderResult
   290: areturn       
   291: iload         8
   293: iload         7
   295: isub          
   296: iconst_4      
   297: if_icmpge     310
   300: aload_1       
   301: iload         4
   303: aload_2       
   304: iload         7
   306: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   309: areturn       
   310: aload         6
   312: iload         7
   314: iinc          
   317: sipush        240
   320: iload         11
   322: bipush        18
   324: ishr          
   325: ior           
   326: i2b           
   327: bastore       
   328: aload         6
   330: iload         7
   332: iinc          
   335: sipush        128
   338: iload         11
   340: bipush        12
   342: ishr          
   343: bipush        63
   345: iand          
   346: ior           
   347: i2b           
   348: bastore       
   349: aload         6
   351: iload         7
   353: iinc          
   356: sipush        128
   359: iload         11
   361: bipush        6
   363: ishr          
   364: bipush        63
   366: iand          
   367: ior           
   368: i2b           
   369: bastore       
   370: aload         6
   372: iload         7
   374: iinc          
   377: sipush        128
   380: iload         11
   382: bipush        63
   384: iand          
   385: ior           
   386: i2b           
   387: bastore       
   388: iinc          
   391: goto          470
   394: iload         8
   396: iload         7
   398: isub          
   399: iconst_3      
   400: if_icmpge     413
   403: aload_1       
   404: iload         4
   406: aload_2       
   407: iload         7
   409: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   412: areturn       
   413: aload         6
   415: iload         7
   417: iinc          
   420: sipush        224
   423: iload         10
   425: bipush        12
   427: ishr          
   428: ior           
   429: i2b           
   430: bastore       
   431: aload         6
   433: iload         7
   435: iinc          
   438: sipush        128
   441: iload         10
   443: bipush        6
   445: ishr          
   446: bipush        63
   448: iand          
   449: ior           
   450: i2b           
   451: bastore       
   452: aload         6
   454: iload         7
   456: iinc          
   459: sipush        128
   462: iload         10
   464: bipush        63
   466: iand          
   467: ior           
   468: i2b           
   469: bastore       
   470: iinc          
   473: goto          109
   476: aload_1       
   477: iload         4
   479: aload_2       
   480: iload         7
   482: invokestatic  #5          // sun.nio.cs.UTF_8.access$200:(java.nio.Buffer, int, java.nio.Buffer, int)void
   485: getstatic     #22         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   488: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@14e5ca60 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - 
>@ <|@ instruction rax|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD state [bci:0] <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD = MOV [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   16  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   18  <|@ instruction rbx|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   20  <|@ instruction rdi|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   22  <|@ instruction rbp|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   24  <|@ instruction r13|QWORD = MOV rbp|DWORD size: DWORD <|@ <|@
      nr   26  <|@ instruction r14|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rsi|DWORD = SUB (x: r14|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction stack:36|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction r8|DWORD = ADD (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction rdi|DWORD = ADD (x: rdi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction r11|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr   48  <|@ instruction rsi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr   50  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr   52  <|@ instruction r11|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4ea98b05 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B8" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction rbx|DWORD[.] = MOV [rcx|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rbx:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr  118  <|@ instruction CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction stack:48|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B15" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction r9|DWORD = MOVZXB [rdx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  186  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B66" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction r9|DWORD = MOVZXB [rcx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  194  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction r9|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  202  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4628545427595609420
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  214  <|@ instruction rdi|DWORD = MOVSX [rax|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  216  <|@ instruction CMP rdi|DWORD y: 128 size: WORD <|@ <|@
      nr  218  <|@ instruction BRANCH trueDestinationProbability: 0.9998704217771155 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B17" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4628544410120203115
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction MOVB (x: [r9|DWORD + rbx|DWORD[.] * 8 + 16], y: rdi|DWORD) size: BYTE <|@ <|@
      nr  224  <|@ instruction r9|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  226  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B19 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B18" "B22" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4628825885096913771
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  208  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  210  <|@ instruction BRANCH trueDestinationProbability: 0.9655146968392572 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B23" "B30" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B31" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B35" "B48" 
    successors "B32" "B52" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4607620357689002539
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  306  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.08862399585384817 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B51" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591671442886927042
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction r9|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  314  <|@ instruction CMP (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  316  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591671442886927042
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction rdi|DWORD = MOVZX [rax|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  322  <|@ instruction rsi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  324  <|@ instruction rbp|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  326  <|@ instruction CMP rdi|DWORD y: 128 size: DWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 0.9444444444444444 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4591282163874495813
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  334  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4591282163874495813
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction MOVB (x: [r11|DWORD + rbx|DWORD[.] * 8 + 16], y: rdi|DWORD) size: BYTE <|@ <|@
      nr  340  <|@ instruction r11|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B35 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction CMP rdi|DWORD y: 2048 size: DWORD <|@ <|@
      nr  356  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B41" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction CMP rdi|DWORD y: 55296 size: DWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |<| trueDestination: B39 -> B44 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B44" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4568374886725212108
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction CMP rdi|DWORD y: 57344 size: DWORD <|@ <|@
      nr  378  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  394  <|@ instruction CMP r13|DWORD y: 3 size: DWORD <|@ <|@
      nr  396  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B50" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction CMP (x: r9|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B46 -> B47 falseDestination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction r13|DWORD = LEA [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  414  <|@ instruction CMP (x: r9|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B31" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4572878486352582604
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction r10|DWORD = SHR rdi|DWORD y: 12 size: DWORD <|@ <|@
      nr  422  <|@ instruction r10|DWORD = OR r10|DWORD y: 224 size: DWORD <|@ <|@
      nr  424  <|@ instruction MOVB (x: [r11|DWORD + rbx|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr  426  <|@ instruction r10|DWORD = SHR rdi|DWORD y: 6 size: DWORD <|@ <|@
      nr  428  <|@ instruction r10|DWORD = AND r10|DWORD y: 63 size: DWORD <|@ <|@
      nr  430  <|@ instruction r10|DWORD = OR r10|DWORD y: 128 size: DWORD <|@ <|@
      nr  432  <|@ instruction MOVB (x: [rbp|DWORD + rbx|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE <|@ <|@
      nr  434  <|@ instruction rdi|DWORD = AND rdi|DWORD y: 63 size: DWORD <|@ <|@
      nr  436  <|@ instruction rdi|DWORD = OR rdi|DWORD y: 128 size: DWORD <|@ <|@
      nr  438  <|@ instruction MOVB (x: [r13|DWORD + rbx|DWORD[.] * 8 + 16], y: rdi|DWORD) size: BYTE <|@ <|@
      nr  440  <|@ instruction r11|DWORD = LEA [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  442  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B48 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction r9|DWORD = SUB (x: r10|DWORD, ~y: stack:52|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction CMP (x: r9|DWORD, y: stack:44|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  482  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction CMP (x: r9|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  494  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction rdi|DWORD = SUB (x: r11|DWORD, ~y: stack:40|DWORD) size: DWORD <|@ <|@
      nr  506  <|@ instruction CMP (x: rdi|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  508  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  520  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" "B65" 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction CMP (x: rdi|DWORD, y: [rcx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017406
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: r9|DWORD) size: DWORD <|@ <|@
      nr  552  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  554  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1374209548] <|@ <|@
      nr  556  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rbx|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   68  <|@ instruction CMP (x: r13|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction CMP (x: rbp|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B7 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction r9|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  130  <|@ instruction r14|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  132  <|@ instruction r14|QWORD = ADD (x: r14|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction rsi|QWORD = MOV r9|DWORD size: DWORD <|@ <|@
      nr  136  <|@ instruction CMP (x: rsi|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B14" "B11" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction CMP (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  144  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B14 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B28" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction r11|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  248  <|@ instruction rdi|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  252  <|@ instruction rdi|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr  254  <|@ instruction r11|QWORD = ADD (x: r11|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction CMP (x: r13|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B30" "B28" 
    xhandlers
    flags 
    probability 4602678819172646911
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction CMP (x: rbp|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B30 falseDestination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction r9|DWORD = MOVE input: int[-109851|0xfffffffffffe52e5] <|@ <|@
      nr  456  <|@ instruction JUMP ~[] destination: B50 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B53" "B51" "B36" "B38" "B42" "B45" "B50" "B49" "B55" "B57" "B59" "B61" "B63" 
    successors 
    xhandlers
    flags 
    probability 2371708153763987456
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  542  <|@ instruction MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  546  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rbx:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rax|QWORD[.] r10|DWORD r8|DWORD rbx|DWORD[.] r11|DWORD r14|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction r9|DWORD = MOVE input: int[-114707|0xfffffffffffe3fed] <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B55 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@831259190] <|@ <|@
      nr  154  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVE input: int[-96283|0xfffffffffffe87e5] <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B11 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B5" "B12" "B67" "B66" "B4" "B11" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  584  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B23" "B24" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  284  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1850367900] <|@ <|@
      nr  286  <|@ instruction MOV [r15|QWORD + 668] y: -99611 size: DWORD <|@ <|@
      nr  288  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  290  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rbx:0, stack:32]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109]
locals: stack:32|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] rax|QWORD[.] r10|DWORD r8|DWORD rbx|DWORD[.] r9|DWORD r14|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:109] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@831259190] <|@ <|@
      nr  166  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction r10|DWORD = MOVE input: int[-96283|0xfffffffffffe87e5] <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B12 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@831259190] <|@ <|@
      nr   98  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction r10|DWORD = MOVE input: int[-89883|0xfffffffffffea0e5] <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B5 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ instruction r9|DWORD = MOVE input: int[-116243|0xfffffffffffe39ed] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ instruction r9|DWORD = MOVE input: int[-115987|0xfffffffffffe3aed] // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction r9|DWORD = MOVE input: int[-114451|0xfffffffffffe40ed] <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B53 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction r9|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed] <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B57 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@831259190] <|@ <|@
      nr   86  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction r10|DWORD = MOVE input: int[-89883|0xfffffffffffea0e5] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B4 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction r9|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed] <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B42 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction r9|DWORD = MOVE input: int[-117267|0xfffffffffffe35ed] <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction r9|DWORD = MOVE input: int[-105235|0xfffffffffffe64ed] <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B38 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction r9|DWORD = MOVE input: int[-101651|0xfffffffffffe72ed] <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B36 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction r9|DWORD = MOVE input: int[-105747|0xfffffffffffe62ed] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B45 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction r9|DWORD = MOVE input: int[-126491|0xfffffffffffe11e5] <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B51 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction r9|DWORD = MOVE input: int[-112411|0xfffffffffffe48e5] <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B49 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  572  <|@ instruction r10|DWORD = MOVE input: int[-81683|0xfffffffffffec0ed] <|@ <|@
      nr  576  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B68" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  562  <|@ instruction r10|DWORD = MOVE input: int[-86291|0xfffffffffffeaeed] <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: invokevirtual #8          // java.nio.CharBuffer.array:()char[]
     4: astore_3      
     5: aload_1       
     6: invokevirtual #9          // java.nio.CharBuffer.arrayOffset:()int
     9: aload_1       
    10: invokevirtual #10         // java.nio.Buffer.position:()int
    13: iadd          
    14: istore        4
    16: aload_1       
    17: invokevirtual #9          // java.nio.CharBuffer.arrayOffset:()int
    20: aload_1       
    21: invokevirtual #11         // java.nio.Buffer.limit:()int
    24: iadd          
    25: istore        5
    27: aload_2       
    28: invokevirtual #12         // java.nio.ByteBuffer.array:()byte[]
    31: astore        6
    33: aload_2       
    34: invokevirtual #13         // java.nio.ByteBuffer.arrayOffset:()int
    37: aload_2       
    38: invokevirtual #14         // java.nio.Buffer.position:()int
    41: iadd          
    42: istore        7
    44: aload_2       
    45: invokevirtual #13         // java.nio.ByteBuffer.arrayOffset:()int
    48: aload_2       
    49: invokevirtual #15         // java.nio.Buffer.limit:()int
    52: iadd          
    53: istore        8
    55: iload         7
    57: iload         5
    59: iload         4
    61: isub          
    62: iload         8
    64: iload         7
    66: isub          
    67: invokestatic  #16         // java.lang.Math.min:(int, int)int
    70: iadd          
    71: istore        9
    73: iload         7
    75: iload         9
    77: if_icmpge     109
    80: aload_3       
    81: iload         4
    83: caload        
    84: sipush        128
    87: if_icmpge     109
    90: aload         6
    92: iload         7
    94: iinc          
    97: aload_3       
    98: iload         4
   100: iinc          
   103: caload        
   104: i2b           
   105: bastore       
   106: goto          73
   109: iload         4
   111: iload         5
   113: if_icmpge     476
   116: aload_3       
   117: iload         4
   119: caload        
   120: istore        10
   122: iload         10
   124: sipush        128
   127: if_icmpge     161
   130: iload         7
   132: iload         8
   134: if_icmplt     147
   137: aload_1       
   138: iload         4
   140: aload_2       
   141: iload         7
   143: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   146: areturn       
   147: aload         6
   149: iload         7
   151: iinc          
   154: iload         10
   156: i2b           
   157: bastore       
   158: goto          470
   161: iload         10
   163: sipush        2048
   166: if_icmpge     227
   169: iload         8
   171: iload         7
   173: isub          
   174: iconst_2      
   175: if_icmpge     188
   178: aload_1       
   179: iload         4
   181: aload_2       
   182: iload         7
   184: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   187: areturn       
   188: aload         6
   190: iload         7
   192: iinc          
   195: sipush        192
   198: iload         10
   200: bipush        6
   202: ishr          
   203: ior           
   204: i2b           
   205: bastore       
   206: aload         6
   208: iload         7
   210: iinc          
   213: sipush        128
   216: iload         10
   218: bipush        63
   220: iand          
   221: ior           
   222: i2b           
   223: bastore       
   224: goto          470
   227: iload         10
   229: invokestatic  #3          // java.lang.Character.isSurrogate:(char)boolean
   232: ifeq          394
   235: aload_0       
   236: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   239: ifnonnull     253
   242: aload_0       
   243: new           #22         // sun.nio.cs.Surrogate$Parser
   246: dup           
   247: invokespecial #19         // sun.nio.cs.Surrogate$Parser.<init>:()void
   250: putfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   253: aload_0       
   254: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   257: iload         10
   259: aload_3       
   260: iload         4
   262: iload         5
   264: invokevirtual #20         // sun.nio.cs.Surrogate$Parser.parse:(char, char[], int, int)int
   267: istore        11
   269: iload         11
   271: ifge          291
   274: aload_1       
   275: iload         4
   277: aload_2       
   278: iload         7
   280: invokestatic  #5          // sun.nio.cs.UTF_8.access$200:(java.nio.Buffer, int, java.nio.Buffer, int)void
   283: aload_0       
   284: getfield      #18         // sgp:sun.nio.cs.Surrogate$Parser
   287: invokevirtual #21         // sun.nio.cs.Surrogate$Parser.error:()java.nio.charset.CoderResult
   290: areturn       
   291: iload         8
   293: iload         7
   295: isub          
   296: iconst_4      
   297: if_icmpge     310
   300: aload_1       
   301: iload         4
   303: aload_2       
   304: iload         7
   306: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   309: areturn       
   310: aload         6
   312: iload         7
   314: iinc          
   317: sipush        240
   320: iload         11
   322: bipush        18
   324: ishr          
   325: ior           
   326: i2b           
   327: bastore       
   328: aload         6
   330: iload         7
   332: iinc          
   335: sipush        128
   338: iload         11
   340: bipush        12
   342: ishr          
   343: bipush        63
   345: iand          
   346: ior           
   347: i2b           
   348: bastore       
   349: aload         6
   351: iload         7
   353: iinc          
   356: sipush        128
   359: iload         11
   361: bipush        6
   363: ishr          
   364: bipush        63
   366: iand          
   367: ior           
   368: i2b           
   369: bastore       
   370: aload         6
   372: iload         7
   374: iinc          
   377: sipush        128
   380: iload         11
   382: bipush        63
   384: iand          
   385: ior           
   386: i2b           
   387: bastore       
   388: iinc          
   391: goto          470
   394: iload         8
   396: iload         7
   398: isub          
   399: iconst_3      
   400: if_icmpge     413
   403: aload_1       
   404: iload         4
   406: aload_2       
   407: iload         7
   409: invokestatic  #17         // overflow:(java.nio.CharBuffer, int, java.nio.ByteBuffer, int)java.nio.charset.CoderResult
   412: areturn       
   413: aload         6
   415: iload         7
   417: iinc          
   420: sipush        224
   423: iload         10
   425: bipush        12
   427: ishr          
   428: ior           
   429: i2b           
   430: bastore       
   431: aload         6
   433: iload         7
   435: iinc          
   438: sipush        128
   441: iload         10
   443: bipush        6
   445: ishr          
   446: bipush        63
   448: iand          
   449: ior           
   450: i2b           
   451: bastore       
   452: aload         6
   454: iload         7
   456: iinc          
   459: sipush        128
   462: iload         10
   464: bipush        63
   466: iand          
   467: ior           
   468: i2b           
   469: bastore       
   470: iinc          
   473: goto          109
   476: aload_1       
   477: iload         4
   479: aload_2       
   480: iload         7
   482: invokestatic  #5          // sun.nio.cs.UTF_8.access$200:(java.nio.Buffer, int, java.nio.Buffer, int)void
   485: getstatic     #22         // java.nio.charset.CoderResult.UNDERFLOW:java.nio.charset.CoderResult
   488: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24308b422c418504c4448b5118448b5924448b411c448b4a248b5a1c8b7a188b2cc50c000000448bed458bf34503f04503d34889742420418bf6412bf2448944241c458bc14403c34103f944895c2418458bd8442bdf443bde440f4fde4963f348ffce4503da48c1e003453bda0f8fd5010000895c24148b592c418504dc453bda448974241044894c240c0f8fd7010000440fb64a284585c90f854a030000440fb649284585c90f8551030000458bca448bd7e92600000066660f1f840000000000420fbf7c50106681ff80000f831000000041887cd91041ffc141ffc2453bd97fdf453bc20f8fa4010000458bd9448b7424100f1f80000000000f1f8000000000453bc20f8ed1000000448b0cdd0c000000453bcb0f86b7020000420fb77c5010418bf2ffc6418bebffc581ff800000000f8316000000453bf30f8e7c02000041887cdb10448bdd448bd6ebb481ff000800000f825802000081ff00d800000f820c00000081ff00e000000f822a020000458bee452beb4183fd030f8c46020000443bcd0f862e010000458d6b02453bcd0f8646020000448bd741c1ea0c4181cae0000000458854db10448bd741c1ea064183e23f4181ca80000000448854dd1083e73f81cf8000000041887cdd10458d5b03448bd6e926ffffff458bca442b4c240c443b4c24140f8f7f0100004585c90f8cdb000000443b4a0c0f8c77010000418bfb2b7c24183b7c241c0f8f5001000085ff0f8c3d0100003b790c0f8c8301000044894a1889791848b8addeaddeaddeadde488b6c24304883c438850500000000c5f877c3895c24144863df4803de4c3beb0f86e80000003bef0f8714feffffe91c010000448b0cdd0c0000004d63f24c03f6418bf1493bf60f86ac000000453bca0f8706feffffe94b0000004d63da418bf8412bfa4863ff48ffcf4c03df4d3beb0f865c000000413bea0f8738feffffe94e00000041b9e552feff45898f9c0200004d89a7a8020000e8000000009041b9ed3ffeffebe449baaddeaddeaddeadde4d8bda41bae587feff488b7424204589979c0200004d899fa8020000e80000000090448b74241049bbaddeaddeaddeadde41c7879c020000e57afeff4d899fa8020000e8000000009049baaddeaddeaddeadde4d8bda41bae587feffebab49baaddeaddeaddeadde4d8bda41bae5a0feffeb9641b9ed39feffe95cffffff41b9ed3afeffe951ffffff41b9ed40feffe946ffffff41b9ed3bfeffe93bffffff49baaddeaddeaddeadde4d8bda41bae5a0feffe952ffffff41b9ed63feffe918ffffff41b9ed35feffe90dffffff41b9ed64feffe902ffffff41b9ed72feffe9f7feffff41b9ed62feffe9ecfeffff41b9e511feffe9e1feffff41b9e548feffe9d6feffff49bb000000000000000041baedc0feffe9f0feffff49bb000000000000000041baedaefeffe9dbfeffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1024a1f78, value=0x10ba1de60]:0x10ba1de60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@14e5ca60 slotKind: QWORD  <||@
  Comment 48 6 rax|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD state [bci:0]  <||@
  Comment 48 [rcx:0, rdx:0, rsi:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 51 8 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0]  <||@
  Comment 51 [rax:0, rcx:0, rdx:0, rsi:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 55 10 r10|DWORD = MOV [rcx|QWORD[.] + 24] size: DWORD state [bci:0]  <||@
  Comment 55 [rax:0, rcx:0, rdx:0, rsi:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 55 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 12 r11|DWORD = MOV [rcx|QWORD[.] + 36] size: DWORD  <||@
  Comment 63 14 r8|DWORD = MOV [rcx|QWORD[.] + 28] size: DWORD  <||@
  Comment 67 16 r9|DWORD = MOV [rdx|QWORD[.] + 36] size: DWORD  <||@
  Comment 71 18 rbx|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 74 20 rdi|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 77 22 rbp|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 84 24 r13|QWORD = MOV rbp|DWORD size: DWORD  <||@
  Comment 87 26 r14|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 93 28 r10|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 96 30 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 101 32 rsi|DWORD = SUB (x: r14|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 107 34 stack:36|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 112 36 r8|DWORD = ADD (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 118 38 rdi|DWORD = ADD (x: rdi|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 121 40 stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 126 42 r11|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 132 44 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 135 46 r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rsi|DWORD) condition: >  <||@
  Comment 139 48 rsi|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 142 50 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 145 52 r11|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 148 54 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4ea98b05 encoding: base: 0 shift: 3  <||@
  Comment 152 56 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 155 58 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B6  <||@
  Comment 161 block B6 null  <||@
  Comment 161 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 161 108 stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 165 110 JUMP ~[] destination: B6 -> B7  <||@
  Comment 165 block B7 null  <||@
  Comment 165 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 165 114 rbx|DWORD[.] = MOV [rcx|QWORD[.] + 44] size: DWORD  <||@
  Comment 168 116 NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:0]  <||@
  Comment 168 [rax:0, rcx:0, rdx:0, rbx:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 168 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 172 118 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 175 124 stack:48|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 180 126 stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 185 120 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B14  <||@
  Comment 191 block B14 null  <||@
  Comment 191 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 191 184 r9|DWORD = MOVZXB [rdx|QWORD[.] + 40] size: DWORD  <||@
  Comment 196 186 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 199 188 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B67  <||@
  Comment 205 block B15 null  <||@
  Comment 205 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 205 192 r9|DWORD = MOVZXB [rcx|QWORD[.] + 40] size: DWORD  <||@
  Comment 210 194 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 213 196 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B66  <||@
  Comment 219 block B16 null  <||@
  Comment 219 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 219 200 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 222 202 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 225 204 JUMP ~[] destination: B16 -> B17  <||@
  Comment 230 block B18 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 230 212 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 240 214 rdi|DWORD = MOVSX [rax|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 246 216 CMP rdi|DWORD y: 128 size: WORD  <||@
  Comment 251 218 BRANCH trueDestinationProbability: 0.9998704217771155 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B22  <||@
  Comment 257 block B19 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 257 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 257 222 MOVB (x: [r9|DWORD + rbx|DWORD[.] * 8 + 16], y: rdi|DWORD) size: BYTE  <||@
  Comment 262 224 r9|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 265 226 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 268 228 JUMP ~[] destination: B19 -> B17  <||@
  Comment 268 block B17 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 268 206 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 268 208 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 271 210 BRANCH trueDestinationProbability: 0.9655146968392572 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B22  <||@
  Comment 273 block B22 null  <||@
  Comment 273 238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 273 240 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 276 242 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B30  <||@
  Comment 282 block B30 null  <||@
  Comment 282 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 282 298 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 285 300 r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 290 302 JUMP ~[] destination: B30 -> B31  <||@
  Comment 290 block B31 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 290 304 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 304 306 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 307 308 BRANCH trueDestinationProbability: 0.08862399585384817 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B52  <||@
  Comment 313 block B32 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 313 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 313 312 r9|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 321 314 CMP (x: r9|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 324 316 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B51  <||@
  Comment 330 block B33 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 330 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 330 320 rdi|DWORD = MOVZX [rax|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 336 322 rsi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 341 324 rbp|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 346 326 CMP rdi|DWORD y: 128 size: DWORD  <||@
  Comment 352 328 BRANCH trueDestinationProbability: 0.9444444444444444 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B37  <||@
  Comment 358 block B34 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 358 330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 358 332 CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 361 334 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36  <||@
  Comment 367 block B35 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 367 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 367 338 MOVB (x: [r11|DWORD + rbx|DWORD[.] * 8 + 16], y: rdi|DWORD) size: BYTE  <||@
  Comment 372 340 r11|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 375 342 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 378 344 JUMP ~[] destination: B35 -> B31  <||@
  Comment 380 block B37 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 380 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 380 354 CMP rdi|DWORD y: 2048 size: DWORD  <||@
  Comment 386 356 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39  <||@
  Comment 392 block B39 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 392 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 392 366 CMP rdi|DWORD y: 55296 size: DWORD  <||@
  Comment 398 368 BRANCH trueDestinationProbability: 0.5 condition: |<| trueDestination: B39 -> B44 falseDestination: B39 -> B41  <||@
  Comment 404 block B41 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 404 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 404 376 CMP rdi|DWORD y: 57344 size: DWORD  <||@
  Comment 410 378 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B44  <||@
  Comment 416 block B44 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 416 390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 416 392 r13|DWORD = SUB (x: r14|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 422 394 CMP r13|DWORD y: 3 size: DWORD  <||@
  Comment 426 396 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 432 block B46 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 432 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 432 406 CMP (x: r9|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 435 408 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B46 -> B47 falseDestination: B46 -> B50  <||@
  Comment 441 block B47 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 441 410 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 441 412 r13|DWORD = LEA [r11|DWORD + 2] size: DWORD  <||@
  Comment 445 414 CMP (x: r9|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 448 416 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B49  <||@
  Comment 454 block B48 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 454 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 454 420 r10|DWORD = SHR rdi|DWORD y: 12 size: DWORD  <||@
  Comment 461 422 r10|DWORD = OR r10|DWORD y: 224 size: DWORD  <||@
  Comment 468 424 MOVB (x: [r11|DWORD + rbx|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 473 426 r10|DWORD = SHR rdi|DWORD y: 6 size: DWORD  <||@
  Comment 480 428 r10|DWORD = AND r10|DWORD y: 63 size: DWORD  <||@
  Comment 484 430 r10|DWORD = OR r10|DWORD y: 128 size: DWORD  <||@
  Comment 491 432 MOVB (x: [rbp|DWORD + rbx|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 496 434 rdi|DWORD = AND rdi|DWORD y: 63 size: DWORD  <||@
  Comment 499 436 rdi|DWORD = OR rdi|DWORD y: 128 size: DWORD  <||@
  Comment 505 438 MOVB (x: [r13|DWORD + rbx|DWORD[.] * 8 + 16], y: rdi|DWORD) size: BYTE  <||@
  Comment 510 440 r11|DWORD = LEA [r11|DWORD + 3] size: DWORD  <||@
  Comment 514 442 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 517 444 JUMP ~[] destination: B48 -> B31  <||@
  Comment 522 block B52 null  <||@
  Comment 522 464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 522 466 r9|DWORD = SUB (x: r10|DWORD, ~y: stack:52|DWORD) size: DWORD  <||@
  Comment 530 468 CMP (x: r9|DWORD, y: stack:44|DWORD) size: DWORD  <||@
  Comment 535 470 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 541 block B54 null  <||@
  Comment 541 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 541 480 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 544 482 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B56  <||@
  Comment 550 block B56 null  <||@
  Comment 550 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 550 492 CMP (x: r9|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 554 494 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58  <||@
  Comment 560 block B58 null  <||@
  Comment 560 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 560 504 rdi|DWORD = SUB (x: r11|DWORD, ~y: stack:40|DWORD) size: DWORD  <||@
  Comment 567 506 CMP (x: rdi|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 571 508 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60  <||@
  Comment 577 block B60 null  <||@
  Comment 577 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 577 518 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 579 520 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B60 -> B61 falseDestination: B60 -> B62  <||@
  Comment 585 block B62 null  <||@
  Comment 585 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 585 530 CMP (x: rdi|DWORD, y: [rcx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 588 532 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B65  <||@
  Comment 594 block B65 null  <||@
  Comment 594 548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 594 550 MOV (x: [rdx|QWORD[.] + 24], y: r9|DWORD) size: DWORD  <||@
  Comment 598 552 MOV (x: [rcx|QWORD[.] + 24], y: rdi|DWORD) size: DWORD  <||@
  Comment 601 554 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1374209548]  <||@
  Comment 601 {Object[CoderResult@1374209548]}  <||@
  Comment 611 556 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 620 12  <||@
  Comment 630 block B1 null  <||@
  Comment 630 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 630 62 stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 634 64 rbx|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 637 66 rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 640 68 CMP (x: r13|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 643 70 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5  <||@
  Comment 649 block B2 null  <||@
  Comment 649 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 649 74 CMP (x: rbp|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 651 76 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B7 falseDestination: B2 -> B4  <||@
  Comment 662 block B8 null  <||@
  Comment 662 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 662 128 r9|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 670 130 r14|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 673 132 r14|QWORD = ADD (x: r14|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 676 134 rsi|QWORD = MOV r9|DWORD size: DWORD  <||@
  Comment 679 136 CMP (x: rsi|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 682 138 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12  <||@
  Comment 688 block B9 null  <||@
  Comment 688 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 688 142 CMP (x: r9|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 691 144 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B14 falseDestination: B9 -> B11  <||@
  Comment 702 block B23 null  <||@
  Comment 702 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 702 246 r11|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 705 248 rdi|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 711 250 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 714 252 rdi|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 717 254 r11|QWORD = ADD (x: r11|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 720 256 CMP (x: r13|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 723 258 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B28  <||@
  Comment 729 block B24 null  <||@
  Comment 729 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 729 262 CMP (x: rbp|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 732 264 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B30 falseDestination: B24 -> B28  <||@
  Comment 743 block B50 null  <||@
  Comment 743 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 743 454 r9|DWORD = MOVE input: int[-109851|0xfffffffffffe52e5]  <||@
  Comment 749 456 JUMP ~[] destination: B50 -> B64  <||@
  Comment 749 block B64 null  <||@
  Comment 749 540 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 749 542 MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD  <||@
  Comment 756 544 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 763 546 DEOPT info [bci:109]  <||@
  Comment 763 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 768 [rax:0, rcx:0, rdx:0, rbx:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4          |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |rax|QWORD[.]  |r10|DWORD  |r8|DWORD  |rbx|DWORD[.]  |r11|DWORD  |r14|DWORD  |-  |-   |-    <||@
  Comment 769 block B55 null  <||@
  Comment 769 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 769 486 r9|DWORD = MOVE input: int[-114707|0xfffffffffffe3fed]  <||@
  Comment 775 488 JUMP ~[] destination: B55 -> B64  <||@
  Comment 777 block B11 null  <||@
  Comment 777 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 777 152 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@831259190]  <||@
  Comment 777 {Object[d.a@831259190]}  <||@
  Comment 787 154 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 790 156 r10|DWORD = MOVE input: int[-96283|0xfffffffffffe87e5]  <||@
  Comment 796 160 JUMP ~[] destination: B11 -> B68  <||@
  Comment 796 block B68 null  <||@
  Comment 796 578 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 796 102 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 801 580 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 808 582 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 815 584 DEOPT info [bci:0]  <||@
  Comment 815 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 820 [rcx:0, rdx:0, rsi:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 821 block B28 null  <||@
  Comment 821 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 821 278 r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 826 284 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1850367900]  <||@
  Comment 826 {Object[d.a@1850367900]}  <||@
  Comment 836 286 MOV [r15|QWORD + 668] y: -99611 size: DWORD  <||@
  Comment 847 288 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 854 290 DEOPT info [bci:109]  <||@
  Comment 854 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 859 [rax:0, rcx:0, rdx:0, rbx:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4          |5         |6             |7         |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |rax|QWORD[.]  |r10|DWORD  |r8|DWORD  |rbx|DWORD[.]  |r9|DWORD  |r14|DWORD  |-  |-   |-    <||@
  Comment 860 block B12 null  <||@
  Comment 860 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 860 164 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@831259190]  <||@
  Comment 860 {Object[d.a@831259190]}  <||@
  Comment 870 166 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 873 168 r10|DWORD = MOVE input: int[-96283|0xfffffffffffe87e5]  <||@
  Comment 879 172 JUMP ~[] destination: B12 -> B68  <||@
  Comment 881 block B5 null  <||@
  Comment 881 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 881 96 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@831259190]  <||@
  Comment 881 {Object[d.a@831259190]}  <||@
  Comment 891 98 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 894 100 r10|DWORD = MOVE input: int[-89883|0xfffffffffffea0e5]  <||@
  Comment 900 104 JUMP ~[] destination: B5 -> B68  <||@
  Comment 902 block B61 null  <||@
  Comment 902 522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 902 524 r9|DWORD = MOVE input: int[-116243|0xfffffffffffe39ed]  <||@
  Comment 908 526 JUMP ~[] destination: B61 -> B64  <||@
  Comment 913 block B59 null  <||@
  Comment 913 510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 913 512 r9|DWORD = MOVE input: int[-115987|0xfffffffffffe3aed]  <||@
  Comment 919 514 JUMP ~[] destination: B59 -> B64  <||@
  Comment 924 block B53 null  <||@
  Comment 924 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 924 474 r9|DWORD = MOVE input: int[-114451|0xfffffffffffe40ed]  <||@
  Comment 930 476 JUMP ~[] destination: B53 -> B64  <||@
  Comment 935 block B57 null  <||@
  Comment 935 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 935 498 r9|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed]  <||@
  Comment 941 500 JUMP ~[] destination: B57 -> B64  <||@
  Comment 946 block B4 null  <||@
  Comment 946 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 946 84 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@831259190]  <||@
  Comment 946 {Object[d.a@831259190]}  <||@
  Comment 956 86 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 959 88 r10|DWORD = MOVE input: int[-89883|0xfffffffffffea0e5]  <||@
  Comment 965 92 JUMP ~[] destination: B4 -> B68  <||@
  Comment 970 block B42 null  <||@
  Comment 970 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 970 382 r9|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed]  <||@
  Comment 976 384 JUMP ~[] destination: B42 -> B64  <||@
  Comment 981 block B63 null  <||@
  Comment 981 534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 981 536 r9|DWORD = MOVE input: int[-117267|0xfffffffffffe35ed]  <||@
  Comment 987 538 JUMP ~[] destination: B63 -> B64  <||@
  Comment 992 block B38 null  <||@
  Comment 992 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 992 360 r9|DWORD = MOVE input: int[-105235|0xfffffffffffe64ed]  <||@
  Comment 998 362 JUMP ~[] destination: B38 -> B64  <||@
  Comment 1003 block B36 null  <||@
  Comment 1003 346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1003 348 r9|DWORD = MOVE input: int[-101651|0xfffffffffffe72ed]  <||@
  Comment 1009 350 JUMP ~[] destination: B36 -> B64  <||@
  Comment 1014 block B45 null  <||@
  Comment 1014 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1014 400 r9|DWORD = MOVE input: int[-105747|0xfffffffffffe62ed]  <||@
  Comment 1020 402 JUMP ~[] destination: B45 -> B64  <||@
  Comment 1025 block B51 null  <||@
  Comment 1025 458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1025 460 r9|DWORD = MOVE input: int[-126491|0xfffffffffffe11e5]  <||@
  Comment 1031 462 JUMP ~[] destination: B51 -> B64  <||@
  Comment 1036 block B49 null  <||@
  Comment 1036 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1036 448 r9|DWORD = MOVE input: int[-112411|0xfffffffffffe48e5]  <||@
  Comment 1042 450 JUMP ~[] destination: B49 -> B64  <||@
  Comment 1047 block B67 null  <||@
  Comment 1047 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1047 570 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1057 572 r10|DWORD = MOVE input: int[-81683|0xfffffffffffec0ed]  <||@
  Comment 1063 576 JUMP ~[] destination: B67 -> B68  <||@
  Comment 1068 block B66 null  <||@
  Comment 1068 558 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1068 560 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1078 562 r10|DWORD = MOVE input: int[-86291|0xfffffffffffeaeed]  <||@
  Comment 1084 566 JUMP ~[] destination: B66 -> B68  <||@
  Comment 1089 {Stub<ExceptionHandlerStub.exceptionHandler>@0x10be4bf20:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1089 4  <||@
  Comment 1095 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1024a1f88, value=0x10ba1f500]:0x10ba1f500}  <||@
  Comment 1095 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-1532[sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)]"
  method "HotSpotCompilation-1532[sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)]"
  date 1527004914360
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 10c00dac0 448b560849c1e203493bc20f858f03a1ff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24308b422c418504c4448b5118448b5924448b411c448b4a248b5a1c8b7a188b2cc50c000000448bed458bf34503f04503d34889742420418bf6412bf2448944241c458bc14403c34103f944895c2418458bd8442bdf443bde440f4fde4963f348ffce4503da48c1e003453bda0f8fd5010000895c24148b592c418504dc453bda448974241044894c240c0f8fd7010000440fb64a284585c90f854a030000440fb649284585c90f8551030000458bca448bd7e92600000066660f1f840000000000420fbf7c50106681ff80000f831000000041887cd91041ffc141ffc2453bd97fdf453bc20f8fa4010000458bd9448b7424100f1f80000000000f1f8000000000453bc20f8ed1000000448b0cdd0c000000453bcb0f86b7020000420fb77c5010418bf2ffc6418bebffc581ff800000000f8316000000453bf30f8e7c02000041887cdb10448bdd448bd6ebb481ff000800000f825802000081ff00d800000f820c00000081ff00e000000f822a020000458bee452beb4183fd030f8c46020000443bcd0f862e010000458d6b02453bcd0f8646020000448bd741c1ea0c4181cae0000000458854db10448bd741c1ea064183e23f4181ca80000000448854dd1083e73f81cf8000000041887cdd10458d5b03448bd6e926ffffff458bca442b4c240c443b4c24140f8f7f0100004585c90f8cdb000000443b4a0c0f8c77010000418bfb2b7c24183b7c241c0f8f5001000085ff0f8c3d0100003b790c0f8c8301000044894a1889791848b8480700c006000000488b6c24304883c4388505d4b23df5c5f877c3895c24144863df4803de4c3beb0f86e80000003bef0f8714feffffe91c010000448b0cdd0c0000004d63f24c03f6418bf1493bf60f86ac000000453bca0f8706feffffe94b0000004d63da418bf8412bfa4863ff48ffcf4c03df4d3beb0f865c000000413bea0f8738feffffe94e00000041b9e552feff45898f9c0200004d89a7a8020000e83e18a1ff9041b9ed3ffeffebe449bae860706b070000004d8bda41bae587feff488b7424204589979c0200004d899fa8020000e80a18a1ff90448b74241049bb38c5706b0700000041c7879c020000e57afeff4d899fa8020000e8e317a1ff9049bae860706b070000004d8bda41bae587feffebab49bae860706b070000004d8bda41bae5a0feffeb9641b9ed39feffe95cffffff41b9ed3afeffe951ffffff41b9ed40feffe946ffffff41b9ed3bfeffe93bffffff49bae860706b070000004d8bda41bae5a0feffe952ffffff41b9ed63feffe918ffffff41b9ed35feffe90dffffff41b9ed64feffe902ffffff41b9ed72feffe9f7feffff41b9ed62feffe9ecfeffff41b9e511feffe9e1feffff41b9e548feffe9d6feffff49bb000000000000000041baedc0feffe9f0feffff49bb000000000000000041baedaefeffe9dbfeffffe81ae0e3ff90e8f415a1ff90f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1024a1f78, value=0x10ba1de60]:0x10ba1de60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@14e5ca60 slotKind: QWORD  <||@
  Comment 48 6 rax|DWORD[.] = MOV [rdx|QWORD[.] + 44] size: DWORD state [bci:0]  <||@
  Comment 48 [rcx:0, rdx:0, rsi:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 51 8 NULLCHECK [r12|QWORD[*] + rax|DWORD[.] * 8] state [bci:0]  <||@
  Comment 51 [rax:0, rcx:0, rdx:0, rsi:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 55 10 r10|DWORD = MOV [rcx|QWORD[.] + 24] size: DWORD state [bci:0]  <||@
  Comment 55 [rax:0, rcx:0, rdx:0, rsi:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 55 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 12 r11|DWORD = MOV [rcx|QWORD[.] + 36] size: DWORD  <||@
  Comment 63 14 r8|DWORD = MOV [rcx|QWORD[.] + 28] size: DWORD  <||@
  Comment 67 16 r9|DWORD = MOV [rdx|QWORD[.] + 36] size: DWORD  <||@
  Comment 71 18 rbx|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 74 20 rdi|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 77 22 rbp|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 84 24 r13|QWORD = MOV rbp|DWORD size: DWORD  <||@
  Comment 87 26 r14|DWORD = ADD (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 93 28 r10|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 96 30 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 101 32 rsi|DWORD = SUB (x: r14|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 107 34 stack:36|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 112 36 r8|DWORD = ADD (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 118 38 rdi|DWORD = ADD (x: rdi|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 121 40 stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 126 42 r11|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 132 44 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 135 46 r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: rsi|DWORD) condition: >  <||@
  Comment 139 48 rsi|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 142 50 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 145 52 r11|DWORD = ADD (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 148 54 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4ea98b05 encoding: base: 0 shift: 3  <||@
  Comment 152 56 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 155 58 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B6  <||@
  Comment 161 block B6 null  <||@
  Comment 161 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 161 108 stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 165 110 JUMP ~[] destination: B6 -> B7  <||@
  Comment 165 block B7 null  <||@
  Comment 165 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 165 114 rbx|DWORD[.] = MOV [rcx|QWORD[.] + 44] size: DWORD  <||@
  Comment 168 116 NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:0]  <||@
  Comment 168 [rax:0, rcx:0, rdx:0, rbx:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 168 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 172 118 CMP (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 175 124 stack:48|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 180 126 stack:52|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 185 120 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B14  <||@
  Comment 191 block B14 null  <||@
  Comment 191 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 191 184 r9|DWORD = MOVZXB [rdx|QWORD[.] + 40] size: DWORD  <||@
  Comment 196 186 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 199 188 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B67  <||@
  Comment 205 block B15 null  <||@
  Comment 205 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 205 192 r9|DWORD = MOVZXB [rcx|QWORD[.] + 40] size: DWORD  <||@
  Comment 210 194 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 213 196 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B66  <||@
  Comment 219 block B16 null  <||@
  Comment 219 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 219 200 r9|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 222 202 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 225 204 JUMP ~[] destination: B16 -> B17  <||@
  Comment 230 block B18 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 230 212 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 240 214 rdi|DWORD = MOVSX [rax|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 246 216 CMP rdi|DWORD y: 128 size: WORD  <||@
  Comment 251 218 BRANCH trueDestinationProbability: 0.9998704217771155 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B22  <||@
  Comment 257 block B19 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 257 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 257 222 MOVB (x: [r9|DWORD + rbx|DWORD[.] * 8 + 16], y: rdi|DWORD) size: BYTE  <||@
  Comment 262 224 r9|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 265 226 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 268 228 JUMP ~[] destination: B19 -> B17  <||@
  Comment 268 block B17 loop 0 depth 1 header:49|LoopBegin  <||@
  Comment 268 206 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 268 208 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 271 210 BRANCH trueDestinationProbability: 0.9655146968392572 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B22  <||@
  Comment 273 block B22 null  <||@
  Comment 273 238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 273 240 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 276 242 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B30  <||@
  Comment 282 block B30 null  <||@
  Comment 282 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 282 298 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 285 300 r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 290 302 JUMP ~[] destination: B30 -> B31  <||@
  Comment 290 block B31 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 290 304 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 304 306 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 307 308 BRANCH trueDestinationProbability: 0.08862399585384817 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B52  <||@
  Comment 313 block B32 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 313 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 313 312 r9|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 321 314 CMP (x: r9|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 324 316 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B51  <||@
  Comment 330 block B33 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 330 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 330 320 rdi|DWORD = MOVZX [rax|QWORD[.] + r10|DWORD * 2 + 16] size: DWORD  <||@
  Comment 336 322 rsi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 341 324 rbp|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 346 326 CMP rdi|DWORD y: 128 size: DWORD  <||@
  Comment 352 328 BRANCH trueDestinationProbability: 0.9444444444444444 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B37  <||@
  Comment 358 block B34 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 358 330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 358 332 CMP (x: r14|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 361 334 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B34 -> B35 falseDestination: B34 -> B36  <||@
  Comment 367 block B35 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 367 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 367 338 MOVB (x: [r11|DWORD + rbx|DWORD[.] * 8 + 16], y: rdi|DWORD) size: BYTE  <||@
  Comment 372 340 r11|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 375 342 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 378 344 JUMP ~[] destination: B35 -> B31  <||@
  Comment 380 block B37 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 380 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 380 354 CMP rdi|DWORD y: 2048 size: DWORD  <||@
  Comment 386 356 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B37 -> B38 falseDestination: B37 -> B39  <||@
  Comment 392 block B39 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 392 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 392 366 CMP rdi|DWORD y: 55296 size: DWORD  <||@
  Comment 398 368 BRANCH trueDestinationProbability: 0.5 condition: |<| trueDestination: B39 -> B44 falseDestination: B39 -> B41  <||@
  Comment 404 block B41 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 404 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 404 376 CMP rdi|DWORD y: 57344 size: DWORD  <||@
  Comment 410 378 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B44  <||@
  Comment 416 block B44 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 416 390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 416 392 r13|DWORD = SUB (x: r14|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 422 394 CMP r13|DWORD y: 3 size: DWORD  <||@
  Comment 426 396 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 432 block B46 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 432 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 432 406 CMP (x: r9|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 435 408 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B46 -> B47 falseDestination: B46 -> B50  <||@
  Comment 441 block B47 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 441 410 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 441 412 r13|DWORD = LEA [r11|DWORD + 2] size: DWORD  <||@
  Comment 445 414 CMP (x: r9|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 448 416 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B47 -> B48 falseDestination: B47 -> B49  <||@
  Comment 454 block B48 loop 1 depth 1 header:86|LoopBegin  <||@
  Comment 454 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 454 420 r10|DWORD = SHR rdi|DWORD y: 12 size: DWORD  <||@
  Comment 461 422 r10|DWORD = OR r10|DWORD y: 224 size: DWORD  <||@
  Comment 468 424 MOVB (x: [r11|DWORD + rbx|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 473 426 r10|DWORD = SHR rdi|DWORD y: 6 size: DWORD  <||@
  Comment 480 428 r10|DWORD = AND r10|DWORD y: 63 size: DWORD  <||@
  Comment 484 430 r10|DWORD = OR r10|DWORD y: 128 size: DWORD  <||@
  Comment 491 432 MOVB (x: [rbp|DWORD + rbx|DWORD[.] * 8 + 16], y: r10|DWORD) size: BYTE  <||@
  Comment 496 434 rdi|DWORD = AND rdi|DWORD y: 63 size: DWORD  <||@
  Comment 499 436 rdi|DWORD = OR rdi|DWORD y: 128 size: DWORD  <||@
  Comment 505 438 MOVB (x: [r13|DWORD + rbx|DWORD[.] * 8 + 16], y: rdi|DWORD) size: BYTE  <||@
  Comment 510 440 r11|DWORD = LEA [r11|DWORD + 3] size: DWORD  <||@
  Comment 514 442 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 517 444 JUMP ~[] destination: B48 -> B31  <||@
  Comment 522 block B52 null  <||@
  Comment 522 464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 522 466 r9|DWORD = SUB (x: r10|DWORD, ~y: stack:52|DWORD) size: DWORD  <||@
  Comment 530 468 CMP (x: r9|DWORD, y: stack:44|DWORD) size: DWORD  <||@
  Comment 535 470 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 541 block B54 null  <||@
  Comment 541 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 541 480 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 544 482 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B54 -> B55 falseDestination: B54 -> B56  <||@
  Comment 550 block B56 null  <||@
  Comment 550 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 550 492 CMP (x: r9|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 554 494 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B58  <||@
  Comment 560 block B58 null  <||@
  Comment 560 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 560 504 rdi|DWORD = SUB (x: r11|DWORD, ~y: stack:40|DWORD) size: DWORD  <||@
  Comment 567 506 CMP (x: rdi|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 571 508 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60  <||@
  Comment 577 block B60 null  <||@
  Comment 577 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 577 518 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 579 520 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B60 -> B61 falseDestination: B60 -> B62  <||@
  Comment 585 block B62 null  <||@
  Comment 585 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 585 530 CMP (x: rdi|DWORD, y: [rcx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 588 532 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B62 -> B63 falseDestination: B62 -> B65  <||@
  Comment 594 block B65 null  <||@
  Comment 594 548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 594 550 MOV (x: [rdx|QWORD[.] + 24], y: r9|DWORD) size: DWORD  <||@
  Comment 598 552 MOV (x: [rcx|QWORD[.] + 24], y: rdi|DWORD) size: DWORD  <||@
  Comment 601 554 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@1374209548]  <||@
  Comment 601 {Object[CoderResult@1374209548]}  <||@
  Comment 611 556 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 620 12  <||@
  Comment 630 block B1 null  <||@
  Comment 630 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 630 62 stack:44|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 634 64 rbx|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 637 66 rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 640 68 CMP (x: r13|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 643 70 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B5  <||@
  Comment 649 block B2 null  <||@
  Comment 649 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 649 74 CMP (x: rbp|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 651 76 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B7 falseDestination: B2 -> B4  <||@
  Comment 662 block B8 null  <||@
  Comment 662 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 662 128 r9|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 670 130 r14|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 673 132 r14|QWORD = ADD (x: r14|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 676 134 rsi|QWORD = MOV r9|DWORD size: DWORD  <||@
  Comment 679 136 CMP (x: rsi|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 682 138 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B12  <||@
  Comment 688 block B9 null  <||@
  Comment 688 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 688 142 CMP (x: r9|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 691 144 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B9 -> B14 falseDestination: B9 -> B11  <||@
  Comment 702 block B23 null  <||@
  Comment 702 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 702 246 r11|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 705 248 rdi|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 711 250 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 714 252 rdi|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 717 254 r11|QWORD = ADD (x: r11|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 720 256 CMP (x: r13|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 723 258 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B28  <||@
  Comment 729 block B24 null  <||@
  Comment 729 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 729 262 CMP (x: rbp|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 732 264 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B30 falseDestination: B24 -> B28  <||@
  Comment 743 block B50 null  <||@
  Comment 743 452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 743 454 r9|DWORD = MOVE input: int[-109851|0xfffffffffffe52e5]  <||@
  Comment 749 456 JUMP ~[] destination: B50 -> B64  <||@
  Comment 749 block B64 null  <||@
  Comment 749 540 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 749 542 MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD  <||@
  Comment 756 544 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 763 546 DEOPT info [bci:109]  <||@
  Comment 763 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 768 [rax:0, rcx:0, rdx:0, rbx:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4          |5         |6             |7          |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |rax|QWORD[.]  |r10|DWORD  |r8|DWORD  |rbx|DWORD[.]  |r11|DWORD  |r14|DWORD  |-  |-   |-    <||@
  Comment 769 block B55 null  <||@
  Comment 769 484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 769 486 r9|DWORD = MOVE input: int[-114707|0xfffffffffffe3fed]  <||@
  Comment 775 488 JUMP ~[] destination: B55 -> B64  <||@
  Comment 777 block B11 null  <||@
  Comment 777 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 777 152 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@831259190]  <||@
  Comment 777 {Object[d.a@831259190]}  <||@
  Comment 787 154 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 790 156 r10|DWORD = MOVE input: int[-96283|0xfffffffffffe87e5]  <||@
  Comment 796 160 JUMP ~[] destination: B11 -> B68  <||@
  Comment 796 block B68 null  <||@
  Comment 796 578 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 796 102 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 801 580 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 808 582 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 815 584 DEOPT info [bci:0]  <||@
  Comment 815 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 820 [rcx:0, rdx:0, rsi:0]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:585) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5  |6  |7  |8  |9  |10  |11 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-   |-    <||@
  Comment 821 block B28 null  <||@
  Comment 821 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 821 278 r14|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 826 284 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1850367900]  <||@
  Comment 826 {Object[d.a@1850367900]}  <||@
  Comment 836 286 MOV [r15|QWORD + 668] y: -99611 size: DWORD  <||@
  Comment 847 288 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 854 290 DEOPT info [bci:109]  <||@
  Comment 854 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 859 [rax:0, rcx:0, rdx:0, rbx:0, stack:32]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:597) [bci: 109, duringCall: false, rethrow: false]
              |0                  |1             |2             |3             |4          |5         |6             |7         |8          |9  |10  |11 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |rax|QWORD[.]  |r10|DWORD  |r8|DWORD  |rbx|DWORD[.]  |r9|DWORD  |r14|DWORD  |-  |-   |-    <||@
  Comment 860 block B12 null  <||@
  Comment 860 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 860 164 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@831259190]  <||@
  Comment 860 {Object[d.a@831259190]}  <||@
  Comment 870 166 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 873 168 r10|DWORD = MOVE input: int[-96283|0xfffffffffffe87e5]  <||@
  Comment 879 172 JUMP ~[] destination: B12 -> B68  <||@
  Comment 881 block B5 null  <||@
  Comment 881 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 881 96 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@831259190]  <||@
  Comment 881 {Object[d.a@831259190]}  <||@
  Comment 891 98 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 894 100 r10|DWORD = MOVE input: int[-89883|0xfffffffffffea0e5]  <||@
  Comment 900 104 JUMP ~[] destination: B5 -> B68  <||@
  Comment 902 block B61 null  <||@
  Comment 902 522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 902 524 r9|DWORD = MOVE input: int[-116243|0xfffffffffffe39ed]  <||@
  Comment 908 526 JUMP ~[] destination: B61 -> B64  <||@
  Comment 913 block B59 null  <||@
  Comment 913 510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 913 512 r9|DWORD = MOVE input: int[-115987|0xfffffffffffe3aed]  <||@
  Comment 919 514 JUMP ~[] destination: B59 -> B64  <||@
  Comment 924 block B53 null  <||@
  Comment 924 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 924 474 r9|DWORD = MOVE input: int[-114451|0xfffffffffffe40ed]  <||@
  Comment 930 476 JUMP ~[] destination: B53 -> B64  <||@
  Comment 935 block B57 null  <||@
  Comment 935 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 935 498 r9|DWORD = MOVE input: int[-115731|0xfffffffffffe3bed]  <||@
  Comment 941 500 JUMP ~[] destination: B57 -> B64  <||@
  Comment 946 block B4 null  <||@
  Comment 946 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 946 84 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@831259190]  <||@
  Comment 946 {Object[d.a@831259190]}  <||@
  Comment 956 86 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 959 88 r10|DWORD = MOVE input: int[-89883|0xfffffffffffea0e5]  <||@
  Comment 965 92 JUMP ~[] destination: B4 -> B68  <||@
  Comment 970 block B42 null  <||@
  Comment 970 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 970 382 r9|DWORD = MOVE input: int[-105491|0xfffffffffffe63ed]  <||@
  Comment 976 384 JUMP ~[] destination: B42 -> B64  <||@
  Comment 981 block B63 null  <||@
  Comment 981 534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 981 536 r9|DWORD = MOVE input: int[-117267|0xfffffffffffe35ed]  <||@
  Comment 987 538 JUMP ~[] destination: B63 -> B64  <||@
  Comment 992 block B38 null  <||@
  Comment 992 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 992 360 r9|DWORD = MOVE input: int[-105235|0xfffffffffffe64ed]  <||@
  Comment 998 362 JUMP ~[] destination: B38 -> B64  <||@
  Comment 1003 block B36 null  <||@
  Comment 1003 346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1003 348 r9|DWORD = MOVE input: int[-101651|0xfffffffffffe72ed]  <||@
  Comment 1009 350 JUMP ~[] destination: B36 -> B64  <||@
  Comment 1014 block B45 null  <||@
  Comment 1014 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1014 400 r9|DWORD = MOVE input: int[-105747|0xfffffffffffe62ed]  <||@
  Comment 1020 402 JUMP ~[] destination: B45 -> B64  <||@
  Comment 1025 block B51 null  <||@
  Comment 1025 458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1025 460 r9|DWORD = MOVE input: int[-126491|0xfffffffffffe11e5]  <||@
  Comment 1031 462 JUMP ~[] destination: B51 -> B64  <||@
  Comment 1036 block B49 null  <||@
  Comment 1036 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1036 448 r9|DWORD = MOVE input: int[-112411|0xfffffffffffe48e5]  <||@
  Comment 1042 450 JUMP ~[] destination: B49 -> B64  <||@
  Comment 1047 block B67 null  <||@
  Comment 1047 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1047 570 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1057 572 r10|DWORD = MOVE input: int[-81683|0xfffffffffffec0ed]  <||@
  Comment 1063 576 JUMP ~[] destination: B67 -> B68  <||@
  Comment 1068 block B66 null  <||@
  Comment 1068 558 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1068 560 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1078 562 r10|DWORD = MOVE input: int[-86291|0xfffffffffffeaeed]  <||@
  Comment 1084 566 JUMP ~[] destination: B66 -> B68  <||@
  Comment 1089 {Stub<ExceptionHandlerStub.exceptionHandler>@0x10be4bf20:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1089 4  <||@
  Comment 1095 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1024a1f88, value=0x10ba1f500]:0x10ba1f500}  <||@
  Comment 1095 5  <||@
  HexCodeFile>>> <|@
end_nmethod
