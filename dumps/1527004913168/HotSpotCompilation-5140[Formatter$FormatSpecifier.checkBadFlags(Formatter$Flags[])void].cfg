begin_compilation
  name " HotSpotCompilation-5140[java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter$Flags[])]"
  method "HotSpotCompilation-5140[java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter$Flags[])]"
  date 1527005022542
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a162 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a162  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Formatter$FormatSpecifier;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?9 v169 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a162 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a162 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.f
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 9]
nullCheck: false
stamp: n# Ljava/util/Formatter$Flags;
=== Inputs ===
stateBefore: - 
guard: - 
address: v169 
=== Succesors ===
next: v111 
=== Usages ===
v171 v74 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v169 #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
stamp: void
=== Inputs ===
value: a162 
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a162  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# [Ljava/util/Formatter$Flags;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?9 v170 v168 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.checkBadFlags(Formatter$Flags[])>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2995
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - 
=== Succesors ===
=== Usages ===
v139 i163 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v108 
=== Usages ===
=== Predecessor ===
a162 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v110 #falseSuccessor: v108  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid a136 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1395082527
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1395082527]
=== Inputs ===
=== Succesors ===
=== Usages ===
a138 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -17163
stableDimension: 0
stamp: i32 [-17163] ⇊00000000ffffbcf5 ⇈00000000ffffbcf5
stampKind: i32
value: int[-17163|0xffffffffffffbcf5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i137 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: i163 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i163  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i163 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v168 
=== Succesors ===
next: v161 
=== Usages ===
v11 j87 v101 
=== Predecessor ===
v108 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v168 #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid j87 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/1174728845@6b2a0100
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2049777509@675f16c4
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i163 
=== Succesors ===
=== Usages ===
j91 v93 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i163  <|@  <|@
f <@~|@floating>@ <|@
tid j90 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j91 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j91 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j87 
y: j90 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j87 y: j90  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j91 
y: j87 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j91 y: j87  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i8 v101 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 14]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v93 
=== Succesors ===
trueSuccessor: v157 
falseSuccessor: v160 
=== Usages ===
=== Predecessor ===
i163 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v93 #trueSuccessor: v157 #falseSuccessor: v160  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
v157 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i163 
y: i4 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i163 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v101 
=== Succesors ===
trueSuccessor: v158 
falseSuccessor: v118 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v101 #trueSuccessor: v158 #falseSuccessor: v118  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v156  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
v158 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v155 v156 
=== Succesors ===
next: i164 
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v155 v156 #next: i164  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a162 
=== Succesors ===
=== Usages ===
i164 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i164 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 1]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v171 
=== Succesors ===
next: v6 
=== Usages ===
i37 
=== Predecessor ===
v154 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v171 #next: v6  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 32]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i26 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
i164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B10" 
    successors "B8" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4615831297412690476
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v7 
values: i4 i26 
=== Succesors ===
=== Usages ===
?9 v11 v170 i26 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v7 values: i4 i26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 3.8408736691910885
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 2]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v6 
=== Succesors ===
next: v16 
=== Usages ===
i8 v14 v27 v128 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v6 #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i8 
y: i163 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i8 y: i163  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 5]
stamp: void
trueSuccessorProbability: 0.7396425693400621
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v12 #falseSuccessor: v14  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613579497599005228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a165 
=== Usages ===
v99 
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a165  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v154 v12 
=== Succesors ===
=== Usages ===
a165 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v154 v12  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2 
index: i8 
=== Succesors ===
=== Usages ===
a165 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a165 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 14]
nullCheck: false
stamp: n# Ljava/util/Formatter$Flags;
=== Inputs ===
stateBefore: - 
guard: v99 
address: v170 
=== Succesors ===
next: i166 
=== Usages ===
v172 
=== Predecessor ===
v12 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v99 address: v170 #next: i166  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.checkBadFlags(Formatter$Flags[])>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2995
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i8 
=== Succesors ===
=== Usages ===
v151 i166 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i8  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a165 
=== Succesors ===
=== Usages ===
i166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i166 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?9 
guard: - 
address: v172 
=== Succesors ===
next: v129 
=== Usages ===
i37 v41 
=== Predecessor ===
a165 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?9 guard: - address: v172 #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$68/1111552356@74e89afd
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
stamp: i32
=== Inputs ===
x: i164 
y: i166 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i164 y: i166  <|@  <|@
f <@~|@floating>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i37 
y: i166 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i37 y: i166  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v41 
=== Succesors ===
trueSuccessor: v128 
falseSuccessor: v125 
=== Usages ===
=== Predecessor ===
i166 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v41 #trueSuccessor: v128 #falseSuccessor: v125  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v151  <|@  <|@
f <@~|@floating>@ <|@
tid a142 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -18707
stableDimension: 0
stamp: i32 [-18707] ⇊00000000ffffb6ed ⇈00000000ffffb6ed
stampKind: i32
value: int[-18707|0xffffffffffffb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?9 
actionAndReason: i153 
speculation: a142 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?9 actionAndReason: i153 speculation: a142  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4613579497599005228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 32]
stamp: i32
=== Inputs ===
x: i8 
y: i25 
=== Succesors ===
=== Usages ===
i8 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i8 y: i25  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2998) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2998) [bci: 38]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid a145 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@413899078
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@413899078]
=== Inputs ===
=== Succesors ===
=== Usages ===
a138 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -14619
stableDimension: 0
stamp: i32 [-14619] ⇊00000000ffffc6e5 ⇈00000000ffffc6e5
stampKind: i32
value: int[-14619|0xffffffffffffc6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i137 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
v118 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B1" "B12" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i137 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-17163 - -11787] ⇊00000000ffff80e5 ⇈00000000fffffff5
valueDescription: i32
=== Inputs ===
merge: v133 
values: i135 i144 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v133 values: i135 i144  <|@  <|@
f <@~|@floating>@ <|@
tid a138 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v133 
values: a136 a145 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v133 values: a136 a145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v134 v143 
=== Succesors ===
next: v139 
=== Usages ===
i137 a138 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v134 v143 #next: v139  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i137 
speculation: a138 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i137 speculation: a138  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a162 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a162  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Formatter$FormatSpecifier;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?9 v169 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a162 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a162 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.f
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 9]
nullCheck: false
stamp: n# Ljava/util/Formatter$Flags;
=== Inputs ===
stateBefore: - 
guard: - 
address: v169 
=== Succesors ===
next: v111 
=== Usages ===
v171 v74 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v169 #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
stamp: void
=== Inputs ===
value: a162 
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a162  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# [Ljava/util/Formatter$Flags;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?9 v170 v168 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.checkBadFlags(Formatter$Flags[])>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2995
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - 
=== Succesors ===
=== Usages ===
v139 i163 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v108 
=== Usages ===
=== Predecessor ===
a162 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v110 #falseSuccessor: v108  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6597f580 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid a136 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1395082527
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1395082527]
=== Inputs ===
=== Succesors ===
=== Usages ===
a138 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
result int[-17163|0xffffffffffffbcf5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -17163
stableDimension: 0
stamp: i32 [-17163] ⇊00000000ffffbcf5 ⇈00000000ffffbcf5
stampKind: i32
value: int[-17163|0xffffffffffffbcf5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i137 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1395082527] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-17163|0xffffffffffffbcf5], v3|QWORD[.]] destination: B1 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: i163 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i163  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i163 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 4]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v168 
=== Succesors ===
next: v161 
=== Usages ===
v11 j87 v101 
=== Predecessor ===
v108 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v168 #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid j87 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/1174728845@6b2a0100
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/2049777509@675f16c4
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i163 
=== Succesors ===
=== Usages ===
j91 v93 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i163  <|@  <|@
f <@~|@floating>@ <|@
tid j90 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j91 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j91 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j87 
y: j90 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j87 y: j90  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j91 
y: j87 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j91 y: j87  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i8 v101 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 14]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v93 
=== Succesors ===
trueSuccessor: v157 
falseSuccessor: v160 
=== Usages ===
=== Predecessor ===
i163 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v93 #trueSuccessor: v157 #falseSuccessor: v160  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = DEC v5|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
v157 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i163 
y: i4 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i163 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v101 
=== Succesors ===
trueSuccessor: v158 
falseSuccessor: v118 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v101 #trueSuccessor: v158 #falseSuccessor: v118  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v156  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
v158 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v155 v156 
=== Succesors ===
next: i164 
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v155 v156 #next: i164  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a162 
=== Succesors ===
=== Usages ===
i164 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i164 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 1]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v171 
=== Succesors ===
next: v6 
=== Usages ===
i37 
=== Predecessor ===
v154 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v171 #next: v6  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 32]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i26 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
i164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B10" 
    successors "B8" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4615831297412690476
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i8 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v7 
values: i4 i26 
=== Succesors ===
=== Usages ===
?9 v11 v170 i26 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v7 values: i4 i26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 3.8408736691910885
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 2]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v6 
=== Succesors ===
next: v16 
=== Usages ===
i8 v14 v27 v128 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v6 #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i8 
y: i163 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i8 y: i163  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 5]
stamp: void
trueSuccessorProbability: 0.7396425693400621
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v12 #falseSuccessor: v14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7396425693400621 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613579497599005228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a165 
=== Usages ===
v99 
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a165  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v154 v12 
=== Succesors ===
=== Usages ===
a165 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v154 v12  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
result [v1|QWORD[.] + v8|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2 
index: i8 
=== Succesors ===
=== Usages ===
a165 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a165 <|@
result v9|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 14]
nullCheck: false
stamp: n# Ljava/util/Formatter$Flags;
=== Inputs ===
stateBefore: - 
guard: v99 
address: v170 
=== Succesors ===
next: i166 
=== Usages ===
v172 
=== Predecessor ===
v12 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v99 address: v170 #next: i166  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.checkBadFlags(Formatter$Flags[])>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2995
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i8 
=== Succesors ===
=== Usages ===
v151 i166 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i8  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
result [v9|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a165 
=== Succesors ===
=== Usages ===
i166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i166 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?9 
guard: - 
address: v172 
=== Succesors ===
next: v129 
=== Usages ===
i37 v41 
=== Predecessor ===
a165 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?9 guard: - address: v172 #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$68/1111552356@74e89afd
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
stamp: i32
=== Inputs ===
x: i164 
y: i166 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i164 y: i166  <|@  <|@
f <@~|@floating>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 15]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i37 
y: i166 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i37 y: i166  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v41 
=== Succesors ===
trueSuccessor: v128 
falseSuccessor: v125 
=== Usages ===
=== Predecessor ===
i166 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v41 #trueSuccessor: v128 #falseSuccessor: v125  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v1|QWORD[.] + v8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD 
>@ <|@ instruction v10|DWORD = MOV [v9|DWORD[.] * 8 + 12] size: DWORD state [bci:2] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = AND (x: v7|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v151  <|@  <|@
f <@~|@floating>@ <|@
tid a142 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
result int[-18707|0xffffffffffffb6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -18707
stableDimension: 0
stamp: i32 [-18707] ⇊00000000ffffb6ed ⇈00000000ffffb6ed
stampKind: i32
value: int[-18707|0xffffffffffffb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?9 
actionAndReason: i153 
speculation: a142 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?9 actionAndReason: i153 speculation: a142  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -18707 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4613579497599005228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 32]
stamp: i32
=== Inputs ===
x: i8 
y: i25 
=== Succesors ===
=== Usages ===
i8 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i8 y: i25  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD] destination: B10 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2998) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2998) [bci: 38]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2996) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid a145 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@413899078
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@413899078]
=== Inputs ===
=== Succesors ===
=== Usages ===
a138 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
result int[-14619|0xffffffffffffc6e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -14619
stableDimension: 0
stamp: i32 [-14619] ⇊00000000ffffc6e5 ⇈00000000ffffc6e5
stampKind: i32
value: int[-14619|0xffffffffffffc6e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i137 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
v118 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@413899078] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-14619|0xffffffffffffc6e5], v13|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B1" "B12" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i137 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-17163 - -11787] ⇊00000000ffff80e5 ⇈00000000fffffff5
valueDescription: i32
=== Inputs ===
merge: v133 
values: i135 i144 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v133 values: i135 i144  <|@  <|@
f <@~|@floating>@ <|@
tid a138 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v133 
values: a136 a145 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v133 values: a136 a145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v134 v143 
=== Succesors ===
next: v139 
=== Usages ===
i137 a138 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v134 v143 #next: v139  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i137 
speculation: a138 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i137 speculation: a138  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v15|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6597f580 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = DEC v5|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v2|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613579497599005228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v1|QWORD[.] + v8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD 
>@ <|@ instruction v10|DWORD = MOV [v9|DWORD[.] * 8 + 12] size: DWORD state [bci:2] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = AND (x: v7|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4613579497599005228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD] destination: B10 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B10" 
    successors "B8" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4615831297412690476
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7396425693400621 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@413899078] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-14619|0xffffffffffffc6e5], v13|QWORD[.]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B1" "B12" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v15|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1395082527] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-17163|0xffffffffffffbcf5], v3|QWORD[.]] destination: B1 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -18707 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v8|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iload_2       
     3: aload_1       
     4: arraylength   
     5: if_icmpge     38
     8: aload_0       
     9: getfield      #7          // f:java.util.Formatter$Flags
    12: aload_1       
    13: iload_2       
    14: aaload        
    15: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    18: ifeq          32
    21: aload_0       
    22: aload_1       
    23: iload_2       
    24: aaload        
    25: aload_0       
    26: getfield      #16         // c:char
    29: invokespecial #92         // failMismatch:(java.util.Formatter$Flags, char)void
    32: iinc          
    35: goto          2
    38: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6597f580 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   12  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction r8|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|QWORD = DEC r8|QWORD size: QWORD <|@ <|@
      nr   24  <|@ instruction CMP (x: r8|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613579497599005228
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   56  <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
>@ <|@ instruction r9|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:2] <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = AND (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4613579497599005228
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B10 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B10" 
    successors "B8" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4615831297412690476
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.7396425693400621 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@413899078] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-14619|0xffffffffffffc6e5] // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B1" "B12" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   90  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1395082527] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-17163|0xffffffffffffbcf5] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B1 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction MOV [r15|QWORD + 668] y: -18707 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iload_2       
     3: aload_1       
     4: arraylength   
     5: if_icmpge     38
     8: aload_0       
     9: getfield      #7          // f:java.util.Formatter$Flags
    12: aload_1       
    13: iload_2       
    14: aaload        
    15: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    18: ifeq          32
    21: aload_0       
    22: aload_1       
    23: iload_2       
    24: aaload        
    25: aload_0       
    26: getfield      #16         // c:char
    29: invokespecial #92         // failMismatch:(java.util.Formatter$Flags, char)void
    32: iinc          
    35: goto          2
    38: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6597f580 slotKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   12  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction r8|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr   22  <|@ instruction r9|QWORD = DEC r8|QWORD size: QWORD <|@ <|@
      nr   24  <|@ instruction CMP (x: r8|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B6 falseDestination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4613579497599005228
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   56  <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
>@ <|@ instruction r9|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:2] <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = AND (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4613579497599005228
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction r8|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B10 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B10" 
    successors "B8" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4615831297412690476
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   50  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.7396425693400621 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@413899078] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-14619|0xffffffffffffc6e5] // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B1" "B12" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   90  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1395082527] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-17163|0xffffffffffffbcf5] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B1 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction MOV [r15|QWORD + 668] y: -18707 size: DWORD <|@ <|@
      nr  100  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r8|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iconst_0      
     1: istore_2      
     2: iload_2       
     3: aload_1       
     4: arraylength   
     5: if_icmpge     38
     8: aload_0       
     9: getfield      #7          // f:java.util.Formatter$Flags
    12: aload_1       
    13: iload_2       
    14: aaload        
    15: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    18: ifeq          32
    21: aload_0       
    22: aload_1       
    23: iload_2       
    24: aaload        
    25: aload_0       
    26: getfield      #16         // c:char
    29: invokespecial #92         // failMismatch:(java.util.Formatter$Flags, char)void
    32: iinc          
    35: goto          2
    38: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b561c4585d20f8491000000448b5a0c458bc34d8bc849ffc94d3bc10f87090000004585db0f854b000000468b14d50c00000041b800000000e92000000090468b4c8210468b0ccd0c000000418bca4123c9443bc90f845700000041ffc0453bd87fdc488b6c24104883c418850500000000c5f877c349baaddeaddeaddeadde4d8bda41bae5c6ffff4589979c0200004d899fa8020000e8000000009049baaddeaddeaddeadde4d8bda41baf5bcffffebd741c7879c020000edb6ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1024a1f78, value=0x10ba1de60]:0x10ba1de60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6597f580 slotKind: QWORD  <||@
  Comment 48 10 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 52 12 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 55 14 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 61 block B2 null  <||@
  Comment 61 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 61 18 r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 61 [rdx:0, rsi:0, r10:0]at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 61 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 65 20 r8|QWORD = MOV r11|DWORD size: DWORD  <||@
  Comment 68 22 r9|QWORD = DEC r8|QWORD size: QWORD  <||@
  Comment 74 24 CMP (x: r8|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 77 26 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4  <||@
  Comment 83 block B4 null  <||@
  Comment 83 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 83 30 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 86 32 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B6 falseDestination: B4 -> B12  <||@
  Comment 92 block B6 null  <||@
  Comment 92 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 92 44 r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 100 -1 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 106 46 JUMP ~[] destination: B6 -> B7  <||@
  Comment 111 block B8 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 111 54 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 112 56 r9|DWORD[.] = MOV [rdx|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 117 58 r9|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:2]  <||@
  Comment 117 [rdx:0, rsi:0]at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2        
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD   <||@
  Comment 117 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 125 60 rcx|DWORD = AND (x: r10|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 131 62 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 134 64 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 140 block B10 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 140 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 140 68 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 143 70 JUMP ~[] destination: B10 -> B7  <||@
  Comment 143 block B7 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 143 48 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 143 50 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 146 52 BRANCH trueDestinationProbability: 0.7396425693400621 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B11  <||@
  Comment 148 block B11 null  <||@
  Comment 148 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 148 74 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 157 12  <||@
  Comment 167 block B12 null  <||@
  Comment 167 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 167 84 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@413899078]  <||@
  Comment 167 {Object[d.a@413899078]}  <||@
  Comment 177 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 180 -1 r10|DWORD = MOVE input: int[-14619|0xffffffffffffc6e5]  <||@
  Comment 186 86 JUMP ~[] destination: B12 -> B13  <||@
  Comment 186 block B13 null  <||@
  Comment 186 88 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 186 90 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 193 92 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 200 94 DEOPT info [bci:0]  <||@
  Comment 200 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 205 [rdx:0, rsi:0]at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 206 block B1 null  <||@
  Comment 206 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 206 78 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1395082527]  <||@
  Comment 206 {Object[d.a@1395082527]}  <||@
  Comment 216 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 219 -1 r10|DWORD = MOVE input: int[-17163|0xffffffffffffbcf5]  <||@
  Comment 225 80 JUMP ~[] destination: B1 -> B13  <||@
  Comment 227 block B9 null  <||@
  Comment 227 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 227 98 MOV [r15|QWORD + 668] y: -18707 size: DWORD  <||@
  Comment 238 100 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 245 102 DEOPT info [bci:2]  <||@
  Comment 245 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 250 [rdx:0, rsi:0]at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2        
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD   <||@
  Comment 251 {Stub<ExceptionHandlerStub.exceptionHandler>@0x10be4bf20:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 251 4  <||@
  Comment 257 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1024a1f88, value=0x10ba1f500]:0x10ba1f500}  <||@
  Comment 257 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5140[java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter$Flags[])]"
  method "HotSpotCompilation-5140[java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter$Flags[])]"
  date 1527005022643
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 10c10a3a0 448b560849c1e203493bc20f85af3a91ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b561c4585d20f8491000000448b5a0c458bc34d8bc849ffc94d3bc10f87090000004585db0f854b000000468b14d50c00000041b800000000e92000000090468b4c8210468b0ccd0c000000418bca4123c9443bc90f845700000041ffc0453bd87fdc488b6c24104883c4188505c3eb2df5c5f877c349ba2081cb6c070000004d8bda41bae5c6ffff4589979c0200004d899fa8020000e8915191ff9049ba50a7cb6c070000004d8bda41baf5bcffffebd741c7879c020000edb6ffff4d89a7a8020000e8645191ff90e8801ad4ff90e85a5091ff90f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1024a1f78, value=0x10ba1de60]:0x10ba1de60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6597f580 slotKind: QWORD  <||@
  Comment 48 10 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 52 12 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 55 14 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 61 block B2 null  <||@
  Comment 61 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 61 18 r11|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 61 [rdx:0, rsi:0, r10:0]at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 61 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 65 20 r8|QWORD = MOV r11|DWORD size: DWORD  <||@
  Comment 68 22 r9|QWORD = DEC r8|QWORD size: QWORD  <||@
  Comment 74 24 CMP (x: r8|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 77 26 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B6 falseDestination: B2 -> B4  <||@
  Comment 83 block B4 null  <||@
  Comment 83 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 83 30 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 86 32 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B4 -> B6 falseDestination: B4 -> B12  <||@
  Comment 92 block B6 null  <||@
  Comment 92 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 92 44 r10|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 100 -1 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 106 46 JUMP ~[] destination: B6 -> B7  <||@
  Comment 111 block B8 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 111 54 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 112 56 r9|DWORD[.] = MOV [rdx|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 117 58 r9|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:2]  <||@
  Comment 117 [rdx:0, rsi:0]at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2        
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD   <||@
  Comment 117 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 125 60 rcx|DWORD = AND (x: r10|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 131 62 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 134 64 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 140 block B10 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 140 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 140 68 r8|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 143 70 JUMP ~[] destination: B10 -> B7  <||@
  Comment 143 block B7 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 143 48 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 143 50 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 146 52 BRANCH trueDestinationProbability: 0.7396425693400621 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B11  <||@
  Comment 148 block B11 null  <||@
  Comment 148 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 148 74 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 157 12  <||@
  Comment 167 block B12 null  <||@
  Comment 167 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 167 84 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@413899078]  <||@
  Comment 167 {Object[d.a@413899078]}  <||@
  Comment 177 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 180 -1 r10|DWORD = MOVE input: int[-14619|0xffffffffffffc6e5]  <||@
  Comment 186 86 JUMP ~[] destination: B12 -> B13  <||@
  Comment 186 block B13 null  <||@
  Comment 186 88 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 186 90 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 193 92 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 200 94 DEOPT info [bci:0]  <||@
  Comment 200 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 205 [rdx:0, rsi:0]at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 206 block B1 null  <||@
  Comment 206 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 206 78 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1395082527]  <||@
  Comment 206 {Object[d.a@1395082527]}  <||@
  Comment 216 -1 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 219 -1 r10|DWORD = MOVE input: int[-17163|0xffffffffffffbcf5]  <||@
  Comment 225 80 JUMP ~[] destination: B1 -> B13  <||@
  Comment 227 block B9 null  <||@
  Comment 227 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 227 98 MOV [r15|QWORD + 668] y: -18707 size: DWORD  <||@
  Comment 238 100 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 245 102 DEOPT info [bci:2]  <||@
  Comment 245 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 250 [rdx:0, rsi:0]at java.util.Formatter$FormatSpecifier.checkBadFlags(Formatter.java:2995) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2        
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r8|DWORD   <||@
  Comment 251 {Stub<ExceptionHandlerStub.exceptionHandler>@0x10be4bf20:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 251 4  <||@
  Comment 257 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1024a1f88, value=0x10ba1f500]:0x10ba1f500}  <||@
  Comment 257 5  <||@
  HexCodeFile>>> <|@
end_nmethod
