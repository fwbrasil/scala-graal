begin_compilation
  name " HotSpotCompilation-3547[java.util.HashMap.putVal(int, Object, Object, boolean, boolean)]"
  method "HotSpotCompilation-3547[java.util.HashMap.putVal(int, Object, Object, boolean, boolean)]"
  date 1527004919608
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v960 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v960  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/HashMap;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 v980 v395 ?21 ?28 v454 ?714 ?713 ?712 v537 ?711 v484 ?710 ?91 v1004 v531 ?709 ?340 v541 v497 ?708 ?707 v500 v999 ?148 ?301 v521 v1000 v998 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1004 
=== Succesors ===
next: a961 
=== Usages ===
v987 v924 v1001 v1034 v1035 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1004 #next: a961  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a961 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a961 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 1]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v980 
=== Succesors ===
next: v13 
=== Usages ===
a394 v414 v983 
=== Predecessor ===
v960 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v980 #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 12]
stamp: void
=== Inputs ===
value: a961 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a961  <|@  <|@
f <@~|@floating>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
rawvalue: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v960 
y: v923 
=== Succesors ===
=== Usages ===
v351 v205 v217 v227 v280 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v960 y: v923  <|@  <|@
f <@~|@floating>@ <|@
tid a737 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1613118162
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@1613118162]
=== Inputs ===
=== Succesors ===
=== Usages ===
a733 a760 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i840 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v839 v850 v903 v910 v917 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i834 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j835 j847 j900 j907 j914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j838 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
rawvalue: 4285321216
stableDimension: 0
stamp: i64 [4285321216] ⇊00000000ff6cd000 ⇈00000000ff6cd000
stampKind: i64
value: long[4285321216|0xff6cd000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1010 v1012 v1018 v1019 v1020 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v157 v59 i90 v119 v898 v832 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v822 v888 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j880 j959 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 33]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i130 i169 i173 a864 a793 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i930 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
a793 a864 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a793 a864 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j927 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j928 j939 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v926 v938 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 7]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v454 v497 v265 v264 v281 v282 a760 v726 a733 v753 v745 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 34]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i31 i310 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 i32 v454 v45 ?712 ?710 v484 ?91 i311 v103 ?709 v500 v497 ?707 ?340 v826 ?301 v892 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 v454 v50 v54 v482 ?710 ?709 v484 ?91 ?340 v108 v511 ?707 v497 a668 ?301 v950 a957 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 v454 ?713 a519 ?712 v484 ?711 ?91 ?707 ?340 ?710 ?301 ?148 v497 ?709 a955 a956 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32 [0 - 1] ⇈0000000000000001
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 ?713 v157 ?712 ?711 ?91 ?707 ?340 ?710 ?301 ?148 ?709 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
index: 5
stamp: i32 [0 - 1] ⇈0000000000000001
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 ?714 ?713 ?712 v537 ?711 ?710 ?91 ?301 ?148 ?709 ?340 v541 ?708 ?707 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 7]
stamp: void
trueSuccessorProbability: 0.05975755506231859
=== Inputs ===
condition: v414 
=== Succesors ===
trueSuccessor: v11 
falseSuccessor: v12 
=== Usages ===
=== Predecessor ===
a961 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v414 #trueSuccessor: v11 #falseSuccessor: v12  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4588772792322553789
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a20 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a20  <|@  <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
returnStamp: a [Ljava/util/HashMap$Node;
signature: [Ljdk.vm.ci.meta.JavaType;@26bdcc7
stamp: void
targetMethod: HotSpotMethod<HashMap.resize()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a20 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?707 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 629
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 - - - - - - - 
=== Succesors ===
=== Usages ===
a20 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a20 <|@
d <@d|@=== Debug Properties ===
bci: 20
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
polymorphic: false
stamp: a [Ljava/util/HashMap$Node;
targetMethod: Direct#HashMap.resize
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v395 
stateDuring: ?707 
=== Succesors ===
next: i962 
=== Usages ===
?21 v982 a306 a345 v981 a344 
=== Predecessor ===
v11 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v395 stateDuring: ?707 #next: i962  <|@  <|@
tid ?21 <|@
d <@d|@=== Debug Properties ===
bci: 23
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 629
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 - - - - - - - a20 
=== Succesors ===
=== Usages ===
v726 i962 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 - - - - - - - a20  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a20 
index: - 
=== Succesors ===
=== Usages ===
i962 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a20 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i962 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 26]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?21 
guard: - 
address: v981 
=== Succesors ===
next: v593 
=== Usages ===
i584 v403 i31 i580 i583 
=== Predecessor ===
a20 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?21 guard: - address: v981 #next: v593  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 34]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i962 
y: i30 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i962 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$68/1111552356@74e89afd
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 36]
stamp: i32
=== Inputs ===
x: i2 
y: i31 
=== Succesors ===
=== Usages ===
v982 i343 i342 v403 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2 y: i31  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i32 
y: i962 
=== Succesors ===
=== Usages ===
v593 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i32 y: i962  <|@  <|@
f <@*|@fixed>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v403 
=== Succesors ===
trueSuccessor: v590 
falseSuccessor: v592 
=== Usages ===
=== Predecessor ===
i962 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v403 #trueSuccessor: v590 #falseSuccessor: v592  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4588772792322553789
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: a963 
=== Usages ===
a963 
=== Predecessor ===
v593 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a963  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a20 
index: i32 
=== Succesors ===
=== Usages ===
a963 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a20 index: i32  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a963 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v590 
address: v982 
=== Succesors ===
next: v37 
=== Usages ===
a718 v543 
=== Predecessor ===
v590 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v590 address: v982 #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 44]
stamp: void
=== Inputs ===
value: a963 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a963  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 44]
stamp: void
trueSuccessorProbability: 0.874487083904821
=== Inputs ===
condition: v543 
=== Succesors ===
trueSuccessor: v35 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
a963 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v543 #trueSuccessor: v35 #falseSuccessor: v36  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4587691878693024671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stamp: void
trueSuccessorProbability: 0.9275371750235902
=== Inputs ===
condition: v924 
=== Succesors ===
trueSuccessor: v201 
falseSuccessor: v204 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v924 #trueSuccessor: v201 #falseSuccessor: v204  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587146156980121546
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v336  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v201 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4570877969932762454
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v339  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v204 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B29" 
    xhandlers
    flags 
    probability 4575297331189915888
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v300  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
v36 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v726  <|@  <|@
f <@~|@floating>@ <|@
tid i728 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -103451
stableDimension: 0
stamp: i32 [-103451] ⇊00000000fffe6be5 ⇈00000000fffe6be5
stampKind: i32
value: int[-103451|0xfffffffffffe6be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v726 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?21 
actionAndReason: i728 
speculation: a9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?21 actionAndReason: i728 speculation: a9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" "B77" 
    xhandlers
    flags 
    probability 4606644170594594948
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i964 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i964  <|@  <|@
f <@~|@floating>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a961 
=== Succesors ===
=== Usages ===
i964 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a961  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i964 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 12]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v983 
=== Succesors ===
next: v597 
=== Usages ===
v579 i584 i310 i580 i583 
=== Predecessor ===
v12 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v983 #next: v597  <|@  <|@
f <@~|@floating>@ <|@
tid i310 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 34]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i964 
y: i30 
=== Succesors ===
=== Usages ===
i311 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i964 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid i311 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$68/1111552356@74e89afd
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 36]
stamp: i32
=== Inputs ===
x: i2 
y: i310 
=== Succesors ===
=== Usages ===
v984 i342 i343 v579 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2 y: i310  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i311 
y: i964 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i311 y: i964  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v579 
=== Succesors ===
trueSuccessor: v594 
falseSuccessor: v596 
=== Usages ===
=== Predecessor ===
i964 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v579 #trueSuccessor: v594 #falseSuccessor: v596  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4606644170594594948
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a965 
=== Usages ===
a965 
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a965  <|@  <|@
f <@~|@floating>@ <|@
tid a394 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 1]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a961 
=== Succesors ===
=== Usages ===
a345 v984 a306 a344 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a961  <|@  <|@
f <@~|@floating>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a394 
index: i311 
=== Succesors ===
=== Usages ===
a965 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a394 index: i311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a965 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v594 
address: v984 
=== Succesors ===
next: v316 
=== Usages ===
a718 v545 
=== Predecessor ===
v594 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v594 address: v984 #next: v316  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 44]
stamp: void
=== Inputs ===
value: a965 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a965  <|@  <|@
f <@*|@fixed>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 44]
stamp: void
trueSuccessorProbability: 0.874487083904821
=== Inputs ===
condition: v545 
=== Succesors ===
trueSuccessor: v314 
falseSuccessor: v315 
=== Usages ===
=== Predecessor ===
a965 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v545 #trueSuccessor: v314 #falseSuccessor: v315  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4605581207852127653
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v351  <|@  <|@
f <@*|@fixed>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stamp: void
trueSuccessorProbability: 0.9275371750235902
=== Inputs ===
condition: v924 
=== Succesors ===
trueSuccessor: v349 
falseSuccessor: v350 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v924 #trueSuccessor: v349 #falseSuccessor: v350  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605044549017670954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v351 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" "B11" 
    successors "B13" "B19" 
    xhandlers
    flags 
    probability 4605481132514191399
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i343 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v335 
values: i32 i311 
=== Succesors ===
=== Usages ===
v986 v434 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v335 values: i32 i311  <|@  <|@
f <@~|@floating>@ <|@
tid a344 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v335 
values: a20 a394 
=== Succesors ===
=== Usages ===
?28 v985 v986 v1005 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v335 values: a20 a394  <|@  <|@
f <@~|@floating>@ <|@
tid i580 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v335 
values: i962 i964 
=== Succesors ===
=== Usages ===
?28 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v335 values: i962 i964  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v336 v337 
=== Succesors ===
next: v966 
=== Usages ===
i343 a344 i580 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v336 v337 #next: v966  <|@  <|@
f <@~|@floating>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a344 
index: - 
=== Succesors ===
=== Usages ===
v966 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a344 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1005 
=== Succesors ===
next: v605 
=== Usages ===
v926 
=== Predecessor ===
v335 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1005 #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v966 
y: v925 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v966 y: v925  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 630
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a344 - i580 - - - - 
=== Succesors ===
=== Usages ===
v734 a793 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a344 - i580 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v926 
=== Succesors ===
trueSuccessor: v602 
falseSuccessor: v604 
=== Usages ===
=== Predecessor ===
v966 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v926 #trueSuccessor: v602 #falseSuccessor: v604  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4605481132514191399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i967 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i967  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a344 
index: - 
=== Succesors ===
=== Usages ===
i967 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a344 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i967 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v985 
=== Succesors ===
next: v609 
=== Usages ===
v434 
=== Predecessor ===
v602 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v985 #next: v609  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i343 
y: i967 
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i343 y: i967  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v434 
=== Succesors ===
trueSuccessor: v606 
falseSuccessor: v608 
=== Usages ===
=== Predecessor ===
i967 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v434 #trueSuccessor: v606 #falseSuccessor: v608  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4605481132514191399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j781 
=== Usages ===
v445 
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j781 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j800 
=== Usages ===
v1006 v1007 
=== Predecessor ===
v606 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j800  <|@  <|@
f <@~|@floating>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j781 
index: - 
=== Succesors ===
=== Usages ===
j800 v802 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j781 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j800 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1006 
=== Succesors ===
next: j801 
=== Usages ===
j928 j806 v1022 
=== Predecessor ===
j781 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1006 #next: j801  <|@  <|@
f <@~|@floating>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j781 
index: - 
=== Succesors ===
=== Usages ===
j801 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j781 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j801 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1007 
=== Succesors ===
next: v789 
=== Usages ===
v786 
=== Predecessor ===
j800 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1007 #next: v789  <|@  <|@
f <@~|@floating>@ <|@
tid j928 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
stamp: i64
=== Inputs ===
x: j800 
y: j927 
=== Succesors ===
=== Usages ===
v786 v802 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j800 y: j927  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j801 
y: j928 
=== Succesors ===
=== Usages ===
v789 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j801 y: j928  <|@  <|@
f <@*|@fixed>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v786 
=== Succesors ===
trueSuccessor: v787 
falseSuccessor: v788 
=== Usages ===
=== Predecessor ===
j801 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v786 #trueSuccessor: v787 #falseSuccessor: v788  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575829406081159033
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a793 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a793 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@4038bc8f
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?28 
arguments: v779 i930 i29 
=== Succesors ===
next: j794 
=== Usages ===
j794 
=== Predecessor ===
v787 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?28 arguments: v779 i930 i29 #next: j794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j794 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a793 
=== Succesors ===
next: v807 
=== Usages ===
j806 
=== Predecessor ===
a793 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a793 #next: v807  <|@  <|@
f <@*|@fixed>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v804 
=== Predecessor ===
j794 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605408073384502249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v802 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1006 
value: j928 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v798 
=== Usages ===
=== Predecessor ===
v788 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1006 value: j928 stateAfter: - lastLocationAccess: - #next: v798  <|@  <|@
f <@~|@floating>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j800 
index: - 
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j800 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1022 
=== Succesors ===
next: v805 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1022 #next: v805  <|@  <|@
f <@*|@fixed>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v804 
=== Predecessor ===
v798 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B66" 
    xhandlers
    flags 
    probability 4605481132514191399
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j806 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v804 
values: j800 j794 
=== Succesors ===
=== Usages ===
v1009 v1008 a665 v1023 v1024 v1025 v1026 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v804 values: j800 j794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v805 v807 
=== Succesors ===
next: a665 
=== Usages ===
j806 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v805 v807 #next: a665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a665 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j806 
=== Succesors ===
next: j818 
=== Usages ===
a672 
=== Predecessor ===
v804 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j806 #next: j818  <|@  <|@
f <@~|@floating>@ <|@
tid j959 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v812 
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v812  <|@  <|@
f <@~|@floating>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j959 
index: - 
=== Succesors ===
=== Usages ===
j818 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j959 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j818 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1032 
=== Succesors ===
next: v819 
=== Usages ===
v819 
=== Predecessor ===
a665 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1032 #next: v819  <|@  <|@
f <@~|@floating>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j806 
index: - 
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j806 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1008 
value: j818 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v822 
=== Usages ===
=== Predecessor ===
j818 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1008 value: j818 stateAfter: - lastLocationAccess: - #next: v822  <|@  <|@
f <@~|@floating>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j806 
index: - 
=== Succesors ===
=== Usages ===
v822 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j806 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1009 
value: v933 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v826 
=== Usages ===
=== Predecessor ===
v819 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1009 value: v933 stateAfter: - lastLocationAccess: - #next: v826  <|@  <|@
f <@~|@floating>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j806 
index: - 
=== Succesors ===
=== Usages ===
v826 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j806 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1023 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v828 
=== Usages ===
=== Predecessor ===
v822 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1023 value: i2 stateAfter: - lastLocationAccess: - #next: v828  <|@  <|@
f <@~|@floating>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j806 
index: - 
=== Succesors ===
=== Usages ===
v828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j806 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a668 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v828 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1024 
value: a668 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v830 
=== Usages ===
=== Predecessor ===
v826 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1024 value: a668 stateAfter: - lastLocationAccess: - #next: v830  <|@  <|@
f <@~|@floating>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j806 
index: - 
=== Succesors ===
=== Usages ===
v830 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j806 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a956 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a4 
=== Succesors ===
=== Usages ===
v830 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1025 
value: a956 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v832 
=== Usages ===
=== Predecessor ===
v828 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1025 value: a956 stateAfter: - lastLocationAccess: - #next: v832  <|@  <|@
f <@~|@floating>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j806 
index: - 
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j806 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1026 
value: i15 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a672 
=== Usages ===
=== Predecessor ===
v830 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1026 value: i15 stateAfter: - lastLocationAccess: - #next: a672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a672 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a665 
=== Succesors ===
next: v673 
=== Usages ===
a444 
=== Predecessor ===
v832 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a665 #next: v673  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
a672 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v445  <|@  <|@
f <@~|@floating>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a344 
index: i343 
=== Succesors ===
=== Usages ===
v445 j833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a344 index: i343  <|@  <|@
f <@~|@floating>@ <|@
tid a444 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
op: Compress
stamp: n -
=== Inputs ===
value: a672 
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v606 
address: v986 
value: a444 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j833 
=== Usages ===
=== Predecessor ===
v673 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v606 address: v986 value: a444 stateAfter: - lastLocationAccess: - #next: j833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v986 
=== Succesors ===
next: v839 
=== Usages ===
j835 
=== Predecessor ===
v445 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v986 #next: v839  <|@  <|@
f <@~|@floating>@ <|@
tid j835 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$66/1929392697@1aef7eb1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j833 
y: i834 
=== Succesors ===
=== Usages ===
v1010 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j833 y: i834  <|@  <|@
f <@~|@floating>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j835 
index: j838 
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j835 index: j838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1010 
value: i840 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
j833 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1010 value: i840 stateAfter: - lastLocationAccess: - #next: v323  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v839 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v738 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v738  <|@  <|@
f <@~|@floating>@ <|@
tid i739 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -111387
stableDimension: 0
stamp: i32 [-111387] ⇊00000000fffe4ce5 ⇈00000000fffe4ce5
stampKind: i32
value: int[-111387|0xfffffffffffe4ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i732 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
v608 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v735 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v735  <|@  <|@
f <@~|@floating>@ <|@
tid i736 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -110396
stableDimension: 0
stamp: i32 [-110396] ⇊00000000fffe50c4 ⇈00000000fffe50c4
stampKind: i32
value: int[-110396|0xfffffffffffe50c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i732 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
v604 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i732 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-111387 - -110396] ⇊00000000fffe40c4 ⇈00000000fffe5ce5
valueDescription: i32
=== Inputs ===
merge: v729 
values: i736 i739 
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v729 values: i736 i739  <|@  <|@
f <@~|@floating>@ <|@
tid a733 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v729 
values: a737 a9 
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v729 values: a737 a9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v735 v738 
=== Succesors ===
next: v734 
=== Usages ===
i732 a733 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v735 v738 #next: v734  <|@  <|@
f <@*|@fixed>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?28 
actionAndReason: i732 
speculation: a733 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?28 actionAndReason: i732 speculation: a733  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4588747362387101608
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
v351 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v341  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v350 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B5" "B21" 
    successors "B23" "B26" 
    xhandlers
    flags 
    probability 4589230552195270079
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i342 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v338 
values: i32 i311 
=== Succesors ===
=== Usages ===
?708 v990 v459 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v338 values: i32 i311  <|@  <|@
f <@~|@floating>@ <|@
tid a345 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v338 
values: a20 a394 
=== Succesors ===
=== Usages ===
?708 v989 ?340 v990 v1011 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v338 values: a20 a394  <|@  <|@
f <@~|@floating>@ <|@
tid i583 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v338 
values: i962 i964 
=== Succesors ===
=== Usages ===
?340 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v338 values: i962 i964  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v339 v341 
=== Succesors ===
next: v968 
=== Usages ===
i342 a345 i583 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v339 v341 #next: v968  <|@  <|@
f <@~|@floating>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a345 
index: - 
=== Succesors ===
=== Usages ===
v968 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a345 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1011 
=== Succesors ===
next: v617 
=== Usages ===
v938 
=== Predecessor ===
v338 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1011 #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v968 
y: v925 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v968 y: v925  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v938 
=== Succesors ===
trueSuccessor: v614 
falseSuccessor: v616 
=== Usages ===
=== Predecessor ===
v968 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v938 #trueSuccessor: v614 #falseSuccessor: v616  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4589230552195270079
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i969 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i969  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a345 
index: - 
=== Succesors ===
=== Usages ===
i969 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a345 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i969 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v989 
=== Succesors ===
next: v621 
=== Usages ===
v459 
=== Predecessor ===
v614 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v989 #next: v621  <|@  <|@
f <@~|@floating>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i342 
y: i969 
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i342 y: i969  <|@  <|@
f <@*|@fixed>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v459 
=== Succesors ===
trueSuccessor: v618 
falseSuccessor: v620 
=== Usages ===
=== Predecessor ===
i969 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v459 #trueSuccessor: v618 #falseSuccessor: v620  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B66" 
    xhandlers
    flags 
    probability 4589230552195270079
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v450 
=== Usages ===
v470 
=== Predecessor ===
v621 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v450  <|@  <|@
f <@~|@floating>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
displacement: 680
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v960 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v960  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v987 
=== Succesors ===
next: j453 
=== Usages ===
v988 v454 
=== Predecessor ===
v618 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v987 #next: j453  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v450 
index: - 
=== Succesors ===
=== Usages ===
j453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v450 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j453 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v988 
=== Succesors ===
next: a39 
=== Usages ===
v454 
=== Predecessor ===
v450 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v988 #next: a39  <|@  <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
returnStamp: a Ljava/util/HashMap$Node;
signature: [Ljdk.vm.ci.meta.JavaType;@534a86f2
stamp: void
targetMethod: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>
=== Inputs ===
computedAddress: j453 
metaspaceMethod: v450 
arguments: a1 i2 a3 a4 a9 
=== Succesors ===
=== Usages ===
a39 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j453 metaspaceMethod: v450 arguments: a1 i2 a3 a4 a9  <|@  <|@
tid ?708 <|@
d <@d|@=== Debug Properties ===
bci: 56
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 631
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i6 - - - - - - - a345 i342 
=== Succesors ===
=== Usages ===
a39 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i6 - - - - - - - a345 i342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a39 <|@
d <@d|@=== Debug Properties ===
bci: 56
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
polymorphic: true
stamp: a Ljava/util/HashMap$Node;
targetMethod: Indirect#HashMap.newNode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v454 
stateDuring: ?708 
=== Succesors ===
next: v470 
=== Usages ===
a469 
=== Predecessor ===
j453 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v454 stateDuring: ?708 #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a345 
index: i342 
=== Succesors ===
=== Usages ===
v470 j846 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a345 index: i342  <|@  <|@
f <@~|@floating>@ <|@
tid a469 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
op: Compress
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
value: a39 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a39  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v618 
address: v990 
value: a469 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j846 
=== Usages ===
=== Predecessor ===
a39 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v618 address: v990 value: a469 stateAfter: - lastLocationAccess: - #next: j846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j846 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v990 
=== Succesors ===
next: v850 
=== Usages ===
j847 
=== Predecessor ===
v470 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v990 #next: v850  <|@  <|@
f <@~|@floating>@ <|@
tid j847 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$66/1929392697@1aef7eb1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j846 
y: i834 
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j846 y: i834  <|@  <|@
f <@~|@floating>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j847 
index: j838 
=== Succesors ===
=== Usages ===
v850 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j847 index: j838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1012 
value: i840 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
j846 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1012 value: i840 stateAfter: - lastLocationAccess: - #next: v150  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 259]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v850 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v764 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v764  <|@  <|@
f <@~|@floating>@ <|@
tid i765 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -117787
stableDimension: 0
stamp: i32 [-117787] ⇊00000000fffe33e5 ⇈00000000fffe33e5
stampKind: i32
value: int[-117787|0xfffffffffffe33e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i759 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
v620 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid i763 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -116796
stableDimension: 0
stamp: i32 [-116796] ⇊00000000fffe37c4 ⇈00000000fffe37c4
stampKind: i32
value: int[-116796|0xfffffffffffe37c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i759 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i759 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-117787 - -116796] ⇊00000000fffe33c4 ⇈00000000fffe37e5
valueDescription: i32
=== Inputs ===
merge: v756 
values: i763 i765 
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v756 values: i763 i765  <|@  <|@
f <@~|@floating>@ <|@
tid a760 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v756 
values: a737 a9 
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v756 values: a737 a9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v762 v764 
=== Succesors ===
next: v761 
=== Usages ===
i759 a760 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v762 v764 #next: v761  <|@  <|@
tid ?340 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 630
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a345 - i583 - - - - 
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a345 - i583 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?340 
actionAndReason: i759 
speculation: a760 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?340 actionAndReason: i759 speculation: a760  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4593168122602903289
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v302  <|@  <|@
f <@*|@fixed>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
v315 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B6" "B28" 
    successors "B30" "B39" 
    xhandlers
    flags 
    probability 4593690099667786884
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a718 <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v299 
values: a963 a965 
=== Succesors ===
=== Usages ===
a719 v1021 v991 v992 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v299 values: a963 a965  <|@  <|@
f <@~|@floating>@ <|@
tid a306 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v299 
values: a20 a394 
=== Succesors ===
=== Usages ===
?712 ?710 v484 ?91 ?301 ?709 v500 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v299 values: a20 a394  <|@  <|@
f <@~|@floating>@ <|@
tid i584 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v299 
values: i962 i964 
=== Succesors ===
=== Usages ===
?301 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v299 values: i962 i964  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v300 v302 
=== Succesors ===
next: v970 
=== Usages ===
a718 a306 i584 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v300 v302 #next: v970  <|@  <|@
tid ?301 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 630
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a306 - i584 - - - - 
=== Succesors ===
=== Usages ===
v753 v970 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a306 - i584 - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a718 
=== Succesors ===
=== Usages ===
v970 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a718  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?301 
guard: - 
address: v1021 
=== Succesors ===
next: i971 
=== Usages ===
v947 
=== Predecessor ===
v299 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?301 guard: - address: v1021 #next: i971  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a718 
=== Succesors ===
=== Usages ===
i971 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a718  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i971 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 65]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v991 
=== Succesors ===
next: v48 
=== Usages ===
v45 
=== Predecessor ===
v970 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v991 #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 69]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i971 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i971  <|@  <|@
f <@~|@floating>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v947 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v970 
y: v946 
=== Succesors ===
=== Usages ===
v75 v295 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v970 y: v946  <|@  <|@
f <@~|@floating>@ <|@
tid a719 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a718 
=== Succesors ===
=== Usages ===
v484 a89 ?709 a85 a85 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a718  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 69]
stamp: void
trueSuccessorProbability: 0.07477440711014371
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v46 
falseSuccessor: v47 
=== Usages ===
=== Predecessor ===
i971 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v46 #falseSuccessor: v47  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4576563794650477213
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: a972 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a972  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a718 
=== Succesors ===
=== Usages ===
a972 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a718  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a972 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 74]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v992 
=== Succesors ===
next: v53 
=== Usages ===
a479 
=== Predecessor ===
v46 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v992 #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid a479 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 74]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a972 
=== Succesors ===
=== Usages ===
v50 v482 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a972  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 81]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a479 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a479  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 81]
stamp: void
trueSuccessorProbability: 0.5288053365676167
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v51 
falseSuccessor: v52 
=== Usages ===
=== Predecessor ===
a972 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v51 #falseSuccessor: v52  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B64" 
    xhandlers
    flags 
    probability 4572371878723892198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v82  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
v51 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4571748511322321236
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 84]
stamp: void
=== Inputs ===
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v629  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 85]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 85]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v628 
falseSuccessor: v626 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v628 #falseSuccessor: v626  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v753 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v753  <|@  <|@
f <@~|@floating>@ <|@
tid i755 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -122899
stableDimension: 0
stamp: i32 [-122899] ⇊00000000fffe1fed ⇈00000000fffe1fed
stampKind: i32
value: int[-122899|0xfffffffffffe1fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?301 
actionAndReason: i755 
speculation: a9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?301 actionAndReason: i755 speculation: a9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B38" 
    xhandlers
    flags 
    probability 4571748511322321236
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: i57 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i57  <|@  <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 91]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@b66fd05
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a3 a479 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3 a479  <|@  <|@
tid ?709 <|@
d <@d|@=== Debug Properties ===
bci: 91
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 635
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a306 a719 - - - - - 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a306 a719 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i57 <|@
d <@d|@=== Debug Properties ===
bci: 91
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 91]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v482 
stateDuring: ?709 
=== Succesors ===
next: v68 
=== Usages ===
v59 
=== Predecessor ===
v626 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v482 stateDuring: ?709 #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i57 
y: i15 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i57 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 94]
stamp: void
trueSuccessorProbability: 0.32432432432432434
=== Inputs ===
condition: v59 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v67 
=== Usages ===
=== Predecessor ===
i57 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v59 #trueSuccessor: v66 #falseSuccessor: v67  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4564257079117715953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v75  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
stamp: void
trueSuccessorProbability: 3.388845855926137E-4
=== Inputs ===
condition: v947 
=== Succesors ===
trueSuccessor: v73 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v947 #trueSuccessor: v73 #falseSuccessor: v74  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B41" 
    xhandlers
    flags 
    probability 4512693756488201411
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:638) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v285  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
v73 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B43" 
    xhandlers
    flags 
    probability 4564254837648238250
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v288  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
v74 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B64" 
    xhandlers
    flags 
    probability 4569036272754202032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v192 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v192  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
v67 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4593032307808989876
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v295 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v295  <|@  <|@
f <@*|@fixed>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
stamp: void
trueSuccessorProbability: 3.388845855926137E-4
=== Inputs ===
condition: v947 
=== Succesors ===
trueSuccessor: v293 
falseSuccessor: v294 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v947 #trueSuccessor: v293 #falseSuccessor: v294  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4540932436599936300
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:638) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v286  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
v293 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" "B40" 
    successors "B64" 
    xhandlers
    flags 
    probability 4541004163623222783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v285 v286 
=== Succesors ===
next: a80 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v285 v286 #next: a80  <|@  <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:638) [bci: 123]
returnStamp: a# Ljava/util/HashMap$TreeNode;
signature: [Ljdk.vm.ci.meta.JavaType;@344ae6e8
stamp: void
targetMethod: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)>
=== Inputs ===
arguments: a719 a1 a306 i2 a3 a4 
=== Succesors ===
=== Usages ===
a80 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a719 a1 a306 i2 a3 a4  <|@  <|@
tid ?711 <|@
d <@d|@=== Debug Properties ===
bci: 123
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 638
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - a4 i5 i6 - - - - - - - 
=== Succesors ===
=== Usages ===
a80 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a4 i5 i6 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a80 <|@
d <@d|@=== Debug Properties ===
bci: 123
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:638) [bci: 123]
polymorphic: false
stamp: a# Ljava/util/HashMap$TreeNode;
targetMethod: Direct#HashMap$TreeNode.putTreeVal
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v484 
stateDuring: ?711 
=== Succesors ===
next: v84 
=== Usages ===
a85 
=== Predecessor ===
v284 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v484 stateDuring: ?711 #next: v84  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
a80 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" 
    xhandlers
    flags 
    probability 4593029472061022177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v290  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
v294 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B37" "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593132784791479932
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v288 v290 
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v288 v290 #next: v87  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
v287 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B76" "B62" 
    successors "B45" "B56" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594272391294824813
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a89 <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v88 
values: a719 a491 a491 
=== Succesors ===
=== Usages ===
?91 j906 j899 ?712 v993 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v88 values: a719 a491 a491  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v88 
values: i15 i130 i130 
=== Succesors ===
=== Usages ===
?91 ?710 ?712 i130 v138 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v88 values: i15 i130 i130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.2055152392945185
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v87 
=== Succesors ===
next: a973 
=== Usages ===
a89 i90 v95 v110 v124 v131 v193 v638 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v87 #next: a973  <|@  <|@
tid ?91 <|@
d <@d|@=== Debug Properties ===
bci: 134
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 641
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a306 a89 - - - - i90 
=== Succesors ===
=== Usages ===
v585 a864 v745 a973 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a306 a89 - - - - i90  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a89 
index: - 
=== Succesors ===
=== Usages ===
a973 v493 v499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a89 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a973 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 136]
nullCheck: true
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: ?91 
guard: - 
address: v993 
=== Succesors ===
next: v101 
=== Usages ===
a491 v501 v995 v996 
=== Predecessor ===
v88 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?91 guard: - address: v993 #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid a491 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 136]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a973 
=== Succesors ===
=== Usages ===
a85 ?710 ?712 a85 a85 ?713 a85 a89 a89 a85 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a973  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 177]
stamp: void
=== Inputs ===
value: a973 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a973  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 142]
stamp: void
trueSuccessorProbability: 0.8149025908817031
=== Inputs ===
condition: v501 
=== Succesors ===
trueSuccessor: v95 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
a973 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v501 #trueSuccessor: v95 #falseSuccessor: v100  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B52" 
    xhandlers
    flags 
    probability 4592983550975598656
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 145]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v88 
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v88 #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid i137 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 160]
rawvalue: 7
stableDimension: 0
stamp: i32 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i137 
=== Succesors ===
=== Usages ===
v142 v362 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i90 y: i137  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
stamp: void
trueSuccessorProbability: 0.7054909305993691
=== Inputs ===
condition: v924 
=== Succesors ===
trueSuccessor: v214 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v924 #trueSuccessor: v214 #falseSuccessor: v216  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4590533491649061219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
stamp: void
=== Inputs ===
=== Succesors ===
next: j853 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j853 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j868 
=== Usages ===
v1013 v1014 
=== Predecessor ===
v214 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j868  <|@  <|@
f <@~|@floating>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j853 
index: - 
=== Succesors ===
=== Usages ===
j868 v870 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j853 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j868 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1013 
=== Succesors ===
next: j869 
=== Usages ===
j939 j874 v1027 
=== Predecessor ===
j853 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1013 #next: j869  <|@  <|@
f <@~|@floating>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j853 
index: - 
=== Succesors ===
=== Usages ===
j869 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j853 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j869 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1014 
=== Succesors ===
next: v861 
=== Usages ===
v858 
=== Predecessor ===
j868 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1014 #next: v861  <|@  <|@
f <@~|@floating>@ <|@
tid j939 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
stamp: i64
=== Inputs ===
x: j868 
y: j927 
=== Succesors ===
=== Usages ===
v858 v870 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j868 y: j927  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j869 
y: j939 
=== Succesors ===
=== Usages ===
v861 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j869 y: j939  <|@  <|@
f <@*|@fixed>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v858 
=== Succesors ===
trueSuccessor: v859 
falseSuccessor: v860 
=== Usages ===
=== Predecessor ===
j869 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v858 #trueSuccessor: v859 #falseSuccessor: v860  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4560651634133518715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a864 
=== Usages ===
=== Predecessor ===
v861 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a864 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@4038bc8f
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?91 
arguments: v779 i930 i29 
=== Succesors ===
next: j865 
=== Usages ===
j865 
=== Predecessor ===
v859 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?91 arguments: v779 i930 i29 #next: j865  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j865 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a864 
=== Succesors ===
next: v875 
=== Usages ===
j874 
=== Predecessor ===
a864 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a864 #next: v875  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v872 
=== Predecessor ===
j865 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4590474800939202256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v870 
=== Usages ===
=== Predecessor ===
v861 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v870  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1013 
value: j939 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v867 
=== Usages ===
=== Predecessor ===
v860 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1013 value: j939 stateAfter: - lastLocationAccess: - #next: v867  <|@  <|@
f <@~|@floating>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j868 
index: - 
=== Succesors ===
=== Usages ===
v867 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j868 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1027 
=== Succesors ===
next: v873 
=== Usages ===
=== Predecessor ===
v870 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1027 #next: v873  <|@  <|@
f <@*|@fixed>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v872 
=== Predecessor ===
v867 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4590533491649061219
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j874 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v872 
values: j868 j865 
=== Succesors ===
=== Usages ===
v1017 v1016 a694 v1028 v1029 v1030 v1031 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v872 values: j868 j865  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v873 v875 
=== Succesors ===
next: a694 
=== Usages ===
j874 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v873 v875 #next: a694  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a694 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j874 
=== Succesors ===
next: j884 
=== Usages ===
a699 
=== Predecessor ===
v872 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j874 #next: j884  <|@  <|@
f <@~|@floating>@ <|@
tid j880 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v812 
=== Succesors ===
=== Usages ===
v1015 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v812  <|@  <|@
f <@~|@floating>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j880 
index: - 
=== Succesors ===
=== Usages ===
j884 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j880 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j884 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1015 
=== Succesors ===
next: v885 
=== Usages ===
v885 
=== Predecessor ===
a694 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1015 #next: v885  <|@  <|@
f <@~|@floating>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j874 
index: - 
=== Succesors ===
=== Usages ===
v885 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j874 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1016 
value: j884 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v888 
=== Usages ===
=== Predecessor ===
j884 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1016 value: j884 stateAfter: - lastLocationAccess: - #next: v888  <|@  <|@
f <@~|@floating>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j874 
index: - 
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j874 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1017 
value: v933 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v892 
=== Usages ===
=== Predecessor ===
v885 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1017 value: v933 stateAfter: - lastLocationAccess: - #next: v892  <|@  <|@
f <@~|@floating>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j874 
index: - 
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j874 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1028 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v894 
=== Usages ===
=== Predecessor ===
v888 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1028 value: i2 stateAfter: - lastLocationAccess: - #next: v894  <|@  <|@
f <@~|@floating>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j874 
index: - 
=== Succesors ===
=== Usages ===
v894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j874 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a957 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v894 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1029 
value: a957 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v896 
=== Usages ===
=== Predecessor ===
v892 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1029 value: a957 stateAfter: - lastLocationAccess: - #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j874 
index: - 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j874 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a955 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a4 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1030 
value: a955 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v898 
=== Usages ===
=== Predecessor ===
v894 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1030 value: a955 stateAfter: - lastLocationAccess: - #next: v898  <|@  <|@
f <@~|@floating>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j874 
index: - 
=== Succesors ===
=== Usages ===
v898 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j874 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1031 
value: i15 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a699 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1031 value: i15 stateAfter: - lastLocationAccess: - #next: a699  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a699 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a694 
=== Succesors ===
next: v700 
=== Usages ===
a492 
=== Predecessor ===
v898 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a694 #next: v700  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v493 
=== Usages ===
=== Predecessor ===
a699 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v493  <|@  <|@
f <@~|@floating>@ <|@
tid a492 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
op: Compress
stamp: n -
=== Inputs ===
value: a699 
=== Succesors ===
=== Usages ===
v493 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a699  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v993 
value: a492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j899 
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v993 value: a492 stateAfter: - lastLocationAccess: - #next: j899  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j899 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a89 
=== Succesors ===
next: v903 
=== Usages ===
j900 
=== Predecessor ===
v493 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a89 #next: v903  <|@  <|@
f <@~|@floating>@ <|@
tid j900 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$66/1929392697@1aef7eb1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j899 
y: i834 
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j899 y: i834  <|@  <|@
f <@~|@floating>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j900 
index: j838 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j900 index: j838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1018 
value: i840 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
j899 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1018 value: i840 stateAfter: - lastLocationAccess: - #next: v362  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 162]
stamp: void
trueSuccessorProbability: 0.9993591955439444
=== Inputs ===
condition: v138 
=== Succesors ===
trueSuccessor: v361 
falseSuccessor: v360 
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v138 #trueSuccessor: v361 #falseSuccessor: v360  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B64" 
    xhandlers
    flags 
    probability 4590529730722220550
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v363  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
v361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B55" 
    xhandlers
    flags 
    probability 4542827202931779927
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v360 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4585060939688869307
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
stamp: void
=== Inputs ===
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
displacement: 680
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v960 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v960  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1035 
=== Succesors ===
next: j496 
=== Usages ===
v994 v497 
=== Predecessor ===
v216 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1035 #next: j496  <|@  <|@
f <@~|@floating>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v494 
index: - 
=== Succesors ===
=== Usages ===
j496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v494 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j496 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v994 
=== Succesors ===
next: a133 
=== Usages ===
v497 
=== Predecessor ===
v494 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v994 #next: a133  <|@  <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
returnStamp: a Ljava/util/HashMap$Node;
signature: [Ljdk.vm.ci.meta.JavaType;@689b8942
stamp: void
targetMethod: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>
=== Inputs ===
computedAddress: j496 
metaspaceMethod: v494 
arguments: a1 i2 a3 a4 a9 
=== Succesors ===
=== Usages ===
a133 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j496 metaspaceMethod: v494 arguments: a1 i2 a3 a4 a9  <|@  <|@
tid ?712 <|@
d <@d|@=== Debug Properties ===
bci: 152
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 642
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 i2 - a4 i5 i6 a306 - - - a491 - i90 a89 
=== Succesors ===
=== Usages ===
a133 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - a4 i5 i6 a306 - - - a491 - i90 a89  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a133 <|@
d <@d|@=== Debug Properties ===
bci: 152
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
polymorphic: true
stamp: a Ljava/util/HashMap$Node;
targetMethod: Indirect#HashMap.newNode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v497 
stateDuring: ?712 
=== Succesors ===
next: v499 
=== Usages ===
a498 
=== Predecessor ===
j496 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v497 stateDuring: ?712 #next: v499  <|@  <|@
f <@~|@floating>@ <|@
tid a498 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
op: Compress
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
value: a133 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v993 
value: a498 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j906 
=== Usages ===
=== Predecessor ===
a133 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v993 value: a498 stateAfter: - lastLocationAccess: - #next: j906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j906 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a89 
=== Succesors ===
next: v910 
=== Usages ===
j907 
=== Predecessor ===
v499 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a89 #next: v910  <|@  <|@
f <@~|@floating>@ <|@
tid j907 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$66/1929392697@1aef7eb1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j906 
y: i834 
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j906 y: i834  <|@  <|@
f <@~|@floating>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j907 
index: j838 
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j907 index: j838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1019 
value: i840 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v142 
=== Usages ===
=== Predecessor ===
j906 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1019 value: i840 stateAfter: - lastLocationAccess: - #next: v142  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 162]
stamp: void
trueSuccessorProbability: 0.9993591955439444
=== Inputs ===
condition: v138 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v140 
=== Usages ===
=== Predecessor ===
v910 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v138 #trueSuccessor: v141 #falseSuccessor: v140  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B64" 
    xhandlers
    flags 
    probability 4585057799671001215
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v139  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4537051981728570786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v356  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v140 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B51" 
    successors "B64" 
    xhandlers
    flags 
    probability 4545087302622768148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v356 v358 
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v356 v358 #next: v144  <|@  <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 169]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@6f61efb5
stamp: void
targetMethod: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)>
=== Inputs ===
arguments: a1 a306 i2 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a306 i2  <|@  <|@
tid ?713 <|@
d <@d|@=== Debug Properties ===
bci: 169
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 644
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - a4 i5 i6 - - - - a491 - - 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a4 i5 i6 - - - - a491 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
bci: 169
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 169]
polymorphic: false
stamp: void
targetMethod: Direct#HashMap.treeifyBin
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v500 
stateDuring: ?713 
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v500 stateDuring: ?713 #next: v146  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
v144 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B57" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583215668193004135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
next: i974 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i974  <|@  <|@
f <@~|@floating>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a973 
=== Succesors ===
=== Usages ===
i974 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a973  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i974 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 177]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v995 
=== Succesors ===
next: v106 
=== Usages ===
v103 
=== Predecessor ===
v100 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v995 #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 181]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i974 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i974  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 216]
stamp: i32
=== Inputs ===
x: i90 
y: i29 
=== Succesors ===
=== Usages ===
i90 i90 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i90 y: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 181]
stamp: void
trueSuccessorProbability: 0.098936862660013
=== Inputs ===
condition: v103 
=== Succesors ===
trueSuccessor: v104 
falseSuccessor: v105 
=== Usages ===
=== Predecessor ===
i974 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v103 #trueSuccessor: v104 #falseSuccessor: v105  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568128894617904672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 184]
stamp: void
=== Inputs ===
=== Succesors ===
next: a975 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a975  <|@  <|@
f <@~|@floating>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a973 
=== Succesors ===
=== Usages ===
a975 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a973  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a975 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 186]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v996 
=== Succesors ===
next: v114 
=== Usages ===
a508 
=== Predecessor ===
v104 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v996 #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid a508 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 186]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a975 
=== Succesors ===
=== Usages ===
v108 v511 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a975  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 193]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a508 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a508  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 193]
stamp: void
trueSuccessorProbability: 0.3706140350877193
=== Inputs ===
condition: v108 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v113 
=== Usages ===
=== Predecessor ===
a975 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v108 #trueSuccessor: v110 #falseSuccessor: v113  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B64" 
    xhandlers
    flags 
    probability 4562007975758230104
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v88 
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v88 #next: v109  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565173390838797076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 196]
stamp: void
=== Inputs ===
=== Succesors ===
next: v639 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v639  <|@  <|@
f <@~|@floating>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 85]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 197]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v950 
=== Succesors ===
trueSuccessor: v638 
falseSuccessor: v635 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v950 #trueSuccessor: v638 #falseSuccessor: v635  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 197]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v88 
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v88 #next: v745  <|@  <|@
f <@~|@floating>@ <|@
tid i747 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -130323
stableDimension: 0
stamp: i32 [-130323] ⇊00000000fffe02ed ⇈00000000fffe02ed
stampKind: i32
value: int[-130323|0xfffffffffffe02ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v745 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?91 
actionAndReason: i747 
speculation: a9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?91 actionAndReason: i747 speculation: a9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565173390838797076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 197]
stamp: void
=== Inputs ===
=== Succesors ===
next: i117 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i117  <|@  <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 203]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@53d3a989
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a3 a508 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3 a508  <|@  <|@
tid ?710 <|@
d <@d|@=== Debug Properties ===
bci: 203
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 648
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a306 - - - a491 - i90 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a306 - - - a491 - i90  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i117 <|@
d <@d|@=== Debug Properties ===
bci: 203
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 203]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v511 
stateDuring: ?710 
=== Succesors ===
next: v128 
=== Usages ===
v119 
=== Predecessor ===
v635 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v511 stateDuring: ?710 #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 206]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i117 
y: i15 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i117 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 206]
stamp: void
trueSuccessorProbability: 0.3205574912891986
=== Inputs ===
condition: v119 
=== Succesors ===
trueSuccessor: v127 
falseSuccessor: v124 
=== Usages ===
=== Predecessor ===
i117 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v119 #trueSuccessor: v127 #falseSuccessor: v124  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4557967183205137110
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 212]
stamp: void
=== Inputs ===
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v193  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 212]
stamp: void
=== Inputs ===
loopBegin: v88 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v88  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4562759410872014249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:649) [bci: 209]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v88 
=== Succesors ===
next: v147 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v88 #next: v147  <|@  <|@
f <@*|@fixed>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
v124 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B31" "B41" "B58" "B53" "B55" "B63" "B38" "B50" 
    successors "B65" "B73" 
    xhandlers
    flags 
    probability 4593690099667786884
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v83 
values: a719 a80 a491 a491 a491 a491 a719 a491 
=== Succesors ===
=== Usages ===
?148 v149 j913 v521 v997 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v83 values: a719 a80 a491 a491 a491 a491 a719 a491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v82 v84 v109 v139 v146 v147 v192 v363 
=== Succesors ===
next: v155 
=== Usages ===
a85 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v82 v84 v109 v139 v146 v147 v192 v363 #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 224]
stamp: void
=== Inputs ===
value: a85 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a85  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 224]
stamp: void
trueSuccessorProbability: 0.9201505395846559
=== Inputs ===
condition: v149 
=== Succesors ===
trueSuccessor: v154 
falseSuccessor: v153 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v149 #trueSuccessor: v154 #falseSuccessor: v153  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4592986408221210079
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 259]
stamp: void
=== Inputs ===
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v152  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 259]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v154 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B24" "B65" "B17" 
    successors "B67" "B70" 
    xhandlers
    flags 
    probability 4607092147400460187
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 259]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v150 v152 v323 
=== Succesors ===
next: i976 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v150 v152 v323 #next: i976  <|@  <|@
f <@~|@floating>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i976 v524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i976 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 261]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v998 
=== Succesors ===
next: v524 
=== Usages ===
i169 
=== Predecessor ===
v151 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v998 #next: v524  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 265]
stamp: i32
=== Inputs ===
x: i976 
y: i29 
=== Succesors ===
=== Usages ===
v524 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i976 y: i29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 266]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v998 
value: i169 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i977 
=== Usages ===
=== Predecessor ===
i976 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v998 value: i169 stateAfter: - lastLocationAccess: - #next: i977  <|@  <|@
f <@~|@floating>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i977 v527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i977 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.size
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 271]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v999 
=== Succesors ===
next: v527 
=== Usages ===
i173 
=== Predecessor ===
v524 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v999 #next: v527  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 275]
stamp: i32
=== Inputs ===
x: i977 
y: i29 
=== Succesors ===
=== Usages ===
v527 v177 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i977 y: i29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap.size
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 277]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v999 
value: i173 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i978 
=== Usages ===
=== Predecessor ===
i977 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v999 value: i173 stateAfter: - lastLocationAccess: - #next: i978  <|@  <|@
f <@~|@floating>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i978 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i978 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.threshold
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 281]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1000 
=== Succesors ===
next: v180 
=== Usages ===
v177 
=== Predecessor ===
v527 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1000 #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 284]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i978 
y: i173 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i978 y: i173  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 284]
stamp: void
trueSuccessorProbability: 0.00201782121299221
=== Inputs ===
condition: v177 
=== Succesors ===
trueSuccessor: v178 
falseSuccessor: v179 
=== Usages ===
=== Predecessor ===
i978 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v177 #trueSuccessor: v178 #falseSuccessor: v179  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4566752570668625650
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 287]
stamp: void
=== Inputs ===
=== Succesors ===
next: a182 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a182  <|@  <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 288]
returnStamp: a [Ljava/util/HashMap$Node;
signature: [Ljdk.vm.ci.meta.JavaType;@30cd68bd
stamp: void
targetMethod: HotSpotMethod<HashMap.resize()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a182 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?714 <|@
d <@d|@=== Debug Properties ===
bci: 288
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 663
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i6 - - - - - - - 
=== Succesors ===
=== Usages ===
a182 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i6 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a182 <|@
d <@d|@=== Debug Properties ===
bci: 288
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 288]
polymorphic: false
stamp: a [Ljava/util/HashMap$Node;
targetMethod: Direct#HashMap.resize
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v531 
stateDuring: ?714 
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v531 stateDuring: ?714 #next: v227  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=afterNodeInsertion target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
stamp: void
trueSuccessorProbability: 0.9016325592090135
=== Inputs ===
condition: v924 
=== Succesors ===
trueSuccessor: v224 
falseSuccessor: v226 
=== Usages ===
=== Predecessor ===
a182 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v924 #trueSuccessor: v224 #falseSuccessor: v226  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4565948929174241344
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=afterNodeInsertion target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
next: v265 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v265  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
stamp: void
=== Inputs ===
result: a9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a9 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4551381544091446564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
displacement: 728
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v960 
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v960  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1001 
=== Succesors ===
next: j536 
=== Usages ===
v1002 v537 
=== Predecessor ===
v226 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1001 #next: j536  <|@  <|@
f <@~|@floating>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v534 
index: - 
=== Succesors ===
=== Usages ===
j536 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v534 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j536 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1002 
=== Succesors ===
next: v189 
=== Usages ===
v537 
=== Predecessor ===
v534 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1002 #next: v189  <|@  <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@4a8367f
stamp: void
targetMethod: HotSpotMethod<HashMap.afterNodeInsertion(boolean)>
=== Inputs ===
computedAddress: j536 
metaspaceMethod: v534 
arguments: a1 i6 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j536 metaspaceMethod: v534 arguments: a1 i6  <|@  <|@
tid ?716 <|@
d <@d|@=== Debug Properties ===
bci: 295
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 664
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
bci: 295
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
polymorphic: true
stamp: void
targetMethod: Indirect#HashMap.afterNodeInsertion
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v537 
stateDuring: ?716 
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
j536 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v537 stateDuring: ?716 #next: v264  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
stamp: void
=== Inputs ===
result: a9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a9 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4607074154634279276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v280  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=afterNodeInsertion target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
stamp: void
trueSuccessorProbability: 0.9016325592090135
=== Inputs ===
condition: v924 
=== Succesors ===
trueSuccessor: v278 
falseSuccessor: v279 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v924 #trueSuccessor: v278 #falseSuccessor: v279  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors 
    xhandlers
    flags 
    probability 4606198789163808955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=afterNodeInsertion target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
stamp: void
=== Inputs ===
result: a9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a9 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors 
    xhandlers
    flags 
    probability 4591667344426927494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
next: v538 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
displacement: 728
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v960 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v960  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1034 
=== Succesors ===
next: j540 
=== Usages ===
v1003 v541 
=== Predecessor ===
v279 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1034 #next: j540  <|@  <|@
f <@~|@floating>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v538 
index: - 
=== Succesors ===
=== Usages ===
j540 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v538 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j540 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1003 
=== Succesors ===
next: v277 
=== Usages ===
v541 
=== Predecessor ===
v538 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1003 #next: v277  <|@  <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@64546d18
stamp: void
targetMethod: HotSpotMethod<HashMap.afterNodeInsertion(boolean)>
=== Inputs ===
computedAddress: j540 
metaspaceMethod: v538 
arguments: a1 i6 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j540 metaspaceMethod: v538 arguments: a1 i6  <|@  <|@
tid ?717 <|@
d <@d|@=== Debug Properties ===
bci: 295
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 664
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
bci: 295
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
polymorphic: true
stamp: void
targetMethod: Indirect#HashMap.afterNodeInsertion
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v541 
stateDuring: ?717 
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
j540 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v541 stateDuring: ?717 #next: v281  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
stamp: void
=== Inputs ===
result: a9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a9 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4576930991352715592
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 227]
stamp: void
=== Inputs ===
=== Succesors ===
next: v643 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v643  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:655) [bci: 236]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i15 
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i5 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:655) [bci: 236]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v157 
=== Succesors ===
trueSuccessor: v640 
falseSuccessor: v642 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v157 #trueSuccessor: v640 #falseSuccessor: v642  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 4576930991352715592
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:655) [bci: 236]
stamp: void
=== Inputs ===
=== Succesors ===
next: a979 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a979  <|@  <|@
f <@~|@floating>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a85 
index: - 
=== Succesors ===
=== Usages ===
a979 v520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a85 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a979 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.value
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 229]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v997 
=== Succesors ===
next: v520 
=== Usages ===
a517 
=== Predecessor ===
v640 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v997 #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid a519 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a4 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$Node.value
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v997 
value: a519 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j913 
=== Usages ===
=== Predecessor ===
a979 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v997 value: a519 stateAfter: - lastLocationAccess: - #next: j913  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j913 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a85 
=== Succesors ===
next: v917 
=== Usages ===
j914 
=== Predecessor ===
v520 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a85 #next: v917  <|@  <|@
f <@~|@floating>@ <|@
tid j914 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$66/1929392697@1aef7eb1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j913 
y: i834 
=== Succesors ===
=== Usages ===
v1020 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j913 y: i834  <|@  <|@
f <@~|@floating>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j914 
index: j838 
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j914 index: j838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1020 
value: i840 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v164 
=== Usages ===
=== Predecessor ===
j913 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1020 value: i840 stateAfter: - lastLocationAccess: - #next: v164  <|@  <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:657) [bci: 253]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@2a850ffa
stamp: void
targetMethod: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)>
=== Inputs ===
arguments: a1 a85 
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a85  <|@  <|@
f <@~|@floating>@ <|@
tid a517 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 229]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a979 
=== Succesors ===
=== Usages ===
?715 v166 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a979  <|@  <|@
tid ?715 <|@
d <@d|@=== Debug Properties ===
bci: 253
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 657
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - a517 
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - a517  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
bci: 253
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:657) [bci: 253]
polymorphic: false
stamp: void
targetMethod: Direct#HashMap.afterNodeAccess
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v521 
stateDuring: ?715 
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v521 stateDuring: ?715 #next: v166  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:658) [bci: 258]
stamp: void
=== Inputs ===
result: a517 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a517 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:655) [bci: 236]
stamp: void
=== Inputs ===
=== Succesors ===
next: v641 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v641  <|@  <|@
tid ?148 <|@
d <@d|@=== Debug Properties ===
bci: 222
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 653
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - a4 i5 i6 - - - - a85 - - 
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a4 i5 i6 - - - - a85 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 518
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:655) [bci: 236]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?148 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v642 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?148  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582467859181555107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 212]
stamp: void
=== Inputs ===
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?91 
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?91 #next: v131  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
stamp: void
=== Inputs ===
loopBegin: v88 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v88  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v595  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 628
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 - - - - - - - 
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 419
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?7  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v960 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v960  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/HashMap;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 v980 v395 ?21 ?28 v454 ?714 ?713 ?712 v537 ?711 v484 ?710 ?91 v1004 v531 ?709 ?340 v541 v497 ?708 ?707 v500 v999 ?148 ?301 v521 v1000 v998 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1004 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v960 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1004 
=== Succesors ===
next: a961 
=== Usages ===
v987 v924 v1001 v1034 v1035 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1004 #next: a961  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a961 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a961 <|@
result v7|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 1]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v980 
=== Succesors ===
next: v13 
=== Usages ===
a394 v414 v983 
=== Predecessor ===
v960 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v980 #next: v13  <|@  <|@
f <@~|@floating>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 12]
stamp: void
=== Inputs ===
value: a961 
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a961  <|@  <|@
f <@~|@floating>@ <|@
tid v923 <|@
result meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
rawvalue: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v960 
y: v923 
=== Succesors ===
=== Usages ===
v351 v205 v217 v227 v280 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v960 y: v923  <|@  <|@
f <@~|@floating>@ <|@
tid a737 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1613118162
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@1613118162]
=== Inputs ===
=== Succesors ===
=== Usages ===
a733 a760 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i840 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v839 v850 v903 v910 v917 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i834 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j835 j847 j900 j907 j914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j838 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
rawvalue: 4285321216
stableDimension: 0
stamp: i64 [4285321216] ⇊00000000ff6cd000 ⇈00000000ff6cd000
stampKind: i64
value: long[4285321216|0xff6cd000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1010 v1012 v1018 v1019 v1020 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v157 v59 i90 v119 v898 v832 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v933 <|@
result meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v822 v888 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v812 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j880 j959 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 33]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i130 i169 i173 a864 a793 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i930 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
a793 a864 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v779 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a793 a864 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j927 <|@
result long[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j928 j939 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v925 <|@
result meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v926 v938 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a9 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 7]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v454 v497 v265 v264 v281 v282 a760 v726 a733 v753 v745 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 34]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i31 i310 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 i32 v454 v45 ?712 ?710 v484 ?91 i311 v103 ?709 v500 v497 ?707 ?340 v826 ?301 v892 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 v454 v50 v54 v482 ?710 ?709 v484 ?91 ?340 v108 v511 ?707 v497 a668 ?301 v950 a957 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 v454 ?713 a519 ?712 v484 ?711 ?91 ?707 ?340 ?710 ?301 ?148 v497 ?709 a955 a956 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32 [0 - 1] ⇈0000000000000001
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 ?713 v157 ?712 ?711 ?91 ?707 ?340 ?710 ?301 ?148 ?709 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
index: 5
stamp: i32 [0 - 1] ⇈0000000000000001
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?7 ?21 ?28 ?714 ?713 ?712 v537 ?711 ?710 ?91 ?301 ?148 ?709 ?340 v541 ?708 ?707 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 7]
stamp: void
trueSuccessorProbability: 0.05975755506231859
=== Inputs ===
condition: v414 
=== Succesors ===
trueSuccessor: v11 
falseSuccessor: v12 
=== Usages ===
=== Predecessor ===
a961 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v414 #trueSuccessor: v11 #falseSuccessor: v12  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@71d61297 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1613118162] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[4285321216|0xff6cd000] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|DWORD[.], y: v7|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05975755506231859 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4588772792322553789
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a20 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a20  <|@  <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
returnStamp: a [Ljava/util/HashMap$Node;
signature: [Ljdk.vm.ci.meta.JavaType;@26bdcc7
stamp: void
targetMethod: HotSpotMethod<HashMap.resize()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a20 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?707 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 629
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 - - - - - - - 
=== Succesors ===
=== Usages ===
a20 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a20 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 20
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
polymorphic: false
stamp: a [Ljava/util/HashMap$Node;
targetMethod: Direct#HashMap.resize
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v395 
stateDuring: ?707 
=== Succesors ===
next: i962 
=== Usages ===
?21 v982 a306 a345 v981 a344 
=== Predecessor ===
v11 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v395 stateDuring: ?707 #next: i962  <|@  <|@
tid ?21 <|@
d <@d|@=== Debug Properties ===
bci: 23
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 629
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 - - - - - - - a20 
=== Succesors ===
=== Usages ===
v726 i962 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 - - - - - - - a20  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
result [v12|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a20 
index: - 
=== Succesors ===
=== Usages ===
i962 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a20 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i962 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:629) [bci: 26]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?21 
guard: - 
address: v981 
=== Succesors ===
next: v593 
=== Usages ===
i584 v403 i31 i580 i583 
=== Predecessor ===
a20 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?21 guard: - address: v981 #next: v593  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 34]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i962 
y: i30 
=== Succesors ===
=== Usages ===
i32 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i962 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$68/1111552356@74e89afd
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 36]
stamp: i32
=== Inputs ===
x: i2 
y: i31 
=== Succesors ===
=== Usages ===
v982 i343 i342 v403 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2 y: i31  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i32 
y: i962 
=== Succesors ===
=== Usages ===
v593 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i32 y: i962  <|@  <|@
f <@*|@fixed>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v403 
=== Succesors ===
trueSuccessor: v590 
falseSuccessor: v592 
=== Usages ===
=== Predecessor ===
i962 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v403 #trueSuccessor: v590 #falseSuccessor: v592  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:629) [bci: 23]
stack: v12|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v13|DWORD = MOV [v12|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = DEC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = AND (x: v1|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4588772792322553789
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: a963 
=== Usages ===
a963 
=== Predecessor ===
v593 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a963  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
result [v12|QWORD[.] + v15|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a20 
index: i32 
=== Succesors ===
=== Usages ===
a963 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a20 index: i32  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a963 <|@
result v16|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v590 
address: v982 
=== Succesors ===
next: v37 
=== Usages ===
a718 v543 
=== Predecessor ===
v590 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v590 address: v982 #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 44]
stamp: void
=== Inputs ===
value: a963 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a963  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 44]
stamp: void
trueSuccessorProbability: 0.874487083904821
=== Inputs ===
condition: v543 
=== Succesors ===
trueSuccessor: v35 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
a963 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v543 #trueSuccessor: v35 #falseSuccessor: v36  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v12|QWORD[.] + v15|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD[.], y: v16|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.874487083904821 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4587691878693024671
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stamp: void
trueSuccessorProbability: 0.9275371750235902
=== Inputs ===
condition: v924 
=== Succesors ===
trueSuccessor: v201 
falseSuccessor: v204 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v924 #trueSuccessor: v201 #falseSuccessor: v204  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v6|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9275371750235902 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587146156980121546
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v336  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v201 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD, v12|QWORD[.], v13|DWORD] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4570877969932762454
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v339  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v204 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD, v12|QWORD[.], v13|DWORD] destination: B5 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B29" 
    xhandlers
    flags 
    probability 4575297331189915888
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v300  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
v36 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD[.], v12|QWORD[.], v13|DWORD] destination: B6 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v726  <|@  <|@
f <@~|@floating>@ <|@
tid i728 <|@
result int[-103451|0xfffffffffffe6be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -103451
stableDimension: 0
stamp: i32 [-103451] ⇊00000000fffe6be5 ⇈00000000fffe6be5
stampKind: i32
value: int[-103451|0xfffffffffffe6be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v726 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?21 
actionAndReason: i728 
speculation: a9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?21 actionAndReason: i728 speculation: a9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -103451 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:629) [bci: 23]
stack: v12|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" "B77" 
    xhandlers
    flags 
    probability 4606644170594594948
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i964 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i964  <|@  <|@
f <@~|@floating>@ <|@
tid v983 <|@
result [v7|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a961 
=== Succesors ===
=== Usages ===
i964 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a961  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i964 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 12]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v983 
=== Succesors ===
next: v597 
=== Usages ===
v579 i584 i310 i580 i583 
=== Predecessor ===
v12 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v983 #next: v597  <|@  <|@
f <@~|@floating>@ <|@
tid i310 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 34]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i964 
y: i30 
=== Succesors ===
=== Usages ===
i311 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i964 y: i30  <|@  <|@
f <@~|@floating>@ <|@
tid i311 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$68/1111552356@74e89afd
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 36]
stamp: i32
=== Inputs ===
x: i2 
y: i310 
=== Succesors ===
=== Usages ===
v984 i342 i343 v579 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2 y: i310  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i311 
y: i964 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i311 y: i964  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v579 
=== Succesors ===
trueSuccessor: v594 
falseSuccessor: v596 
=== Usages ===
=== Predecessor ===
i964 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v579 #trueSuccessor: v594 #falseSuccessor: v596  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v7|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = AND (x: v1|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4606644170594594948
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a965 
=== Usages ===
a965 
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a965  <|@  <|@
f <@~|@floating>@ <|@
tid a394 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 1]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a961 
=== Succesors ===
=== Usages ===
a345 v984 a306 a344 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a961  <|@  <|@
f <@~|@floating>@ <|@
tid v984 <|@
result [v20|QWORD[.] + v19|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a394 
index: i311 
=== Succesors ===
=== Usages ===
a965 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a394 index: i311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a965 <|@
result v21|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v594 
address: v984 
=== Succesors ===
next: v316 
=== Usages ===
a718 v545 
=== Predecessor ===
v594 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v594 address: v984 #next: v316  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 44]
stamp: void
=== Inputs ===
value: a965 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a965  <|@  <|@
f <@*|@fixed>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 44]
stamp: void
trueSuccessorProbability: 0.874487083904821
=== Inputs ===
condition: v545 
=== Succesors ===
trueSuccessor: v314 
falseSuccessor: v315 
=== Usages ===
=== Predecessor ===
a965 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v545 #trueSuccessor: v314 #falseSuccessor: v315  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[.] = MOV [v20|QWORD[.] + v19|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|DWORD[.], y: v21|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.874487083904821 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4605581207852127653
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v351  <|@  <|@
f <@*|@fixed>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stamp: void
trueSuccessorProbability: 0.9275371750235902
=== Inputs ===
condition: v924 
=== Succesors ===
trueSuccessor: v349 
falseSuccessor: v350 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v924 #trueSuccessor: v349 #falseSuccessor: v350  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v6|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9275371750235902 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605044549017670954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v351 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|DWORD, v20|QWORD[.], v17|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" "B11" 
    successors "B13" "B19" 
    xhandlers
    flags 
    probability 4605481132514191399
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i343 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v335 
values: i32 i311 
=== Succesors ===
=== Usages ===
v986 v434 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v335 values: i32 i311  <|@  <|@
f <@~|@floating>@ <|@
tid a344 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v335 
values: a20 a394 
=== Succesors ===
=== Usages ===
?28 v985 v986 v1005 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v335 values: a20 a394  <|@  <|@
f <@~|@floating>@ <|@
tid i580 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v335 
values: i962 i964 
=== Succesors ===
=== Usages ===
?28 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v335 values: i962 i964  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v336 v337 
=== Succesors ===
next: v966 
=== Usages ===
i343 a344 i580 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v336 v337 #next: v966  <|@  <|@
f <@~|@floating>@ <|@
tid v1005 <|@
result [v23|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a344 
index: - 
=== Succesors ===
=== Usages ===
v966 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a344 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v966 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1005 
=== Succesors ===
next: v605 
=== Usages ===
v926 
=== Predecessor ===
v335 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1005 #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v966 
y: v925 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v966 y: v925  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 630
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a344 - i580 - - - - 
=== Succesors ===
=== Usages ===
v734 a793 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a344 - i580 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v926 
=== Succesors ===
trueSuccessor: v602 
falseSuccessor: v604 
=== Usages ===
=== Predecessor ===
v966 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v926 #trueSuccessor: v602 #falseSuccessor: v604  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD, v23|QWORD[.], v24|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOV [v23|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v25|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4605481132514191399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i967 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i967  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
result [v23|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a344 
index: - 
=== Succesors ===
=== Usages ===
i967 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a344 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i967 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v985 
=== Succesors ===
next: v609 
=== Usages ===
v434 
=== Predecessor ===
v602 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v985 #next: v609  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i343 
y: i967 
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i343 y: i967  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@4855ff92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v434 
=== Succesors ===
trueSuccessor: v606 
falseSuccessor: v608 
=== Usages ===
=== Predecessor ===
i967 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v434 #trueSuccessor: v606 #falseSuccessor: v608  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: [v23|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4605481132514191399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: j781 
=== Usages ===
v445 
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j781 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j800 
=== Usages ===
v1006 v1007 
=== Predecessor ===
v606 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j800  <|@  <|@
f <@~|@floating>@ <|@
tid v1006 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j781 
index: - 
=== Succesors ===
=== Usages ===
j800 v802 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j781 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j800 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1006 
=== Succesors ===
next: j801 
=== Usages ===
j928 j806 v1022 
=== Predecessor ===
j781 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1006 #next: j801  <|@  <|@
f <@~|@floating>@ <|@
tid v1007 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j781 
index: - 
=== Succesors ===
=== Usages ===
j801 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j781 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j801 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1007 
=== Succesors ===
next: v789 
=== Usages ===
v786 
=== Predecessor ===
j800 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1007 #next: v789  <|@  <|@
f <@~|@floating>@ <|@
tid j928 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
stamp: i64
=== Inputs ===
x: j800 
y: j927 
=== Succesors ===
=== Usages ===
v786 v802 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j800 y: j927  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j801 
y: j928 
=== Succesors ===
=== Usages ===
v789 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j801 y: j928  <|@  <|@
f <@*|@fixed>@ <|@
tid v789 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@4855ff92 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v786 
=== Succesors ===
trueSuccessor: v787 
falseSuccessor: v788 
=== Usages ===
=== Predecessor ===
j801 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v786 #trueSuccessor: v787 #falseSuccessor: v788  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v26|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575829406081159033
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a793 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a793 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@4038bc8f
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?28 
arguments: v779 i930 i29 
=== Succesors ===
next: j794 
=== Usages ===
j794 
=== Predecessor ===
v787 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?28 arguments: v779 i930 i29 #next: j794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j794 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a793 
=== Succesors ===
next: v807 
=== Usages ===
j806 
=== Predecessor ===
a793 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a793 #next: v807  <|@  <|@
f <@*|@fixed>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v804 
=== Predecessor ===
j794 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v23|QWORD[.] - v24|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10c2d3aa0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605408073384502249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v802 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1006 
value: j928 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v798 
=== Usages ===
=== Predecessor ===
v788 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1006 value: j928 stateAfter: - lastLocationAccess: - #next: v798  <|@  <|@
f <@~|@floating>@ <|@
tid v1022 <|@
result [v26|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j800 
index: - 
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j800 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1022 
=== Succesors ===
next: v805 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1022 #next: v805  <|@  <|@
f <@*|@fixed>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v804 
=== Predecessor ===
v798 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v26|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B66" 
    xhandlers
    flags 
    probability 4605481132514191399
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j806 <|@
result v29|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v804 
values: j800 j794 
=== Succesors ===
=== Usages ===
v1009 v1008 a665 v1023 v1024 v1025 v1026 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v804 values: j800 j794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v805 v807 
=== Succesors ===
next: a665 
=== Usages ===
j806 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v805 v807 #next: a665  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a665 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j806 
=== Succesors ===
next: j818 
=== Usages ===
a672 
=== Predecessor ===
v804 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j806 #next: j818  <|@  <|@
f <@~|@floating>@ <|@
tid j959 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v812 
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v812  <|@  <|@
f <@~|@floating>@ <|@
tid v1032 <|@
result [v10|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j959 
index: - 
=== Succesors ===
=== Usages ===
j818 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j959 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j818 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1032 
=== Succesors ===
next: v819 
=== Usages ===
v819 
=== Predecessor ===
a665 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1032 #next: v819  <|@  <|@
f <@~|@floating>@ <|@
tid v1008 <|@
result [v29|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j806 
index: - 
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j806 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1008 
value: j818 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v822 
=== Usages ===
=== Predecessor ===
j818 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1008 value: j818 stateAfter: - lastLocationAccess: - #next: v822  <|@  <|@
f <@~|@floating>@ <|@
tid v1009 <|@
result [v29|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j806 
index: - 
=== Succesors ===
=== Usages ===
v822 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j806 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1009 
value: v933 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v826 
=== Usages ===
=== Predecessor ===
v819 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1009 value: v933 stateAfter: - lastLocationAccess: - #next: v826  <|@  <|@
f <@~|@floating>@ <|@
tid v1023 <|@
result [v29|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j806 
index: - 
=== Succesors ===
=== Usages ===
v826 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j806 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1023 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v828 
=== Usages ===
=== Predecessor ===
v822 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1023 value: i2 stateAfter: - lastLocationAccess: - #next: v828  <|@  <|@
f <@~|@floating>@ <|@
tid v1024 <|@
result [v29|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j806 
index: - 
=== Succesors ===
=== Usages ===
v828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j806 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a668 <|@
result v32|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v828 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1024 
value: a668 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v830 
=== Usages ===
=== Predecessor ===
v826 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1024 value: a668 stateAfter: - lastLocationAccess: - #next: v830  <|@  <|@
f <@~|@floating>@ <|@
tid v1025 <|@
result [v29|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j806 
index: - 
=== Succesors ===
=== Usages ===
v830 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j806 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a956 <|@
result v33|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a4 
=== Succesors ===
=== Usages ===
v830 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1025 
value: a956 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v832 
=== Usages ===
=== Predecessor ===
v828 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1025 value: a956 stateAfter: - lastLocationAccess: - #next: v832  <|@  <|@
f <@~|@floating>@ <|@
tid v1026 <|@
result [v29|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j806 
index: - 
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j806 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1026 
value: i15 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a672 
=== Usages ===
=== Predecessor ===
v830 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1026 value: i15 stateAfter: - lastLocationAccess: - #next: a672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a672 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a665 
=== Succesors ===
next: v673 
=== Usages ===
a444 
=== Predecessor ===
v832 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a665 #next: v673  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
a672 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v445  <|@  <|@
f <@~|@floating>@ <|@
tid v986 <|@
result [v23|QWORD[.] + v22|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a344 
index: i343 
=== Succesors ===
=== Usages ===
v445 j833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a344 index: i343  <|@  <|@
f <@~|@floating>@ <|@
tid a444 <|@
result v34|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
op: Compress
stamp: n -
=== Inputs ===
value: a672 
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v606 
address: v986 
value: a444 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j833 
=== Usages ===
=== Predecessor ===
v673 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v606 address: v986 value: a444 stateAfter: - lastLocationAccess: - #next: j833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j833 <|@
result [v23|QWORD[.] + v22|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v986 
=== Succesors ===
next: v839 
=== Usages ===
j835 
=== Predecessor ===
v445 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v986 #next: v839  <|@  <|@
f <@~|@floating>@ <|@
tid j835 <|@
result v35|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$66/1929392697@1aef7eb1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j833 
y: i834 
=== Succesors ===
=== Usages ===
v1010 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j833 y: i834  <|@  <|@
f <@~|@floating>@ <|@
tid v1010 <|@
result [v35|QWORD[*] + v9|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j835 
index: j838 
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j835 index: j838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1010 
value: i840 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
j833 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1010 value: i840 stateAfter: - lastLocationAccess: - #next: v323  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v839 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE v29|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [v10|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*]], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v29|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 16], y: v32|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[.] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 20], y: v33|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + v22|DWORD * 4 + 16], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = LEA [v23|QWORD[.] + v22|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[*] = SHR v36|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v35|QWORD[*] + v9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v738 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v738  <|@  <|@
f <@~|@floating>@ <|@
tid i739 <|@
result int[-111387|0xfffffffffffe4ce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -111387
stableDimension: 0
stamp: i32 [-111387] ⇊00000000fffe4ce5 ⇈00000000fffe4ce5
stampKind: i32
value: int[-111387|0xfffffffffffe4ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i732 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
v608 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-111387|0xfffffffffffe4ce5], Object[null]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v735 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v735  <|@  <|@
f <@~|@floating>@ <|@
tid i736 <|@
result int[-110396|0xfffffffffffe50c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -110396
stableDimension: 0
stamp: i32 [-110396] ⇊00000000fffe50c4 ⇈00000000fffe50c4
stampKind: i32
value: int[-110396|0xfffffffffffe50c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i732 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
v604 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-110396|0xfffffffffffe50c4], v8|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i732 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-111387 - -110396] ⇊00000000fffe40c4 ⇈00000000fffe5ce5
valueDescription: i32
=== Inputs ===
merge: v729 
values: i736 i739 
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v729 values: i736 i739  <|@  <|@
f <@~|@floating>@ <|@
tid a733 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v729 
values: a737 a9 
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v729 values: a737 a9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v735 v738 
=== Succesors ===
next: v734 
=== Usages ===
i732 a733 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v735 v738 #next: v734  <|@  <|@
f <@*|@fixed>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?28 
actionAndReason: i732 
speculation: a733 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v729 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?28 actionAndReason: i732 speculation: a733  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v23|QWORD[.] - v24|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4588747362387101608
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
v351 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v341  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v350 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|DWORD, v20|QWORD[.], v17|DWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B5" "B21" 
    successors "B23" "B26" 
    xhandlers
    flags 
    probability 4589230552195270079
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i342 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v338 
values: i32 i311 
=== Succesors ===
=== Usages ===
?708 v990 v459 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v338 values: i32 i311  <|@  <|@
f <@~|@floating>@ <|@
tid a345 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v338 
values: a20 a394 
=== Succesors ===
=== Usages ===
?708 v989 ?340 v990 v1011 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v338 values: a20 a394  <|@  <|@
f <@~|@floating>@ <|@
tid i583 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v338 
values: i962 i964 
=== Succesors ===
=== Usages ===
?340 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v338 values: i962 i964  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v339 v341 
=== Succesors ===
next: v968 
=== Usages ===
i342 a345 i583 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v339 v341 #next: v968  <|@  <|@
f <@~|@floating>@ <|@
tid v1011 <|@
result [v40|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a345 
index: - 
=== Succesors ===
=== Usages ===
v968 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a345 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v968 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v1011 
=== Succesors ===
next: v617 
=== Usages ===
v938 
=== Predecessor ===
v338 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1011 #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid v938 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v968 
y: v925 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v968 y: v925  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@4855ff92 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v938 
=== Succesors ===
trueSuccessor: v614 
falseSuccessor: v616 
=== Usages ===
=== Predecessor ===
v968 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v938 #trueSuccessor: v614 #falseSuccessor: v616  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD, v40|QWORD[.], v41|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v40|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4589230552195270079
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i969 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i969  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
result [v40|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a345 
index: - 
=== Succesors ===
=== Usages ===
i969 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a345 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i969 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v989 
=== Succesors ===
next: v621 
=== Usages ===
v459 
=== Predecessor ===
v614 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v989 #next: v621  <|@  <|@
f <@~|@floating>@ <|@
tid v459 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i342 
y: i969 
=== Succesors ===
=== Usages ===
v621 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i342 y: i969  <|@  <|@
f <@*|@fixed>@ <|@
tid v621 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@4855ff92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v459 
=== Succesors ===
trueSuccessor: v618 
falseSuccessor: v620 
=== Usages ===
=== Predecessor ===
i969 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v459 #trueSuccessor: v618 #falseSuccessor: v620  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: [v40|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B66" 
    xhandlers
    flags 
    probability 4589230552195270079
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v450 
=== Usages ===
v470 
=== Predecessor ===
v621 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v450  <|@  <|@
f <@~|@floating>@ <|@
tid v987 <|@
result [v6|DWORD * 8 + 680] <|@
d <@d|@=== Debug Properties ===
displacement: 680
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v960 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v960  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v450 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v987 
=== Succesors ===
next: j453 
=== Usages ===
v988 v454 
=== Predecessor ===
v618 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v987 #next: j453  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
result [v42|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v450 
index: - 
=== Succesors ===
=== Usages ===
j453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v450 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j453 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v988 
=== Succesors ===
next: a39 
=== Usages ===
v454 
=== Predecessor ===
v450 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v988 #next: a39  <|@  <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
returnStamp: a Ljava/util/HashMap$Node;
signature: [Ljdk.vm.ci.meta.JavaType;@534a86f2
stamp: void
targetMethod: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>
=== Inputs ===
computedAddress: j453 
metaspaceMethod: v450 
arguments: a1 i2 a3 a4 a9 
=== Succesors ===
=== Usages ===
a39 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j453 metaspaceMethod: v450 arguments: a1 i2 a3 a4 a9  <|@  <|@
tid ?708 <|@
d <@d|@=== Debug Properties ===
bci: 56
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 631
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i6 - - - - - - - a345 i342 
=== Succesors ===
=== Usages ===
a39 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i6 - - - - - - - a345 i342  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a39 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 56
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
polymorphic: true
stamp: a Ljava/util/HashMap$Node;
targetMethod: Indirect#HashMap.newNode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v454 
stateDuring: ?708 
=== Succesors ===
next: v470 
=== Usages ===
a469 
=== Predecessor ===
j453 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v454 stateDuring: ?708 #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
result [v40|QWORD[.] + v39|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a345 
index: i342 
=== Succesors ===
=== Usages ===
v470 j846 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a345 index: i342  <|@  <|@
f <@~|@floating>@ <|@
tid a469 <|@
result v45|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
op: Compress
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
value: a39 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a39  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v618 
address: v990 
value: a469 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j846 
=== Usages ===
=== Predecessor ===
a39 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v618 address: v990 value: a469 stateAfter: - lastLocationAccess: - #next: j846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j846 <|@
result [v40|QWORD[.] + v39|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v990 
=== Succesors ===
next: v850 
=== Usages ===
j847 
=== Predecessor ===
v470 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v990 #next: v850  <|@  <|@
f <@~|@floating>@ <|@
tid j847 <|@
result v46|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$66/1929392697@1aef7eb1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j846 
y: i834 
=== Succesors ===
=== Usages ===
v1012 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j846 y: i834  <|@  <|@
f <@~|@floating>@ <|@
tid v1012 <|@
result [v46|QWORD[*] + v9|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j847 
index: j838 
=== Succesors ===
=== Usages ===
v850 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j847 index: j838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1012 
value: i840 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
j846 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1012 value: i840 stateAfter: - lastLocationAccess: - #next: v150  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 259]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v850 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV [v6|DWORD * 8 + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [v42|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v42|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stack: v40|QWORD[.] v39|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:56] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[.] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD[.] + v39|DWORD * 4 + 16], y: v45|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = LEA [v40|QWORD[.] + v39|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = SHR v47|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v46|QWORD[*] + v9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:631) [bci: 59]
stamp: void
=== Inputs ===
=== Succesors ===
next: v764 
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v764  <|@  <|@
f <@~|@floating>@ <|@
tid i765 <|@
result int[-117787|0xfffffffffffe33e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -117787
stableDimension: 0
stamp: i32 [-117787] ⇊00000000fffe33e5 ⇈00000000fffe33e5
stampKind: i32
value: int[-117787|0xfffffffffffe33e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i759 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
v620 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-117787|0xfffffffffffe33e5], Object[null]] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid i763 <|@
result int[-116796|0xfffffffffffe37c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -116796
stableDimension: 0
stamp: i32 [-116796] ⇊00000000fffe37c4 ⇈00000000fffe37c4
stampKind: i32
value: int[-116796|0xfffffffffffe37c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i759 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-116796|0xfffffffffffe37c4], v8|QWORD[.]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i759 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-117787 - -116796] ⇊00000000fffe33c4 ⇈00000000fffe37e5
valueDescription: i32
=== Inputs ===
merge: v756 
values: i763 i765 
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v756 values: i763 i765  <|@  <|@
f <@~|@floating>@ <|@
tid a760 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v756 
values: a737 a9 
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v756 values: a737 a9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v762 v764 
=== Succesors ===
next: v761 
=== Usages ===
i759 a760 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v762 v764 #next: v761  <|@  <|@
tid ?340 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 630
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a345 - i583 - - - - 
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a345 - i583 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?340 
actionAndReason: i759 
speculation: a760 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?340 actionAndReason: i759 speculation: a760  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD, v49|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v49|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v40|QWORD[.] - v41|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4593168122602903289
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v302  <|@  <|@
f <@*|@fixed>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
v315 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|DWORD[.], v20|QWORD[.], v17|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B6" "B28" 
    successors "B30" "B39" 
    xhandlers
    flags 
    probability 4593690099667786884
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a718 <|@
result v50|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v299 
values: a963 a965 
=== Succesors ===
=== Usages ===
a719 v1021 v991 v992 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v299 values: a963 a965  <|@  <|@
f <@~|@floating>@ <|@
tid a306 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v299 
values: a20 a394 
=== Succesors ===
=== Usages ===
?712 ?710 v484 ?91 ?301 ?709 v500 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v299 values: a20 a394  <|@  <|@
f <@~|@floating>@ <|@
tid i584 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v299 
values: i962 i964 
=== Succesors ===
=== Usages ===
?301 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v299 values: i962 i964  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v300 v302 
=== Succesors ===
next: v970 
=== Usages ===
a718 a306 i584 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v300 v302 #next: v970  <|@  <|@
tid ?301 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 630
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a306 - i584 - - - - 
=== Succesors ===
=== Usages ===
v753 v970 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a306 - i584 - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v1021 <|@
result [v50|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a718 
=== Succesors ===
=== Usages ===
v970 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a718  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v970 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?301 
guard: - 
address: v1021 
=== Succesors ===
next: i971 
=== Usages ===
v947 
=== Predecessor ===
v299 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?301 guard: - address: v1021 #next: i971  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
result [v50|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a718 
=== Succesors ===
=== Usages ===
i971 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a718  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i971 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 65]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v991 
=== Succesors ===
next: v48 
=== Usages ===
v45 
=== Predecessor ===
v970 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v991 #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 69]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i971 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i971  <|@  <|@
f <@~|@floating>@ <|@
tid v946 <|@
result meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v947 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v970 
y: v946 
=== Succesors ===
=== Usages ===
v75 v295 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v970 y: v946  <|@  <|@
f <@~|@floating>@ <|@
tid a719 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:630) [bci: 40]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a718 
=== Succesors ===
=== Usages ===
v484 a89 ?709 a85 a85 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a718  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@4855ff92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 69]
stamp: void
trueSuccessorProbability: 0.07477440711014371
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v46 
falseSuccessor: v47 
=== Usages ===
=== Predecessor ===
i971 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v46 #falseSuccessor: v47  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD[.], v51|QWORD[.], v52|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v51|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction v53|DWORD = MOV [v50|DWORD[.] * 8 + 8] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: [v50|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07477440711014371 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4576563794650477213
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: a972 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a972  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
result [v50|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a718 
=== Succesors ===
=== Usages ===
a972 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a718  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a972 <|@
result v55|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 74]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v992 
=== Succesors ===
next: v53 
=== Usages ===
a479 
=== Predecessor ===
v46 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v992 #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid a479 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 74]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a972 
=== Succesors ===
=== Usages ===
v50 v482 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a972  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 81]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a479 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a479  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 81]
stamp: void
trueSuccessorProbability: 0.5288053365676167
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v51 
falseSuccessor: v52 
=== Usages ===
=== Predecessor ===
a972 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v51 #falseSuccessor: v52  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[.] = MOV [v50|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5288053365676167 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B64" 
    xhandlers
    flags 
    probability 4572371878723892198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v82  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
v51 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B31 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4571748511322321236
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 84]
stamp: void
=== Inputs ===
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v629  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 85]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 85]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v628 
falseSuccessor: v626 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v628 #falseSuccessor: v626  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: v753 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v753  <|@  <|@
f <@~|@floating>@ <|@
tid i755 <|@
result int[-122899|0xfffffffffffe1fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -122899
stableDimension: 0
stamp: i32 [-122899] ⇊00000000fffe1fed ⇈00000000fffe1fed
stampKind: i32
value: int[-122899|0xfffffffffffe1fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?301 
actionAndReason: i755 
speculation: a9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?301 actionAndReason: i755 speculation: a9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -122899 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v51|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B38" 
    xhandlers
    flags 
    probability 4571748511322321236
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 85]
stamp: void
=== Inputs ===
=== Succesors ===
next: i57 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i57  <|@  <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 91]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@b66fd05
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a3 a479 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3 a479  <|@  <|@
tid ?709 <|@
d <@d|@=== Debug Properties ===
bci: 91
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 635
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a306 a719 - - - - - 
=== Succesors ===
=== Usages ===
i57 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a306 a719 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i57 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 91
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 91]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v482 
stateDuring: ?709 
=== Succesors ===
next: v68 
=== Usages ===
v59 
=== Predecessor ===
v626 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v482 stateDuring: ?709 #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 94]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i57 
y: i15 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i57 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:635) [bci: 94]
stamp: void
trueSuccessorProbability: 0.32432432432432434
=== Inputs ===
condition: v59 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v67 
=== Usages ===
=== Predecessor ===
i57 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v59 #trueSuccessor: v66 #falseSuccessor: v67  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v51|QWORD[.] v54|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:91] <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v57|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.32432432432432434 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4564257079117715953
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v75  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
stamp: void
trueSuccessorProbability: 3.388845855926137E-4
=== Inputs ===
condition: v947 
=== Succesors ===
trueSuccessor: v73 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v947 #trueSuccessor: v73 #falseSuccessor: v74  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v53|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.388845855926137E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B41" 
    xhandlers
    flags 
    probability 4512693756488201411
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:638) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v285  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
v73 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B43" 
    xhandlers
    flags 
    probability 4564254837648238250
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v288  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
v74 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B64" 
    xhandlers
    flags 
    probability 4569036272754202032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
next: v192 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v192  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:636) [bci: 97]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
v67 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B38 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4593032307808989876
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 104]
stamp: void
=== Inputs ===
=== Succesors ===
next: v295 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v295  <|@  <|@
f <@*|@fixed>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:637) [bci: 106]
stamp: void
trueSuccessorProbability: 3.388845855926137E-4
=== Inputs ===
condition: v947 
=== Succesors ===
trueSuccessor: v293 
falseSuccessor: v294 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v947 #trueSuccessor: v293 #falseSuccessor: v294  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v53|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.388845855926137E-4 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4540932436599936300
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:638) [bci: 112]
stamp: void
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v286  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
v293 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" "B40" 
    successors "B64" 
    xhandlers
    flags 
    probability 4541004163623222783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v285 v286 
=== Succesors ===
next: a80 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v285 v286 #next: a80  <|@  <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:638) [bci: 123]
returnStamp: a# Ljava/util/HashMap$TreeNode;
signature: [Ljdk.vm.ci.meta.JavaType;@344ae6e8
stamp: void
targetMethod: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)>
=== Inputs ===
arguments: a719 a1 a306 i2 a3 a4 
=== Succesors ===
=== Usages ===
a80 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a719 a1 a306 i2 a3 a4  <|@  <|@
tid ?711 <|@
d <@d|@=== Debug Properties ===
bci: 123
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 638
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - a4 i5 i6 - - - - - - - 
=== Succesors ===
=== Usages ===
a80 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a4 i5 i6 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a80 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 123
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:638) [bci: 123]
polymorphic: false
stamp: a# Ljava/util/HashMap$TreeNode;
targetMethod: Direct#HashMap$TreeNode.putTreeVal
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v484 
stateDuring: ?711 
=== Succesors ===
next: v84 
=== Usages ===
a85 
=== Predecessor ===
v284 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v484 stateDuring: ?711 #next: v84  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
a80 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:638) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:123] <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD[.]] destination: B41 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" 
    xhandlers
    flags 
    probability 4593029472061022177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v290  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
v294 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B37" "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593132784791479932
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v288 v290 
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v288 v290 #next: v87  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
v287 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.], int[0|0x0]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B76" "B62" 
    successors "B45" "B56" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594272391294824813
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a89 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v88 
values: a719 a491 a491 
=== Succesors ===
=== Usages ===
?91 j906 j899 ?712 v993 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v88 values: a719 a491 a491  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v88 
values: i15 i130 i130 
=== Succesors ===
=== Usages ===
?91 ?710 ?712 i130 v138 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v88 values: i15 i130 i130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.2055152392945185
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v87 
=== Succesors ===
next: a973 
=== Usages ===
a89 i90 v95 v110 v124 v131 v193 v638 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v87 #next: a973  <|@  <|@
tid ?91 <|@
d <@d|@=== Debug Properties ===
bci: 134
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 641
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a306 a89 - - - - i90 
=== Succesors ===
=== Usages ===
v585 a864 v745 a973 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a306 a89 - - - - i90  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
result [v59|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a89 
index: - 
=== Succesors ===
=== Usages ===
a973 v493 v499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a89 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a973 <|@
result v61|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 136]
nullCheck: true
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: ?91 
guard: - 
address: v993 
=== Succesors ===
next: v101 
=== Usages ===
a491 v501 v995 v996 
=== Predecessor ===
v88 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?91 guard: - address: v993 #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid a491 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 136]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a973 
=== Succesors ===
=== Usages ===
a85 ?710 ?712 a85 a85 ?713 a85 a89 a89 a85 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a973  <|@  <|@
f <@~|@floating>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 177]
stamp: void
=== Inputs ===
value: a973 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a973  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 142]
stamp: void
trueSuccessorProbability: 0.8149025908817031
=== Inputs ===
condition: v501 
=== Succesors ===
trueSuccessor: v95 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
a973 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v501 #trueSuccessor: v95 #falseSuccessor: v100  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD[.], v60|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v51|QWORD[.] v59|QWORD[.] - - - - v60|DWORD 
>@ <|@ instruction v61|DWORD[.] = MOV [v59|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v61|DWORD[.], y: v61|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8149025908817031 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B52" 
    xhandlers
    flags 
    probability 4592983550975598656
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 145]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v88 
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v88 #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid i137 <|@
result int[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 160]
rawvalue: 7
stableDimension: 0
stamp: i32 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 162]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i137 
=== Succesors ===
=== Usages ===
v142 v362 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i90 y: i137  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
stamp: void
trueSuccessorProbability: 0.7054909305993691
=== Inputs ===
condition: v924 
=== Succesors ===
trueSuccessor: v214 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v924 #trueSuccessor: v214 #falseSuccessor: v216  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v6|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7054909305993691 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4590533491649061219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=newNode target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
stamp: void
=== Inputs ===
=== Succesors ===
next: j853 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j853  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j853 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j868 
=== Usages ===
v1013 v1014 
=== Predecessor ===
v214 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j868  <|@  <|@
f <@~|@floating>@ <|@
tid v1013 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j853 
index: - 
=== Succesors ===
=== Usages ===
j868 v870 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j853 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j868 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1013 
=== Succesors ===
next: j869 
=== Usages ===
j939 j874 v1027 
=== Predecessor ===
j853 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1013 #next: j869  <|@  <|@
f <@~|@floating>@ <|@
tid v1014 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j853 
index: - 
=== Succesors ===
=== Usages ===
j869 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j853 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j869 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1014 
=== Succesors ===
next: v861 
=== Usages ===
v858 
=== Predecessor ===
j868 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1014 #next: v861  <|@  <|@
f <@~|@floating>@ <|@
tid j939 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
stamp: i64
=== Inputs ===
x: j868 
y: j927 
=== Succesors ===
=== Usages ===
v858 v870 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j868 y: j927  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66bde537
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j869 
y: j939 
=== Succesors ===
=== Usages ===
v861 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j869 y: j939  <|@  <|@
f <@*|@fixed>@ <|@
tid v861 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@4855ff92 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v858 
=== Succesors ===
trueSuccessor: v859 
falseSuccessor: v860 
=== Usages ===
=== Predecessor ===
j869 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v858 #trueSuccessor: v859 #falseSuccessor: v860  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v63|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v64|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4560651634133518715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a864 
=== Usages ===
=== Predecessor ===
v861 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a864 <|@
result v65|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@4038bc8f
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?91 
arguments: v779 i930 i29 
=== Succesors ===
next: j865 
=== Usages ===
j865 
=== Predecessor ===
v859 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?91 arguments: v779 i930 i29 #next: j865  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j865 <|@
result v65|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a864 
=== Succesors ===
next: v875 
=== Usages ===
j874 
=== Predecessor ===
a864 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a864 #next: v875  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v872 
=== Predecessor ===
j865 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v51|QWORD[.] v59|QWORD[.] - - - - v60|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10c2d3aa0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD[.]] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4590474800939202256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v870 
=== Usages ===
=== Predecessor ===
v861 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v870  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1013 
value: j939 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v867 
=== Usages ===
=== Predecessor ===
v860 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1013 value: j939 stateAfter: - lastLocationAccess: - #next: v867  <|@  <|@
f <@~|@floating>@ <|@
tid v1027 <|@
result [v63|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j868 
index: - 
=== Succesors ===
=== Usages ===
v867 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j868 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v1027 
=== Succesors ===
next: v873 
=== Usages ===
=== Predecessor ===
v870 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v1027 #next: v873  <|@  <|@
f <@*|@fixed>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v872 
=== Predecessor ===
v867 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v63|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4590533491649061219
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j874 <|@
result v66|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v872 
values: j868 j865 
=== Succesors ===
=== Usages ===
v1017 v1016 a694 v1028 v1029 v1030 v1031 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v872 values: j868 j865  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v873 v875 
=== Succesors ===
next: a694 
=== Usages ===
j874 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v873 v875 #next: a694  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a694 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j874 
=== Succesors ===
next: j884 
=== Usages ===
a699 
=== Predecessor ===
v872 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j874 #next: j884  <|@  <|@
f <@~|@floating>@ <|@
tid j880 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v812 
=== Succesors ===
=== Usages ===
v1015 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v812  <|@  <|@
f <@~|@floating>@ <|@
tid v1015 <|@
result [v10|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j880 
index: - 
=== Succesors ===
=== Usages ===
j884 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j880 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j884 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1015 
=== Succesors ===
next: v885 
=== Usages ===
v885 
=== Predecessor ===
a694 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1015 #next: v885  <|@  <|@
f <@~|@floating>@ <|@
tid v1016 <|@
result [v66|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j874 
index: - 
=== Succesors ===
=== Usages ===
v885 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j874 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1016 
value: j884 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v888 
=== Usages ===
=== Predecessor ===
j884 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1016 value: j884 stateAfter: - lastLocationAccess: - #next: v888  <|@  <|@
f <@~|@floating>@ <|@
tid v1017 <|@
result [v66|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j874 
index: - 
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j874 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1017 
value: v933 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v892 
=== Usages ===
=== Predecessor ===
v885 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1017 value: v933 stateAfter: - lastLocationAccess: - #next: v892  <|@  <|@
f <@~|@floating>@ <|@
tid v1028 <|@
result [v66|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j874 
index: - 
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j874 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1028 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v894 
=== Usages ===
=== Predecessor ===
v888 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1028 value: i2 stateAfter: - lastLocationAccess: - #next: v894  <|@  <|@
f <@~|@floating>@ <|@
tid v1029 <|@
result [v66|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j874 
index: - 
=== Succesors ===
=== Usages ===
v894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j874 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a957 <|@
result v69|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v894 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1029 
value: a957 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v896 
=== Usages ===
=== Predecessor ===
v892 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1029 value: a957 stateAfter: - lastLocationAccess: - #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v1030 <|@
result [v66|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j874 
index: - 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j874 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a955 <|@
result v70|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a4 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1030 
value: a955 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v898 
=== Usages ===
=== Predecessor ===
v894 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1030 value: a955 stateAfter: - lastLocationAccess: - #next: v898  <|@  <|@
f <@~|@floating>@ <|@
tid v1031 <|@
result [v66|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j874 
index: - 
=== Succesors ===
=== Usages ===
v898 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j874 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1031 
value: i15 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a699 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1031 value: i15 stateAfter: - lastLocationAccess: - #next: a699  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a699 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a694 
=== Succesors ===
next: v700 
=== Usages ===
a492 
=== Predecessor ===
v898 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a694 #next: v700  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v493 
=== Usages ===
=== Predecessor ===
a699 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v493  <|@  <|@
f <@~|@floating>@ <|@
tid a492 <|@
result v71|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
op: Compress
stamp: n -
=== Inputs ===
value: a699 
=== Succesors ===
=== Usages ===
v493 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a699  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v993 
value: a492 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j899 
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v993 value: a492 stateAfter: - lastLocationAccess: - #next: j899  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j899 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a89 
=== Succesors ===
next: v903 
=== Usages ===
j900 
=== Predecessor ===
v493 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a89 #next: v903  <|@  <|@
f <@~|@floating>@ <|@
tid j900 <|@
result v72|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$66/1929392697@1aef7eb1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j899 
y: i834 
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j899 y: i834  <|@  <|@
f <@~|@floating>@ <|@
tid v1018 <|@
result [v72|QWORD[*] + v9|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j900 
index: j838 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j900 index: j838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1018 
value: i840 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
j899 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1018 value: i840 stateAfter: - lastLocationAccess: - #next: v362  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 162]
stamp: void
trueSuccessorProbability: 0.9993591955439444
=== Inputs ===
condition: v138 
=== Succesors ===
trueSuccessor: v361 
falseSuccessor: v360 
=== Usages ===
=== Predecessor ===
v903 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v138 #trueSuccessor: v361 #falseSuccessor: v360  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE v66|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV [v10|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v66|QWORD[*]], y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v66|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v66|QWORD[*] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v66|QWORD[*] + 16], y: v69|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[.] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v66|QWORD[*] + 20], y: v70|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v66|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[.] = COMPRESSPOINTER (input: v67|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v59|QWORD[.] + 24], y: v71|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = SHR v59|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v72|QWORD[*] + v9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMP v60|DWORD y: 7 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9993591955439444 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B64" 
    xhandlers
    flags 
    probability 4590529730722220550
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v363  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
v361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B50 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B55" 
    xhandlers
    flags 
    probability 4542827202931779927
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v360 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4585060939688869307
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
stamp: void
=== Inputs ===
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid v1035 <|@
result [v6|DWORD * 8 + 680] <|@
d <@d|@=== Debug Properties ===
displacement: 680
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v960 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v960  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v494 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1035 
=== Succesors ===
next: j496 
=== Usages ===
v994 v497 
=== Predecessor ===
v216 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1035 #next: j496  <|@  <|@
f <@~|@floating>@ <|@
tid v994 <|@
result [v73|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v494 
index: - 
=== Succesors ===
=== Usages ===
j496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v494 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j496 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v994 
=== Succesors ===
next: a133 
=== Usages ===
v497 
=== Predecessor ===
v494 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v994 #next: a133  <|@  <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
returnStamp: a Ljava/util/HashMap$Node;
signature: [Ljdk.vm.ci.meta.JavaType;@689b8942
stamp: void
targetMethod: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>
=== Inputs ===
computedAddress: j496 
metaspaceMethod: v494 
arguments: a1 i2 a3 a4 a9 
=== Succesors ===
=== Usages ===
a133 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j496 metaspaceMethod: v494 arguments: a1 i2 a3 a4 a9  <|@  <|@
tid ?712 <|@
d <@d|@=== Debug Properties ===
bci: 152
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 642
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 i2 - a4 i5 i6 a306 - - - a491 - i90 a89 
=== Succesors ===
=== Usages ===
a133 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - a4 i5 i6 a306 - - - a491 - i90 a89  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a133 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 152
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
polymorphic: true
stamp: a Ljava/util/HashMap$Node;
targetMethod: Indirect#HashMap.newNode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v497 
stateDuring: ?712 
=== Succesors ===
next: v499 
=== Usages ===
a498 
=== Predecessor ===
j496 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v497 stateDuring: ?712 #next: v499  <|@  <|@
f <@~|@floating>@ <|@
tid a498 <|@
result v76|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
op: Compress
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
value: a133 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v993 
value: a498 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j906 
=== Usages ===
=== Predecessor ===
a133 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v993 value: a498 stateAfter: - lastLocationAccess: - #next: j906  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j906 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a89 
=== Succesors ===
next: v910 
=== Usages ===
j907 
=== Predecessor ===
v499 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a89 #next: v910  <|@  <|@
f <@~|@floating>@ <|@
tid j907 <|@
result v77|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$66/1929392697@1aef7eb1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j906 
y: i834 
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j906 y: i834  <|@  <|@
f <@~|@floating>@ <|@
tid v1019 <|@
result [v77|QWORD[*] + v9|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j907 
index: j838 
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j907 index: j838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:642) [bci: 155]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1019 
value: i840 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v142 
=== Usages ===
=== Predecessor ===
j906 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1019 value: i840 stateAfter: - lastLocationAccess: - #next: v142  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:643) [bci: 162]
stamp: void
trueSuccessorProbability: 0.9993591955439444
=== Inputs ===
condition: v138 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v140 
=== Usages ===
=== Predecessor ===
v910 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v138 #trueSuccessor: v141 #falseSuccessor: v140  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOV [v6|DWORD * 8 + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [v73|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v73|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v74|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
stack: v59|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v51|QWORD[.] - - - v62|QWORD[.] - v60|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:152] <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[.] = COMPRESSPOINTER (input: v75|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v59|QWORD[.] + 24], y: v76|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[*] = SHR v59|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v77|QWORD[*] + v9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMP v60|DWORD y: 7 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9993591955439444 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B64" 
    xhandlers
    flags 
    probability 4585057799671001215
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v139  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B53 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4537051981728570786
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 165]
stamp: void
=== Inputs ===
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v356  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v140 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B51" 
    successors "B64" 
    xhandlers
    flags 
    probability 4545087302622768148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v356 v358 
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v356 v358 #next: v144  <|@  <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 169]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@6f61efb5
stamp: void
targetMethod: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)>
=== Inputs ===
arguments: a1 a306 i2 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a306 i2  <|@  <|@
tid ?713 <|@
d <@d|@=== Debug Properties ===
bci: 169
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 644
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - a4 i5 i6 - - - - a491 - - 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a4 i5 i6 - - - - a491 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
bci: 169
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:644) [bci: 169]
polymorphic: false
stamp: void
targetMethod: Direct#HashMap.treeifyBin
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v500 
stateDuring: ?713 
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v500 stateDuring: ?713 #next: v146  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
v144 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:644) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v62|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:169] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B55 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B57" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583215668193004135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 175]
stamp: void
=== Inputs ===
=== Succesors ===
next: i974 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i974  <|@  <|@
f <@~|@floating>@ <|@
tid v995 <|@
result [v61|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a973 
=== Succesors ===
=== Usages ===
i974 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a973  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i974 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 177]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v995 
=== Succesors ===
next: v106 
=== Usages ===
v103 
=== Predecessor ===
v100 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v995 #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid v103 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 181]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i974 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2 y: i974  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:640) [bci: 216]
stamp: i32
=== Inputs ===
x: i90 
y: i29 
=== Succesors ===
=== Usages ===
i90 i90 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i90 y: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@4855ff92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 181]
stamp: void
trueSuccessorProbability: 0.098936862660013
=== Inputs ===
condition: v103 
=== Succesors ===
trueSuccessor: v104 
falseSuccessor: v105 
=== Usages ===
=== Predecessor ===
i974 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v103 #trueSuccessor: v104 #falseSuccessor: v105  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = INC v60|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: [v61|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.098936862660013 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568128894617904672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 184]
stamp: void
=== Inputs ===
=== Succesors ===
next: a975 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a975  <|@  <|@
f <@~|@floating>@ <|@
tid v996 <|@
result [v61|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a973 
=== Succesors ===
=== Usages ===
a975 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a973  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a975 <|@
result v79|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 186]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v996 
=== Succesors ===
next: v114 
=== Usages ===
a508 
=== Predecessor ===
v104 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v996 #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid a508 <|@
result v80|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 186]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a975 
=== Succesors ===
=== Usages ===
v108 v511 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a975  <|@  <|@
f <@~|@floating>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 193]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a3 
y: a508 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a3 y: a508  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 193]
stamp: void
trueSuccessorProbability: 0.3706140350877193
=== Inputs ===
condition: v108 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v113 
=== Usages ===
=== Predecessor ===
a975 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v108 #trueSuccessor: v110 #falseSuccessor: v113  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = MOV [v61|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3706140350877193 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B64" 
    xhandlers
    flags 
    probability 4562007975758230104
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v88 
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v88 #next: v109  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B58 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565173390838797076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 196]
stamp: void
=== Inputs ===
=== Succesors ===
next: v639 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v639  <|@  <|@
f <@~|@floating>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:634) [bci: 85]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v639 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 197]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v950 
=== Succesors ===
trueSuccessor: v638 
falseSuccessor: v635 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v950 #trueSuccessor: v638 #falseSuccessor: v635  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 197]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v88 
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v88 #next: v745  <|@  <|@
f <@~|@floating>@ <|@
tid i747 <|@
result int[-130323|0xfffffffffffe02ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -130323
stableDimension: 0
stamp: i32 [-130323] ⇊00000000fffe02ed ⇈00000000fffe02ed
stampKind: i32
value: int[-130323|0xfffffffffffe02ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v745 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?91 
actionAndReason: i747 
speculation: a9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v638 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?91 actionAndReason: i747 speculation: a9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -130323 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v51|QWORD[.] v59|QWORD[.] - - - - v60|DWORD 
>@ <|@ instruction DEOPT info [bci:134] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565173390838797076
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:647) [bci: 197]
stamp: void
=== Inputs ===
=== Succesors ===
next: i117 
=== Usages ===
=== Predecessor ===
v639 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i117  <|@  <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 203]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@53d3a989
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a3 a508 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3 a508  <|@  <|@
tid ?710 <|@
d <@d|@=== Debug Properties ===
bci: 203
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 648
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 a306 - - - a491 - i90 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 a306 - - - a491 - i90  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i117 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 203
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 203]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v511 
stateDuring: ?710 
=== Succesors ===
next: v128 
=== Usages ===
v119 
=== Predecessor ===
v635 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v511 stateDuring: ?710 #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 206]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i117 
y: i15 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i117 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:648) [bci: 206]
stamp: void
trueSuccessorProbability: 0.3205574912891986
=== Inputs ===
condition: v119 
=== Succesors ===
trueSuccessor: v127 
falseSuccessor: v124 
=== Usages ===
=== Predecessor ===
i117 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v119 #trueSuccessor: v127 #falseSuccessor: v124  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:648) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v51|QWORD[.] - - - v62|QWORD[.] - v60|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:203] <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v81|DWORD, y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3205574912891986 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4557967183205137110
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 212]
stamp: void
=== Inputs ===
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v193  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 212]
stamp: void
=== Inputs ===
loopBegin: v88 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v88  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.], v78|DWORD] destination: B62 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4562759410872014249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:649) [bci: 209]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v88 
=== Succesors ===
next: v147 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v88 #next: v147  <|@  <|@
f <@*|@fixed>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
v124 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B31" "B41" "B58" "B53" "B55" "B63" "B38" "B50" 
    successors "B65" "B73" 
    xhandlers
    flags 
    probability 4593690099667786884
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a85 <|@
result v82|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v83 
values: a719 a80 a491 a491 a491 a491 a719 a491 
=== Succesors ===
=== Usages ===
?148 v149 j913 v521 v997 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v83 values: a719 a80 a491 a491 a491 a491 a719 a491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v82 v84 v109 v139 v146 v147 v192 v363 
=== Succesors ===
next: v155 
=== Usages ===
a85 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v82 v84 v109 v139 v146 v147 v192 v363 #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 224]
stamp: void
=== Inputs ===
value: a85 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a85  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:653) [bci: 224]
stamp: void
trueSuccessorProbability: 0.9201505395846559
=== Inputs ===
condition: v149 
=== Succesors ===
trueSuccessor: v154 
falseSuccessor: v153 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v149 #trueSuccessor: v154 #falseSuccessor: v153  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v82|QWORD[.], y: v82|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9201505395846559 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4592986408221210079
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 259]
stamp: void
=== Inputs ===
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v152  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 259]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v154 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B24" "B65" "B17" 
    successors "B67" "B70" 
    xhandlers
    flags 
    probability 4607092147400460187
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 259]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v150 v152 v323 
=== Succesors ===
next: i976 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v150 v152 v323 #next: i976  <|@  <|@
f <@~|@floating>@ <|@
tid v998 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i976 v524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i976 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 261]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v998 
=== Succesors ===
next: v524 
=== Usages ===
i169 
=== Predecessor ===
v151 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v998 #next: v524  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 265]
stamp: i32
=== Inputs ===
x: i976 
y: i29 
=== Succesors ===
=== Usages ===
v524 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i976 y: i29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:661) [bci: 266]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v998 
value: i169 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i977 
=== Usages ===
=== Predecessor ===
i976 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v998 value: i169 stateAfter: - lastLocationAccess: - #next: i977  <|@  <|@
f <@~|@floating>@ <|@
tid v999 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i977 v527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i977 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.size
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 271]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v999 
=== Succesors ===
next: v527 
=== Usages ===
i173 
=== Predecessor ===
v524 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v999 #next: v527  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$14/562279114@1363f342
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 275]
stamp: i32
=== Inputs ===
x: i977 
y: i29 
=== Succesors ===
=== Usages ===
v527 v177 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i977 y: i29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap.size
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 277]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v999 
value: i173 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i978 
=== Usages ===
=== Predecessor ===
i977 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v999 value: i173 stateAfter: - lastLocationAccess: - #next: i978  <|@  <|@
f <@~|@floating>@ <|@
tid v1000 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i978 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i978 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.threshold
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 281]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1000 
=== Succesors ===
next: v180 
=== Usages ===
v177 
=== Predecessor ===
v527 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1000 #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid v177 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 284]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@cca0f98
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i978 
y: i173 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i978 y: i173  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@4855ff92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:662) [bci: 284]
stamp: void
trueSuccessorProbability: 0.00201782121299221
=== Inputs ===
condition: v177 
=== Succesors ===
trueSuccessor: v178 
falseSuccessor: v179 
=== Usages ===
=== Predecessor ===
i978 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v177 #trueSuccessor: v178 #falseSuccessor: v179  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = ADD (x: v83|DWORD, ~y: [v0|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = ADD (x: v85|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v86|DWORD, y: [v0|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.00201782121299221 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4566752570668625650
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 287]
stamp: void
=== Inputs ===
=== Succesors ===
next: a182 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a182  <|@  <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 288]
returnStamp: a [Ljava/util/HashMap$Node;
signature: [Ljdk.vm.ci.meta.JavaType;@30cd68bd
stamp: void
targetMethod: HotSpotMethod<HashMap.resize()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a182 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?714 <|@
d <@d|@=== Debug Properties ===
bci: 288
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 663
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i6 - - - - - - - 
=== Succesors ===
=== Usages ===
a182 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i6 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a182 <|@
result v87|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 288
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:663) [bci: 288]
polymorphic: false
stamp: a [Ljava/util/HashMap$Node;
targetMethod: Direct#HashMap.resize
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v531 
stateDuring: ?714 
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v531 stateDuring: ?714 #next: v227  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=afterNodeInsertion target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
stamp: void
trueSuccessorProbability: 0.9016325592090135
=== Inputs ===
condition: v924 
=== Succesors ===
trueSuccessor: v224 
falseSuccessor: v226 
=== Usages ===
=== Predecessor ===
a182 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v924 #trueSuccessor: v224 #falseSuccessor: v226  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:663) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:288] <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v6|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9016325592090135 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4565948929174241344
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=afterNodeInsertion target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
next: v265 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v265  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
stamp: void
=== Inputs ===
result: a9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a9 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4551381544091446564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@~|@floating>@ <|@
tid v1001 <|@
result [v6|DWORD * 8 + 728] <|@
d <@d|@=== Debug Properties ===
displacement: 728
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v960 
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v960  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v534 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1001 
=== Succesors ===
next: j536 
=== Usages ===
v1002 v537 
=== Predecessor ===
v226 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1001 #next: j536  <|@  <|@
f <@~|@floating>@ <|@
tid v1002 <|@
result [v88|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v534 
index: - 
=== Succesors ===
=== Usages ===
j536 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v534 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j536 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1002 
=== Succesors ===
next: v189 
=== Usages ===
v537 
=== Predecessor ===
v534 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1002 #next: v189  <|@  <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@4a8367f
stamp: void
targetMethod: HotSpotMethod<HashMap.afterNodeInsertion(boolean)>
=== Inputs ===
computedAddress: j536 
metaspaceMethod: v534 
arguments: a1 i6 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j536 metaspaceMethod: v534 arguments: a1 i6  <|@  <|@
tid ?716 <|@
d <@d|@=== Debug Properties ===
bci: 295
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 664
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
bci: 295
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
polymorphic: true
stamp: void
targetMethod: Indirect#HashMap.afterNodeInsertion
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v537 
stateDuring: ?716 
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
j536 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v537 stateDuring: ?716 #next: v264  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
stamp: void
=== Inputs ===
result: a9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a9 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOV [v6|DWORD * 8 + 728] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [v88|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v88|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v89|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:295] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4607074154634279276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 292]
stamp: void
=== Inputs ===
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v280  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=afterNodeInsertion target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
stamp: void
trueSuccessorProbability: 0.9016325592090135
=== Inputs ===
condition: v924 
=== Succesors ===
trueSuccessor: v278 
falseSuccessor: v279 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v924 #trueSuccessor: v278 #falseSuccessor: v279  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v6|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9016325592090135 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors 
    xhandlers
    flags 
    probability 4606198789163808955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap; target_method=afterNodeInsertion target_method_class=Ljava/util/HashMap; position=at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
stamp: void
=== Inputs ===
result: a9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a9 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors 
    xhandlers
    flags 
    probability 4591667344426927494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
stamp: void
=== Inputs ===
=== Succesors ===
next: v538 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid v1034 <|@
result [v6|DWORD * 8 + 728] <|@
d <@d|@=== Debug Properties ===
displacement: 728
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v960 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v960  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v538 <|@
result v90|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v1034 
=== Succesors ===
next: j540 
=== Usages ===
v1003 v541 
=== Predecessor ===
v279 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1034 #next: j540  <|@  <|@
f <@~|@floating>@ <|@
tid v1003 <|@
result [v90|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v538 
index: - 
=== Succesors ===
=== Usages ===
j540 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v538 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j540 <|@
result v91|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v1003 
=== Succesors ===
next: v277 
=== Usages ===
v541 
=== Predecessor ===
v538 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1003 #next: v277  <|@  <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@64546d18
stamp: void
targetMethod: HotSpotMethod<HashMap.afterNodeInsertion(boolean)>
=== Inputs ===
computedAddress: j540 
metaspaceMethod: v538 
arguments: a1 i6 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j540 metaspaceMethod: v538 arguments: a1 i6  <|@  <|@
tid ?717 <|@
d <@d|@=== Debug Properties ===
bci: 295
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 664
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
bci: 295
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
polymorphic: true
stamp: void
targetMethod: Indirect#HashMap.afterNodeInsertion
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v541 
stateDuring: ?717 
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
j540 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v541 stateDuring: ?717 #next: v281  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
stamp: void
=== Inputs ===
result: a9 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a9 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOV [v6|DWORD * 8 + 728] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOV [v90|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v90|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v91|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:295] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4576930991352715592
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 227]
stamp: void
=== Inputs ===
=== Succesors ===
next: v643 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v643  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:655) [bci: 236]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i15 
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i5 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:655) [bci: 236]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v157 
=== Succesors ===
trueSuccessor: v640 
falseSuccessor: v642 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v157 #trueSuccessor: v640 #falseSuccessor: v642  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 4576930991352715592
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:655) [bci: 236]
stamp: void
=== Inputs ===
=== Succesors ===
next: a979 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a979  <|@  <|@
f <@~|@floating>@ <|@
tid v997 <|@
result [v82|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a85 
index: - 
=== Succesors ===
=== Usages ===
a979 v520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a85 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a979 <|@
result v92|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.value
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 229]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v997 
=== Succesors ===
next: v520 
=== Usages ===
a517 
=== Predecessor ===
v640 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v997 #next: v520  <|@  <|@
f <@~|@floating>@ <|@
tid a519 <|@
result v93|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a4 
=== Succesors ===
=== Usages ===
v520 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$Node.value
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v997 
value: a519 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j913 
=== Usages ===
=== Predecessor ===
a979 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v997 value: a519 stateAfter: - lastLocationAccess: - #next: j913  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j913 <|@
result v82|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a85 
=== Succesors ===
next: v917 
=== Usages ===
j914 
=== Predecessor ===
v520 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a85 #next: v917  <|@  <|@
f <@~|@floating>@ <|@
tid j914 <|@
result v94|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$66/1929392697@1aef7eb1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j913 
y: i834 
=== Succesors ===
=== Usages ===
v1020 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j913 y: i834  <|@  <|@
f <@~|@floating>@ <|@
tid v1020 <|@
result [v94|QWORD[*] + v9|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j914 
index: j838 
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j914 index: j838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap.putVal(HashMap.java:656) [bci: 247]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1020 
value: i840 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v164 
=== Usages ===
=== Predecessor ===
j913 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1020 value: i840 stateAfter: - lastLocationAccess: - #next: v164  <|@  <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:657) [bci: 253]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@2a850ffa
stamp: void
targetMethod: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)>
=== Inputs ===
arguments: a1 a85 
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a85  <|@  <|@
f <@~|@floating>@ <|@
tid a517 <|@
result v95|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:654) [bci: 229]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a979 
=== Succesors ===
=== Usages ===
?715 v166 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a979  <|@  <|@
tid ?715 <|@
d <@d|@=== Debug Properties ===
bci: 253
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: true
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 657
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - a517 
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - a517  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
bci: 253
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:657) [bci: 253]
polymorphic: false
stamp: void
targetMethod: Direct#HashMap.afterNodeAccess
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v521 
stateDuring: ?715 
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v521 stateDuring: ?715 #next: v166  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:658) [bci: 258]
stamp: void
=== Inputs ===
result: a517 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a517 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[.] = MOV [v82|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD[.] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v82|QWORD[.] + 20], y: v93|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[*] = SHR v82|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v94|QWORD[*] + v9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:657) [bci: 253]
locals: - - - - - - - - - - - - v95|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:253] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v95|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:655) [bci: 236]
stamp: void
=== Inputs ===
=== Succesors ===
next: v641 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v641  <|@  <|@
tid ?148 <|@
d <@d|@=== Debug Properties ===
bci: 222
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 653
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - a4 i5 i6 - - - - a85 - - 
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a4 i5 i6 - - - - a85 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 518
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:655) [bci: 236]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?148 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v642 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?148  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -132627 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v82|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:222] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582467859181555107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:650) [bci: 212]
stamp: void
=== Inputs ===
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?91 
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?91 #next: v131  <|@  <|@
f <@*|@fixed>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
stamp: void
=== Inputs ===
loopBegin: v88 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v88  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v51|QWORD[.] v59|QWORD[.] - - - - v60|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 thread: r15 state [bci:134] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.], v78|DWORD] destination: B76 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v595  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashMap.putVal(int, Object, Object, boolean, boolean)>
duringCall: false
localsSize: 13
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 628
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 i5 i6 - - - - - - - 
=== Succesors ===
=== Usages ===
v595 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 i5 i6 - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 419
nodeSourcePosition: at java.util.HashMap.putVal(HashMap.java:628) [bci: 16]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -107291 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:628) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@71d61297 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[4285321216|0xff6cd000] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|DWORD[.], y: v7|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.05975755506231859 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" "B77" 
    xhandlers
    flags 
    probability 4606644170594594948
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v7|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = AND (x: v1|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4606644170594594948
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[.] = MOV [v20|QWORD[.] + v19|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|DWORD[.], y: v21|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.874487083904821 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4605581207852127653
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v6|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9275371750235902 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605044549017670954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|DWORD, v20|QWORD[.], v17|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" "B11" 
    successors "B13" "B19" 
    xhandlers
    flags 
    probability 4605481132514191399
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD, v23|QWORD[.], v24|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOV [v23|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v25|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4605481132514191399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: [v23|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4605481132514191399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v26|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605408073384502249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v26|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B66" 
    xhandlers
    flags 
    probability 4605481132514191399
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE v29|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [v99|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*]], y: v31|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v29|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 16], y: v32|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[.] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 20], y: v33|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[.] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + v22|DWORD * 4 + 16], y: v34|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = LEA [v23|QWORD[.] + v22|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[*] = SHR v36|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v35|QWORD[*] + v9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B24" "B65" "B17" 
    successors "B67" "B70" 
    xhandlers
    flags 
    probability 4607092147400460187
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = ADD (x: v83|DWORD, ~y: [v0|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = ADD (x: v85|DWORD, ~y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v86|DWORD, y: [v0|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.00201782121299221 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4607074154634279276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v6|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9016325592090135 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors 
    xhandlers
    flags 
    probability 4606198789163808955
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4593168122602903289
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|DWORD[.], v20|QWORD[.], v17|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B6" "B28" 
    successors "B30" "B39" 
    xhandlers
    flags 
    probability 4593690099667786884
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD[.], v51|QWORD[.], v52|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v51|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction v53|DWORD = MOV [v50|DWORD[.] * 8 + 8] size: DWORD state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: [v50|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07477440711014371 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4593032307808989876
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v53|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.388845855926137E-4 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" 
    xhandlers
    flags 
    probability 4593029472061022177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B37" "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593132784791479932
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.], int[0|0x0]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B76" "B62" 
    successors "B45" "B56" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594272391294824813
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD[.], v60|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v51|QWORD[.] v59|QWORD[.] - - - - v60|DWORD 
>@ <|@ instruction v61|DWORD[.] = MOV [v59|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v61|DWORD[.], y: v61|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8149025908817031 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B57" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583215668193004135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = INC v60|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: [v61|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.098936862660013 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582467859181555107
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v51|QWORD[.] v59|QWORD[.] - - - - v60|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 thread: r15 state [bci:134] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.], v78|DWORD] destination: B76 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568128894617904672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = MOV [v61|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = UNCOMPRESSPOINTER (input: v79|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3706140350877193 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565173390838797076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565173390838797076
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v80|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:648) [bci: 203]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v51|QWORD[.] - - - v62|QWORD[.] - v60|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:203] <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v81|DWORD, y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3205574912891986 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4557967183205137110
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.], v78|DWORD] destination: B62 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B52" 
    xhandlers
    flags 
    probability 4592983550975598656
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v6|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7054909305993691 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4590533491649061219
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v63|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v64|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4590474800939202256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v63|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4590533491649061219
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE v66|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV [v98|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v66|QWORD[*]], y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v66|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v66|QWORD[*] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v66|QWORD[*] + 16], y: v69|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[.] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v66|QWORD[*] + 20], y: v70|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v66|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[.] = COMPRESSPOINTER (input: v67|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v59|QWORD[.] + 24], y: v71|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[*] = SHR v59|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v72|QWORD[*] + v9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMP v60|DWORD y: 7 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9993591955439444 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B64" 
    xhandlers
    flags 
    probability 4590529730722220550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B50 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B31" "B41" "B58" "B53" "B55" "B63" "B38" "B50" 
    successors "B65" "B73" 
    xhandlers
    flags 
    probability 4593690099667786884
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v82|QWORD[.], y: v82|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9201505395846559 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4592986408221210079
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors 
    xhandlers
    flags 
    probability 4591667344426927494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOV [v6|DWORD * 8 + 728] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = MOV [v90|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v90|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v91|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:295] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4588772792322553789
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:629) [bci: 23]
stack: v12|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction v13|DWORD = MOV [v12|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = DEC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = AND (x: v1|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4588772792322553789
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v12|QWORD[.] + v15|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD[.], y: v16|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.874487083904821 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4587691878693024671
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v6|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9275371750235902 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587146156980121546
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD, v12|QWORD[.], v13|DWORD] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4588747362387101608
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|DWORD, v20|QWORD[.], v17|DWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B5" "B21" 
    successors "B23" "B26" 
    xhandlers
    flags 
    probability 4589230552195270079
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|DWORD, v40|QWORD[.], v41|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v40|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4589230552195270079
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|DWORD, y: [v40|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B66" 
    xhandlers
    flags 
    probability 4589230552195270079
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV [v6|DWORD * 8 + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [v42|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v42|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stack: v40|QWORD[.] v39|DWORD 
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:56] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[.] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD[.] + v39|DWORD * 4 + 16], y: v45|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = LEA [v40|QWORD[.] + v39|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = SHR v47|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v46|QWORD[*] + v9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4585060939688869307
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOV [v6|DWORD * 8 + 680] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [v73|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v73|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v74|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
stack: v59|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD - v3|QWORD[.] v4|DWORD v5|DWORD v51|QWORD[.] - - - v62|QWORD[.] - v60|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:152] <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[.] = COMPRESSPOINTER (input: v75|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v59|QWORD[.] + 24], y: v76|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[*] = SHR v59|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v77|QWORD[*] + v9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMP v60|DWORD y: 7 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9993591955439444 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B64" 
    xhandlers
    flags 
    probability 4585057799671001215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B53 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4576930991352715592
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 4576930991352715592
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[.] = MOV [v82|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD[.] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v82|QWORD[.] + 20], y: v93|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[*] = SHR v82|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v94|QWORD[*] + v9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = UNCOMPRESSPOINTER (input: v92|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:657) [bci: 253]
locals: - - - - - - - - - - - - v95|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:253] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v95|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4576563794650477213
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[.] = MOV [v50|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5288053365676167 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B64" 
    xhandlers
    flags 
    probability 4572371878723892198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B31 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575829406081159033
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v101|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v23|QWORD[.] - v24|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10c2d3aa0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B29" 
    xhandlers
    flags 
    probability 4575297331189915888
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD[.], v12|QWORD[.], v13|DWORD] destination: B6 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4571748511322321236
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|QWORD[.], y: v2|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B38" 
    xhandlers
    flags 
    probability 4571748511322321236
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:635) [bci: 91]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v51|QWORD[.] v54|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:91] <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v57|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.32432432432432434 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B64" 
    xhandlers
    flags 
    probability 4569036272754202032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B38 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4570877969932762454
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD, v12|QWORD[.], v13|DWORD] destination: B5 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4566752570668625650
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:663) [bci: 288]
locals: v0|QWORD[.] - - - - v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:288] <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v6|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9016325592090135 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4565948929174241344
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4564257079117715953
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v53|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 3.388845855926137E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B43" 
    xhandlers
    flags 
    probability 4564254837648238250
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4562759410872014249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B64" 
    xhandlers
    flags 
    probability 4562007975758230104
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B58 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4560651634133518715
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v100|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v51|QWORD[.] v59|QWORD[.] - - - - v60|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10c2d3aa0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:134] <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD[.]] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4551381544091446564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOV [v6|DWORD * 8 + 728] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = MOV [v88|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v88|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v89|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:295] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B55" 
    xhandlers
    flags 
    probability 4542827202931779927
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B51" 
    successors "B64" 
    xhandlers
    flags 
    probability 4545087302622768148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:644) [bci: 169]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v62|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:169] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B55 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4540932436599936300
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" "B40" 
    successors "B64" 
    xhandlers
    flags 
    probability 4541004163623222783
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:638) [bci: 123]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:123] <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD[.]] destination: B41 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4537051981728570786
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B41" 
    xhandlers
    flags 
    probability 4512693756488201411
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -132627 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
locals: v0|QWORD[.] - - v3|QWORD[.] v4|DWORD v5|DWORD - - - - v82|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:222] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -103451 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:629) [bci: 23]
stack: v12|QWORD[.] 
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -107291 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:628) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-111387|0xfffffffffffe4ce5], Object[null]] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD, v38|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v23|QWORD[.] - v24|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -130323 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v51|QWORD[.] v59|QWORD[.] - - - - v60|DWORD 
>@ <|@ instruction DEOPT info [bci:134] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1613118162] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-116796|0xfffffffffffe37c4], v96|QWORD[.]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|DWORD, v49|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v49|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v40|QWORD[.] - v41|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1613118162] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-110396|0xfffffffffffe50c4], v97|QWORD[.]] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-117787|0xfffffffffffe33e5], Object[null]] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -122899 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|DWORD v5|DWORD v51|QWORD[.] - v52|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #20         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #21         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #38         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #33         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #34         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #35         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #50         // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #50         // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #39         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #36         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #38         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #36         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #40         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #33         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #34         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #35         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #32         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #32         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #41         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #42         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #42         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #30         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #30         // size:int
   280: aload_0       
   281: getfield      #16         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #21         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #43         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@71d61297 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:56|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction stack:64|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   20  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   24  <|@ instruction rbx|QWORD = MOVE input: long[4285321216|0xff6cd000] <|@ <|@
      nr   26  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.05975755506231859 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" "B77" 
    xhandlers
    flags 
    probability 4606644170594594948
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction rax|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  136  <|@ instruction rbp|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  138  <|@ instruction rbp|DWORD = AND (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4606644170594594948
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction r13|DWORD[.] = MOV [r11|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  150  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 0.874487083904821 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B21" 
    xhandlers
    flags 
    probability 4605581207852127653
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction BRANCH trueDestinationProbability: 0.9275371750235902 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605044549017670954
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction r14|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction r13|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" "B11" 
    successors "B13" "B19" 
    xhandlers
    flags 
    probability 4605481132514191399
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  172  <|@ instruction r11|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  176  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4605481132514191399
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction CMP (x: r13|DWORD, y: [r14|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4605481132514191399
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction r11|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  188  <|@ instruction rbp|QWORD = LEA [r11|QWORD + 32] size: QWORD <|@ <|@
      nr  190  <|@ instruction CMP (x: rbp|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605408073384502249
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  226  <|@ instruction AMD64PREFETCH ~[r11|QWORD + 224] instr: 0 <|@ <|@
      nr  228  <|@ instruction r11|QWORD[*] = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B66" 
    xhandlers
    flags 
    probability 4605481132514191399
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  234  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  236  <|@ instruction rax|QWORD[.] = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction r9|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  240  <|@ instruction MOV (x: [r11|QWORD[*]], y: r9|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ instruction MOV [r11|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  244  <|@ instruction MOV (x: [r11|QWORD[*] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction MOV (x: [r11|QWORD[*] + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction MOV (x: [r11|QWORD[*] + 20], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [r11|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  256  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  258  <|@ instruction MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  264  <|@ instruction MOVB (x: [rdx|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B17 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B24" "B65" "B17" 
    successors "B67" "B70" 
    xhandlers
    flags 
    probability 4607092147400460187
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  846  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  848  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  850  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  854  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  856  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD <|@ <|@
      nr  858  <|@ instruction CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr  860  <|@ instruction BRANCH trueDestinationProbability: 0.00201782121299221 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4607074154634279276
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  900  <|@ instruction CMP stack:68|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr  902  <|@ instruction BRANCH trueDestinationProbability: 0.9016325592090135 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors 
    xhandlers
    flags 
    probability 4606198789163808955
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  906  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  908  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4593168122602903289
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction stack:80|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B6" "B28" 
    successors "B30" "B39" 
    xhandlers
    flags 
    probability 4593690099667786884
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  420  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r8:0, r13:0, stack:32, stack:56, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD stack:80|QWORD[.] - rax|DWORD - - - - 
>@ <|@ instruction rbp|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD state [bci:29] <|@ <|@
      nr  422  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction CMP (x: rdx|DWORD, y: [r13|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  426  <|@ instruction BRANCH trueDestinationProbability: 0.07477440711014371 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4593032307808989876
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  522  <|@ instruction BRANCH trueDestinationProbability: 3.388845855926137E-4 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" 
    xhandlers
    flags 
    probability 4593029472061022177
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B37" "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593132784791479932
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  558  <|@ instruction r10|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B76" "B62" 
    successors "B45" "B56" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594272391294824813
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  564  <|@ st <@st|@reference-map: [rcx:0, r10:0, stack:32, stack:56, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: stack:32|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:56|QWORD[.] stack:60|DWORD stack:64|DWORD stack:80|QWORD[.] r10|QWORD[.] - - - - r11|DWORD 
>@ <|@ instruction r13|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  566  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  568  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  570  <|@ instruction BRANCH trueDestinationProbability: 0.8149025908817031 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B57" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583215668193004135
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction r10|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  756  <|@ instruction CMP (x: rdx|DWORD, y: [r13|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  758  <|@ instruction BRANCH trueDestinationProbability: 0.098936862660013 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582467859181555107
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  976  <|@ st <@st|@reference-map: [rcx:0, r14:0, stack:16, stack:32, stack:56, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: stack:32|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:56|QWORD[.] stack:60|DWORD stack:64|DWORD stack:80|QWORD[.] stack:96|QWORD[.] - - - - r11|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 thread: r15 state [bci:134] <|@ <|@
      nr  978  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction r10|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  982  <|@ instruction JUMP ~[] destination: B76 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568128894617904672
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction r13|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  764  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  766  <|@ instruction CMP (x: r13|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  768  <|@ instruction BRANCH trueDestinationProbability: 0.3706140350877193 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565173390838797076
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  778  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565173390838797076
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction stack:100|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:56, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 203]
locals: stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|QWORD[.] stack:60|DWORD stack:64|DWORD stack:80|QWORD[.] - - - stack:88|QWORD[.] - stack:72|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:203] <|@ <|@
      nr  810  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction BRANCH trueDestinationProbability: 0.3205574912891986 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4557967183205137110
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  816  <|@ instruction r11|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r10|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B62 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B52" 
    xhandlers
    flags 
    probability 4592983550975598656
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction CMP stack:68|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr  582  <|@ instruction BRANCH trueDestinationProbability: 0.7054909305993691 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4590533491649061219
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  588  <|@ instruction r10|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr  590  <|@ instruction CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  592  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4590474800939202256
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr  624  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction rbx|QWORD = MOVE input: long[4285321216|0xff6cd000] <|@ <|@
      nr  632  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4590533491649061219
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  642  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  644  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction r11|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r11|QWORD) size: QWORD <|@ <|@
      nr  650  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  652  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  654  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  656  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  658  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  660  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  662  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  664  <|@ instruction r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  668  <|@ instruction r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  670  <|@ instruction MOVB (x: [r10|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  672  <|@ instruction CMP stack:72|DWORD y: 7 size: DWORD <|@ <|@
      nr  674  <|@ instruction BRANCH trueDestinationProbability: 0.9993591955439444 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B64" 
    xhandlers
    flags 
    probability 4590529730722220550
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B50 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B31" "B41" "B58" "B53" "B55" "B63" "B38" "B50" 
    successors "B65" "B73" 
    xhandlers
    flags 
    probability 4593690099667786884
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  834  <|@ instruction TEST (x: r14|QWORD[.], y: r14|QWORD[.]) size: QWORD <|@ <|@
      nr  836  <|@ instruction BRANCH trueDestinationProbability: 0.9201505395846559 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4592986408221210079
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  840  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors 
    xhandlers
    flags 
    probability 4591667344426927494
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  912  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  914  <|@ instruction rbx|QWORD = MOV [r10|DWORD * 8 + 728] size: QWORD <|@ <|@
      nr  916  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  918  <|@ instruction rdx|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  920  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:295] <|@ <|@
      nr  922  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  924  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4588772792322553789
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [stack:56, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
locals: stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|QWORD[.] stack:60|DWORD stack:64|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:20] <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rax:0, stack:56, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:629) [bci: 23]
stack: rax|QWORD[.] 
locals: stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|QWORD[.] stack:60|DWORD stack:64|DWORD - - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   38  <|@ instruction rsi|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction rdx|DWORD = AND (x: stack:36|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4588772792322553789
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r13|DWORD[.] = MOV [rax|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.874487083904821 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4587691878693024671
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction CMP stack:68|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.9275371750235902 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587146156980121546
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = MOVE input: long[4285321216|0xff6cd000] <|@ <|@
      nr   70  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4588747362387101608
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B5" "B21" 
    successors "B23" "B26" 
    xhandlers
    flags 
    probability 4589230552195270079
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  304  <|@ instruction CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4589230552195270079
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction CMP (x: rbp|DWORD, y: [r11|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B66" 
    xhandlers
    flags 
    probability 4589230552195270079
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction stack:88|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction stack:72|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction rax|QWORD = MOV [r10|DWORD * 8 + 680] size: QWORD <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction rax|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  340  <|@ st <@st|@reference-map: [stack:24, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stack: stack:88|QWORD[.] stack:72|DWORD 
locals: stack:32|QWORD[.] - - - - stack:64|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:56] <|@ <|@
      nr  342  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ instruction rbp|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [r11|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = LEA [r11|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  354  <|@ instruction rbx|QWORD = MOVE input: long[4285321216|0xff6cd000] <|@ <|@
      nr  356  <|@ instruction MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B24 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4585060939688869307
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction rax|QWORD = MOV [r10|DWORD * 8 + 680] size: QWORD <|@ <|@
      nr  692  <|@ instruction rdi|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  694  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  704  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rax|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  708  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:56, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
stack: stack:96|QWORD[.] 
locals: stack:32|QWORD[.] stack:36|DWORD - stack:56|QWORD[.] stack:60|DWORD stack:64|DWORD stack:80|QWORD[.] - - - stack:88|QWORD[.] - stack:72|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:152] <|@ <|@
      nr  710  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  712  <|@ instruction r13|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r13|QWORD[.] + 24], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  716  <|@ instruction r10|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  718  <|@ instruction rbx|QWORD = MOVE input: long[4285321216|0xff6cd000] <|@ <|@
      nr  720  <|@ instruction MOVB (x: [r10|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  722  <|@ instruction CMP stack:72|DWORD y: 7 size: DWORD <|@ <|@
      nr  724  <|@ instruction BRANCH trueDestinationProbability: 0.9993591955439444 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B64" 
    xhandlers
    flags 
    probability 4585057799671001215
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction JUMP ~[] destination: B53 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4576930991352715592
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  928  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  930  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  934  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 4576930991352715592
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  938  <|@ instruction rbx|QWORD = MOVE input: long[4285321216|0xff6cd000] <|@ <|@
      nr  940  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction rdx|DWORD[.] = MOV [r14|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  944  <|@ instruction r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  946  <|@ instruction MOV (x: [r14|QWORD[.] + 20], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  948  <|@ instruction r10|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  950  <|@ instruction MOVB (x: [r10|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  952  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  954  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rdx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:657) [bci: 253]
locals: - - - - - - - - - - - - stack:88|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:253] <|@ <|@
      nr  960  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4576563794650477213
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction rsi|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  432  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  434  <|@ instruction CMP (x: r13|QWORD[.], y: stack:48|QWORD[.]) size: QWORD <|@ <|@
      nr  436  <|@ instruction BRANCH trueDestinationProbability: 0.5288053365676167 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B64" 
    xhandlers
    flags 
    probability 4572371878723892198
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B31 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575829406081159033
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  198  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  200  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  202  <|@ st <@st|@reference-map: [r14:0, stack:56, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|QWORD[.] stack:60|DWORD stack:64|DWORD r14|QWORD[.] - stack:72|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10c2d3aa0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:29] <|@ <|@
      nr  204  <|@ instruction r11|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction rbx|QWORD = MOVE input: long[4285321216|0xff6cd000] <|@ <|@
      nr  208  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B29" 
    xhandlers
    flags 
    probability 4575297331189915888
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD = MOVE input: long[4285321216|0xff6cd000] <|@ <|@
      nr  102  <|@ instruction rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B6 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4571748511322321236
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B38" 
    xhandlers
    flags 
    probability 4571748511322321236
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction stack:72|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:56, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 91]
locals: stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|QWORD[.] stack:60|DWORD stack:64|DWORD stack:80|QWORD[.] stack:88|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:91] <|@ <|@
      nr  474  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  476  <|@ instruction BRANCH trueDestinationProbability: 0.32432432432432434 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B64" 
    xhandlers
    flags 
    probability 4569036272754202032
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction JUMP ~[] destination: B38 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4570877969932762454
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rbp|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B5 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4566752570668625650
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  864  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ st <@st|@reference-map: [stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 288]
locals: stack:32|QWORD[.] - - - - stack:64|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:288] <|@ <|@
      nr  870  <|@ instruction CMP stack:68|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr  872  <|@ instruction BRANCH trueDestinationProbability: 0.9016325592090135 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4565948929174241344
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  878  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4564257079117715953
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction rbp|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  484  <|@ instruction BRANCH trueDestinationProbability: 3.388845855926137E-4 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B43" 
    xhandlers
    flags 
    probability 4564254837648238250
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction rbx|QWORD = MOVE input: long[4285321216|0xff6cd000] <|@ <|@
      nr  496  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  508  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4562759410872014249
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  828  <|@ instruction r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B64" 
    xhandlers
    flags 
    probability 4562007975758230104
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B58 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4560651634133518715
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction r13|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  600  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  602  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  604  <|@ st <@st|@reference-map: [r13:0, stack:24, stack:32, stack:56, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|QWORD[.] stack:60|DWORD stack:64|DWORD stack:80|QWORD[.] r13|QWORD[.] - - - - stack:72|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10c2d3aa0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:134] <|@ <|@
      nr  606  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction rbx|QWORD = MOVE input: long[4285321216|0xff6cd000] <|@ <|@
      nr  612  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4551381544091446564
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  882  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction rbx|QWORD = MOV [r10|DWORD * 8 + 728] size: QWORD <|@ <|@
      nr  886  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  888  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rdx|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:295] <|@ <|@
      nr  894  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  896  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B55" 
    xhandlers
    flags 
    probability 4542827202931779927
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B51" 
    successors "B64" 
    xhandlers
    flags 
    probability 4545087302622768148
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ st <@st|@reference-map: [stack:24, stack:56, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 169]
locals: stack:32|QWORD[.] - - stack:56|QWORD[.] stack:60|DWORD stack:64|DWORD - - - - stack:88|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:169] <|@ <|@
      nr  746  <|@ instruction r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~[] destination: B55 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4540932436599936300
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B36" "B40" 
    successors "B64" 
    xhandlers
    flags 
    probability 4541004163623222783
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  540  <|@ instruction r9|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rdi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ st <@st|@reference-map: [stack:56, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:638) [bci: 123]
locals: stack:32|QWORD[.] - - stack:56|QWORD[.] stack:60|DWORD stack:64|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:123] <|@ <|@
      nr  546  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B41 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4537051981728570786
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B41" 
    xhandlers
    flags 
    probability 4512693756488201411
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B36 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  966  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction MOV [r15|QWORD + 668] y: -132627 size: DWORD <|@ <|@
      nr  970  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  972  <|@ st <@st|@reference-map: [r8:0, r14:0, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
locals: stack:32|QWORD[.] - - r8|QWORD[.] r9|DWORD stack:64|DWORD - - - - r14|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:222] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction MOV [r15|QWORD + 668] y: -103451 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@reference-map: [rax:0, r8:0, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:629) [bci: 23]
stack: rax|QWORD[.] 
locals: stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] r8|QWORD[.] r9|DWORD stack:64|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  986  <|@ instruction MOV [r15|QWORD + 668] y: -107291 size: DWORD <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  990  <|@ st <@st|@reference-map: [r8:0, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:628) [bci: 0]
locals: stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] r8|QWORD[.] r9|DWORD stack:64|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  272  <|@ instruction r10|DWORD = MOVE input: int[-111387|0xfffffffffffe4ce5] <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  296  <|@ st <@st|@reference-map: [r8:0, r14:0, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] r8|QWORD[.] r9|DWORD stack:64|DWORD r14|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  782  <|@ instruction r13|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction r10|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction MOV [r15|QWORD + 668] y: -130323 size: DWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  794  <|@ st <@st|@reference-map: [r8:0, r10:0, r13:0, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] r8|QWORD[.] r9|DWORD stack:64|DWORD r10|QWORD[.] r13|QWORD[.] - - - - r11|DWORD 
>@ <|@ instruction DEOPT info [bci:134] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1613118162] <|@ <|@
      nr  390  <|@ instruction rcx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction r10|DWORD = MOVE input: int[-116796|0xfffffffffffe37c4] <|@ <|@
      nr  394  <|@ instruction rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 680], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r8:0, r11:0]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: rsi|QWORD[.] rdx|DWORD rbx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD r11|QWORD[.] - rax|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1613118162] <|@ <|@
      nr  282  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r10|DWORD = MOVE input: int[-110396|0xfffffffffffe50c4] <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  366  <|@ instruction r10|DWORD = MOVE input: int[-117787|0xfffffffffffe33e5] <|@ <|@
      nr  368  <|@ instruction rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  378  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction MOV [r15|QWORD + 668] y: -122899 size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@reference-map: [r8:0, stack:32, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] r8|QWORD[.] r9|DWORD stack:64|DWORD stack:80|QWORD[.] - rax|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #20         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #21         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #38         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #33         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #34         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #35         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #50         // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #50         // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #39         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #36         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #38         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #36         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #40         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #33         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #34         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #35         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #32         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #32         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #41         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #42         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #42         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #30         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #30         // size:int
   280: aload_0       
   281: getfield      #16         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #21         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #43         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@71d61297 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction stack:56|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ instruction stack:64|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   18  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   20  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   24  <|@ instruction rbx|QWORD = MOVE input: long[4285321216|0xff6cd000] <|@ <|@
      nr   26  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.05975755506231859 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" "B77" 
    xhandlers
    flags 
    probability 4606644170594594948
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction rax|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  136  <|@ instruction rbp|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr  138  <|@ instruction rbp|DWORD = AND (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B28" 
    xhandlers
    flags 
    probability 4606644170594594948
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction r13|DWORD[.] = MOV [r11|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  150  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 0.874487083904821 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B22" 
    xhandlers
    flags 
    probability 4605581207852127653
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction BRANCH trueDestinationProbability: 0.9275371750235902 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4605044549017670954
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction r14|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction r13|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B4" "B11" 
    successors "B13" "B19" 
    xhandlers
    flags 
    probability 4605481132514191399
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  172  <|@ instruction r11|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  174  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  176  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4605481132514191399
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction CMP (x: r13|DWORD, y: [r14|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  182  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4605481132514191399
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction r11|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  188  <|@ instruction rbp|QWORD = LEA [r11|QWORD + 32] size: QWORD <|@ <|@
      nr  190  <|@ instruction CMP (x: rbp|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605408073384502249
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  226  <|@ instruction AMD64PREFETCH ~[r11|QWORD + 224] instr: 0 <|@ <|@
      nr  228  <|@ instruction r11|QWORD[*] = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B66" 
    xhandlers
    flags 
    probability 4605481132514191399
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  234  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  236  <|@ instruction rax|QWORD[.] = MOVE r11|QWORD[*] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction r9|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  240  <|@ instruction MOV (x: [r11|QWORD[*]], y: r9|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ instruction MOV [r11|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  244  <|@ instruction MOV (x: [r11|QWORD[*] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  246  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction MOV (x: [r11|QWORD[*] + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  252  <|@ instruction MOV (x: [r11|QWORD[*] + 20], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [r11|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  256  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  258  <|@ instruction MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  260  <|@ instruction rdx|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  264  <|@ instruction MOVB (x: [rdx|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B17 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B24" "B65" "B17" 
    successors "B67" "B70" 
    xhandlers
    flags 
    probability 4607092147400460187
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  846  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  848  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  850  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  854  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  856  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD <|@ <|@
      nr  858  <|@ instruction CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr  860  <|@ instruction BRANCH trueDestinationProbability: 0.00201782121299221 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4607074154634279276
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  900  <|@ instruction CMP stack:68|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr  902  <|@ instruction BRANCH trueDestinationProbability: 0.9016325592090135 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors 
    xhandlers
    flags 
    probability 4606198789163808955
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  906  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  908  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B29" 
    xhandlers
    flags 
    probability 4593168122602903289
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction stack:80|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B6" "B28" 
    successors "B30" "B39" 
    xhandlers
    flags 
    probability 4593690099667786884
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  420  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r8:0, r13:0, stack:32, stack:56, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: rsi|QWORD[.] rdx|DWORD rcx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD stack:80|QWORD[.] - rax|DWORD - - - - 
>@ <|@ instruction rbp|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD state [bci:29] <|@ <|@
      nr  422  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  424  <|@ instruction CMP (x: rdx|DWORD, y: [r13|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  426  <|@ instruction BRANCH trueDestinationProbability: 0.07477440711014371 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4593032307808989876
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  522  <|@ instruction BRANCH trueDestinationProbability: 3.388845855926137E-4 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4593132784791479932
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  558  <|@ instruction r10|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B76" "B62" 
    successors "B45" "B56" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594272391294824813
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  564  <|@ st <@st|@reference-map: [rcx:0, r10:0, stack:32, stack:56, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: stack:32|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:56|QWORD[.] stack:60|DWORD stack:64|DWORD stack:80|QWORD[.] r10|QWORD[.] - - - - r11|DWORD 
>@ <|@ instruction r13|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD state [bci:134] <|@ <|@
      nr  566  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  568  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  570  <|@ instruction BRANCH trueDestinationProbability: 0.8149025908817031 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B57" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583215668193004135
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction r10|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  756  <|@ instruction CMP (x: rdx|DWORD, y: [r13|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  758  <|@ instruction BRANCH trueDestinationProbability: 0.098936862660013 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4582467859181555107
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  976  <|@ st <@st|@reference-map: [rcx:0, r14:0, stack:16, stack:32, stack:56, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: stack:32|QWORD[.] rdx|DWORD rcx|QWORD[.] stack:56|QWORD[.] stack:60|DWORD stack:64|DWORD stack:80|QWORD[.] stack:96|QWORD[.] - - - - r11|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 thread: r15 state [bci:134] <|@ <|@
      nr  978  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction r10|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  982  <|@ instruction JUMP ~[] destination: B76 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B64" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4568128894617904672
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction r13|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  764  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  766  <|@ instruction CMP (x: r13|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  768  <|@ instruction BRANCH trueDestinationProbability: 0.3706140350877193 condition: = trueDestination: B57 -> B64 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565173390838797076
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  778  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4565173390838797076
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction stack:100|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:56, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:648) [bci: 203]
locals: stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|QWORD[.] stack:60|DWORD stack:64|DWORD stack:80|QWORD[.] - - - stack:88|QWORD[.] - stack:72|DWORD 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:203] <|@ <|@
      nr  810  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  812  <|@ instruction BRANCH trueDestinationProbability: 0.3205574912891986 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4557967183205137110
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  816  <|@ instruction r11|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r10|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B62 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B52" 
    xhandlers
    flags 
    probability 4592983550975598656
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction CMP stack:68|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr  582  <|@ instruction BRANCH trueDestinationProbability: 0.7054909305993691 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4590533491649061219
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  588  <|@ instruction r10|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr  590  <|@ instruction CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  592  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4590474800939202256
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  622  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr  624  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B55" 
    xhandlers
    flags 
    probability 4590533491649061219
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  630  <|@ instruction rbx|QWORD = MOVE input: long[4285321216|0xff6cd000] <|@ <|@
      nr  632  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>} <|@ <|@
      nr  644  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction r11|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr  648  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r11|QWORD) size: QWORD <|@ <|@
      nr  650  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  652  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  654  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  656  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  658  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  660  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  662  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  664  <|@ instruction r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  668  <|@ instruction r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  670  <|@ instruction MOVB (x: [r10|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  672  <|@ instruction CMP stack:72|DWORD y: 7 size: DWORD <|@ <|@
      nr  674  <|@ instruction BRANCH trueDestinationProbability: 0.9993591955439444 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B64" 
    xhandlers
    flags 
    probability 4590529730722220550
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B50 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B30" "B41" "B57" "B53" "B55" "B63" "B38" "B50" 
    successors "B65" "B73" 
    xhandlers
    flags 
    probability 4593690099667786884
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  834  <|@ instruction TEST (x: r14|QWORD[.], y: r14|QWORD[.]) size: QWORD <|@ <|@
      nr  836  <|@ instruction BRANCH trueDestinationProbability: 0.9201505395846559 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4592986408221210079
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  840  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors 
    xhandlers
    flags 
    probability 4591667344426927494
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  912  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  914  <|@ instruction rbx|QWORD = MOV [r10|DWORD * 8 + 728] size: QWORD <|@ <|@
      nr  916  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  918  <|@ instruction rdx|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  920  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:295] <|@ <|@
      nr  922  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  924  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4588772792322553789
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [stack:56, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:629) [bci: 20]
locals: stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|QWORD[.] stack:60|DWORD stack:64|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:20] <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rax:0, stack:56, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:629) [bci: 23]
stack: rax|QWORD[.] 
locals: stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|QWORD[.] stack:60|DWORD stack:64|DWORD - - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23] <|@ <|@
      nr   38  <|@ instruction rsi|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   40  <|@ instruction rdx|DWORD = AND (x: stack:36|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4588772792322553789
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r13|DWORD[.] = MOV [rax|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.874487083904821 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4587691878693024671
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction CMP stack:68|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.9275371750235902 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587146156980121546
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = MOVE input: long[4285321216|0xff6cd000] <|@ <|@
      nr   70  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B4 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B23" "B26" 
    xhandlers
    flags 
    probability 4589230552195270079
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  304  <|@ instruction CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed} <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4589230552195270079
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction CMP (x: rbp|DWORD, y: [r11|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  312  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B66" 
    xhandlers
    flags 
    probability 4589230552195270079
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction stack:88|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction stack:72|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction rax|QWORD = MOV [r10|DWORD * 8 + 680] size: QWORD <|@ <|@
      nr  324  <|@ instruction rdi|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  326  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction rax|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  340  <|@ st <@st|@reference-map: [stack:24, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:631) [bci: 56]
stack: stack:88|QWORD[.] stack:72|DWORD 
locals: stack:32|QWORD[.] - - - - stack:64|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:56] <|@ <|@
      nr  342  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  344  <|@ instruction rbp|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [r11|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD[.] = LEA [r11|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  354  <|@ instruction rbx|QWORD = MOVE input: long[4285321216|0xff6cd000] <|@ <|@
      nr  356  <|@ instruction MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B24 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B53" "B55" 
    xhandlers
    flags 
    probability 4585060939688869307
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction rax|QWORD = MOV [r10|DWORD * 8 + 680] size: QWORD <|@ <|@
      nr  692  <|@ instruction rdi|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr  694  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  700  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  704  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  706  <|@ instruction rax|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  708  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:56, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:642) [bci: 152]
stack: stack:96|QWORD[.] 
locals: stack:32|QWORD[.] stack:36|DWORD - stack:56|QWORD[.] stack:60|DWORD stack:64|DWORD stack:80|QWORD[.] - - - stack:88|QWORD[.] - stack:72|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:152] <|@ <|@
      nr  710  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  712  <|@ instruction r13|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction MOV (x: [r13|QWORD[.] + 24], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  716  <|@ instruction r10|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  718  <|@ instruction rbx|QWORD = MOVE input: long[4285321216|0xff6cd000] <|@ <|@
      nr  720  <|@ instruction MOVB (x: [r10|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  722  <|@ instruction CMP stack:72|DWORD y: 7 size: DWORD <|@ <|@
      nr  724  <|@ instruction BRANCH trueDestinationProbability: 0.9993591955439444 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B64" 
    xhandlers
    flags 
    probability 4585057799671001215
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction JUMP ~[] destination: B53 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4576930991352715592
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  928  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  930  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  934  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 4576930991352715592
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  938  <|@ instruction rbx|QWORD = MOVE input: long[4285321216|0xff6cd000] <|@ <|@
      nr  940  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction rdx|DWORD[.] = MOV [r14|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  944  <|@ instruction r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  946  <|@ instruction MOV (x: [r14|QWORD[.] + 20], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  948  <|@ instruction r10|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  950  <|@ instruction MOVB (x: [r10|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  952  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  954  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction rdx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  958  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:657) [bci: 253]
locals: - - - - - - - - - - - - stack:88|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:253] <|@ <|@
      nr  960  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B64" "B32" 
    xhandlers
    flags 
    probability 4576563794650477213
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction rsi|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  432  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3 <|@ <|@
      nr  434  <|@ instruction CMP (x: r13|QWORD[.], y: stack:48|QWORD[.]) size: QWORD <|@ <|@
      nr  436  <|@ instruction BRANCH trueDestinationProbability: 0.5288053365676167 condition: = trueDestination: B30 -> B64 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575829406081159033
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  198  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  200  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  202  <|@ st <@st|@reference-map: [r14:0, stack:56, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|QWORD[.] stack:60|DWORD stack:64|DWORD r14|QWORD[.] - stack:72|DWORD - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10c2d3aa0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:29] <|@ <|@
      nr  204  <|@ instruction r11|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction rbx|QWORD = MOVE input: long[4285321216|0xff6cd000] <|@ <|@
      nr  208  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B29" 
    xhandlers
    flags 
    probability 4575297331189915888
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD = MOVE input: long[4285321216|0xff6cd000] <|@ <|@
      nr  102  <|@ instruction rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B6 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4571748511322321236
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B38" 
    xhandlers
    flags 
    probability 4571748511322321236
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction stack:72|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:56, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:635) [bci: 91]
locals: stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|QWORD[.] stack:60|DWORD stack:64|DWORD stack:80|QWORD[.] stack:88|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:91] <|@ <|@
      nr  474  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  476  <|@ instruction BRANCH trueDestinationProbability: 0.32432432432432434 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B64" 
    xhandlers
    flags 
    probability 4569036272754202032
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction JUMP ~[] destination: B38 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B22" 
    xhandlers
    flags 
    probability 4570877969932762454
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rbp|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B5 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4566752570668625650
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  864  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ st <@st|@reference-map: [stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:663) [bci: 288]
locals: stack:32|QWORD[.] - - - - stack:64|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:288] <|@ <|@
      nr  870  <|@ instruction CMP stack:68|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed} <|@ <|@
      nr  872  <|@ instruction BRANCH trueDestinationProbability: 0.9016325592090135 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4565948929174241344
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  878  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B41" "B37" 
    xhandlers
    flags 
    probability 4564257079117715953
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction rbp|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  482  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  484  <|@ instruction BRANCH trueDestinationProbability: 3.388845855926137E-4 condition: = trueDestination: B35 -> B41 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B43" 
    xhandlers
    flags 
    probability 4564254837648238250
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction rbx|QWORD = MOVE input: long[4285321216|0xff6cd000] <|@ <|@
      nr  496  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  502  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  506  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  508  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B37 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4562759410872014249
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  828  <|@ instruction r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4560651634133518715
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction r13|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  600  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  602  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  604  <|@ st <@st|@reference-map: [r13:0, stack:24, stack:32, stack:56, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|QWORD[.] stack:60|DWORD stack:64|DWORD stack:80|QWORD[.] r13|QWORD[.] - - - - stack:72|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10c2d3aa0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:134] <|@ <|@
      nr  606  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4551381544091446564
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  882  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction rbx|QWORD = MOV [r10|DWORD * 8 + 728] size: QWORD <|@ <|@
      nr  886  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  888  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction rdx|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:664) [bci: 295]
locals: - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:295] <|@ <|@
      nr  894  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  896  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B52" "B49" 
    successors "B64" 
    xhandlers
    flags 
    probability 4545087302622768148
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ st <@st|@reference-map: [stack:24, stack:56, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:644) [bci: 169]
locals: stack:32|QWORD[.] - - stack:56|QWORD[.] stack:60|DWORD stack:64|DWORD - - - - stack:88|QWORD[.] - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:169] <|@ <|@
      nr  746  <|@ instruction r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~[] destination: B55 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4540932436599936300
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B35" "B40" 
    successors "B64" 
    xhandlers
    flags 
    probability 4541004163623222783
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  540  <|@ instruction r9|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rdi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ st <@st|@reference-map: [stack:56, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:638) [bci: 123]
locals: stack:32|QWORD[.] - - stack:56|QWORD[.] stack:60|DWORD stack:64|DWORD - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:123] <|@ <|@
      nr  546  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B41 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  966  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction MOV [r15|QWORD + 668] y: -132627 size: DWORD <|@ <|@
      nr  970  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  972  <|@ st <@st|@reference-map: [r8:0, r14:0, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:653) [bci: 222]
locals: stack:32|QWORD[.] - - r8|QWORD[.] r9|DWORD stack:64|DWORD - - - - r14|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:222] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction MOV [r15|QWORD + 668] y: -103451 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@reference-map: [rax:0, r8:0, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:629) [bci: 23]
stack: rax|QWORD[.] 
locals: stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] r8|QWORD[.] r9|DWORD stack:64|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:23] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  984  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  986  <|@ instruction MOV [r15|QWORD + 668] y: -107291 size: DWORD <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  990  <|@ st <@st|@reference-map: [r8:0, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:628) [bci: 0]
locals: stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] r8|QWORD[.] r9|DWORD stack:64|DWORD - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  272  <|@ instruction r10|DWORD = MOVE input: int[-111387|0xfffffffffffe4ce5] <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  296  <|@ st <@st|@reference-map: [r8:0, r14:0, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] r8|QWORD[.] r9|DWORD stack:64|DWORD r14|QWORD[.] - rcx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  782  <|@ instruction r13|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction r10|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction MOV [r15|QWORD + 668] y: -130323 size: DWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  794  <|@ st <@st|@reference-map: [r8:0, r10:0, r13:0, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:641) [bci: 134]
locals: stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] r8|QWORD[.] r9|DWORD stack:64|DWORD r10|QWORD[.] r13|QWORD[.] - - - - r11|DWORD 
>@ <|@ instruction DEOPT info [bci:134] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1613118162] <|@ <|@
      nr  390  <|@ instruction rcx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction r10|DWORD = MOVE input: int[-116796|0xfffffffffffe37c4] <|@ <|@
      nr  394  <|@ instruction rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  396  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 680], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r8:0, r11:0]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: rsi|QWORD[.] rdx|DWORD rbx|QWORD[.] r8|QWORD[.] r9|DWORD rdi|DWORD r11|QWORD[.] - rax|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B20" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1613118162] <|@ <|@
      nr  282  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r10|DWORD = MOVE input: int[-110396|0xfffffffffffe50c4] <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B27" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  366  <|@ instruction r10|DWORD = MOVE input: int[-117787|0xfffffffffffe33e5] <|@ <|@
      nr  368  <|@ instruction rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction MOV [r15|QWORD + 668] y: -122899 size: DWORD <|@ <|@
      nr  458  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  460  <|@ st <@st|@reference-map: [r8:0, stack:32, stack:64, stack:80]
live-base-pointers: []
java.util.HashMap.putVal(HashMap.java:630) [bci: 29]
locals: stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] r8|QWORD[.] r9|DWORD stack:64|DWORD stack:80|QWORD[.] - rax|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:29] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #20         // table:java.util.HashMap$Node[]
     4: dup           
     5: astore        6
     7: ifnull        19
    10: aload         6
    12: arraylength   
    13: dup           
    14: istore        8
    16: ifne          29
    19: aload_0       
    20: invokevirtual #21         // resize:()java.util.HashMap$Node[]
    23: dup           
    24: astore        6
    26: arraylength   
    27: istore        8
    29: aload         6
    31: iload         8
    33: iconst_1      
    34: isub          
    35: iload_1       
    36: iand          
    37: dup           
    38: istore        9
    40: aaload        
    41: dup           
    42: astore        7
    44: ifnonnull     63
    47: aload         6
    49: iload         9
    51: aload_0       
    52: iload_1       
    53: aload_2       
    54: aload_3       
    55: aconst_null   
    56: invokevirtual #38         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
    59: aastore       
    60: goto          259
    63: aload         7
    65: getfield      #33         // java.util.HashMap$Node.hash:int
    68: iload_1       
    69: if_icmpne     104
    72: aload         7
    74: getfield      #34         // java.util.HashMap$Node.key:java.lang.Object
    77: dup           
    78: astore        11
    80: aload_2       
    81: if_acmpeq     97
    84: aload_2       
    85: ifnull        104
    88: aload_2       
    89: aload         11
    91: invokevirtual #35         // java.lang.Object.equals:(java.lang.Object)boolean
    94: ifeq          104
    97: aload         7
    99: astore        10
   101: goto          222
   104: aload         7
   106: instanceof    #50         // java.util.HashMap$TreeNode
   109: ifeq          131
   112: aload         7
   114: checkcast     #50         // java.util.HashMap$TreeNode
   117: aload_0       
   118: aload         6
   120: iload_1       
   121: aload_2       
   122: aload_3       
   123: invokevirtual #39         // java.util.HashMap$TreeNode.putTreeVal:(java.util.HashMap, java.util.HashMap$Node[], int, java.lang.Object, java.lang.Object)java.util.HashMap$TreeNode
   126: astore        10
   128: goto          222
   131: iconst_0      
   132: istore        12
   134: aload         7
   136: getfield      #36         // java.util.HashMap$Node.next:java.util.HashMap$Node
   139: dup           
   140: astore        10
   142: ifnonnull     175
   145: aload         7
   147: aload_0       
   148: iload_1       
   149: aload_2       
   150: aload_3       
   151: aconst_null   
   152: invokevirtual #38         // newNode:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)java.util.HashMap$Node
   155: putfield      #36         // java.util.HashMap$Node.next:java.util.HashMap$Node
   158: iload         12
   160: bipush        7
   162: if_icmplt     222
   165: aload_0       
   166: aload         6
   168: iload_1       
   169: invokevirtual #40         // treeifyBin:(java.util.HashMap$Node[], int)void
   172: goto          222
   175: aload         10
   177: getfield      #33         // java.util.HashMap$Node.hash:int
   180: iload_1       
   181: if_icmpne     212
   184: aload         10
   186: getfield      #34         // java.util.HashMap$Node.key:java.lang.Object
   189: dup           
   190: astore        11
   192: aload_2       
   193: if_acmpeq     222
   196: aload_2       
   197: ifnull        212
   200: aload_2       
   201: aload         11
   203: invokevirtual #35         // java.lang.Object.equals:(java.lang.Object)boolean
   206: ifeq          212
   209: goto          222
   212: aload         10
   214: astore        7
   216: iinc          
   219: goto          134
   222: aload         10
   224: ifnull        259
   227: aload         10
   229: getfield      #32         // java.util.HashMap$Node.value:java.lang.Object
   232: astore        12
   234: iload         4
   236: ifeq          244
   239: aload         12
   241: ifnonnull     250
   244: aload         10
   246: aload_3       
   247: putfield      #32         // java.util.HashMap$Node.value:java.lang.Object
   250: aload_0       
   251: aload         10
   253: invokevirtual #41         // afterNodeAccess:(java.util.HashMap$Node)void
   256: aload         12
   258: areturn       
   259: aload_0       
   260: dup           
   261: getfield      #42         // modCount:int
   264: iconst_1      
   265: iadd          
   266: putfield      #42         // modCount:int
   269: aload_0       
   270: dup           
   271: getfield      #30         // size:int
   274: iconst_1      
   275: iadd          
   276: dup_x1        
   277: putfield      #30         // size:int
   280: aload_0       
   281: getfield      #16         // threshold:int
   284: if_icmple     292
   287: aload_0       
   288: invokevirtual #21         // resize:()java.util.HashMap$Node[]
   291: pop           
   292: aload_0       
   293: iload         5
   295: invokevirtual #43         // afterNodeInsertion:(boolean)void
   298: aconst_null   
   299: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec6848896c246048897424508954244c48894c24404c8944243844894c2434897c2430448b5608448954242c448b5e24bb00d06cff4585db0f84df020000428b04dd0c0000008be8ffcd23ea3bc50f86ef06000049c1e303458b6cab104585ed0f85e70000004181faaddeadde0f851b030000894424284d8bf3448bed458b5e084181fbaddeadde0f8564070000453b6e0c0f83c30600004d8b5f60498d6b20493b6f700f875904000049896f60410f1883e000000049b9addeaddeaddeadde498bc34d8b89a80000004d890b41c74308addeadde4189530c48c1e90341894b1049c1e803458943144589631848c1e803438944ae104b8d54ae1048c1ea094488241ab801000000034618894618b8010000000346148946143b461c0f8fa9040000817c242caddeadde0f85b801000048b80000000000000000488b6c24604883c468850500000000c5f877c34c895c2420428b2ced08000000458bf549c1e603423b14ed0c0000000f847503000081fdaddeadde0f845305000041bb000000004d8bd6666690458b6a18458bf549c1e6034585ed0f84910000004c89542410458bd341ffc2423b14ed0c0000000f840e000000850500000000458bda4d8bd6ebc5468b2ced1000000049c1e5034c3be90f84fe0000004885c90f84a3050000448954240c4c8974241844895c2428488bf1498bd548b8ffffffffffffffff0f1f8000000000e8000000009085c00f852b040000448b5c240c4c8b542418488b4c24408b54244ce95bffffff4c8974241844895c24284c89542410817c242caddeadde0f85cb010000498b77604c8d56204d3b57700f87ee0300004d8957600f1886e00000004c8b542410bb00d06cff4c8b442438488b4c24408b54244c49bbaddeaddeaddeadde4c8bce4d8b9ba80000004c891ec74608addeadde89560c48c1e903894e104d8bd849c1eb0344895e144489661849c1e90345894a1849c1ea094588241a837c2428070f8ddd0300004c8b7424184d85f60f859b010000488b742450e91bfeffff448b54242c4a8b1cd5d8020000488b43408b542430ffd09048b80000000000000000488b6c24604883c468850500000000c5f877c390e80000000090448b500c418bf2ffce8b54244c23d6443bd20f86e5030000448b6c90104585ed0f85fc010000817c242caddeadde0f856602000044895424284c8bf0448beabb00d06cff448b54242c8b7c2430448b4c24344c8b442438488b4c24408b54244c488b742450e9effcffff41817b08addeadde0f8513040000413b6b0c0f83640400004c895c2418896c2428448b54242c4a8b04d5a8020000488b7840488b7424508b54244c488b4c24404c8b44243849b90000000000000000488bd8488bc7ffd09048c1e8038b6c24284c8b5c2418418944ab10498d74ab1048c1ee09bb00d06cff4488241e488b742450e9effcffff448b54242c4a8b04d5a8020000488b7840488b742450488b4c24404c8b44243849b90000000000000000488bd8488bc7ffd09048c1e8034c8b6c2410418945184d8bd549c1ea09bb00d06cff4588241a837c2428070f8d3e0200004c8b742418e95cfeffff448b4c2434488b7424504585c90f8578020000bb00d06cff4c8b442438418b561449c1e803458946144d8bd649c1ea094588241a48c1e2034889542418498bd648b8ffffffffffffffff666690e80000000090488b442418488b6c24604883c468850500000000c5f877c3428b34ed10000000448bee49c1e5034c3b6c24400f84d7fdffffe97600000048beaddeaddeaddeaddeba04000000b901000000e800000000904c8bd8bb00d06cff448b54242c8b7c24304c8b442438488b4c24408b54244c488b742450e970fbffff4889442420bb00d06cff8b7c2430448b4c24344c8b442438488b4c24408b54244c488b742450418bc2448b54242ce9d9fbffff488b4c24404885c90f84a30200004c89742418896c2428488bf1498bd548b8ffffffffffffffff660f1f440000e8000000009085c00f844b0000004c8b742418e917fdffff4c8bd88bea418bc2e9c3fdffff4c8bdee80000000090817c242caddeadde0f859100000048b80000000000000000488b6c24604883c468850500000000c5f877c38b6c242881fdaddeadde0f84c40000004c8b742418bb00d06cff448b54242c8b7c2430448b4c24344c8b442438488b4c24408b54244c488b742450e93cfbffff4c8b742418e98cfcffff4c8b6c241048beaddeaddeaddeaddeba04000000b901000000e80000000090488bf04d8bd5e9f8fbffff448b54242c4a8b1cd5d8020000488b4340488b7424508b542430ffd09048b80000000000000000488b6c24604883c468850500000000c5f877c3488b742450488b5424208b4c244c666690e800000000904c8b742418e907fcffff4c89742418488b742418488b542450488b4c2420448b44244c4c8b4c2440488b7c24380f1f440000e800000000904c8bf0e9d1fbffff4c8b44243841c7879c020000edf9fdff4d89a7a8020000e80000000090448b4c24344c8b44243841c7879c020000e56bfeff4d89a7a8020000e8000000009041c7879c020000e55cfeff4d89a7a8020000e8000000009049bb000000000000000041bae54cfeff8b4c24284589979c0200004d899fa8020000e800000000904c8b6c24104c8b542420448b4c24344c8b44243841c7879c020000ed02feff4d89a7a8020000e80000000090448b4c24344c8b44243849baaddeaddeaddeadde498bca41bac437feff8b7c2430488b5c24408b54244c488b7424504589979c02000049898fa8020000e8000000009049baaddeaddeaddeadde4d8bda41bac450feffe961ffffff48b9000000000000000041bae533feff8b7c2430448b4c24344c8b442438eba64c8b44243841c7879c020000ed1ffeff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1024a1f78, value=0x10ba1de60]:0x10ba1de60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@71d61297 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 57 10 stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 62 12 stack:56|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 67 14 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 72 16 stack:64|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 76 18 r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 80 20 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 85 22 r11|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 89 24 rbx|QWORD = MOVE input: long[4285321216|0xff6cd000]  <||@
  Comment 94 26 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 97 28 BRANCH trueDestinationProbability: 0.05975755506231859 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8  <||@
  Comment 103 block B8 null  <||@
  Comment 103 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 134 rax|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 111 136 rbp|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 115 138 rbp|DWORD = AND (x: rdx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 117 140 CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 119 142 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B77  <||@
  Comment 125 block B9 null  <||@
  Comment 125 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 125 146 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 129 148 r13|DWORD[.] = MOV [r11|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 134 150 TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 137 152 BRANCH trueDestinationProbability: 0.874487083904821 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28  <||@
  Comment 143 block B10 null  <||@
  Comment 143 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 143 156 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 143 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 150 158 BRANCH trueDestinationProbability: 0.9275371750235902 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22  <||@
  Comment 156 block B11 null  <||@
  Comment 156 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 156 162 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 160 164 r14|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 163 166 r13|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 166 168 JUMP ~[] destination: B11 -> B12  <||@
  Comment 166 block B12 null  <||@
  Comment 166 170 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 166 172 r11|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD  <||@
  Comment 170 174 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}  <||@
  Comment 170 {meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}}  <||@
  Comment 177 176 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B19  <||@
  Comment 183 block B13 null  <||@
  Comment 183 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 183 180 CMP (x: r13|DWORD, y: [r14|QWORD[.] + 12]) size: DWORD  <||@
  Comment 187 182 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18  <||@
  Comment 193 block B14 null  <||@
  Comment 193 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 193 186 r11|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 197 188 rbp|QWORD = LEA [r11|QWORD + 32] size: QWORD  <||@
  Comment 201 190 CMP (x: rbp|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 205 192 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 211 block B16 null  <||@
  Comment 211 222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 211 224 MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD  <||@
  Comment 215 226 AMD64PREFETCH ~[r11|QWORD + 224] instr: 0  <||@
  Comment 223 228 r11|QWORD[*] = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 223 230 JUMP ~[] destination: B16 -> B17  <||@
  Comment 223 block B17 null  <||@
  Comment 223 232 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 223 234 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}  <||@
  Comment 223 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}}  <||@
  Comment 233 236 rax|QWORD[.] = MOVE r11|QWORD[*] moveKind: QWORD  <||@
  Comment 236 238 r9|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 243 240 MOV (x: [r11|QWORD[*]], y: r9|QWORD) size: QWORD  <||@
  Comment 246 242 MOV [r11|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}  <||@
  Comment 246 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}}  <||@
  Comment 254 244 MOV (x: [r11|QWORD[*] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 258 246 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 262 248 MOV (x: [r11|QWORD[*] + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 266 250 r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 270 252 MOV (x: [r11|QWORD[*] + 20], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 274 254 MOV (x: [r11|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 278 256 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 282 258 MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 287 260 rdx|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD  <||@
  Comment 292 262 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 296 264 MOVB (x: [rdx|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 300 266 JUMP ~[] destination: B17 -> B66  <||@
  Comment 300 block B66 null  <||@
  Comment 300 844 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 300 846 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 305 848 rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 24]) size: DWORD  <||@
  Comment 308 850 MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD  <||@
  Comment 311 852 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 316 854 rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD  <||@
  Comment 319 856 MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD  <||@
  Comment 322 858 CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) size: DWORD  <||@
  Comment 325 860 BRANCH trueDestinationProbability: 0.00201782121299221 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B70  <||@
  Comment 331 block B70 null  <||@
  Comment 331 898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 331 900 CMP stack:68|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 331 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 339 902 BRANCH trueDestinationProbability: 0.9016325592090135 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72  <||@
  Comment 345 block B71 null  <||@
  Comment 345 904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 345 906 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 355 908 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 364 12  <||@
  Comment 374 block B28 null  <||@
  Comment 374 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 374 414 stack:80|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 379 416 JUMP ~[] destination: B28 -> B29  <||@
  Comment 379 block B29 null  <||@
  Comment 379 418 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 379 420 rbp|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD state [bci:29]  <||@
  Comment 379 [rcx:0, rsi:0, r8:0, r13:0, stack:32, stack:56, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:630) [bci: 29, duringCall: false, rethrow: false]
              |0             |1          |2             |3            |4         |5          |6                  |7  |8          |9  |10  |11  |12 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |rdi|DWORD  |stack:80|QWORD[.]  |-  |rax|DWORD  |-  |-   |-   |-    <||@
  Comment 379 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 387 422 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 394 424 CMP (x: rdx|DWORD, y: [r13|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 402 426 BRANCH trueDestinationProbability: 0.07477440711014371 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B39  <||@
  Comment 408 block B39 null  <||@
  Comment 408 518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 408 520 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 408 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 414 522 BRANCH trueDestinationProbability: 3.388845855926137E-4 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B43  <||@
  Comment 420 block B43 null  <||@
  Comment 420 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 420 556 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 426 558 r10|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 429 560 JUMP ~[] destination: B43 -> B44  <||@
  Comment 429 block B44 loop 0 depth 1 header:88|LoopBegin  <||@
  Comment 429 562 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 432 564 r13|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD state [bci:134]  <||@
  Comment 432 [rcx:0, r10:0, stack:32, stack:56, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:641) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1          |2             |3                  |4               |5               |6                  |7             |8  |9  |10  |11  |12        
     locals:  |stack:32|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |stack:80|QWORD[.]  |r10|QWORD[.]  |-  |-  |-   |-   |r11|DWORD   <||@
  Comment 432 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 436 566 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 443 568 TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 446 570 BRANCH trueDestinationProbability: 0.8149025908817031 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B56  <||@
  Comment 452 block B56 loop 0 depth 1 header:88|LoopBegin  <||@
  Comment 452 750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 452 752 stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 457 754 r10|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 463 756 CMP (x: rdx|DWORD, y: [r13|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 471 758 BRANCH trueDestinationProbability: 0.098936862660013 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B76  <||@
  Comment 477 block B76 loop 0 depth 1 header:88|LoopBegin  <||@
  Comment 477 974 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 477 976 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 thread: r15 state [bci:134]  <||@
  Comment 477 [rcx:0, r14:0, stack:16, stack:32, stack:56, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:641) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1          |2             |3                  |4               |5               |6                  |7                  |8  |9  |10  |11  |12        
     locals:  |stack:32|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |stack:80|QWORD[.]  |stack:96|QWORD[.]  |-  |-  |-   |-   |r11|DWORD   <||@
  Comment 477 {infopoint: SAFEPOINT}  <||@
  Comment 477 11  <||@
  Comment 483 978 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 486 980 r10|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 489 982 JUMP ~[] destination: B76 -> B44  <||@
  Comment 491 block B57 loop 0 depth 1 header:88|LoopBegin  <||@
  Comment 491 760 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 491 762 r13|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 499 764 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 503 766 CMP (x: r13|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 506 768 BRANCH trueDestinationProbability: 0.3706140350877193 condition: = trueDestination: B57 -> B64 falseDestination: B57 -> B59  <||@
  Comment 512 block B59 loop 0 depth 1 header:88|LoopBegin  <||@
  Comment 512 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 512 776 TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 515 778 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61  <||@
  Comment 521 block B61 loop 0 depth 1 header:88|LoopBegin  <||@
  Comment 521 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 521 798 stack:100|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 526 800 stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 531 802 stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 536 804 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 539 806 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 542 808 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:203]  <||@
  Comment 542 7  <||@
  Comment 559 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 564 [stack:24, stack:32, stack:56, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:648) [bci: 203, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6                  |7  |8  |9  |10                 |11  |12             
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |stack:80|QWORD[.]  |-  |-  |-  |stack:88|QWORD[.]  |-   |stack:72|DWORD   <||@
  Comment 565 810 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 567 812 BRANCH trueDestinationProbability: 0.3205574912891986 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63  <||@
  Comment 573 block B62 loop 0 depth 1 header:88|LoopBegin  <||@
  Comment 573 814 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 573 816 r11|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 578 818 r10|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 583 820 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 588 822 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 592 824 JUMP ~[] destination: B62 -> B44  <||@
  Comment 597 block B45 null  <||@
  Comment 597 572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 597 574 stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 602 576 stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 607 578 stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 612 580 CMP stack:68|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 612 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 620 582 BRANCH trueDestinationProbability: 0.7054909305993691 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B52  <||@
  Comment 626 block B46 null  <||@
  Comment 626 584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 626 586 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 630 588 r10|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 634 590 CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 638 592 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B46 -> B47 falseDestination: B46 -> B48  <||@
  Comment 644 block B48 null  <||@
  Comment 644 620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 644 622 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 648 624 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 655 626 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 655 628 r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 660 638 JUMP ~[] destination: B48 -> B49  <||@
  Comment 660 block B49 null  <||@
  Comment 660 640 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 660 630 rbx|QWORD = MOVE input: long[4285321216|0xff6cd000]  <||@
  Comment 665 632 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 670 634 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 675 636 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 679 642 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}  <||@
  Comment 679 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}}  <||@
  Comment 689 644 r9|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 692 646 r11|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 699 648 MOV (x: [rsi|QWORD[*]], y: r11|QWORD) size: QWORD  <||@
  Comment 702 650 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}  <||@
  Comment 702 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}}  <||@
  Comment 709 652 MOV (x: [rsi|QWORD[*] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 712 654 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 716 656 MOV (x: [rsi|QWORD[*] + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 719 658 r11|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 726 660 MOV (x: [rsi|QWORD[*] + 20], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 730 662 MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 734 664 r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 738 666 MOV (x: [r10|QWORD[.] + 24], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 742 668 r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 746 670 MOVB (x: [r10|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 750 672 CMP stack:72|DWORD y: 7 size: DWORD  <||@
  Comment 755 674 BRANCH trueDestinationProbability: 0.9993591955439444 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B55  <||@
  Comment 761 block B50 null  <||@
  Comment 761 676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 761 678 r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 766 680 JUMP ~[] destination: B50 -> B64  <||@
  Comment 766 block B64 null  <||@
  Comment 766 832 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 766 834 TEST (x: r14|QWORD[.], y: r14|QWORD[.]) size: QWORD  <||@
  Comment 769 836 BRANCH trueDestinationProbability: 0.9201505395846559 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B73  <||@
  Comment 775 block B65 null  <||@
  Comment 775 838 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 775 840 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 780 842 JUMP ~[] destination: B65 -> B66  <||@
  Comment 785 block B72 null  <||@
  Comment 785 910 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 785 912 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 790 914 rbx|QWORD = MOV [r10|DWORD * 8 + 728] size: QWORD  <||@
  Comment 798 916 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 802 918 rdx|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 806 920 - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:295]  <||@
  Comment 806 {HotSpotMethod<HashMap.afterNodeInsertion(boolean)>}  <||@
  Comment 806 10  <||@
  Comment 808 []at java.util.HashMap.putVal(HashMap.java:664) [bci: 295, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 809 922 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 819 924 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 828 12  <||@
  Comment 838 block B1 null  <||@
  Comment 838 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 838 34 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:20]  <||@
  Comment 838 9  <||@
  Comment 839 {HotSpotMethod<HashMap.resize()>}  <||@
  Comment 844 [stack:56, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:629) [bci: 20, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 845 36 r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23]  <||@
  Comment 845 [rax:0, stack:56, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:629) [bci: 23, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |rax|QWORD[.]       |                |                   |                   |                |                |   |   |   |   |    |    |     <||@
  Comment 845 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 849 38 rsi|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 854 40 rdx|DWORD = AND (x: stack:36|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 860 42 CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 863 44 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B7  <||@
  Comment 869 block B2 null  <||@
  Comment 869 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 869 48 r13|DWORD[.] = MOV [rax|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 874 50 TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 877 52 BRANCH trueDestinationProbability: 0.874487083904821 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6  <||@
  Comment 883 block B3 null  <||@
  Comment 883 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 883 56 CMP stack:68|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 883 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 891 58 BRANCH trueDestinationProbability: 0.9275371750235902 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 897 block B4 null  <||@
  Comment 897 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 897 62 stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 902 64 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 905 66 r13|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 908 68 rbx|QWORD = MOVE input: long[4285321216|0xff6cd000]  <||@
  Comment 913 70 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 918 72 rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 922 74 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 927 76 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 932 78 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 937 80 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 941 82 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 946 84 JUMP ~[] destination: B4 -> B12  <||@
  Comment 951 block B22 null  <||@
  Comment 951 302 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 951 304 CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}  <||@
  Comment 951 {meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}}  <||@
  Comment 959 306 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B26  <||@
  Comment 965 block B23 null  <||@
  Comment 965 308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 965 310 CMP (x: rbp|DWORD, y: [r11|QWORD[.] + 12]) size: DWORD  <||@
  Comment 969 312 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 975 block B24 null  <||@
  Comment 975 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 975 316 stack:88|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 980 318 stack:72|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 984 320 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 989 322 rax|QWORD = MOV [r10|DWORD * 8 + 680] size: QWORD  <||@
  Comment 997 324 rdi|QWORD = MOV [rax|QWORD + 64] size: QWORD  <||@
  Comment 1001 326 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1006 328 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1010 330 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1015 332 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1020 334 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1030 336 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1033 338 rax|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1036 340 rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:56]  <||@
  Comment 1036 {HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>}  <||@
  Comment 1036 10  <||@
  Comment 1038 [stack:24, stack:80]at java.util.HashMap.putVal(HashMap.java:631) [bci: 56, duringCall: true, rethrow: false]
              |0                  |1               |2  |3  |4  |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |-               |-  |-  |-  |stack:64|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |stack:88|QWORD[.]  |stack:72|DWORD  |   |   |   |                |   |   |   |   |    |    |     <||@
  Comment 1039 342 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 1043 344 rbp|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1047 346 r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1052 348 MOV (x: [r11|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1057 350 rsi|QWORD[.] = LEA [r11|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1062 352 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1066 354 rbx|QWORD = MOVE input: long[4285321216|0xff6cd000]  <||@
  Comment 1071 356 MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1075 358 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1080 360 JUMP ~[] destination: B24 -> B66  <||@
  Comment 1085 block B52 null  <||@
  Comment 1085 686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1085 688 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1090 690 rax|QWORD = MOV [r10|DWORD * 8 + 680] size: QWORD  <||@
  Comment 1098 692 rdi|QWORD = MOV [rax|QWORD + 64] size: QWORD  <||@
  Comment 1102 694 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1107 698 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1112 700 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1117 702 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1127 704 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1130 706 rax|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1133 708 rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:152]  <||@
  Comment 1133 {HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>}  <||@
  Comment 1133 10  <||@
  Comment 1135 [stack:16, stack:24, stack:32, stack:56, stack:80]at java.util.HashMap.putVal(HashMap.java:642) [bci: 152, duringCall: true, rethrow: false]
              |0                  |1               |2  |3                  |4               |5               |6                  |7  |8  |9  |10                 |11  |12             
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |-  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |stack:80|QWORD[.]  |-  |-  |-  |stack:88|QWORD[.]  |-   |stack:72|DWORD 
     stack:   |stack:96|QWORD[.]  |                |   |                   |                |                |                   |   |   |   |                   |    |                 <||@
  Comment 1136 710 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 1140 712 r13|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1145 714 MOV (x: [r13|QWORD[.] + 24], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1149 716 r10|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1156 718 rbx|QWORD = MOVE input: long[4285321216|0xff6cd000]  <||@
  Comment 1161 720 MOVB (x: [r10|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1165 722 CMP stack:72|DWORD y: 7 size: DWORD  <||@
  Comment 1170 724 BRANCH trueDestinationProbability: 0.9993591955439444 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B55  <||@
  Comment 1176 block B53 null  <||@
  Comment 1176 726 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1176 728 r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1181 730 JUMP ~[] destination: B53 -> B64  <||@
  Comment 1186 block B73 null  <||@
  Comment 1186 926 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1186 928 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1191 930 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1196 932 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1199 934 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75  <||@
  Comment 1205 block B74 null  <||@
  Comment 1205 936 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1205 938 rbx|QWORD = MOVE input: long[4285321216|0xff6cd000]  <||@
  Comment 1210 940 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1215 942 rdx|DWORD[.] = MOV [r14|QWORD[.] + 20] size: DWORD  <||@
  Comment 1219 944 r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 1223 946 MOV (x: [r14|QWORD[.] + 20], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 1227 948 r10|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1234 950 MOVB (x: [r10|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1238 952 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 1242 954 stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1247 956 rdx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1250 958 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:253]  <||@
  Comment 1250 7  <||@
  Comment 1263 {HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)>}  <||@
  Comment 1268 [stack:24]at java.util.HashMap.putVal(HashMap.java:657) [bci: 253, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12                
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |stack:88|QWORD[.]   <||@
  Comment 1269 960 rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1274 962 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 1283 12  <||@
  Comment 1293 block B30 null  <||@
  Comment 1293 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1293 430 rsi|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1301 432 r13|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 1308 434 CMP (x: r13|QWORD[.], y: stack:48|QWORD[.]) size: QWORD  <||@
  Comment 1313 436 BRANCH trueDestinationProbability: 0.5288053365676167 condition: = trueDestination: B30 -> B64 falseDestination: B30 -> B32  <||@
  Comment 1324 block B15 null  <||@
  Comment 1324 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1324 196 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1324 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1334 198 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 1339 200 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1344 202 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10c2d3aa0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:29]  <||@
  Comment 1344 {Stub<NewArrayStub.newArray>@0x10c2d3aa0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1349 [r14:0, stack:56, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:630) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6             |7  |8               |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |r14|QWORD[.]  |-  |stack:72|DWORD  |-  |-   |-   |-    <||@
  Comment 1350 204 r11|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1353 206 rbx|QWORD = MOVE input: long[4285321216|0xff6cd000]  <||@
  Comment 1358 208 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1363 210 rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1367 212 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1372 214 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1377 216 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1381 218 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1386 220 JUMP ~[] destination: B15 -> B17  <||@
  Comment 1391 block B6 null  <||@
  Comment 1391 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1391 98 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1396 100 rbx|QWORD = MOVE input: long[4285321216|0xff6cd000]  <||@
  Comment 1401 102 rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1405 104 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1410 106 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1415 108 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1420 110 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1424 112 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1429 114 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1432 116 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1437 118 JUMP ~[] destination: B6 -> B29  <||@
  Comment 1442 block B32 null  <||@
  Comment 1442 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1442 444 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1447 446 TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 1450 448 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 1456 block B34 null  <||@
  Comment 1456 462 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1456 464 stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1461 466 stack:72|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1465 468 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1468 470 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1471 472 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:91]  <||@
  Comment 1471 7  <||@
  Comment 1487 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 1492 [stack:24, stack:32, stack:56, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:635) [bci: 91, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6                  |7                  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |-  |-  |-   |-   |-    <||@
  Comment 1493 474 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1495 476 BRANCH trueDestinationProbability: 0.32432432432432434 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B38  <||@
  Comment 1501 block B38 null  <||@
  Comment 1501 512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1501 514 r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1506 516 JUMP ~[] destination: B38 -> B64  <||@
  Comment 1511 block B5 null  <||@
  Comment 1511 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1511 88 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1514 90 rbp|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1516 92 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1519 94 JUMP ~[] destination: B5 -> B22  <||@
  Comment 1524 block B67 null  <||@
  Comment 1524 862 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1524 864 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1527 868 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:288]  <||@
  Comment 1527 {HotSpotMethod<HashMap.resize()>}  <||@
  Comment 1527 9  <||@
  Comment 1532 [stack:80]at java.util.HashMap.putVal(HashMap.java:663) [bci: 288, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |-  |stack:64|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1533 870 CMP stack:68|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 1533 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 1541 872 BRANCH trueDestinationProbability: 0.9016325592090135 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69  <||@
  Comment 1547 block B68 null  <||@
  Comment 1547 874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1547 876 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1557 878 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 1566 12  <||@
  Comment 1576 block B35 null  <||@
  Comment 1576 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1576 480 rbp|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1580 482 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 1580 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 1586 484 BRANCH trueDestinationProbability: 3.388845855926137E-4 condition: = trueDestination: B35 -> B41 falseDestination: B35 -> B37  <||@
  Comment 1592 block B37 null  <||@
  Comment 1592 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1592 492 r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1597 494 rbx|QWORD = MOVE input: long[4285321216|0xff6cd000]  <||@
  Comment 1602 496 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1607 498 rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1611 500 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1616 502 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1621 504 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1626 506 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1630 508 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1635 510 JUMP ~[] destination: B37 -> B43  <||@
  Comment 1640 block B63 null  <||@
  Comment 1640 826 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1640 828 r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1645 830 JUMP ~[] destination: B63 -> B64  <||@
  Comment 1650 block B47 null  <||@
  Comment 1650 594 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1650 596 r13|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1655 598 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1655 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1665 600 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 1670 602 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1675 604 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10c2d3aa0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:134]  <||@
  Comment 1675 {Stub<NewArrayStub.newArray>@0x10c2d3aa0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1680 [r13:0, stack:24, stack:32, stack:56, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:641) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6                  |7             |8  |9  |10  |11  |12             
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |stack:80|QWORD[.]  |r13|QWORD[.]  |-  |-  |-   |-   |stack:72|DWORD   <||@
  Comment 1681 606 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1684 608 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1687 618 JUMP ~[] destination: B47 -> B49  <||@
  Comment 1692 block B69 null  <||@
  Comment 1692 880 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1692 882 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1697 884 rbx|QWORD = MOV [r10|DWORD * 8 + 728] size: QWORD  <||@
  Comment 1705 886 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 1709 888 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1714 890 rdx|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1718 892 - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:295]  <||@
  Comment 1718 {HotSpotMethod<HashMap.afterNodeInsertion(boolean)>}  <||@
  Comment 1718 10  <||@
  Comment 1720 []at java.util.HashMap.putVal(HashMap.java:664) [bci: 295, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1721 894 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1731 896 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 1740 12  <||@
  Comment 1750 block B55 null  <||@
  Comment 1750 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1750 738 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1755 740 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1760 742 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1764 744 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:169]  <||@
  Comment 1764 9  <||@
  Comment 1767 {HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)>}  <||@
  Comment 1772 [stack:24, stack:56, stack:80]at java.util.HashMap.putVal(HashMap.java:644) [bci: 169, duringCall: true, rethrow: false]
              |0                  |1  |2  |3                  |4               |5               |6  |7  |8  |9  |10                 |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |-  |-  |-  |-  |stack:88|QWORD[.]  |-   |-    <||@
  Comment 1773 746 r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1778 748 JUMP ~[] destination: B55 -> B64  <||@
  Comment 1783 block B40 null  <||@
  Comment 1783 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1783 526 stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1788 528 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1788 block B41 null  <||@
  Comment 1788 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1788 532 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1793 534 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1798 536 rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1803 538 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1808 540 r9|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1813 542 rdi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1818 544 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:123]  <||@
  Comment 1818 9  <||@
  Comment 1823 {HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)>}  <||@
  Comment 1828 [stack:56, stack:80]at java.util.HashMap.putVal(HashMap.java:638) [bci: 123, duringCall: true, rethrow: false]
              |0                  |1  |2  |3                  |4               |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1829 546 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1832 548 JUMP ~[] destination: B41 -> B64  <||@
  Comment 1837 block B75 null  <||@
  Comment 1837 964 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1837 966 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1842 968 MOV [r15|QWORD + 668] y: -132627 size: DWORD  <||@
  Comment 1853 970 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1860 972 DEOPT info [bci:222]  <||@
  Comment 1860 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 1865 [r8:0, r14:0, stack:80]at java.util.HashMap.putVal(HashMap.java:653) [bci: 222, duringCall: false, rethrow: false]
              |0                  |1  |2  |3            |4         |5               |6  |7  |8  |9  |10            |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |r8|QWORD[.]  |r9|DWORD  |stack:64|DWORD  |-  |-  |-  |-  |r14|QWORD[.]  |-   |-    <||@
  Comment 1866 block B7 null  <||@
  Comment 1866 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1866 122 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1871 124 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1876 126 MOV [r15|QWORD + 668] y: -103451 size: DWORD  <||@
  Comment 1887 128 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1894 130 DEOPT info [bci:23]  <||@
  Comment 1894 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 1899 [rax:0, r8:0, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:629) [bci: 23, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3            |4         |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |stack:64|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |rax|QWORD[.]       |                |                   |             |          |                |   |   |   |   |    |    |     <||@
  Comment 1900 block B77 null  <||@
  Comment 1900 984 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1900 986 MOV [r15|QWORD + 668] y: -107291 size: DWORD  <||@
  Comment 1911 988 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1918 990 DEOPT info [bci:0]  <||@
  Comment 1918 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 1923 [r8:0, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:628) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3            |4         |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |stack:64|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1924 block B18 null  <||@
  Comment 1924 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1924 270 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1934 272 r10|DWORD = MOVE input: int[-111387|0xfffffffffffe4ce5]  <||@
  Comment 1940 276 JUMP ~[] destination: B18 -> B20  <||@
  Comment 1940 block B20 null  <||@
  Comment 1940 290 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1940 286 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1944 292 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1951 294 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1958 296 DEOPT info [bci:29]  <||@
  Comment 1958 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 1963 [r8:0, r14:0, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:630) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3            |4         |5               |6             |7  |8          |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |stack:64|DWORD  |r14|QWORD[.]  |-  |rcx|DWORD  |-  |-   |-   |-    <||@
  Comment 1964 block B60 null  <||@
  Comment 1964 780 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1964 782 r13|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1969 784 r10|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1974 786 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1979 788 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1984 790 MOV [r15|QWORD + 668] y: -130323 size: DWORD  <||@
  Comment 1995 792 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2002 794 DEOPT info [bci:134]  <||@
  Comment 2002 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 2007 [r8:0, r10:0, r13:0, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:641) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3            |4         |5               |6             |7             |8  |9  |10  |11  |12        
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |stack:64|DWORD  |r10|QWORD[.]  |r13|QWORD[.]  |-  |-  |-   |-   |r11|DWORD   <||@
  Comment 2008 block B26 null  <||@
  Comment 2008 382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2008 384 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2013 386 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2018 388 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1613118162]  <||@
  Comment 2018 {Object[d.a@1613118162]}  <||@
  Comment 2028 390 rcx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2031 392 r10|DWORD = MOVE input: int[-116796|0xfffffffffffe37c4]  <||@
  Comment 2037 394 rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2041 402 JUMP ~[] destination: B26 -> B27  <||@
  Comment 2041 block B27 null  <||@
  Comment 2041 404 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2041 396 rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2046 398 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2050 400 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2055 406 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2062 408 MOV (x: [r15|QWORD + 680], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 2069 410 DEOPT info [bci:29]  <||@
  Comment 2069 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 2074 [rbx:0, rsi:0, r8:0, r11:0]at java.util.HashMap.putVal(HashMap.java:630) [bci: 29, duringCall: false, rethrow: false]
              |0             |1          |2             |3            |4         |5          |6             |7  |8          |9  |10  |11  |12 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rbx|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |rdi|DWORD  |r11|QWORD[.]  |-  |rax|DWORD  |-  |-   |-   |-    <||@
  Comment 2075 block B19 null  <||@
  Comment 2075 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2075 280 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1613118162]  <||@
  Comment 2075 {Object[d.a@1613118162]}  <||@
  Comment 2085 282 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2088 284 r10|DWORD = MOVE input: int[-110396|0xfffffffffffe50c4]  <||@
  Comment 2094 288 JUMP ~[] destination: B19 -> B20  <||@
  Comment 2099 block B25 null  <||@
  Comment 2099 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2099 364 rcx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2109 366 r10|DWORD = MOVE input: int[-117787|0xfffffffffffe33e5]  <||@
  Comment 2115 368 rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2119 370 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2124 372 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2129 380 JUMP ~[] destination: B25 -> B27  <||@
  Comment 2131 block B33 null  <||@
  Comment 2131 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2131 454 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2136 456 MOV [r15|QWORD + 668] y: -122899 size: DWORD  <||@
  Comment 2147 458 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2154 460 DEOPT info [bci:29]  <||@
  Comment 2154 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 2159 [r8:0, stack:32, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:630) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3            |4         |5               |6                  |7  |8          |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |stack:64|DWORD  |stack:80|QWORD[.]  |-  |rax|DWORD  |-  |-   |-   |-    <||@
  Comment 2160 {Stub<ExceptionHandlerStub.exceptionHandler>@0x10be4bf20:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2160 4  <||@
  Comment 2166 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1024a1f88, value=0x10ba1f500]:0x10ba1f500}  <||@
  Comment 2166 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-3547[java.util.HashMap.putVal(int, Object, Object, boolean, boolean)]"
  method "HotSpotCompilation-3547[java.util.HashMap.putVal(int, Object, Object, boolean, boolean)]"
  date 1527004919935
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 10c4ce940 448b560849c1e203493bc20f850ff554ff900f1f80000000000f1f800000000089842400c0feff4883ec6848896c246048897424508954244c48894c24404c8944243844894c2434897c2430448b5608448954242c448b5e24bb00d06cff4585db0f84df020000428b04dd0c0000008be8ffcd23ea3bc50f86ef06000049c1e303458b6cab104585ed0f85e70000004181faa33700f80f851b030000894424284d8bf3448bed458b5e084181fbdf3800f80f8564070000453b6e0c0f83c30600004d8b5f60498d6b20493b6f700f875904000049896f60410f1883e000000049b9e8c201c007000000498bc34d8b89a80000004d890b41c743085d3800f84189530c48c1e90341894b1049c1e803458943144589631848c1e803438944ae104b8d54ae1048c1ea094488241ab801000000034618894618b8010000000346148946143b461c0f8fa9040000817c242ca33700f80f85b801000048b80000000000000000488b6c24604883c468850554a5f1f4c5f877c34c895c2420428b2ced08000000458bf549c1e603423b14ed0c0000000f847503000081fd826500f80f845305000041bb000000004d8bd6666690458b6a18458bf549c1e6034585ed0f84910000004c89542410458bd341ffc2423b14ed0c0000000f840e0000008505e3a4f1f4458bda4d8bd6ebc5468b2ced1000000049c1e5034c3be90f84fe0000004885c90f84a3050000448954240c4c8974241844895c2428488bf1498bd548b8ffffffffffffffff0f1f8000000000e86cf754ff9085c00f852b040000448b5c240c4c8b542418488b4c24408b54244ce95bffffff4c8974241844895c24284c89542410817c242ca33700f80f85cb010000498b77604c8d56204d3b57700f87ee0300004d8957600f1886e00000004c8b542410bb00d06cff4c8b442438488b4c24408b54244c49bbe8c201c0070000004c8bce4d8b9ba80000004c891ec746085d3800f889560c48c1e903894e104d8bd849c1eb0344895e144489661849c1e90345894a1849c1ea094588241a837c2428070f8ddd0300004c8b7424184d85f60f859b010000488b742450e91bfeffff448b54242c4a8b1cd5d8020000488b43408b542430ffd09048b80000000000000000488b6c24604883c468850584a3f1f4c5f877c390e814f454ff90448b500c418bf2ffce8b54244c23d6443bd20f86e5030000448b6c90104585ed0f85fc010000817c242ca33700f80f856602000044895424284c8bf0448beabb00d06cff448b54242c8b7c2430448b4c24344c8b442438488b4c24408b54244c488b742450e9effcffff41817b08df3800f80f8513040000413b6b0c0f83640400004c895c2418896c2428448b54242c4a8b04d5a8020000488b7840488b7424508b54244c488b4c24404c8b44243849b90000000000000000488bd8488bc7ffd09048c1e8038b6c24284c8b5c2418418944ab10498d74ab1048c1ee09bb00d06cff4488241e488b742450e9effcffff448b54242c4a8b04d5a8020000488b7840488b742450488b4c24404c8b44243849b90000000000000000488bd8488bc7ffd09048c1e8034c8b6c2410418945184d8bd549c1ea09bb00d06cff4588241a837c2428070f8d3e0200004c8b742418e95cfeffff448b4c2434488b7424504585c90f8578020000bb00d06cff4c8b442438418b561449c1e803458946144d8bd649c1ea094588241a48c1e2034889542418498bd648b8ffffffffffffffff666690e8acf454ff90488b442418488b6c24604883c4688505bda1f1f4c5f877c3428b34ed10000000448bee49c1e5034c3b6c24400f84d7fdffffe97600000048be680b00c007000000ba04000000b901000000e81b4ce0ff904c8bd8bb00d06cff448b54242c8b7c24304c8b442438488b4c24408b54244c488b742450e970fbffff4889442420bb00d06cff8b7c2430448b4c24344c8b442438488b4c24408b54244c488b742450418bc2448b54242ce9d9fbffff488b4c24404885c90f84a30200004c89742418896c2428488bf1498bd548b8ffffffffffffffff660f1f440000e8ccf354ff9085c00f844b0000004c8b742418e917fdffff4c8bd88bea418bc2e9c3fdffff4c8bdee864f154ff90817c242ca33700f80f859100000048b80000000000000000488b6c24604883c4688505a2a0f1f4c5f877c38b6c242881fd826500f80f84c40000004c8b742418bb00d06cff448b54242c8b7c2430448b4c24344c8b442438488b4c24408b54244c488b742450e93cfbffff4c8b742418e98cfcffff4c8b6c241048be680b00c007000000ba04000000b901000000e8d04ae0ff90488bf04d8bd5e9f8fbffff448b54242c4a8b1cd5d8020000488b4340488b7424508b542430ffd09048b80000000000000000488b6c24604883c4688505f49ff1f4c5f877c3488b742450488b5424208b4c244c666690e874f054ff904c8b742418e907fcffff4c89742418488b742418488b542450488b4c2420448b44244c4c8b4c2440488b7c24380f1f440000e83cf054ff904c8bf0e9d1fbffff4c8b44243841c7879c020000edf9fdff4d89a7a8020000e8750555ff90448b4c24344c8b44243841c7879c020000e56bfeff4d89a7a8020000e8530555ff9041c7879c020000e55cfeff4d89a7a8020000e83b0555ff9049bb000000000000000041bae54cfeff8b4c24284589979c0200004d899fa8020000e8130555ff904c8b6c24104c8b542420448b4c24344c8b44243841c7879c020000ed02feff4d89a7a8020000e8e70455ff90448b4c24344c8b44243849bac839b47907000000498bca41bac437feff8b7c2430488b5c24408b54244c488b7424504589979c02000049898fa8020000e8a40455ff9049bac839b479070000004d8bda41bac450feffe961ffffff48b9000000000000000041bae533feff8b7c2430448b4c24344c8b442438eba64c8b44243841c7879c020000ed1ffeff4d89a7a8020000e84f0455ff90e86bcd97ff90e8450355ff90f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1024a1f78, value=0x10ba1de60]:0x10ba1de60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rdi|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@71d61297 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:36|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 57 10 stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 62 12 stack:56|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 67 14 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 72 16 stack:64|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 76 18 r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 80 20 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 85 22 r11|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 89 24 rbx|QWORD = MOVE input: long[4285321216|0xff6cd000]  <||@
  Comment 94 26 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 97 28 BRANCH trueDestinationProbability: 0.05975755506231859 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8  <||@
  Comment 103 block B8 null  <||@
  Comment 103 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 103 134 rax|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 111 136 rbp|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 115 138 rbp|DWORD = AND (x: rdx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 117 140 CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 119 142 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B77  <||@
  Comment 125 block B9 null  <||@
  Comment 125 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 125 146 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 129 148 r13|DWORD[.] = MOV [r11|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 134 150 TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 137 152 BRANCH trueDestinationProbability: 0.874487083904821 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B28  <||@
  Comment 143 block B10 null  <||@
  Comment 143 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 143 156 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 143 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 150 158 BRANCH trueDestinationProbability: 0.9275371750235902 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B22  <||@
  Comment 156 block B11 null  <||@
  Comment 156 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 156 162 stack:72|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 160 164 r14|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 163 166 r13|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 166 168 JUMP ~[] destination: B11 -> B12  <||@
  Comment 166 block B12 null  <||@
  Comment 166 170 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 166 172 r11|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD  <||@
  Comment 170 174 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}  <||@
  Comment 170 {meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}}  <||@
  Comment 177 176 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B19  <||@
  Comment 183 block B13 null  <||@
  Comment 183 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 183 180 CMP (x: r13|DWORD, y: [r14|QWORD[.] + 12]) size: DWORD  <||@
  Comment 187 182 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18  <||@
  Comment 193 block B14 null  <||@
  Comment 193 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 193 186 r11|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 197 188 rbp|QWORD = LEA [r11|QWORD + 32] size: QWORD  <||@
  Comment 201 190 CMP (x: rbp|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 205 192 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 211 block B16 null  <||@
  Comment 211 222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 211 224 MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD  <||@
  Comment 215 226 AMD64PREFETCH ~[r11|QWORD + 224] instr: 0  <||@
  Comment 223 228 r11|QWORD[*] = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 223 230 JUMP ~[] destination: B16 -> B17  <||@
  Comment 223 block B17 null  <||@
  Comment 223 232 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 223 234 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}  <||@
  Comment 223 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}}  <||@
  Comment 233 236 rax|QWORD[.] = MOVE r11|QWORD[*] moveKind: QWORD  <||@
  Comment 236 238 r9|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 243 240 MOV (x: [r11|QWORD[*]], y: r9|QWORD) size: QWORD  <||@
  Comment 246 242 MOV [r11|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}  <||@
  Comment 246 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}}  <||@
  Comment 254 244 MOV (x: [r11|QWORD[*] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 258 246 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 262 248 MOV (x: [r11|QWORD[*] + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 266 250 r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 270 252 MOV (x: [r11|QWORD[*] + 20], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 274 254 MOV (x: [r11|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 278 256 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 282 258 MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 287 260 rdx|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD  <||@
  Comment 292 262 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 296 264 MOVB (x: [rdx|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 300 266 JUMP ~[] destination: B17 -> B66  <||@
  Comment 300 block B66 null  <||@
  Comment 300 844 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 300 846 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 305 848 rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 24]) size: DWORD  <||@
  Comment 308 850 MOV (x: [rsi|QWORD[.] + 24], y: rax|DWORD) size: DWORD  <||@
  Comment 311 852 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 316 854 rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 20]) size: DWORD  <||@
  Comment 319 856 MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD  <||@
  Comment 322 858 CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) size: DWORD  <||@
  Comment 325 860 BRANCH trueDestinationProbability: 0.00201782121299221 condition: > trueDestination: B66 -> B67 falseDestination: B66 -> B70  <||@
  Comment 331 block B70 null  <||@
  Comment 331 898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 331 900 CMP stack:68|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 331 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 339 902 BRANCH trueDestinationProbability: 0.9016325592090135 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72  <||@
  Comment 345 block B71 null  <||@
  Comment 345 904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 345 906 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 355 908 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 364 12  <||@
  Comment 374 block B28 null  <||@
  Comment 374 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 374 414 stack:80|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 379 416 JUMP ~[] destination: B28 -> B29  <||@
  Comment 379 block B29 null  <||@
  Comment 379 418 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 379 420 rbp|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD state [bci:29]  <||@
  Comment 379 [rcx:0, rsi:0, r8:0, r13:0, stack:32, stack:56, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:630) [bci: 29, duringCall: false, rethrow: false]
              |0             |1          |2             |3            |4         |5          |6                  |7  |8          |9  |10  |11  |12 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |rdi|DWORD  |stack:80|QWORD[.]  |-  |rax|DWORD  |-  |-   |-   |-    <||@
  Comment 379 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 387 422 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 394 424 CMP (x: rdx|DWORD, y: [r13|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 402 426 BRANCH trueDestinationProbability: 0.07477440711014371 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B39  <||@
  Comment 408 block B39 null  <||@
  Comment 408 518 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 408 520 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 408 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 414 522 BRANCH trueDestinationProbability: 3.388845855926137E-4 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B43  <||@
  Comment 420 block B43 null  <||@
  Comment 420 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 420 556 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 426 558 r10|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 429 560 JUMP ~[] destination: B43 -> B44  <||@
  Comment 429 block B44 loop 0 depth 1 header:88|LoopBegin  <||@
  Comment 429 562 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 432 564 r13|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD state [bci:134]  <||@
  Comment 432 [rcx:0, r10:0, stack:32, stack:56, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:641) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1          |2             |3                  |4               |5               |6                  |7             |8  |9  |10  |11  |12        
     locals:  |stack:32|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |stack:80|QWORD[.]  |r10|QWORD[.]  |-  |-  |-   |-   |r11|DWORD   <||@
  Comment 432 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 436 566 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 443 568 TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 446 570 BRANCH trueDestinationProbability: 0.8149025908817031 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B56  <||@
  Comment 452 block B56 loop 0 depth 1 header:88|LoopBegin  <||@
  Comment 452 750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 452 752 stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 457 754 r10|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 463 756 CMP (x: rdx|DWORD, y: [r13|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 471 758 BRANCH trueDestinationProbability: 0.098936862660013 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B76  <||@
  Comment 477 block B76 loop 0 depth 1 header:88|LoopBegin  <||@
  Comment 477 974 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 477 976 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 thread: r15 state [bci:134]  <||@
  Comment 477 [rcx:0, r14:0, stack:16, stack:32, stack:56, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:641) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1          |2             |3                  |4               |5               |6                  |7                  |8  |9  |10  |11  |12        
     locals:  |stack:32|QWORD[.]  |rdx|DWORD  |rcx|QWORD[.]  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |stack:80|QWORD[.]  |stack:96|QWORD[.]  |-  |-  |-   |-   |r11|DWORD   <||@
  Comment 477 {infopoint: SAFEPOINT}  <||@
  Comment 477 11  <||@
  Comment 483 978 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 486 980 r10|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 489 982 JUMP ~[] destination: B76 -> B44  <||@
  Comment 491 block B57 loop 0 depth 1 header:88|LoopBegin  <||@
  Comment 491 760 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 491 762 r13|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 499 764 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 503 766 CMP (x: r13|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 506 768 BRANCH trueDestinationProbability: 0.3706140350877193 condition: = trueDestination: B57 -> B64 falseDestination: B57 -> B59  <||@
  Comment 512 block B59 loop 0 depth 1 header:88|LoopBegin  <||@
  Comment 512 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 512 776 TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 515 778 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61  <||@
  Comment 521 block B61 loop 0 depth 1 header:88|LoopBegin  <||@
  Comment 521 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 521 798 stack:100|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 526 800 stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 531 802 stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 536 804 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 539 806 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 542 808 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:203]  <||@
  Comment 542 7  <||@
  Comment 559 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 564 [stack:24, stack:32, stack:56, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:648) [bci: 203, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6                  |7  |8  |9  |10                 |11  |12             
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |stack:80|QWORD[.]  |-  |-  |-  |stack:88|QWORD[.]  |-   |stack:72|DWORD   <||@
  Comment 565 810 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 567 812 BRANCH trueDestinationProbability: 0.3205574912891986 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63  <||@
  Comment 573 block B62 loop 0 depth 1 header:88|LoopBegin  <||@
  Comment 573 814 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 573 816 r11|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 578 818 r10|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 583 820 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 588 822 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 592 824 JUMP ~[] destination: B62 -> B44  <||@
  Comment 597 block B45 null  <||@
  Comment 597 572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 597 574 stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 602 576 stack:72|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 607 578 stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 612 580 CMP stack:68|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 612 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 620 582 BRANCH trueDestinationProbability: 0.7054909305993691 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B52  <||@
  Comment 626 block B46 null  <||@
  Comment 626 584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 626 586 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 630 588 r10|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 634 590 CMP (x: r10|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 638 592 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B46 -> B47 falseDestination: B46 -> B48  <||@
  Comment 644 block B48 null  <||@
  Comment 644 620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 644 622 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 648 624 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 655 626 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 655 628 r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 660 638 JUMP ~[] destination: B48 -> B49  <||@
  Comment 660 block B49 null  <||@
  Comment 660 640 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 660 630 rbx|QWORD = MOVE input: long[4285321216|0xff6cd000]  <||@
  Comment 665 632 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 670 634 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 675 636 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 679 642 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}  <||@
  Comment 679 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>}}  <||@
  Comment 689 644 r9|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 692 646 r11|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 699 648 MOV (x: [rsi|QWORD[*]], y: r11|QWORD) size: QWORD  <||@
  Comment 702 650 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}  <||@
  Comment 702 {meta{HotSpotType<Ljava/util/HashMap$Node;, resolved>;compressed}}  <||@
  Comment 709 652 MOV (x: [rsi|QWORD[*] + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 712 654 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 716 656 MOV (x: [rsi|QWORD[*] + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 719 658 r11|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 726 660 MOV (x: [rsi|QWORD[*] + 20], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 730 662 MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 734 664 r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 738 666 MOV (x: [r10|QWORD[.] + 24], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 742 668 r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 746 670 MOVB (x: [r10|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 750 672 CMP stack:72|DWORD y: 7 size: DWORD  <||@
  Comment 755 674 BRANCH trueDestinationProbability: 0.9993591955439444 condition: < trueDestination: B49 -> B50 falseDestination: B49 -> B55  <||@
  Comment 761 block B50 null  <||@
  Comment 761 676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 761 678 r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 766 680 JUMP ~[] destination: B50 -> B64  <||@
  Comment 766 block B64 null  <||@
  Comment 766 832 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 766 834 TEST (x: r14|QWORD[.], y: r14|QWORD[.]) size: QWORD  <||@
  Comment 769 836 BRANCH trueDestinationProbability: 0.9201505395846559 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B73  <||@
  Comment 775 block B65 null  <||@
  Comment 775 838 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 775 840 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 780 842 JUMP ~[] destination: B65 -> B66  <||@
  Comment 785 block B72 null  <||@
  Comment 785 910 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 785 912 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 790 914 rbx|QWORD = MOV [r10|DWORD * 8 + 728] size: QWORD  <||@
  Comment 798 916 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 802 918 rdx|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 806 920 - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:295]  <||@
  Comment 806 {HotSpotMethod<HashMap.afterNodeInsertion(boolean)>}  <||@
  Comment 806 10  <||@
  Comment 808 []at java.util.HashMap.putVal(HashMap.java:664) [bci: 295, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 809 922 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 819 924 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 828 12  <||@
  Comment 838 block B1 null  <||@
  Comment 838 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 838 34 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:20]  <||@
  Comment 838 9  <||@
  Comment 839 {HotSpotMethod<HashMap.resize()>}  <||@
  Comment 844 [stack:56, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:629) [bci: 20, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 845 36 r10|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:23]  <||@
  Comment 845 [rax:0, stack:56, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:629) [bci: 23, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |rax|QWORD[.]       |                |                   |                   |                |                |   |   |   |   |    |    |     <||@
  Comment 845 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 849 38 rsi|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 854 40 rdx|DWORD = AND (x: stack:36|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 860 42 CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 863 44 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B7  <||@
  Comment 869 block B2 null  <||@
  Comment 869 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 869 48 r13|DWORD[.] = MOV [rax|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 874 50 TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 877 52 BRANCH trueDestinationProbability: 0.874487083904821 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6  <||@
  Comment 883 block B3 null  <||@
  Comment 883 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 883 56 CMP stack:68|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 883 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 891 58 BRANCH trueDestinationProbability: 0.9275371750235902 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 897 block B4 null  <||@
  Comment 897 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 897 62 stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 902 64 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 905 66 r13|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 908 68 rbx|QWORD = MOVE input: long[4285321216|0xff6cd000]  <||@
  Comment 913 70 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 918 72 rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 922 74 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 927 76 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 932 78 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 937 80 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 941 82 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 946 84 JUMP ~[] destination: B4 -> B12  <||@
  Comment 951 block B22 null  <||@
  Comment 951 302 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 951 304 CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}  <||@
  Comment 951 {meta{HotSpotType<[Ljava/util/HashMap$Node;, resolved>;compressed}}  <||@
  Comment 959 306 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B26  <||@
  Comment 965 block B23 null  <||@
  Comment 965 308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 965 310 CMP (x: rbp|DWORD, y: [r11|QWORD[.] + 12]) size: DWORD  <||@
  Comment 969 312 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 975 block B24 null  <||@
  Comment 975 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 975 316 stack:88|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 980 318 stack:72|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 984 320 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 989 322 rax|QWORD = MOV [r10|DWORD * 8 + 680] size: QWORD  <||@
  Comment 997 324 rdi|QWORD = MOV [rax|QWORD + 64] size: QWORD  <||@
  Comment 1001 326 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1006 328 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1010 330 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1015 332 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1020 334 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1030 336 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1033 338 rax|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1036 340 rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:56]  <||@
  Comment 1036 {HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>}  <||@
  Comment 1036 10  <||@
  Comment 1038 [stack:24, stack:80]at java.util.HashMap.putVal(HashMap.java:631) [bci: 56, duringCall: true, rethrow: false]
              |0                  |1               |2  |3  |4  |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |-               |-  |-  |-  |stack:64|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |stack:88|QWORD[.]  |stack:72|DWORD  |   |   |   |                |   |   |   |   |    |    |     <||@
  Comment 1039 342 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 1043 344 rbp|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1047 346 r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1052 348 MOV (x: [r11|QWORD[.] + rbp|DWORD * 4 + 16], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1057 350 rsi|QWORD[.] = LEA [r11|QWORD[.] + rbp|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1062 352 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1066 354 rbx|QWORD = MOVE input: long[4285321216|0xff6cd000]  <||@
  Comment 1071 356 MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1075 358 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1080 360 JUMP ~[] destination: B24 -> B66  <||@
  Comment 1085 block B52 null  <||@
  Comment 1085 686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1085 688 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1090 690 rax|QWORD = MOV [r10|DWORD * 8 + 680] size: QWORD  <||@
  Comment 1098 692 rdi|QWORD = MOV [rax|QWORD + 64] size: QWORD  <||@
  Comment 1102 694 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1107 698 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1112 700 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1117 702 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1127 704 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1130 706 rax|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1133 708 rax|QWORD[.] = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.]]) [] callTarget: HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:152]  <||@
  Comment 1133 {HotSpotMethod<HashMap.newNode(int, Object, Object, HashMap$Node)>}  <||@
  Comment 1133 10  <||@
  Comment 1135 [stack:16, stack:24, stack:32, stack:56, stack:80]at java.util.HashMap.putVal(HashMap.java:642) [bci: 152, duringCall: true, rethrow: false]
              |0                  |1               |2  |3                  |4               |5               |6                  |7  |8  |9  |10                 |11  |12             
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |-  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |stack:80|QWORD[.]  |-  |-  |-  |stack:88|QWORD[.]  |-   |stack:72|DWORD 
     stack:   |stack:96|QWORD[.]  |                |   |                   |                |                |                   |   |   |   |                   |    |                 <||@
  Comment 1136 710 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 1140 712 r13|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1145 714 MOV (x: [r13|QWORD[.] + 24], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1149 716 r10|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1156 718 rbx|QWORD = MOVE input: long[4285321216|0xff6cd000]  <||@
  Comment 1161 720 MOVB (x: [r10|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1165 722 CMP stack:72|DWORD y: 7 size: DWORD  <||@
  Comment 1170 724 BRANCH trueDestinationProbability: 0.9993591955439444 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B55  <||@
  Comment 1176 block B53 null  <||@
  Comment 1176 726 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1176 728 r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1181 730 JUMP ~[] destination: B53 -> B64  <||@
  Comment 1186 block B73 null  <||@
  Comment 1186 926 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1186 928 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1191 930 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1196 932 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1199 934 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B75  <||@
  Comment 1205 block B74 null  <||@
  Comment 1205 936 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1205 938 rbx|QWORD = MOVE input: long[4285321216|0xff6cd000]  <||@
  Comment 1210 940 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1215 942 rdx|DWORD[.] = MOV [r14|QWORD[.] + 20] size: DWORD  <||@
  Comment 1219 944 r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 1223 946 MOV (x: [r14|QWORD[.] + 20], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 1227 948 r10|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1234 950 MOVB (x: [r10|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1238 952 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 1242 954 stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1247 956 rdx|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1250 958 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:253]  <||@
  Comment 1250 7  <||@
  Comment 1263 {HotSpotMethod<HashMap.afterNodeAccess(HashMap$Node)>}  <||@
  Comment 1268 [stack:24]at java.util.HashMap.putVal(HashMap.java:657) [bci: 253, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12                
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |stack:88|QWORD[.]   <||@
  Comment 1269 960 rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1274 962 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 1283 12  <||@
  Comment 1293 block B30 null  <||@
  Comment 1293 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1293 430 rsi|DWORD[.] = MOV [r13|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1301 432 r13|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3488c91c encoding: base: 0 shift: 3  <||@
  Comment 1308 434 CMP (x: r13|QWORD[.], y: stack:48|QWORD[.]) size: QWORD  <||@
  Comment 1313 436 BRANCH trueDestinationProbability: 0.5288053365676167 condition: = trueDestination: B30 -> B64 falseDestination: B30 -> B32  <||@
  Comment 1324 block B15 null  <||@
  Comment 1324 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1324 196 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1324 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1334 198 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 1339 200 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1344 202 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10c2d3aa0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:29]  <||@
  Comment 1344 {Stub<NewArrayStub.newArray>@0x10c2d3aa0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1349 [r14:0, stack:56, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:630) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6             |7  |8               |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |r14|QWORD[.]  |-  |stack:72|DWORD  |-  |-   |-   |-    <||@
  Comment 1350 204 r11|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1353 206 rbx|QWORD = MOVE input: long[4285321216|0xff6cd000]  <||@
  Comment 1358 208 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1363 210 rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1367 212 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1372 214 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1377 216 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1381 218 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1386 220 JUMP ~[] destination: B15 -> B17  <||@
  Comment 1391 block B6 null  <||@
  Comment 1391 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1391 98 stack:80|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1396 100 rbx|QWORD = MOVE input: long[4285321216|0xff6cd000]  <||@
  Comment 1401 102 rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1405 104 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1410 106 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1415 108 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1420 110 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1424 112 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1429 114 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1432 116 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1437 118 JUMP ~[] destination: B6 -> B29  <||@
  Comment 1442 block B32 null  <||@
  Comment 1442 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1442 444 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1447 446 TEST (x: rcx|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 1450 448 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 1456 block B34 null  <||@
  Comment 1456 462 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1456 464 stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1461 466 stack:72|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1465 468 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1468 470 rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1471 472 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:91]  <||@
  Comment 1471 7  <||@
  Comment 1487 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 1492 [stack:24, stack:32, stack:56, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:635) [bci: 91, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6                  |7                  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |stack:80|QWORD[.]  |stack:88|QWORD[.]  |-  |-  |-   |-   |-    <||@
  Comment 1493 474 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1495 476 BRANCH trueDestinationProbability: 0.32432432432432434 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B38  <||@
  Comment 1501 block B38 null  <||@
  Comment 1501 512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1501 514 r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1506 516 JUMP ~[] destination: B38 -> B64  <||@
  Comment 1511 block B5 null  <||@
  Comment 1511 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1511 88 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1514 90 rbp|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1516 92 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1519 94 JUMP ~[] destination: B5 -> B22  <||@
  Comment 1524 block B67 null  <||@
  Comment 1524 862 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1524 864 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1527 868 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap.resize()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:288]  <||@
  Comment 1527 {HotSpotMethod<HashMap.resize()>}  <||@
  Comment 1527 9  <||@
  Comment 1532 [stack:80]at java.util.HashMap.putVal(HashMap.java:663) [bci: 288, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |-  |stack:64|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1533 870 CMP stack:68|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}  <||@
  Comment 1533 {meta{HotSpotType<Ljava/util/HashMap;, resolved>;compressed}}  <||@
  Comment 1541 872 BRANCH trueDestinationProbability: 0.9016325592090135 condition: = trueDestination: B67 -> B68 falseDestination: B67 -> B69  <||@
  Comment 1547 block B68 null  <||@
  Comment 1547 874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1547 876 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1557 878 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 1566 12  <||@
  Comment 1576 block B35 null  <||@
  Comment 1576 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1576 480 rbp|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1580 482 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 1580 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 1586 484 BRANCH trueDestinationProbability: 3.388845855926137E-4 condition: = trueDestination: B35 -> B41 falseDestination: B35 -> B37  <||@
  Comment 1592 block B37 null  <||@
  Comment 1592 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1592 492 r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1597 494 rbx|QWORD = MOVE input: long[4285321216|0xff6cd000]  <||@
  Comment 1602 496 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1607 498 rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1611 500 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1616 502 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1621 504 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1626 506 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1630 508 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1635 510 JUMP ~[] destination: B37 -> B43  <||@
  Comment 1640 block B63 null  <||@
  Comment 1640 826 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1640 828 r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1645 830 JUMP ~[] destination: B63 -> B64  <||@
  Comment 1650 block B47 null  <||@
  Comment 1650 594 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1650 596 r13|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1655 598 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1655 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1665 600 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 1670 602 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1675 604 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x10c2d3aa0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:134]  <||@
  Comment 1675 {Stub<NewArrayStub.newArray>@0x10c2d3aa0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1680 [r13:0, stack:24, stack:32, stack:56, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:641) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3                  |4               |5               |6                  |7             |8  |9  |10  |11  |12             
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |stack:80|QWORD[.]  |r13|QWORD[.]  |-  |-  |-   |-   |stack:72|DWORD   <||@
  Comment 1681 606 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1684 608 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1687 618 JUMP ~[] destination: B47 -> B49  <||@
  Comment 1692 block B69 null  <||@
  Comment 1692 880 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1692 882 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1697 884 rbx|QWORD = MOV [r10|DWORD * 8 + 728] size: QWORD  <||@
  Comment 1705 886 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 1709 888 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1714 890 rdx|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1718 892 - = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|DWORD]) [] callTarget: HotSpotMethod<HashMap.afterNodeInsertion(boolean)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:295]  <||@
  Comment 1718 {HotSpotMethod<HashMap.afterNodeInsertion(boolean)>}  <||@
  Comment 1718 10  <||@
  Comment 1720 []at java.util.HashMap.putVal(HashMap.java:664) [bci: 295, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1721 894 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1731 896 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858  <||@
  Comment 1740 12  <||@
  Comment 1750 block B55 null  <||@
  Comment 1750 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1750 738 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1755 740 rdx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1760 742 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1764 744 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:169]  <||@
  Comment 1764 9  <||@
  Comment 1767 {HotSpotMethod<HashMap.treeifyBin(HashMap$Node[], int)>}  <||@
  Comment 1772 [stack:24, stack:56, stack:80]at java.util.HashMap.putVal(HashMap.java:644) [bci: 169, duringCall: true, rethrow: false]
              |0                  |1  |2  |3                  |4               |5               |6  |7  |8  |9  |10                 |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |-  |-  |-  |-  |stack:88|QWORD[.]  |-   |-    <||@
  Comment 1773 746 r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1778 748 JUMP ~[] destination: B55 -> B64  <||@
  Comment 1783 block B40 null  <||@
  Comment 1783 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1783 526 stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1788 528 JUMP ~[] destination: B40 -> B41  <||@
  Comment 1788 block B41 null  <||@
  Comment 1788 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1788 532 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1793 534 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1798 536 rcx|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1803 538 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1808 540 r9|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1813 542 rdi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1818 544 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|QWORD[.], rdi|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@f96b858 state [bci:123]  <||@
  Comment 1818 9  <||@
  Comment 1823 {HotSpotMethod<HashMap$TreeNode.putTreeVal(HashMap, HashMap$Node[], int, Object, Object)>}  <||@
  Comment 1828 [stack:56, stack:80]at java.util.HashMap.putVal(HashMap.java:638) [bci: 123, duringCall: true, rethrow: false]
              |0                  |1  |2  |3                  |4               |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:56|QWORD[.]  |stack:60|DWORD  |stack:64|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1829 546 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1832 548 JUMP ~[] destination: B41 -> B64  <||@
  Comment 1837 block B75 null  <||@
  Comment 1837 964 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1837 966 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1842 968 MOV [r15|QWORD + 668] y: -132627 size: DWORD  <||@
  Comment 1853 970 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1860 972 DEOPT info [bci:222]  <||@
  Comment 1860 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 1865 [r8:0, r14:0, stack:80]at java.util.HashMap.putVal(HashMap.java:653) [bci: 222, duringCall: false, rethrow: false]
              |0                  |1  |2  |3            |4         |5               |6  |7  |8  |9  |10            |11  |12 
     locals:  |stack:32|QWORD[.]  |-  |-  |r8|QWORD[.]  |r9|DWORD  |stack:64|DWORD  |-  |-  |-  |-  |r14|QWORD[.]  |-   |-    <||@
  Comment 1866 block B7 null  <||@
  Comment 1866 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1866 122 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1871 124 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1876 126 MOV [r15|QWORD + 668] y: -103451 size: DWORD  <||@
  Comment 1887 128 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1894 130 DEOPT info [bci:23]  <||@
  Comment 1894 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 1899 [rax:0, r8:0, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:629) [bci: 23, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3            |4         |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |stack:64|DWORD  |-  |-  |-  |-  |-   |-   |-  
     stack:   |rax|QWORD[.]       |                |                   |             |          |                |   |   |   |   |    |    |     <||@
  Comment 1900 block B77 null  <||@
  Comment 1900 984 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1900 986 MOV [r15|QWORD + 668] y: -107291 size: DWORD  <||@
  Comment 1911 988 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1918 990 DEOPT info [bci:0]  <||@
  Comment 1918 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 1923 [r8:0, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:628) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3            |4         |5               |6  |7  |8  |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |stack:64|DWORD  |-  |-  |-  |-  |-   |-   |-    <||@
  Comment 1924 block B18 null  <||@
  Comment 1924 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1924 270 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1934 272 r10|DWORD = MOVE input: int[-111387|0xfffffffffffe4ce5]  <||@
  Comment 1940 276 JUMP ~[] destination: B18 -> B20  <||@
  Comment 1940 block B20 null  <||@
  Comment 1940 290 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1940 286 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1944 292 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1951 294 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1958 296 DEOPT info [bci:29]  <||@
  Comment 1958 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 1963 [r8:0, r14:0, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:630) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3            |4         |5               |6             |7  |8          |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |stack:64|DWORD  |r14|QWORD[.]  |-  |rcx|DWORD  |-  |-   |-   |-    <||@
  Comment 1964 block B60 null  <||@
  Comment 1964 780 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1964 782 r13|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1969 784 r10|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1974 786 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1979 788 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1984 790 MOV [r15|QWORD + 668] y: -130323 size: DWORD  <||@
  Comment 1995 792 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2002 794 DEOPT info [bci:134]  <||@
  Comment 2002 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 2007 [r8:0, r10:0, r13:0, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:641) [bci: 134, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3            |4         |5               |6             |7             |8  |9  |10  |11  |12        
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |stack:64|DWORD  |r10|QWORD[.]  |r13|QWORD[.]  |-  |-  |-   |-   |r11|DWORD   <||@
  Comment 2008 block B26 null  <||@
  Comment 2008 382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2008 384 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2013 386 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2018 388 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1613118162]  <||@
  Comment 2018 {Object[d.a@1613118162]}  <||@
  Comment 2028 390 rcx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2031 392 r10|DWORD = MOVE input: int[-116796|0xfffffffffffe37c4]  <||@
  Comment 2037 394 rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2041 402 JUMP ~[] destination: B26 -> B27  <||@
  Comment 2041 block B27 null  <||@
  Comment 2041 404 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2041 396 rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2046 398 rdx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2050 400 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2055 406 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2062 408 MOV (x: [r15|QWORD + 680], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 2069 410 DEOPT info [bci:29]  <||@
  Comment 2069 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 2074 [rbx:0, rsi:0, r8:0, r11:0]at java.util.HashMap.putVal(HashMap.java:630) [bci: 29, duringCall: false, rethrow: false]
              |0             |1          |2             |3            |4         |5          |6             |7  |8          |9  |10  |11  |12 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |rbx|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |rdi|DWORD  |r11|QWORD[.]  |-  |rax|DWORD  |-  |-   |-   |-    <||@
  Comment 2075 block B19 null  <||@
  Comment 2075 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2075 280 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1613118162]  <||@
  Comment 2075 {Object[d.a@1613118162]}  <||@
  Comment 2085 282 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2088 284 r10|DWORD = MOVE input: int[-110396|0xfffffffffffe50c4]  <||@
  Comment 2094 288 JUMP ~[] destination: B19 -> B20  <||@
  Comment 2099 block B25 null  <||@
  Comment 2099 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2099 364 rcx|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 2109 366 r10|DWORD = MOVE input: int[-117787|0xfffffffffffe33e5]  <||@
  Comment 2115 368 rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2119 370 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2124 372 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2129 380 JUMP ~[] destination: B25 -> B27  <||@
  Comment 2131 block B33 null  <||@
  Comment 2131 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2131 454 r8|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2136 456 MOV [r15|QWORD + 668] y: -122899 size: DWORD  <||@
  Comment 2147 458 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2154 460 DEOPT info [bci:29]  <||@
  Comment 2154 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1024a1f90, value=0x10ba1f5fe]:0x10ba1f5fe}  <||@
  Comment 2159 [r8:0, stack:32, stack:64, stack:80]at java.util.HashMap.putVal(HashMap.java:630) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1               |2                  |3            |4         |5               |6                  |7  |8          |9  |10  |11  |12 
     locals:  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |stack:64|DWORD  |stack:80|QWORD[.]  |-  |rax|DWORD  |-  |-   |-   |-    <||@
  Comment 2160 {Stub<ExceptionHandlerStub.exceptionHandler>@0x10be4bf20:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2160 4  <||@
  Comment 2166 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1024a1f88, value=0x10ba1f500]:0x10ba1f500}  <||@
  Comment 2166 5  <||@
  HexCodeFile>>> <|@
end_nmethod
