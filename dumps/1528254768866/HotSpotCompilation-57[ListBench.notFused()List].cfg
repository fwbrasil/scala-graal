begin_compilation
  name " HotSpotCompilation-57[bench.ListBench.notFused()]"
  method "HotSpotCompilation-57[bench.ListBench.notFused()]"
  date 1528254768871
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a4 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a4  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Lbench/ListBench;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 1]
returnStamp: a Lscala/collection/immutable/List;
signature: [Ljdk.vm.ci.meta.JavaType;@3c6d2ed
stamp: void
targetMethod: HotSpotMethod<ListBench.list()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a4 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?140 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<ListBench.notFused()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 55
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
a4 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
bci: 1
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 1]
polymorphic: false
stamp: a Lscala/collection/immutable/List;
targetMethod: Direct#ListBench.list
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v43 
stateDuring: ?140 
=== Succesors ===
next: v181 
=== Usages ===
?141 ?9 ?142 v57 v181 
=== Predecessor ===
v0 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v43 stateDuring: ?140 #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid a150 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v153 v161 ?5 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<ListBench.notFused()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 1]
rethrowException: false
sourceFile: Bench.scala
sourceLine: 55
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a150 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a4 
=== Succesors ===
next: a8 
=== Usages ===
=== Predecessor ===
a4 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a4 #next: a8  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 4]
rawvalue: BoundMethodHandle.Species_L@1891860531
stableDimension: 0
stamp: a!# Ljava/lang/invoke/BoundMethodHandle$Species_L;
stampKind: a -
value: Object[BoundMethodHandle.Species_L@1891860531]
=== Inputs ===
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 4]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@72c6791c
stamp: void
targetMethod: HotSpotMethod<1989780873.linkToTargetMethod(Object)>
=== Inputs ===
arguments: a6 
=== Succesors ===
=== Usages ===
a8 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a6  <|@  <|@
tid ?141 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<ListBench.notFused()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 55
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a4 
=== Succesors ===
=== Usages ===
a8 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a8 <|@
d <@d|@=== Debug Properties ===
bci: 4
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 4]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#1989780873.linkToTargetMethod
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v44 
stateDuring: ?141 
=== Succesors ===
next: a174 
=== Usages ===
?9 ?142 v57 
=== Predecessor ===
v181 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v44 stateDuring: ?141 #next: a174  <|@  <|@
f <@~|@floating>@ <|@
tid a45 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 9]
rawvalue: Class:scala.collection.immutable.List$
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:scala.collection.immutable.List$]
=== Inputs ===
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a45 
index: - 
=== Succesors ===
=== Usages ===
a174 a176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a45 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a174 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: List$.MODULE$
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 9]
nullCheck: false
stamp: n# Lscala/collection/immutable/List$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v178 
=== Succesors ===
next: v182 
=== Usages ===
a49 v182 
=== Predecessor ===
a8 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v178 #next: v182  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<ListBench.notFused()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 4]
rethrowException: false
sourceFile: Bench.scala
sourceLine: 55
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - a4 a8 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a4 a8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?9 
object: a174 
=== Succesors ===
next: a12 
=== Usages ===
=== Predecessor ===
a174 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?9 object: a174 #next: a12  <|@  <|@
f <@~|@floating>@ <|@
tid a49 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 9]
op: Uncompress
stamp: a# Lscala/collection/immutable/List$;
=== Inputs ===
value: a174 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a174  <|@  <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 12]
returnStamp: a - (unchecked=a Lscala/collection/generic/GenTraversableFactory$GenericCanBuildFrom;)
signature: [Ljdk.vm.ci.meta.JavaType;@3ea0bca0
stamp: void
targetMethod: HotSpotMethod<List$.canBuildFrom()>
=== Inputs ===
arguments: a49 
=== Succesors ===
=== Usages ===
a12 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a49  <|@  <|@
tid ?142 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<ListBench.notFused()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 55
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - a4 a8 
=== Succesors ===
=== Usages ===
a12 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a4 a8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a12 <|@
d <@d|@=== Debug Properties ===
bci: 12
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 12]
polymorphic: false
stamp: a -
targetMethod: Direct#List$.canBuildFrom
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v53 
stateDuring: ?142 
=== Succesors ===
next: a15 
=== Usages ===
v57 
=== Predecessor ===
v182 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v53 stateDuring: ?142 #next: a15  <|@  <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 15]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@7492cbbc
stamp: void
targetMethod: HotSpotMethod<List.map(Function1, CanBuildFrom)>
=== Inputs ===
arguments: a4 a8 a12 
=== Succesors ===
=== Usages ===
a15 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a4 a8 a12  <|@  <|@
tid ?143 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<ListBench.notFused()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 55
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
a15 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a15 <|@
d <@d|@=== Debug Properties ===
bci: 15
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 15]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#List.map
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v57 
stateDuring: ?143 
=== Succesors ===
next: v175 
=== Usages ===
?16 v67 ?144 v179 ?27 ?145 
=== Predecessor ===
a12 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v57 stateDuring: ?143 #next: v175  <|@  <|@
tid ?16 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<ListBench.notFused()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 15]
rethrowException: false
sourceFile: Bench.scala
sourceLine: 55
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a15 
=== Succesors ===
=== Usages ===
v153 v175 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a15  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a15 
index: - 
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a15 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at bench.ListBench.notFused(Bench.scala:55) [bci: 18]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?16 
guard: - 
address: v179 
=== Succesors ===
next: v87 
=== Usages ===
v172 
=== Predecessor ===
a15 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?16 guard: - address: v179 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at bench.ListBench.notFused(Bench.scala:55) [bci: 18]
rawvalue: meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v172 v173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at bench.ListBench.notFused(Bench.scala:55) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v175 
y: v171 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v175 y: v171  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v172 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v86 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v172 #trueSuccessor: v84 #falseSuccessor: v86  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a26 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a26  <|@  <|@
f <@~|@floating>@ <|@
tid a24 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 21]
rawvalue: BoundMethodHandle.Species_L@1950088325
stableDimension: 0
stamp: a!# Ljava/lang/invoke/BoundMethodHandle$Species_L;
stampKind: a -
value: Object[BoundMethodHandle.Species_L@1950088325]
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 21]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@41763e79
stamp: void
targetMethod: HotSpotMethod<1989780873.linkToTargetMethod(Object)>
=== Inputs ===
arguments: a24 
=== Succesors ===
=== Usages ===
a26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a24  <|@  <|@
tid ?144 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<ListBench.notFused()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 55
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a15 
=== Succesors ===
=== Usages ===
a26 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a26 <|@
d <@d|@=== Debug Properties ===
bci: 21
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 21]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#1989780873.linkToTargetMethod
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v60 
stateDuring: ?144 
=== Succesors ===
next: a176 
=== Usages ===
?27 ?145 v67 
=== Predecessor ===
v84 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v60 stateDuring: ?144 #next: a176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a176 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: List$.MODULE$
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 26]
nullCheck: false
stamp: n# Lscala/collection/immutable/List$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v178 
=== Succesors ===
next: v183 
=== Usages ===
a62 v183 
=== Predecessor ===
a26 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v178 #next: v183  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<ListBench.notFused()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 21]
rethrowException: false
sourceFile: Bench.scala
sourceLine: 55
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - a15 a26 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a15 a26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?27 
object: a176 
=== Succesors ===
next: a30 
=== Usages ===
=== Predecessor ===
a176 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?27 object: a176 #next: a30  <|@  <|@
f <@~|@floating>@ <|@
tid a62 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 26]
op: Uncompress
stamp: a# Lscala/collection/immutable/List$;
=== Inputs ===
value: a176 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a176  <|@  <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 29]
returnStamp: a - (unchecked=a Lscala/collection/generic/GenTraversableFactory$GenericCanBuildFrom;)
signature: [Ljdk.vm.ci.meta.JavaType;@39a1d2
stamp: void
targetMethod: HotSpotMethod<List$.canBuildFrom()>
=== Inputs ===
arguments: a62 
=== Succesors ===
=== Usages ===
a30 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a62  <|@  <|@
tid ?145 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<ListBench.notFused()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 55
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - a15 a26 
=== Succesors ===
=== Usages ===
a30 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a15 a26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a30 <|@
d <@d|@=== Debug Properties ===
bci: 29
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 29]
polymorphic: false
stamp: a -
targetMethod: Direct#List$.canBuildFrom
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v66 
stateDuring: ?145 
=== Succesors ===
next: a33 
=== Usages ===
v67 
=== Predecessor ===
v183 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v66 stateDuring: ?145 #next: a33  <|@  <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 32]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@3b4758c9
stamp: void
targetMethod: HotSpotMethod<List.map(Function1, CanBuildFrom)>
=== Inputs ===
arguments: a15 a26 a30 
=== Succesors ===
=== Usages ===
a33 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a15 a26 a30  <|@  <|@
tid ?146 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<ListBench.notFused()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 55
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
a33 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a33 <|@
d <@d|@=== Debug Properties ===
bci: 32
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 32]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#List.map
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v67 
stateDuring: ?146 
=== Succesors ===
next: v177 
=== Usages ===
?34 v180 v42 
=== Predecessor ===
a30 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v67 stateDuring: ?146 #next: v177  <|@  <|@
tid ?34 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<ListBench.notFused()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 32]
rethrowException: false
sourceFile: Bench.scala
sourceLine: 55
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a33 
=== Succesors ===
=== Usages ===
v161 v177 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a33  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a33 
index: - 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a33 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at bench.ListBench.notFused(Bench.scala:55) [bci: 35]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?34 
guard: - 
address: v180 
=== Succesors ===
next: v99 
=== Usages ===
v173 
=== Predecessor ===
a33 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?34 guard: - address: v180 #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at bench.ListBench.notFused(Bench.scala:55) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v177 
y: v171 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v177 y: v171  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 35]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v173 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v173 #trueSuccessor: v96 #falseSuccessor: v98  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v42  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 38]
stamp: void
=== Inputs ===
result: a33 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a33 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -17715
stableDimension: 0
stamp: i32 [-17715] ⇊00000000ffffbacd ⇈00000000ffffbacd
stampKind: i32
value: int[-17715|0xffffffffffffbacd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?34 
actionAndReason: i163 
speculation: a150 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?34 actionAndReason: i163 speculation: a150  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -15155
stableDimension: 0
stamp: i32 [-15155] ⇊00000000ffffc4cd ⇈00000000ffffc4cd
stampKind: i32
value: int[-15155|0xffffffffffffc4cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?16 
actionAndReason: i155 
speculation: a150 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?16 actionAndReason: i155 speculation: a150  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a4 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a4  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Lbench/ListBench;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 1]
returnStamp: a Lscala/collection/immutable/List;
signature: [Ljdk.vm.ci.meta.JavaType;@3c6d2ed
stamp: void
targetMethod: HotSpotMethod<ListBench.list()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a4 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?140 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<ListBench.notFused()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 55
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
a4 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a4 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 1]
polymorphic: false
stamp: a Lscala/collection/immutable/List;
targetMethod: Direct#ListBench.list
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v43 
stateDuring: ?140 
=== Succesors ===
next: v181 
=== Usages ===
?141 ?9 ?142 v57 v181 
=== Predecessor ===
v0 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v43 stateDuring: ?140 #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid a150 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v153 v161 ?5 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<ListBench.notFused()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 1]
rethrowException: false
sourceFile: Bench.scala
sourceLine: 55
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a150 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a4 
=== Succesors ===
next: a8 
=== Usages ===
=== Predecessor ===
a4 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a4 #next: a8  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 4]
rawvalue: BoundMethodHandle.Species_L@1891860531
stableDimension: 0
stamp: a!# Ljava/lang/invoke/BoundMethodHandle$Species_L;
stampKind: a -
value: Object[BoundMethodHandle.Species_L@1891860531]
=== Inputs ===
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 4]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@72c6791c
stamp: void
targetMethod: HotSpotMethod<1989780873.linkToTargetMethod(Object)>
=== Inputs ===
arguments: a6 
=== Succesors ===
=== Usages ===
a8 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a6  <|@  <|@
tid ?141 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<ListBench.notFused()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 55
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a4 
=== Succesors ===
=== Usages ===
a8 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a8 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 4
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 4]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#1989780873.linkToTargetMethod
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v44 
stateDuring: ?141 
=== Succesors ===
next: a174 
=== Usages ===
?9 ?142 v57 
=== Predecessor ===
v181 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v44 stateDuring: ?141 #next: a174  <|@  <|@
f <@~|@floating>@ <|@
tid a45 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 9]
rawvalue: Class:scala.collection.immutable.List$
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:scala.collection.immutable.List$]
=== Inputs ===
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
result [v4|QWORD[.] + 104] <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a45 
index: - 
=== Succesors ===
=== Usages ===
a174 a176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a45 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a174 <|@
result v5|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: List$.MODULE$
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 9]
nullCheck: false
stamp: n# Lscala/collection/immutable/List$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v178 
=== Succesors ===
next: v182 
=== Usages ===
a49 v182 
=== Predecessor ===
a8 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v178 #next: v182  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<ListBench.notFused()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 4]
rethrowException: false
sourceFile: Bench.scala
sourceLine: 55
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - a4 a8 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a4 a8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?9 
object: a174 
=== Succesors ===
next: a12 
=== Usages ===
=== Predecessor ===
a174 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?9 object: a174 #next: a12  <|@  <|@
f <@~|@floating>@ <|@
tid a49 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 9]
op: Uncompress
stamp: a# Lscala/collection/immutable/List$;
=== Inputs ===
value: a174 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a174  <|@  <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 12]
returnStamp: a - (unchecked=a Lscala/collection/generic/GenTraversableFactory$GenericCanBuildFrom;)
signature: [Ljdk.vm.ci.meta.JavaType;@3ea0bca0
stamp: void
targetMethod: HotSpotMethod<List$.canBuildFrom()>
=== Inputs ===
arguments: a49 
=== Succesors ===
=== Usages ===
a12 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a49  <|@  <|@
tid ?142 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<ListBench.notFused()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 55
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - a4 a8 
=== Succesors ===
=== Usages ===
a12 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a4 a8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a12 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 12
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 12]
polymorphic: false
stamp: a -
targetMethod: Direct#List$.canBuildFrom
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v53 
stateDuring: ?142 
=== Succesors ===
next: a15 
=== Usages ===
v57 
=== Predecessor ===
v182 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v53 stateDuring: ?142 #next: a15  <|@  <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 15]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@7492cbbc
stamp: void
targetMethod: HotSpotMethod<List.map(Function1, CanBuildFrom)>
=== Inputs ===
arguments: a4 a8 a12 
=== Succesors ===
=== Usages ===
a15 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a4 a8 a12  <|@  <|@
tid ?143 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<ListBench.notFused()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 55
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
a15 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a15 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 15
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 15]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#List.map
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v57 
stateDuring: ?143 
=== Succesors ===
next: v175 
=== Usages ===
?16 v67 ?144 v179 ?27 ?145 
=== Predecessor ===
a12 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v57 stateDuring: ?143 #next: v175  <|@  <|@
tid ?16 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<ListBench.notFused()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 15]
rethrowException: false
sourceFile: Bench.scala
sourceLine: 55
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a15 
=== Succesors ===
=== Usages ===
v153 v175 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a15  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
result [v8|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a15 
index: - 
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a15 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v175 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at bench.ListBench.notFused(Bench.scala:55) [bci: 18]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?16 
guard: - 
address: v179 
=== Succesors ===
next: v87 
=== Usages ===
v172 
=== Predecessor ===
a15 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?16 guard: - address: v179 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
result meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at bench.ListBench.notFused(Bench.scala:55) [bci: 18]
rawvalue: meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v172 v173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at bench.ListBench.notFused(Bench.scala:55) [bci: 18]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v175 
y: v171 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v175 y: v171  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@7c05424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v172 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v86 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v172 #trueSuccessor: v84 #falseSuccessor: v86  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@555fdd59 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 1]
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ListBench.list()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:1] <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 4]
stack: Object[null] 
locals: - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoundMethodHandle.Species_L@1891860531] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 4]
stack: v1|QWORD[.] 
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<1989780873.linkToTargetMethod(Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.collection.immutable.List$] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v4|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 9]
stack: v1|QWORD[.] v3|QWORD[.] 
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v5|DWORD[.] * 8] state [bci:9] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1c28631e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 12]
stack: v1|QWORD[.] v3|QWORD[.] 
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List$.canBuildFrom()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:12] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 15]
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<List.map(Function1, CanBuildFrom)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 18]
stack: v8|QWORD[.] 
locals: - 
>@ <|@ instruction CMP [v8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>;compressed} state [bci:18] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a26 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a26  <|@  <|@
f <@~|@floating>@ <|@
tid a24 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 21]
rawvalue: BoundMethodHandle.Species_L@1950088325
stableDimension: 0
stamp: a!# Ljava/lang/invoke/BoundMethodHandle$Species_L;
stampKind: a -
value: Object[BoundMethodHandle.Species_L@1950088325]
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 21]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@41763e79
stamp: void
targetMethod: HotSpotMethod<1989780873.linkToTargetMethod(Object)>
=== Inputs ===
arguments: a24 
=== Succesors ===
=== Usages ===
a26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a24  <|@  <|@
tid ?144 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<ListBench.notFused()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 55
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a15 
=== Succesors ===
=== Usages ===
a26 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a15  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a26 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 21
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 21]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#1989780873.linkToTargetMethod
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v60 
stateDuring: ?144 
=== Succesors ===
next: a176 
=== Usages ===
?27 ?145 v67 
=== Predecessor ===
v84 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v60 stateDuring: ?144 #next: a176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a176 <|@
result v11|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: List$.MODULE$
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 26]
nullCheck: false
stamp: n# Lscala/collection/immutable/List$;
=== Inputs ===
stateBefore: - 
guard: - 
address: v178 
=== Succesors ===
next: v183 
=== Usages ===
a62 v183 
=== Predecessor ===
a26 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v178 #next: v183  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<ListBench.notFused()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 21]
rethrowException: false
sourceFile: Bench.scala
sourceLine: 55
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - a15 a26 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a15 a26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?27 
object: a176 
=== Succesors ===
next: a30 
=== Usages ===
=== Predecessor ===
a176 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?27 object: a176 #next: a30  <|@  <|@
f <@~|@floating>@ <|@
tid a62 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 26]
op: Uncompress
stamp: a# Lscala/collection/immutable/List$;
=== Inputs ===
value: a176 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a176  <|@  <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 29]
returnStamp: a - (unchecked=a Lscala/collection/generic/GenTraversableFactory$GenericCanBuildFrom;)
signature: [Ljdk.vm.ci.meta.JavaType;@39a1d2
stamp: void
targetMethod: HotSpotMethod<List$.canBuildFrom()>
=== Inputs ===
arguments: a62 
=== Succesors ===
=== Usages ===
a30 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a62  <|@  <|@
tid ?145 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<ListBench.notFused()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 55
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - a15 a26 
=== Succesors ===
=== Usages ===
a30 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a15 a26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a30 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 29
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 29]
polymorphic: false
stamp: a -
targetMethod: Direct#List$.canBuildFrom
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v66 
stateDuring: ?145 
=== Succesors ===
next: a33 
=== Usages ===
v67 
=== Predecessor ===
v183 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v66 stateDuring: ?145 #next: a33  <|@  <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 32]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@3b4758c9
stamp: void
targetMethod: HotSpotMethod<List.map(Function1, CanBuildFrom)>
=== Inputs ===
arguments: a15 a26 a30 
=== Succesors ===
=== Usages ===
a33 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a15 a26 a30  <|@  <|@
tid ?146 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<ListBench.notFused()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 55
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
a33 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a33 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 32
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 32]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#List.map
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v67 
stateDuring: ?146 
=== Succesors ===
next: v177 
=== Usages ===
?34 v180 v42 
=== Predecessor ===
a30 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v67 stateDuring: ?146 #next: v177  <|@  <|@
tid ?34 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<ListBench.notFused()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 32]
rethrowException: false
sourceFile: Bench.scala
sourceLine: 55
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a33 
=== Succesors ===
=== Usages ===
v161 v177 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a33  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
result [v14|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a33 
index: - 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a33 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v177 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at bench.ListBench.notFused(Bench.scala:55) [bci: 35]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?34 
guard: - 
address: v180 
=== Succesors ===
next: v99 
=== Usages ===
v173 
=== Predecessor ===
a33 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?34 guard: - address: v180 #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at bench.ListBench.notFused(Bench.scala:55) [bci: 35]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v177 
y: v171 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v177 y: v171  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@7c05424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 35]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v173 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v173 #trueSuccessor: v96 #falseSuccessor: v98  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoundMethodHandle.Species_L@1950088325] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 21]
stack: v8|QWORD[.] 
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<1989780873.linkToTargetMethod(Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v4|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 26]
stack: v8|QWORD[.] v10|QWORD[.] 
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v11|DWORD[.] * 8] state [bci:26] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1c28631e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 29]
stack: v8|QWORD[.] v10|QWORD[.] 
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List$.canBuildFrom()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 32]
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<List.map(Function1, CanBuildFrom)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 35]
stack: v14|QWORD[.] 
locals: - 
>@ <|@ instruction CMP [v14|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>;compressed} state [bci:35] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v42  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 38]
stamp: void
=== Inputs ===
result: a33 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a33 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
result int[-17715|0xffffffffffffbacd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -17715
stableDimension: 0
stamp: i32 [-17715] ⇊00000000ffffbacd ⇈00000000ffffbacd
stampKind: i32
value: int[-17715|0xffffffffffffbacd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?34 
actionAndReason: i163 
speculation: a150 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?34 actionAndReason: i163 speculation: a150  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -17715 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 35]
stack: v14|QWORD[.] 
locals: - 
>@ <|@ instruction DEOPT info [bci:35] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at bench.ListBench.notFused(Bench.scala:55) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
result int[-15155|0xffffffffffffc4cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -15155
stableDimension: 0
stamp: i32 [-15155] ⇊00000000ffffc4cd ⇈00000000ffffc4cd
stampKind: i32
value: int[-15155|0xffffffffffffc4cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?16 
actionAndReason: i155 
speculation: a150 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?16 actionAndReason: i155 speculation: a150  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -15155 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 18]
stack: v8|QWORD[.] 
locals: - 
>@ <|@ instruction DEOPT info [bci:18] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@555fdd59 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 1]
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ListBench.list()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:1] <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 4]
stack: Object[null] 
locals: - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoundMethodHandle.Species_L@1891860531] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 4]
stack: v1|QWORD[.] 
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<1989780873.linkToTargetMethod(Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.collection.immutable.List$] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v4|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 9]
stack: v1|QWORD[.] v3|QWORD[.] 
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v5|DWORD[.] * 8] state [bci:9] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1c28631e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 12]
stack: v1|QWORD[.] v3|QWORD[.] 
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List$.canBuildFrom()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:12] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 15]
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<List.map(Function1, CanBuildFrom)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 18]
stack: v8|QWORD[.] 
locals: - 
>@ <|@ instruction CMP [v8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>;compressed} state [bci:18] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoundMethodHandle.Species_L@1950088325] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 21]
stack: v8|QWORD[.] 
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<1989780873.linkToTargetMethod(Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:21] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v4|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 26]
stack: v8|QWORD[.] v10|QWORD[.] 
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v11|DWORD[.] * 8] state [bci:26] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1c28631e encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 29]
stack: v8|QWORD[.] v10|QWORD[.] 
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List$.canBuildFrom()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:29] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 32]
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<List.map(Function1, CanBuildFrom)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 35]
stack: v14|QWORD[.] 
locals: - 
>@ <|@ instruction CMP [v14|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>;compressed} state [bci:35] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -15155 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 18]
stack: v8|QWORD[.] 
locals: - 
>@ <|@ instruction DEOPT info [bci:18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -17715 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.ListBench.notFused(Bench.scala:55) [bci: 35]
stack: v14|QWORD[.] 
locals: - 
>@ <|@ instruction DEOPT info [bci:35] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #2          // list:()scala.collection.immutable.List
     4: invokedynamic #-22        // java.lang.invoke.LambdaForm$MH.1989780873.linkToTargetMethod:(java.lang.Object)java.lang.Object
     9: getstatic     #5          // scala.collection.immutable.List$.MODULE$:scala.collection.immutable.List$
    12: invokevirtual #6          // scala.collection.immutable.List$.canBuildFrom:()scala.collection.generic.CanBuildFrom
    15: invokevirtual #7          // scala.collection.immutable.List.map:(scala.Function1, scala.collection.generic.CanBuildFrom)java.lang.Object
    18: checkcast     #75         // scala.collection.immutable.List
    21: invokedynamic #-23        // java.lang.invoke.LambdaForm$MH.1989780873.linkToTargetMethod:(java.lang.Object)java.lang.Object
    26: getstatic     #5          // scala.collection.immutable.List$.MODULE$:scala.collection.immutable.List$
    29: invokevirtual #6          // scala.collection.immutable.List$.canBuildFrom:()scala.collection.generic.CanBuildFrom
    32: invokevirtual #7          // scala.collection.immutable.List.map:(scala.Function1, scala.collection.generic.CanBuildFrom)java.lang.Object
    35: checkcast     #75         // scala.collection.immutable.List
    38: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@555fdd59 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: []
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 1]
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ListBench.list()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:1] <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 4]
stack: Object[null] 
locals: - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr   10  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoundMethodHandle.Species_L@1891860531] <|@ <|@
      nr   12  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 4]
stack: stack:32|QWORD[.] 
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<1989780873.linkToTargetMethod(Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:4] <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.collection.immutable.List$] <|@ <|@
      nr   18  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   20  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:16]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 9]
stack: stack:32|QWORD[.] rax|QWORD[.] 
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:9] <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1c28631e encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 12]
stack: stack:32|QWORD[.] stack:40|QWORD[.] 
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List$.canBuildFrom()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:12] <|@ <|@
      nr   28  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: []
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 15]
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<List.map(Function1, CanBuildFrom)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:15] <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 18]
stack: rax|QWORD[.] 
locals: - 
>@ <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>;compressed} state [bci:18] <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoundMethodHandle.Species_L@1950088325] <|@ <|@
      nr   46  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 21]
stack: stack:40|QWORD[.] 
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<1989780873.linkToTargetMethod(Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:21] <|@ <|@
      nr   48  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.collection.immutable.List$] // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:8]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 26]
stack: stack:40|QWORD[.] rax|QWORD[.] 
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:26] <|@ <|@
      nr   54  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1c28631e encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 29]
stack: stack:40|QWORD[.] stack:32|QWORD[.] 
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List$.canBuildFrom()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:29] <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: []
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 32]
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<List.map(Function1, CanBuildFrom)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:32] <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 35]
stack: rax|QWORD[.] 
locals: - 
>@ <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>;compressed} state [bci:35] <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction MOV [r15|QWORD + 668] y: -15155 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 18]
stack: rax|QWORD[.] 
locals: - 
>@ <|@ instruction DEOPT info [bci:18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction MOV [r15|QWORD + 668] y: -17715 size: DWORD <|@ <|@
      nr   80  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 35]
stack: rax|QWORD[.] 
locals: - 
>@ <|@ instruction DEOPT info [bci:35] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #2          // list:()scala.collection.immutable.List
     4: invokedynamic #-22        // java.lang.invoke.LambdaForm$MH.1989780873.linkToTargetMethod:(java.lang.Object)java.lang.Object
     9: getstatic     #5          // scala.collection.immutable.List$.MODULE$:scala.collection.immutable.List$
    12: invokevirtual #6          // scala.collection.immutable.List$.canBuildFrom:()scala.collection.generic.CanBuildFrom
    15: invokevirtual #7          // scala.collection.immutable.List.map:(scala.Function1, scala.collection.generic.CanBuildFrom)java.lang.Object
    18: checkcast     #75         // scala.collection.immutable.List
    21: invokedynamic #-23        // java.lang.invoke.LambdaForm$MH.1989780873.linkToTargetMethod:(java.lang.Object)java.lang.Object
    26: getstatic     #5          // scala.collection.immutable.List$.MODULE$:scala.collection.immutable.List$
    29: invokevirtual #6          // scala.collection.immutable.List$.canBuildFrom:()scala.collection.generic.CanBuildFrom
    32: invokevirtual #7          // scala.collection.immutable.List.map:(scala.Function1, scala.collection.generic.CanBuildFrom)java.lang.Object
    35: checkcast     #75         // scala.collection.immutable.List
    38: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@555fdd59 slotKind: QWORD <|@ <|@
      nr    6  <|@ st <@st|@reference-map: []
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 1]
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ListBench.list()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:1] <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 4]
stack: Object[null] 
locals: - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:4] <|@ <|@
      nr   10  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoundMethodHandle.Species_L@1891860531] <|@ <|@
      nr   12  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 4]
stack: stack:32|QWORD[.] 
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<1989780873.linkToTargetMethod(Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:4] <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.collection.immutable.List$] <|@ <|@
      nr   18  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   20  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:16]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 9]
stack: stack:32|QWORD[.] rax|QWORD[.] 
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:9] <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1c28631e encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 12]
stack: stack:32|QWORD[.] stack:40|QWORD[.] 
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List$.canBuildFrom()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:12] <|@ <|@
      nr   28  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: []
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 15]
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<List.map(Function1, CanBuildFrom)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:15] <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 18]
stack: rax|QWORD[.] 
locals: - 
>@ <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>;compressed} state [bci:18] <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoundMethodHandle.Species_L@1950088325] <|@ <|@
      nr   46  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 21]
stack: stack:40|QWORD[.] 
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<1989780873.linkToTargetMethod(Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:21] <|@ <|@
      nr   48  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.collection.immutable.List$] // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:8]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 26]
stack: stack:40|QWORD[.] rax|QWORD[.] 
locals: - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:26] <|@ <|@
      nr   54  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1c28631e encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 29]
stack: stack:40|QWORD[.] stack:32|QWORD[.] 
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List$.canBuildFrom()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:29] <|@ <|@
      nr   60  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: []
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 32]
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<List.map(Function1, CanBuildFrom)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:32] <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 35]
stack: rax|QWORD[.] 
locals: - 
>@ <|@ instruction CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>;compressed} state [bci:35] <|@ <|@
      nr   70  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction MOV [r15|QWORD + 668] y: -15155 size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   90  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 18]
stack: rax|QWORD[.] 
locals: - 
>@ <|@ instruction DEOPT info [bci:18] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction MOV [r15|QWORD + 668] y: -17715 size: DWORD <|@ <|@
      nr   80  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
bench.ListBench.notFused(Bench.scala:55) [bci: 35]
stack: rax|QWORD[.] 
locals: - 
>@ <|@ instruction DEOPT info [bci:35] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #2          // list:()scala.collection.immutable.List
     4: invokedynamic #-22        // java.lang.invoke.LambdaForm$MH.1989780873.linkToTargetMethod:(java.lang.Object)java.lang.Object
     9: getstatic     #5          // scala.collection.immutable.List$.MODULE$:scala.collection.immutable.List$
    12: invokevirtual #6          // scala.collection.immutable.List$.canBuildFrom:()scala.collection.generic.CanBuildFrom
    15: invokevirtual #7          // scala.collection.immutable.List.map:(scala.Function1, scala.collection.generic.CanBuildFrom)java.lang.Object
    18: checkcast     #75         // scala.collection.immutable.List
    21: invokedynamic #-23        // java.lang.invoke.LambdaForm$MH.1989780873.linkToTargetMethod:(java.lang.Object)java.lang.Object
    26: getstatic     #5          // scala.collection.immutable.List$.MODULE$:scala.collection.immutable.List$
    29: invokevirtual #6          // scala.collection.immutable.List$.canBuildFrom:()scala.collection.generic.CanBuildFrom
    32: invokevirtual #7          // scala.collection.immutable.List.map:(scala.Function1, scala.collection.generic.CanBuildFrom)java.lang.Object
    35: checkcast     #75         // scala.collection.immutable.List
    38: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24200f1f8000000000e80000000090850048beaddeaddeaddeadde488944241090e8000000009049baaddeaddeaddeadde418b7268418504f448c1e60348894424080f1f8000000000e80000000090488b742410488b542408488bc80f1f440000e80000000090817808addeadde0f857b000000488944240848beaddeaddeaddeadde660f1f440000e8000000009049baaddeaddeaddeadde418b7268418504f448c1e60348894424100f1f8000000000e80000000090488b742408488b542410488bc80f1f440000e80000000090817808addeadde0f852b000000488b6c24204883c428850500000000c5f877c341c7879c020000cdc4ffff4d89a7a8020000e8000000009041c7879c020000cdbaffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x108ea1f78, value=0x112759e60]:0x112759e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@555fdd59 slotKind: QWORD  <||@
  Comment 48 6 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ListBench.list()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:1]  <||@
  Comment 48 9  <||@
  Comment 55 {HotSpotMethod<ListBench.list()>}  <||@
  Comment 60 []at bench.ListBench.notFused(Bench.scala:55) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 61 8 NULLCHECK [rax|QWORD[.]] state [bci:4]  <||@
  Comment 61 [rax:0]at bench.ListBench.notFused(Bench.scala:55) [bci: 4, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |Object[null]   <||@
  Comment 61 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 63 10 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoundMethodHandle.Species_L@1891860531]  <||@
  Comment 63 {Object[BoundMethodHandle.Species_L@1891860531]}  <||@
  Comment 73 12 stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 78 14 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<1989780873.linkToTargetMethod(Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:4]  <||@
  Comment 78 8  <||@
  Comment 79 {HotSpotMethod<1989780873.linkToTargetMethod(Object)>}  <||@
  Comment 84 [stack:16]at bench.ListBench.notFused(Bench.scala:55) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |-                 
     stack:   |stack:32|QWORD[.]   <||@
  Comment 85 16 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.collection.immutable.List$]  <||@
  Comment 85 {Object[Class:scala.collection.immutable.List$]}  <||@
  Comment 95 18 rsi|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD  <||@
  Comment 99 20 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:9]  <||@
  Comment 99 [rax:0, rsi:0, stack:16]at bench.ListBench.notFused(Bench.scala:55) [bci: 9, duringCall: false, rethrow: false]
              |0                  |1            
     locals:  |-                  |             
     stack:   |stack:32|QWORD[.]  |rax|QWORD[.]   <||@
  Comment 99 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 103 22 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1c28631e encoding: base: 0 shift: 3  <||@
  Comment 107 24 stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 112 26 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List$.canBuildFrom()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:12]  <||@
  Comment 112 9  <||@
  Comment 119 {HotSpotMethod<List$.canBuildFrom()>}  <||@
  Comment 124 [stack:8, stack:16]at bench.ListBench.notFused(Bench.scala:55) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |                  
     stack:   |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 125 28 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 130 30 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 135 32 rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 138 34 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<List.map(Function1, CanBuildFrom)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:15]  <||@
  Comment 138 9  <||@
  Comment 143 {HotSpotMethod<List.map(Function1, CanBuildFrom)>}  <||@
  Comment 148 []at bench.ListBench.notFused(Bench.scala:55) [bci: 15, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 149 36 CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>;compressed} state [bci:18]  <||@
  Comment 149 [rax:0]at bench.ListBench.notFused(Bench.scala:55) [bci: 18, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |rax|QWORD[.]   <||@
  Comment 149 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 149 {meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>;compressed}}  <||@
  Comment 156 38 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 162 block B1 null  <||@
  Comment 162 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 162 42 stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 167 44 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoundMethodHandle.Species_L@1950088325]  <||@
  Comment 167 {Object[BoundMethodHandle.Species_L@1950088325]}  <||@
  Comment 177 46 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<1989780873.linkToTargetMethod(Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:21]  <||@
  Comment 177 8  <||@
  Comment 183 {HotSpotMethod<1989780873.linkToTargetMethod(Object)>}  <||@
  Comment 188 [stack:8]at bench.ListBench.notFused(Bench.scala:55) [bci: 21, duringCall: true, rethrow: false]
              |0                 
     locals:  |-                 
     stack:   |stack:40|QWORD[.]   <||@
  Comment 189 48 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.collection.immutable.List$]  <||@
  Comment 189 {Object[Class:scala.collection.immutable.List$]}  <||@
  Comment 199 50 rsi|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD  <||@
  Comment 203 52 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:26]  <||@
  Comment 203 [rax:0, rsi:0, stack:8]at bench.ListBench.notFused(Bench.scala:55) [bci: 26, duringCall: false, rethrow: false]
              |0                  |1            
     locals:  |-                  |             
     stack:   |stack:40|QWORD[.]  |rax|QWORD[.]   <||@
  Comment 203 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 207 54 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1c28631e encoding: base: 0 shift: 3  <||@
  Comment 211 56 stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 216 58 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List$.canBuildFrom()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:29]  <||@
  Comment 216 9  <||@
  Comment 223 {HotSpotMethod<List$.canBuildFrom()>}  <||@
  Comment 228 [stack:8, stack:16]at bench.ListBench.notFused(Bench.scala:55) [bci: 29, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |                  
     stack:   |stack:40|QWORD[.]  |stack:32|QWORD[.]   <||@
  Comment 229 60 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 234 62 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 239 64 rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 242 66 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<List.map(Function1, CanBuildFrom)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:32]  <||@
  Comment 242 9  <||@
  Comment 247 {HotSpotMethod<List.map(Function1, CanBuildFrom)>}  <||@
  Comment 252 []at bench.ListBench.notFused(Bench.scala:55) [bci: 32, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 253 68 CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>;compressed} state [bci:35]  <||@
  Comment 253 [rax:0]at bench.ListBench.notFused(Bench.scala:55) [bci: 35, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |rax|QWORD[.]   <||@
  Comment 253 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 253 {meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>;compressed}}  <||@
  Comment 260 70 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 266 block B2 null  <||@
  Comment 266 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 266 74 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60  <||@
  Comment 275 12  <||@
  Comment 285 block B4 null  <||@
  Comment 285 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 285 86 MOV [r15|QWORD + 668] y: -15155 size: DWORD  <||@
  Comment 296 88 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 303 90 DEOPT info [bci:18]  <||@
  Comment 303 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x108ea1f90, value=0x11275b5fe]:0x11275b5fe}  <||@
  Comment 308 [rax:0]at bench.ListBench.notFused(Bench.scala:55) [bci: 18, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |rax|QWORD[.]   <||@
  Comment 309 block B3 null  <||@
  Comment 309 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 309 78 MOV [r15|QWORD + 668] y: -17715 size: DWORD  <||@
  Comment 320 80 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 327 82 DEOPT info [bci:35]  <||@
  Comment 327 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x108ea1f90, value=0x11275b5fe]:0x11275b5fe}  <||@
  Comment 332 [rax:0]at bench.ListBench.notFused(Bench.scala:55) [bci: 35, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |rax|QWORD[.]   <||@
  Comment 333 {Stub<ExceptionHandlerStub.exceptionHandler>@0x11284a720:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 333 4  <||@
  Comment 339 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x108ea1f88, value=0x11275b500]:0x11275b500}  <||@
  Comment 339 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-57[bench.ListBench.notFused()]"
  method "HotSpotCompilation-57[bench.ListBench.notFused()]"
  date 1528254769467
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 11284b040 448b560849c1e203493bc20f850feef0ff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24200f1f8000000000e82401000090850048be500c00c006000000488944241090e81b0100009049ba700c00c006000000418b7268418504f448c1e60348894424080f1f8000000000e80201000090488b742410488b542408488bc80f1f440000e8f900000090817808059b01f80f857b000000488944240848bee00c00c006000000660f1f440000e8e00000009049ba700c00c006000000418b7268418504f448c1e60348894424100f1f8000000000e8c700000090488b742408488b542410488bc80f1f440000e8be00000090817808059b01f80f852b000000488b6c24204883c4288505ad5e41f5c5f877c341c7879c020000cdc4ffff4d89a7a8020000e88a04f1ff9041c7879c020000cdbaffff4d89a7a8020000e87204f1ff90e88ef5ffff90e86803f1ff90f4f4f4f4f4f4f448bbc0753d2701000000e9a4fdf0ff48bba881332701000000e995fdf0ff48bb28c83f2701000000e986fdf0ff48bbe0ef4e2701000000e93f77f1ff48bba881332701000000e968fdf0ff48bb28c83f2701000000e959fdf0ff48bbe0ef4e2701000000e91277f1fff4f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x108ea1f78, value=0x112759e60]:0x112759e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@555fdd59 slotKind: QWORD  <||@
  Comment 48 6 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<ListBench.list()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:1]  <||@
  Comment 48 9  <||@
  Comment 55 {HotSpotMethod<ListBench.list()>}  <||@
  Comment 60 []at bench.ListBench.notFused(Bench.scala:55) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 61 8 NULLCHECK [rax|QWORD[.]] state [bci:4]  <||@
  Comment 61 [rax:0]at bench.ListBench.notFused(Bench.scala:55) [bci: 4, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |Object[null]   <||@
  Comment 61 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 63 10 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoundMethodHandle.Species_L@1891860531]  <||@
  Comment 63 {Object[BoundMethodHandle.Species_L@1891860531]}  <||@
  Comment 73 12 stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 78 14 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<1989780873.linkToTargetMethod(Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:4]  <||@
  Comment 78 8  <||@
  Comment 79 {HotSpotMethod<1989780873.linkToTargetMethod(Object)>}  <||@
  Comment 84 [stack:16]at bench.ListBench.notFused(Bench.scala:55) [bci: 4, duringCall: true, rethrow: false]
              |0                 
     locals:  |-                 
     stack:   |stack:32|QWORD[.]   <||@
  Comment 85 16 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.collection.immutable.List$]  <||@
  Comment 85 {Object[Class:scala.collection.immutable.List$]}  <||@
  Comment 95 18 rsi|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD  <||@
  Comment 99 20 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:9]  <||@
  Comment 99 [rax:0, rsi:0, stack:16]at bench.ListBench.notFused(Bench.scala:55) [bci: 9, duringCall: false, rethrow: false]
              |0                  |1            
     locals:  |-                  |             
     stack:   |stack:32|QWORD[.]  |rax|QWORD[.]   <||@
  Comment 99 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 103 22 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1c28631e encoding: base: 0 shift: 3  <||@
  Comment 107 24 stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 112 26 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List$.canBuildFrom()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:12]  <||@
  Comment 112 9  <||@
  Comment 119 {HotSpotMethod<List$.canBuildFrom()>}  <||@
  Comment 124 [stack:8, stack:16]at bench.ListBench.notFused(Bench.scala:55) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |                  
     stack:   |stack:32|QWORD[.]  |stack:40|QWORD[.]   <||@
  Comment 125 28 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 130 30 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 135 32 rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 138 34 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<List.map(Function1, CanBuildFrom)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:15]  <||@
  Comment 138 9  <||@
  Comment 143 {HotSpotMethod<List.map(Function1, CanBuildFrom)>}  <||@
  Comment 148 []at bench.ListBench.notFused(Bench.scala:55) [bci: 15, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 149 36 CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>;compressed} state [bci:18]  <||@
  Comment 149 [rax:0]at bench.ListBench.notFused(Bench.scala:55) [bci: 18, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |rax|QWORD[.]   <||@
  Comment 149 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 149 {meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>;compressed}}  <||@
  Comment 156 38 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 162 block B1 null  <||@
  Comment 162 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 162 42 stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 167 44 rsi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[BoundMethodHandle.Species_L@1950088325]  <||@
  Comment 167 {Object[BoundMethodHandle.Species_L@1950088325]}  <||@
  Comment 177 46 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<1989780873.linkToTargetMethod(Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:21]  <||@
  Comment 177 8  <||@
  Comment 183 {HotSpotMethod<1989780873.linkToTargetMethod(Object)>}  <||@
  Comment 188 [stack:8]at bench.ListBench.notFused(Bench.scala:55) [bci: 21, duringCall: true, rethrow: false]
              |0                 
     locals:  |-                 
     stack:   |stack:40|QWORD[.]   <||@
  Comment 189 48 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:scala.collection.immutable.List$]  <||@
  Comment 189 {Object[Class:scala.collection.immutable.List$]}  <||@
  Comment 199 50 rsi|DWORD[.] = MOV [r10|QWORD[.] + 104] size: DWORD  <||@
  Comment 203 52 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:26]  <||@
  Comment 203 [rax:0, rsi:0, stack:8]at bench.ListBench.notFused(Bench.scala:55) [bci: 26, duringCall: false, rethrow: false]
              |0                  |1            
     locals:  |-                  |             
     stack:   |stack:40|QWORD[.]  |rax|QWORD[.]   <||@
  Comment 203 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 207 54 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1c28631e encoding: base: 0 shift: 3  <||@
  Comment 211 56 stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 216 58 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<List$.canBuildFrom()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:29]  <||@
  Comment 216 9  <||@
  Comment 223 {HotSpotMethod<List$.canBuildFrom()>}  <||@
  Comment 228 [stack:8, stack:16]at bench.ListBench.notFused(Bench.scala:55) [bci: 29, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |                  
     stack:   |stack:40|QWORD[.]  |stack:32|QWORD[.]   <||@
  Comment 229 60 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 234 62 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 239 64 rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 242 66 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<List.map(Function1, CanBuildFrom)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60 state [bci:32]  <||@
  Comment 242 9  <||@
  Comment 247 {HotSpotMethod<List.map(Function1, CanBuildFrom)>}  <||@
  Comment 252 []at bench.ListBench.notFused(Bench.scala:55) [bci: 32, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 253 68 CMP [rax|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>;compressed} state [bci:35]  <||@
  Comment 253 [rax:0]at bench.ListBench.notFused(Bench.scala:55) [bci: 35, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |rax|QWORD[.]   <||@
  Comment 253 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 253 {meta{HotSpotType<Lscala/collection/immutable/Nil$;, resolved>;compressed}}  <||@
  Comment 260 70 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 266 block B2 null  <||@
  Comment 266 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 266 74 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@63eaca60  <||@
  Comment 275 12  <||@
  Comment 285 block B4 null  <||@
  Comment 285 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 285 86 MOV [r15|QWORD + 668] y: -15155 size: DWORD  <||@
  Comment 296 88 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 303 90 DEOPT info [bci:18]  <||@
  Comment 303 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x108ea1f90, value=0x11275b5fe]:0x11275b5fe}  <||@
  Comment 308 [rax:0]at bench.ListBench.notFused(Bench.scala:55) [bci: 18, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |rax|QWORD[.]   <||@
  Comment 309 block B3 null  <||@
  Comment 309 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 309 78 MOV [r15|QWORD + 668] y: -17715 size: DWORD  <||@
  Comment 320 80 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 327 82 DEOPT info [bci:35]  <||@
  Comment 327 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x108ea1f90, value=0x11275b5fe]:0x11275b5fe}  <||@
  Comment 332 [rax:0]at bench.ListBench.notFused(Bench.scala:55) [bci: 35, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |rax|QWORD[.]   <||@
  Comment 333 {Stub<ExceptionHandlerStub.exceptionHandler>@0x11284a720:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 333 4  <||@
  Comment 339 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x108ea1f88, value=0x11275b500]:0x11275b500}  <||@
  Comment 339 5  <||@
  HexCodeFile>>> <|@
end_nmethod
